

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 13:47:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0006                     _PORTBbits	set	6
   285  0009                     _PORTE	set	9
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  000B                     _INTCONbits	set	11
   290  0013                     _SSPBUF	set	19
   291  0014                     _SSPCON	set	20
   292  0063                     _SSPIF	set	99
   293  0085                     _TRISAbits	set	133
   294  0085                     _TRISA	set	133
   295  0089                     _TRISE	set	137
   296  0088                     _TRISD	set	136
   297  0096                     _IOCB	set	150
   298  0087                     _TRISCbits	set	135
   299  0086                     _TRISBbits	set	134
   300  0087                     _TRISC	set	135
   301  0086                     _TRISB	set	134
   302  0094                     _SSPSTATbits	set	148
   303  0094                     _SSPSTAT	set	148
   304  043B                     _TRISC3	set	1083
   305  043D                     _TRISC5	set	1085
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308                           
   309                           	psect	cinit
   310  000F                     start_initialization:	
   311                           ; #config settings
   312                           
   313  000F                     __initialization:
   314  000F                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  000F                     __end_of__initialization:
   318  000F  0183               	clrf	3
   319  0010  120A  118A  288E   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:
   323  0070                     ?_conf_but:
   324  0070                     ?_spiWrite:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_spiWrite:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_ISR:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     spiWrite@dat:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	1
   342  0071                     ??_ISR:
   343                           
   344                           ; 1 bytes @ 0x1
   345  0071                     	ds	5
   346  0076                     ??_spiInit:
   347  0076                     spiInit@sType:	
   348                           ; 1 bytes @ 0x6
   349                           
   350                           
   351                           ; 1 bytes @ 0x6
   352  0076                     	ds	1
   353  0077                     ??_conf_but:
   354  0077                     ??_main:	
   355                           ; 1 bytes @ 0x7
   356                           
   357                           
   358                           	psect	cstackBANK0
   359  0020                     __pcstackBANK0:	
   360                           ; 1 bytes @ 0x7
   361                           
   362  0020                     ?_spiInit:
   363  0020                     spiInit@sDataSample:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 1 bytes @ 0x0
   368  0020                     	ds	1
   369  0021                     spiInit@sClockIdle:
   370                           
   371                           ; 1 bytes @ 0x1
   372  0021                     	ds	1
   373  0022                     spiInit@sTransmitEdge:
   374                           
   375                           ; 1 bytes @ 0x2
   376  0022                     	ds	1
   377                           
   378                           	psect	maintext
   379  008E                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 47 in file "mainC.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels required when called:    4
   405 ;; This function calls:
   406 ;;		_conf_but
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  008E                     _main:
   415  008E                     l807:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;mainC.c: 48:     conf_but();
   421  008E  120A  118A  204C  120A  118A  	fcall	_conf_but
   422  0093                     l83:	
   423                           ;mainC.c: 49:     while (1) {
   424                           
   425  0093                     l84:	
   426                           ;mainC.c: 50:     }
   427                           
   428  0093  2893               	goto	l83
   429  0094  120A  118A  280C   	ljmp	start
   430  0097                     __end_of_main:
   431                           
   432                           	psect	text1
   433  004C                     __ptext1:	
   434 ;; *************** function _conf_but *****************
   435 ;; Defined at:
   436 ;;		line 58 in file "mainC.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    3
   457 ;; This function calls:
   458 ;;		_spiInit
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           
   465                           ;psect for function _conf_but
   466  004C                     _conf_but:
   467  004C                     l777:	
   468                           ;incstack = 0
   469                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   470                           
   471                           
   472                           ;mainC.c: 60:     INTCONbits.GIE = 1;
   473  004C  178B               	bsf	11,7	;volatile
   474                           
   475                           ;mainC.c: 61:     INTCONbits.PEIE = 1;
   476  004D  170B               	bsf	11,6	;volatile
   477                           
   478                           ;mainC.c: 62:     INTCONbits.RBIE = 1;
   479  004E  158B               	bsf	11,3	;volatile
   480  004F                     l779:
   481                           
   482                           ;mainC.c: 63:     ANSEL = 0;
   483  004F  1683               	bsf	3,5	;RP0=1, select bank3
   484  0050  1703               	bsf	3,6	;RP1=1, select bank3
   485  0051  0188               	clrf	8	;volatile
   486                           
   487                           ;mainC.c: 64:     ANSELH = 0;
   488  0052  0189               	clrf	9	;volatile
   489                           
   490                           ;mainC.c: 65:     TRISB = 0x00;
   491  0053  1683               	bsf	3,5	;RP0=1, select bank1
   492  0054  1303               	bcf	3,6	;RP1=0, select bank1
   493  0055  0186               	clrf	6	;volatile
   494                           
   495                           ;mainC.c: 66:     TRISC = 0;
   496  0056  0187               	clrf	7	;volatile
   497  0057                     l781:
   498                           
   499                           ;mainC.c: 67:     TRISBbits.TRISB0 = 1;
   500  0057  1406               	bsf	6,0	;volatile
   501  0058                     l783:
   502                           
   503                           ;mainC.c: 68:     TRISBbits.TRISB1 = 1;
   504  0058  1486               	bsf	6,1	;volatile
   505  0059                     l785:
   506                           
   507                           ;mainC.c: 69:     TRISCbits.TRISC4 = 1;
   508  0059  1607               	bsf	7,4	;volatile
   509  005A                     l787:
   510                           
   511                           ;mainC.c: 70:     IOCB = 0b00000011;
   512  005A  3003               	movlw	3
   513  005B  0096               	movwf	22	;volatile
   514  005C                     l789:
   515                           
   516                           ;mainC.c: 71:     TRISD = 0x00;
   517  005C  0188               	clrf	8	;volatile
   518  005D                     l791:
   519                           
   520                           ;mainC.c: 72:     TRISE = 0x00;
   521  005D  0189               	clrf	9	;volatile
   522  005E                     l793:
   523                           
   524                           ;mainC.c: 73:     TRISA = 0;
   525  005E  0185               	clrf	5	;volatile
   526  005F                     l795:
   527                           
   528                           ;mainC.c: 74:     TRISAbits.TRISA5 = 1;
   529  005F  1685               	bsf	5,5	;volatile
   530  0060                     l797:
   531                           
   532                           ;mainC.c: 75:     PORTD = 0;
   533  0060  1283               	bcf	3,5	;RP0=0, select bank0
   534  0061  1303               	bcf	3,6	;RP1=0, select bank0
   535  0062  0188               	clrf	8	;volatile
   536  0063                     l799:
   537                           
   538                           ;mainC.c: 76:     PORTB = 0;
   539  0063  0186               	clrf	6	;volatile
   540  0064                     l801:
   541                           
   542                           ;mainC.c: 77:     PORTC = 0;
   543  0064  0187               	clrf	7	;volatile
   544  0065                     l803:
   545                           
   546                           ;mainC.c: 78:     PORTE = 0;
   547  0065  0189               	clrf	9	;volatile
   548  0066                     l805:
   549                           
   550                           ;mainC.c: 80:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   551  0066  01A0               	clrf	spiInit@sDataSample
   552  0067  01A1               	clrf	spiInit@sClockIdle
   553  0068  01A2               	clrf	spiInit@sTransmitEdge
   554  0069  3024               	movlw	36
   555  006A  120A  118A  2070  120A  118A  	fcall	_spiInit
   556  006F                     l89:
   557  006F  0008               	return
   558  0070                     __end_of_conf_but:
   559                           
   560                           	psect	text2
   561  0070                     __ptext2:	
   562 ;; *************** function _spiInit *****************
   563 ;; Defined at:
   564 ;;		line 12 in file "SPI.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  sType           1    wreg     enum E1264
   567 ;;  sDataSample     1    0[BANK0 ] enum E1272
   568 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   569 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  sType           1    6[COMMON] enum E1264
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       3       0       0       0
   582 ;;      Locals:         1       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         1       3       0       0       0
   585 ;;Total ram usage:        4 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    2
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_conf_but
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _spiInit
   597  0070                     _spiInit:
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   601                           ;spiInit@sType stored from wreg
   602  0070  00F6               	movwf	spiInit@sType
   603  0071                     l767:
   604                           
   605                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   606  0071  1683               	bsf	3,5	;RP0=1, select bank1
   607  0072  1303               	bcf	3,6	;RP1=0, select bank1
   608  0073  1287               	bcf	7,5	;volatile
   609                           
   610                           ;SPI.c: 15:     if(sType & 0b00000100)
   611  0074  1D76               	btfss	spiInit@sType,2
   612  0075  2877               	goto	u71
   613  0076  2878               	goto	u70
   614  0077                     u71:
   615  0077  2880               	goto	l773
   616  0078                     u70:
   617  0078                     l769:
   618                           
   619                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   620  0078  1283               	bcf	3,5	;RP0=0, select bank0
   621  0079  1303               	bcf	3,6	;RP1=0, select bank0
   622  007A  0822               	movf	spiInit@sTransmitEdge,w
   623  007B  1683               	bsf	3,5	;RP0=1, select bank1
   624  007C  1303               	bcf	3,6	;RP1=0, select bank1
   625  007D  0094               	movwf	20	;volatile
   626  007E                     l771:
   627                           
   628                           ;SPI.c: 18:         TRISC3 = 1;
   629  007E  1587               	bsf	7,3	;volatile
   630                           
   631                           ;SPI.c: 19:     }
   632  007F  2888               	goto	l16
   633  0080                     l773:
   634                           
   635                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   636  0080  1283               	bcf	3,5	;RP0=0, select bank0
   637  0081  1303               	bcf	3,6	;RP1=0, select bank0
   638  0082  0820               	movf	spiInit@sDataSample,w
   639  0083  0422               	iorwf	spiInit@sTransmitEdge,w
   640  0084  1683               	bsf	3,5	;RP0=1, select bank1
   641  0085  1303               	bcf	3,6	;RP1=0, select bank1
   642  0086  0094               	movwf	20	;volatile
   643  0087                     l775:
   644                           
   645                           ;SPI.c: 23:         TRISC3 = 0;
   646  0087  1187               	bcf	7,3	;volatile
   647  0088                     l16:	
   648                           ;SPI.c: 24:     }
   649                           
   650                           
   651                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   652  0088  0876               	movf	spiInit@sType,w
   653  0089  1283               	bcf	3,5	;RP0=0, select bank0
   654  008A  1303               	bcf	3,6	;RP1=0, select bank0
   655  008B  0421               	iorwf	spiInit@sClockIdle,w
   656  008C  0094               	movwf	20	;volatile
   657  008D                     l17:
   658  008D  0008               	return
   659  008E                     __end_of_spiInit:
   660                           
   661                           	psect	text3
   662  0013                     __ptext3:	
   663 ;; *************** function _ISR *****************
   664 ;; Defined at:
   665 ;;		line 87 in file "mainC.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          5       0       0       0       0
   682 ;;      Totals:         5       0       0       0       0
   683 ;;Total ram usage:        5 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		_spiWrite
   688 ;; This function is called by:
   689 ;;		Interrupt level 1
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _ISR
   695  0013                     _ISR:
   696  0013                     i1l749:
   697                           
   698                           ;mainC.c: 88:     if (INTCONbits.RBIF == 1) {
   699  0013  1C0B               	btfss	11,0	;volatile
   700  0014  2816               	goto	u3_21
   701  0015  2817               	goto	u3_20
   702  0016                     u3_21:
   703  0016  2835               	goto	i1l759
   704  0017                     u3_20:
   705  0017                     i1l751:
   706                           
   707                           ;mainC.c: 89:         _delay((unsigned long)((100)*((8000000)/4000.0)));
   708  0017  3002               	movlw	2
   709  0018  00F3               	movwf	??_ISR+2
   710  0019  3004               	movlw	4
   711  001A  00F2               	movwf	??_ISR+1
   712  001B  30BA               	movlw	186
   713  001C  00F1               	movwf	??_ISR
   714  001D                     u8_27:
   715  001D  0BF1               	decfsz	??_ISR,f
   716  001E  281D               	goto	u8_27
   717  001F  0BF2               	decfsz	??_ISR+1,f
   718  0020  281D               	goto	u8_27
   719  0021  0BF3               	decfsz	??_ISR+2,f
   720  0022  281D               	goto	u8_27
   721  0023  0000               	nop
   722  0024                     i1l753:
   723                           
   724                           ;mainC.c: 90:         if (PORTBbits.RB1 == 1) {
   725  0024  1283               	bcf	3,5	;RP0=0, select bank0
   726  0025  1303               	bcf	3,6	;RP1=0, select bank0
   727  0026  1C86               	btfss	6,1	;volatile
   728  0027  2829               	goto	u4_21
   729  0028  282A               	goto	u4_20
   730  0029                     u4_21:
   731  0029  282F               	goto	i1l95
   732  002A                     u4_20:
   733  002A                     i1l755:
   734                           
   735                           ;mainC.c: 91:             PORTD++;
   736  002A  3001               	movlw	1
   737  002B  00F1               	movwf	??_ISR
   738  002C  0871               	movf	??_ISR,w
   739  002D  0788               	addwf	8,f	;volatile
   740                           
   741                           ;mainC.c: 92:         } else if (PORTBbits.RB0 == 1) {
   742  002E  2835               	goto	i1l759
   743  002F                     i1l95:
   744  002F  1C06               	btfss	6,0	;volatile
   745  0030  2832               	goto	u5_21
   746  0031  2833               	goto	u5_20
   747  0032                     u5_21:
   748  0032  2835               	goto	i1l759
   749  0033                     u5_20:
   750  0033                     i1l757:
   751                           
   752                           ;mainC.c: 93:             PORTD--;
   753  0033  3001               	movlw	1
   754  0034  0288               	subwf	8,f	;volatile
   755  0035                     i1l759:
   756                           
   757                           ;mainC.c: 96:     INTCONbits.RBIF = 0;
   758  0035  100B               	bcf	11,0	;volatile
   759  0036                     i1l761:
   760                           
   761                           ;mainC.c: 98:     if (SSPIF == 1) {
   762  0036  1283               	bcf	3,5	;RP0=0, select bank0
   763  0037  1303               	bcf	3,6	;RP1=0, select bank0
   764  0038  1D8C               	btfss	12,3	;volatile
   765  0039  283B               	goto	u6_21
   766  003A  283C               	goto	u6_20
   767  003B                     u6_21:
   768  003B  2845               	goto	i1l99
   769  003C                     u6_20:
   770  003C                     i1l763:
   771                           
   772                           ;mainC.c: 99:         spiWrite(PORTD);
   773  003C  0808               	movf	8,w	;volatile
   774  003D  120A  118A  2097  120A  118A  	fcall	_spiWrite
   775  0042                     i1l765:
   776                           
   777                           ;mainC.c: 100:         SSPIF = 0;
   778  0042  1283               	bcf	3,5	;RP0=0, select bank0
   779  0043  1303               	bcf	3,6	;RP1=0, select bank0
   780  0044  118C               	bcf	12,3	;volatile
   781  0045                     i1l99:
   782  0045  0875               	movf	??_ISR+4,w
   783  0046  008A               	movwf	10
   784  0047  0E74               	swapf	??_ISR+3,w
   785  0048  0083               	movwf	3
   786  0049  0EFE               	swapf	btemp,f
   787  004A  0E7E               	swapf	btemp,w
   788  004B  0009               	retfie
   789  004C                     __end_of_ISR:
   790                           
   791                           	psect	intentry
   792  0004                     __pintentry:	
   793                           ;incstack = 0
   794                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   795                           
   796  0004                     interrupt_function:
   797  007E                     saved_w	set	btemp
   798  0004  00FE               	movwf	btemp
   799  0005  0E03               	swapf	3,w
   800  0006  00F4               	movwf	??_ISR+3
   801  0007  080A               	movf	10,w
   802  0008  00F5               	movwf	??_ISR+4
   803  0009  120A  118A  2813   	ljmp	_ISR
   804                           
   805                           	psect	text4
   806  0097                     __ptext4:	
   807 ;; *************** function _spiWrite *****************
   808 ;; Defined at:
   809 ;;		line 34 in file "SPI.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  dat             1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  dat             1    0[COMMON] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         1       0       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_ISR
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _spiWrite
   838  0097                     _spiWrite:
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _spiWrite: [wreg]
   842                           ;spiWrite@dat stored from wreg
   843  0097  00F0               	movwf	spiWrite@dat
   844  0098                     i1l703:
   845                           
   846                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   847  0098  0870               	movf	spiWrite@dat,w
   848  0099  1283               	bcf	3,5	;RP0=0, select bank0
   849  009A  1303               	bcf	3,6	;RP1=0, select bank0
   850  009B  0093               	movwf	19	;volatile
   851  009C                     i1l26:
   852  009C  0008               	return
   853  009D                     __end_of_spiWrite:
   854  007E                     btemp	set	126	;btemp
   855  007E                     wtemp0	set	126
   856                           
   857                           	psect	config
   858                           
   859                           ;Config register CONFIG1 @ 0x2007
   860                           ;	Oscillator Selection bits
   861                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   862                           ;	Watchdog Timer Enable bit
   863                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   864                           ;	Power-up Timer Enable bit
   865                           ;	PWRTE = OFF, PWRT disabled
   866                           ;	RE3/MCLR pin function select bit
   867                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   868                           ;	Code Protection bit
   869                           ;	CP = OFF, Program memory code protection is disabled
   870                           ;	Data Code Protection bit
   871                           ;	CPD = OFF, Data memory code protection is disabled
   872                           ;	Brown Out Reset Selection bits
   873                           ;	BOREN = ON, BOR enabled
   874                           ;	Internal External Switchover bit
   875                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   876                           ;	Fail-Safe Clock Monitor Enabled bit
   877                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   878                           ;	Low Voltage Programming Enable bit
   879                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   880                           ;	In-Circuit Debugger Mode bit
   881                           ;	DEBUG = 0x1, unprogrammed default
   882  2007                     	org	8199
   883  2007  23D4               	dw	9172
   884                           
   885                           ;Config register CONFIG2 @ 0x2008
   886                           ;	Brown-out Reset Selection bit
   887                           ;	BOR4V = 0x1, unprogrammed default
   888                           ;	Flash Program Memory Self Write Enable bits
   889                           ;	WRT = OFF, Write protection off
   890  2008                     	org	8200
   891  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _conf_but->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              6 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      15
                                              1 COMMON     5     5      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conf_but
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 13:47:47 2021

            _SSPSTATbits 0094                       l16 0088                       l17 008D  
                     l83 0093                       l84 0093                       l89 006F  
                     u70 0078                       u71 0077                      l801 0064  
                    l803 0065                      l805 0066                      l807 008E  
                    l771 007E                      l773 0080                      l781 0057  
                    l775 0087                      l767 0071                      l791 005D  
                    l783 0058                      l769 0078                      l793 005E  
                    l785 0059                      l777 004C                      l795 005F  
                    l787 005A                      l779 004F                      l797 0060  
                    l789 005C                      l799 0063                      _ISR 0013  
                   ?_ISR 0070                     _IOCB 0096                     i1l26 009C  
                   i1l95 002F                     i1l99 0045                     u3_20 0017  
                   u3_21 0016                     u4_20 002A                     u4_21 0029  
                   u5_20 0033                     u5_21 0032                     u6_20 003C  
                   u6_21 003B                     u8_27 001D                     _main 008E  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l703 0098  
                  i1l751 0017                    i1l761 0036                    i1l753 0024  
                  i1l763 003C                    i1l755 002A                    i1l765 0042  
                  i1l757 0033                    i1l749 0013                    i1l759 0035  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    pclath 000A          __end_of_spiInit 008E  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0097                   ??_main 0077                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_conf_but 0070                   saved_w 007E  
       __end_of_spiWrite 009D                ??_spiInit 0076  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 008E               __pintentry 0004  
              ?_conf_but 0070                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 004C                  __ptext2 0070                  __ptext3 0013  
                __ptext4 0097             __size_of_ISR 0039                  _spiInit 0070  
             ??_conf_but 0077     end_of_initialization 000F               ??_spiWrite 0070  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087              spiWrite@dat 0070      start_initialization 000F  
            __end_of_ISR 004C                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_conf_but 0024        __size_of_spiWrite 0006                 ?_spiInit 0020  
   spiInit@sTransmitEdge 0022        interrupt_function 0004       spiInit@sDataSample 0020  
       __size_of_spiInit 001E                 _conf_but 004C            __size_of_main 0009  
               _spiWrite 0097             spiInit@sType 0076        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000  
