

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 14:01:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  001A                     _RCREG	set	26
   467  0019                     _TXREG	set	25
   468  0018                     _RCSTAbits	set	24
   469  0013                     _SSPBUF	set	19
   470  0014                     _SSPCON	set	20
   471  000C                     _PIR1bits	set	12
   472  0008                     _PORTD	set	8
   473  0006                     _PORTB	set	6
   474  0006                     _PORTBbits	set	6
   475  0064                     _TXIF	set	100
   476  0063                     _SSPIF	set	99
   477  005E                     _PEIE	set	94
   478  005F                     _GIE	set	95
   479  009A                     _SPBRGH	set	154
   480  0099                     _SPBRG	set	153
   481  008C                     _PIE1bits	set	140
   482  0098                     _TXSTAbits	set	152
   483  0091                     _SSPCON2bits	set	145
   484  0087                     _TRISCbits	set	135
   485  0094                     _SSPSTAT	set	148
   486  0093                     _SSPADD	set	147
   487  0091                     _SSPCON2	set	145
   488  0088                     _TRISD	set	136
   489  0089                     _TRISE	set	137
   490  0086                     _TRISB	set	134
   491  0087                     _TRISC	set	135
   492  0463                     _SSPIE	set	1123
   493  043C                     _TRISC4	set	1084
   494  043B                     _TRISC3	set	1083
   495  0187                     _BAUDCTLbits	set	391
   496  0189                     _ANSELH	set	393
   497  0188                     _ANSEL	set	392
   498                           
   499                           	psect	strings
   500  07F5                     __pstrings:
   501  07F5                     stringtab:
   502  07F5                     __stringtab:
   503  07F5                     stringcode:	
   504                           ;	String table - string pointers are 1 byte each
   505                           
   506  07F5                     stringdir:
   507  07F5  3007               	movlw	high stringdir
   508  07F6  008A               	movwf	10
   509  07F7  0804               	movf	4,w
   510  07F8  0A84               	incf	4,f
   511  07F9  0782               	addwf	2,f
   512  07FA                     __stringbase:
   513  07FA  3400               	retlw	0
   514  07FB                     __end_of__stringtab:
   515  07FB                     STR_1:
   516  07FB  3423               	retlw	35	;'#'
   517  07FC  3400               	retlw	0
   518  07FD                     STR_2:
   519  07FD  342E               	retlw	46	;'.'
   520  07FE  3400               	retlw	0
   521                           
   522                           	psect	cinit
   523  000F                     start_initialization:	
   524                           ; #config settings
   525                           
   526  000F                     __initialization:
   527                           
   528                           ; Clear objects allocated to COMMON
   529  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0010  1383               	bcf	3,7	;select IRP bank0
   533  0011  3062               	movlw	low __pbssBANK0
   534  0012  0084               	movwf	4
   535  0013  306F               	movlw	low (__pbssBANK0+13)
   536  0014  120A  158A  2117  120A  118A  	fcall	clear_ram0
   537                           
   538                           ; Clear objects allocated to BANK1
   539  0019  30A0               	movlw	low __pbssBANK1
   540  001A  0084               	movwf	4
   541  001B  30D9               	movlw	low (__pbssBANK1+57)
   542  001C  120A  158A  2117  120A  118A  	fcall	clear_ram0
   543  0021                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  0021                     __end_of__initialization:
   547  0021  0183               	clrf	3
   548  0022  120A  158A  2BBC   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssCOMMON
   551  007A                     __pbssCOMMON:
   552  007A                     _presmas:
   553  007A                     	ds	1
   554                           
   555                           	psect	bssBANK0
   556  0062                     __pbssBANK0:
   557  0062                     _adc_T:
   558  0062                     	ds	4
   559  0066                     _temp:
   560  0066                     	ds	4
   561  006A                     _centi_t:
   562  006A                     	ds	1
   563  006B                     _deci_t:
   564  006B                     	ds	1
   565  006C                     _uni_t:
   566  006C                     	ds	1
   567  006D                     _dec_t:
   568  006D                     	ds	1
   569  006E                     _RX_Trans:
   570  006E                     	ds	1
   571                           
   572                           	psect	bssBANK1
   573  00A0                     __pbssBANK1:
   574  00A0                     _buffer:
   575  00A0                     	ds	17
   576  00B1                     _t_fine:
   577  00B1                     	ds	4
   578  00B5                     _adc_P:
   579  00B5                     	ds	4
   580  00B9                     _BMP280_calib:
   581  00B9                     	ds	24
   582  00D1                     _pressure:
   583  00D1                     	ds	4
   584  00D5                     _temperature:
   585  00D5                     	ds	4
   586                           
   587                           	psect	clrtext
   588  0917                     clear_ram0:	
   589                           ;	Called with FSR containing the base address, and
   590                           ;	W with the last address+1
   591                           
   592  0917  0064               	clrwdt	;clear the watchdog before getting into this loop
   593  0918                     clrloop0:
   594  0918  0180               	clrf	0	;clear RAM location pointed to by FSR
   595  0919  0A84               	incf	4,f	;increment pointer
   596  091A  0604               	xorwf	4,w	;XOR with final address
   597  091B  1903               	btfsc	3,2	;have we reached the end yet?
   598  091C  3400               	retlw	0	;all done for this memory range, return
   599  091D  0604               	xorwf	4,w	;XOR again to restore value
   600  091E  2918               	goto	clrloop0	;do the next byte
   601                           
   602                           	psect	cstackCOMMON
   603  0070                     __pcstackCOMMON:
   604  0070                     ?_setup:
   605  0070                     ?_Enviar_temp:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_UART_send_string:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_Uart_send_char:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Uart_conf:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_UART_get_char:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??_UART_get_char:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_isr:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ??_isr:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_Master_Wait:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_Master_Start:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Stop:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_BMP280_Read8:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_BMP280_Update:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_BMP280_readTemperature:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_BMP280_readPressure:	
   651                           ; 2 bytes @ 0x0
   652                           
   653                           
   654                           ; 2 bytes @ 0x0
   655  0070                     	ds	3
   656  0073                     ??_Uart_send_char:
   657  0073                     ??_Uart_conf:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_I2C_Master_Wait:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_I2C_Master_Start:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_I2C_Master_Stop:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ?_I2C_Master_Write:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ??___lldiv:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??___aldiv:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ?_I2C_Master_Read:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ?___wmul:	
   682                           ; 2 bytes @ 0x3
   683                           
   684  0073                     Uart_send_char@bt:	
   685                           ; 2 bytes @ 0x3
   686                           
   687  0073                     I2C_Master_Write@d:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     I2C_Master_Read@a:	
   691                           ; 2 bytes @ 0x3
   692                           
   693  0073                     ___wmul@multiplier:	
   694                           ; 2 bytes @ 0x3
   695                           
   696                           
   697                           ; 2 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ??_UART_send_string:
   700  0074                     ___aldiv@counter:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ___lldiv@quotient:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 4 bytes @ 0x4
   708  0074                     	ds	1
   709  0075                     ??_I2C_Master_Write:
   710  0075                     ??_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     ?_BMP280_Write:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     BMP280_Write@_data:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     UART_send_string@st_pt:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     ___aldiv@sign:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ___wmul@multiplicand:	
   726                           ; 1 bytes @ 0x5
   727                           
   728                           
   729                           ; 2 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ??_BMP280_Write:
   732  0076                     ___aldiv@quotient:	
   733                           ; 1 bytes @ 0x6
   734                           
   735                           
   736                           ; 4 bytes @ 0x6
   737  0076                     	ds	1
   738  0077                     ??___wmul:
   739  0077                     I2C_Master_Read@temp:	
   740                           ; 1 bytes @ 0x7
   741                           
   742  0077                     ___wmul@product:	
   743                           ; 2 bytes @ 0x7
   744                           
   745                           
   746                           ; 2 bytes @ 0x7
   747  0077                     	ds	1
   748  0078                     BMP280_Write@reg_addr:
   749  0078                     ___lldiv@counter:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754  0078                     	ds	1
   755  0079                     ??_setup:
   756  0079                     BMP280_begin@mode:	
   757                           ; 1 bytes @ 0x9
   758                           
   759                           
   760                           ; 1 bytes @ 0x9
   761  0079                     	ds	1
   762  007A                     ??_main:
   763                           
   764                           	psect	cstackBANK0
   765  0020                     __pcstackBANK0:	
   766                           ; 1 bytes @ 0xA
   767                           
   768  0020                     ??_BMP280_Read8:
   769  0020                     ?_BMP280_Configure:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ??_BMP280_Update:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ?_BMP280_Read16:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0020                     ?___lldiv:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0020                     ?___aldiv:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0020                     BMP280_Configure@T_sampling:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0020                     ___lldiv@divisor:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0020                     ___aldiv@divisor:	
   791                           ; 4 bytes @ 0x0
   792                           
   793                           
   794                           ; 4 bytes @ 0x0
   795  0020                     	ds	1
   796  0021                     BMP280_Configure@P_sampling:
   797                           
   798                           ; 1 bytes @ 0x1
   799  0021                     	ds	1
   800  0022                     ??_BMP280_Read16:
   801  0022                     BMP280_Read8@reg_addr:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0022                     BMP280_Configure@filter:	
   805                           ; 1 bytes @ 0x2
   806                           
   807                           
   808                           ; 1 bytes @ 0x2
   809  0022                     	ds	1
   810  0023                     BMP280_Read8@ret:
   811  0023                     BMP280_Configure@standby:	
   812                           ; 1 bytes @ 0x3
   813                           
   814                           
   815                           ; 1 bytes @ 0x3
   816  0023                     	ds	1
   817  0024                     ??_BMP280_Configure:
   818  0024                     BMP280_Read16@reg_addr:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0024                     BMP280_Update@ret:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0024                     ___lldiv@dividend:	
   825                           ; 4 bytes @ 0x4
   826                           
   827  0024                     ___aldiv@dividend:	
   828                           ; 4 bytes @ 0x4
   829                           
   830                           
   831                           ; 4 bytes @ 0x4
   832  0024                     	ds	1
   833  0025                     BMP280_Read16@ret:
   834                           
   835                           ; 2 bytes @ 0x5
   836  0025                     	ds	2
   837  0027                     BMP280_Configure@mode:
   838                           
   839                           ; 1 bytes @ 0x7
   840  0027                     	ds	1
   841  0028                     ??_Enviar_temp:
   842  0028                     ?_I2C_Master_Init:	
   843                           ; 1 bytes @ 0x8
   844                           
   845  0028                     ?___lmul:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0028                     BMP280_Configure@_ctrl_meas:	
   849                           ; 4 bytes @ 0x8
   850                           
   851  0028                     I2C_Master_Init@c:	
   852                           ; 1 bytes @ 0x8
   853                           
   854  0028                     ___lmul@multiplier:	
   855                           ; 4 bytes @ 0x8
   856                           
   857                           
   858                           ; 4 bytes @ 0x8
   859  0028                     	ds	1
   860  0029                     BMP280_Configure@_config:
   861                           
   862                           ; 1 bytes @ 0x9
   863  0029                     	ds	1
   864  002A                     ?_BMP280_begin:
   865  002A                     BMP280_begin@T_sampling:	
   866                           ; 2 bytes @ 0xA
   867                           
   868                           
   869                           ; 1 bytes @ 0xA
   870  002A                     	ds	1
   871  002B                     BMP280_begin@P_sampling:
   872                           
   873                           ; 1 bytes @ 0xB
   874  002B                     	ds	1
   875  002C                     ??_I2C_Master_Init:
   876  002C                     BMP280_begin@filter:	
   877                           ; 1 bytes @ 0xC
   878                           
   879  002C                     ___lmul@multiplicand:	
   880                           ; 1 bytes @ 0xC
   881                           
   882                           
   883                           ; 4 bytes @ 0xC
   884  002C                     	ds	1
   885  002D                     BMP280_begin@standby:
   886                           
   887                           ; 1 bytes @ 0xD
   888  002D                     	ds	1
   889  002E                     ??_BMP280_begin:
   890                           
   891                           ; 1 bytes @ 0xE
   892  002E                     	ds	2
   893  0030                     ??___lmul:
   894                           
   895                           ; 1 bytes @ 0x10
   896  0030                     	ds	1
   897  0031                     ___lmul@product:
   898                           
   899                           ; 4 bytes @ 0x11
   900  0031                     	ds	4
   901  0035                     ??_BMP280_readTemperature:
   902  0035                     ??_BMP280_readPressure:	
   903                           ; 1 bytes @ 0x15
   904                           
   905                           
   906                           ; 1 bytes @ 0x15
   907  0035                     	ds	16
   908  0045                     BMP280_readTemperature@var1:
   909  0045                     _BMP280_readPressure$1216:	
   910                           ; 4 bytes @ 0x25
   911                           
   912                           
   913                           ; 4 bytes @ 0x25
   914  0045                     	ds	4
   915  0049                     BMP280_readTemperature@var2:
   916  0049                     _BMP280_readPressure$1217:	
   917                           ; 4 bytes @ 0x29
   918                           
   919                           
   920                           ; 4 bytes @ 0x29
   921  0049                     	ds	4
   922  004D                     _BMP280_readTemperature$1214:
   923  004D                     _BMP280_readPressure$1218:	
   924                           ; 4 bytes @ 0x2D
   925                           
   926                           
   927                           ; 4 bytes @ 0x2D
   928  004D                     	ds	4
   929  0051                     BMP280_readTemperature@temp:
   930  0051                     BMP280_readPressure@pres:	
   931                           ; 1 bytes @ 0x31
   932                           
   933                           
   934                           ; 1 bytes @ 0x31
   935  0051                     	ds	1
   936  0052                     _BMP280_readTemperature$1213:
   937  0052                     _BMP280_readPressure$1215:	
   938                           ; 4 bytes @ 0x32
   939                           
   940                           
   941                           ; 4 bytes @ 0x32
   942  0052                     	ds	4
   943  0056                     BMP280_readPressure@var2:
   944                           
   945                           ; 4 bytes @ 0x36
   946  0056                     	ds	4
   947  005A                     BMP280_readPressure@p:
   948                           
   949                           ; 4 bytes @ 0x3A
   950  005A                     	ds	4
   951  005E                     BMP280_readPressure@var1:
   952                           
   953                           ; 4 bytes @ 0x3E
   954  005E                     	ds	4
   955                           
   956                           	psect	maintext
   957  0BBC                     __pmaintext:	
   958 ;;
   959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   960 ;;
   961 ;; *************** function _main *****************
   962 ;; Defined at:
   963 ;;		line 153 in file "main_m.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : B00/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0
   980 ;;      Totals:         0       0       0       0       0
   981 ;;Total ram usage:        0 bytes
   982 ;; Hardware stack levels required when called:    7
   983 ;; This function calls:
   984 ;;		_BMP280_begin
   985 ;;		_BMP280_readPressure
   986 ;;		_BMP280_readTemperature
   987 ;;		_Enviar_temp
   988 ;;		_UART_send_string
   989 ;;		_Uart_send_char
   990 ;;		_setup
   991 ;; This function is called by:
   992 ;;		Startup code after reset
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _main
   998  0BBC                     _main:
   999  0BBC                     l1750:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1002                           
  1003                           
  1004                           ;main_m.c: 154:     setup();
  1005  0BBC  120A  158A  21B7  120A  158A  	fcall	_setup
  1006                           
  1007                           ;main_m.c: 155:     if(BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, S
      +                          TANDBY_0_5) == 0)
  1008  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0BC3  01AA               	clrf	BMP280_begin@T_sampling
  1011  0BC4  0AAA               	incf	BMP280_begin@T_sampling,f
  1012  0BC5  01AB               	clrf	BMP280_begin@P_sampling
  1013  0BC6  0AAB               	incf	BMP280_begin@P_sampling,f
  1014  0BC7  01AC               	clrf	BMP280_begin@filter
  1015  0BC8  01AD               	clrf	BMP280_begin@standby
  1016  0BC9  3003               	movlw	3
  1017  0BCA  120A  158A  26D2  120A  158A  	fcall	_BMP280_begin
  1018  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0BD1  082A               	movf	?_BMP280_begin,w
  1021  0BD2  042B               	iorwf	?_BMP280_begin+1,w
  1022  0BD3  1D03               	btfss	3,2
  1023  0BD4  2BD6               	goto	u2051
  1024  0BD5  2BD7               	goto	u2050
  1025  0BD6                     u2051:
  1026  0BD6  2BD9               	goto	l1754
  1027  0BD7                     u2050:
  1028  0BD7                     l1752:
  1029                           
  1030                           ;main_m.c: 156: {;main_m.c: 157:         PORTBbits.RB2 = 1;
  1031  0BD7  1506               	bsf	6,2	;volatile
  1032  0BD8                     l68:	
  1033                           ;main_m.c: 158:     while (1) {}}
  1034                           
  1035  0BD8                     l69:
  1036  0BD8  2BD8               	goto	l68
  1037  0BD9                     l67:
  1038  0BD9                     l1754:
  1039                           
  1040                           ;main_m.c: 160:     BMP280_readTemperature(&temperature);
  1041  0BD9  30D5               	movlw	(low (_temperature| 0))& (0+255)
  1042  0BDA  120A  118A  255B  120A  158A  	fcall	_BMP280_readTemperature
  1043                           
  1044                           ;main_m.c: 161:     BMP280_readPressure(&pressure);
  1045  0BDF  30D1               	movlw	(low (_pressure| 0))& (0+255)
  1046  0BE0  120A  118A  2025  120A  158A  	fcall	_BMP280_readPressure
  1047  0BE5                     l1756:
  1048                           
  1049                           ;main_m.c: 162:     Enviar_temp();
  1050  0BE5  120A  158A  25A7  120A  158A  	fcall	_Enviar_temp
  1051  0BEA                     l1758:
  1052                           
  1053                           ;main_m.c: 163:     UART_send_string("#");
  1054  0BEA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1055  0BEB  120A  158A  2178  120A  158A  	fcall	_UART_send_string
  1056                           
  1057                           ;main_m.c: 164:     Uart_send_char(dec_t);
  1058  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0BF2  086D               	movf	_dec_t,w
  1061  0BF3  120A  158A  213B  120A  158A  	fcall	_Uart_send_char
  1062                           
  1063                           ;main_m.c: 165:     Uart_send_char(uni_t);
  1064  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0BFA  086C               	movf	_uni_t,w
  1067  0BFB  120A  158A  213B  120A  158A  	fcall	_Uart_send_char
  1068  0C00                     l1760:
  1069                           
  1070                           ;main_m.c: 166:     UART_send_string(".");
  1071  0C00  3003               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1072  0C01  120A  158A  2178  120A  158A  	fcall	_UART_send_string
  1073  0C06                     l1762:
  1074                           
  1075                           ;main_m.c: 167:     Uart_send_char(deci_t);
  1076  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0C08  086B               	movf	_deci_t,w
  1079  0C09  120A  158A  213B  120A  158A  	fcall	_Uart_send_char
  1080  0C0E                     l1764:
  1081                           
  1082                           ;main_m.c: 168:     Uart_send_char(centi_t);
  1083  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0C10  086A               	movf	_centi_t,w
  1086  0C11  120A  158A  213B  120A  158A  	fcall	_Uart_send_char
  1087  0C16                     l1766:
  1088                           
  1089                           ;main_m.c: 171:     if (RX_Trans == 0b00000000){
  1090  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0C18  086E               	movf	_RX_Trans,w
  1093  0C19  1D03               	btfss	3,2
  1094  0C1A  2C1C               	goto	u2061
  1095  0C1B  2C1D               	goto	u2060
  1096  0C1C                     u2061:
  1097  0C1C  2C1F               	goto	l1770
  1098  0C1D                     u2060:
  1099  0C1D                     l1768:
  1100                           
  1101                           ;main_m.c: 172:         PORTBbits.RB6 = 0;
  1102  0C1D  1306               	bcf	6,6	;volatile
  1103                           
  1104                           ;main_m.c: 173:     }
  1105  0C1E  2BD9               	goto	l1754
  1106  0C1F                     l1770:
  1107  0C1F  036E               	decf	_RX_Trans,w
  1108  0C20  1D03               	btfss	3,2
  1109  0C21  2C23               	goto	u2071
  1110  0C22  2C24               	goto	u2070
  1111  0C23                     u2071:
  1112  0C23  2C26               	goto	l1774
  1113  0C24                     u2070:
  1114  0C24                     l1772:
  1115                           
  1116                           ;main_m.c: 175:         PORTBbits.RB6 = 1;
  1117  0C24  1706               	bsf	6,6	;volatile
  1118                           
  1119                           ;main_m.c: 176:     }
  1120  0C25  2BD9               	goto	l1754
  1121  0C26                     l1774:
  1122  0C26  3002               	movlw	2
  1123  0C27  066E               	xorwf	_RX_Trans,w
  1124  0C28  1D03               	btfss	3,2
  1125  0C29  2C2B               	goto	u2081
  1126  0C2A  2C2C               	goto	u2080
  1127  0C2B                     u2081:
  1128  0C2B  2C2E               	goto	l1778
  1129  0C2C                     u2080:
  1130  0C2C                     l1776:
  1131                           
  1132                           ;main_m.c: 178:         PORTBbits.RB7 = 0;
  1133  0C2C  1386               	bcf	6,7	;volatile
  1134                           
  1135                           ;main_m.c: 179:     }
  1136  0C2D  2BD9               	goto	l1754
  1137  0C2E                     l1778:
  1138  0C2E  3003               	movlw	3
  1139  0C2F  066E               	xorwf	_RX_Trans,w
  1140  0C30  1D03               	btfss	3,2
  1141  0C31  2C33               	goto	u2091
  1142  0C32  2C34               	goto	u2090
  1143  0C33                     u2091:
  1144  0C33  2BD9               	goto	l67
  1145  0C34                     u2090:
  1146  0C34                     l1780:
  1147                           
  1148                           ;main_m.c: 181:         PORTBbits.RB7 = 1;
  1149  0C34  1786               	bsf	6,7	;volatile
  1150  0C35  2BD9               	goto	l1754
  1151  0C36  120A  118A  280C   	ljmp	start
  1152  0C39                     __end_of_main:
  1153                           
  1154                           	psect	text1
  1155  09B7                     __ptext1:	
  1156 ;; *************** function _setup *****************
  1157 ;; Defined at:
  1158 ;;		line 191 in file "main_m.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    4
  1179 ;; This function calls:
  1180 ;;		_I2C_Master_Init
  1181 ;;		_Uart_conf
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _setup
  1189  09B7                     _setup:
  1190  09B7                     l1684:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1193                           
  1194                           
  1195                           ;main_m.c: 192:     ANSEL = 0;
  1196  09B7  1683               	bsf	3,5	;RP0=1, select bank3
  1197  09B8  1703               	bsf	3,6	;RP1=1, select bank3
  1198  09B9  0188               	clrf	8	;volatile
  1199                           
  1200                           ;main_m.c: 193:     ANSELH = 0;
  1201  09BA  0189               	clrf	9	;volatile
  1202                           
  1203                           ;main_m.c: 194:     TRISC = 0;
  1204  09BB  1683               	bsf	3,5	;RP0=1, select bank1
  1205  09BC  1303               	bcf	3,6	;RP1=0, select bank1
  1206  09BD  0187               	clrf	7	;volatile
  1207                           
  1208                           ;main_m.c: 195:     TRISB = 0;
  1209  09BE  0186               	clrf	6	;volatile
  1210                           
  1211                           ;main_m.c: 196:     TRISE = 0;
  1212  09BF  0189               	clrf	9	;volatile
  1213                           
  1214                           ;main_m.c: 197:     TRISD = 0;
  1215  09C0  0188               	clrf	8	;volatile
  1216                           
  1217                           ;main_m.c: 198:     PORTB = 0;
  1218  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  1219  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  1220  09C3  0186               	clrf	6	;volatile
  1221                           
  1222                           ;main_m.c: 199:     PORTD = 0;
  1223  09C4  0188               	clrf	8	;volatile
  1224  09C5                     l1686:
  1225                           
  1226                           ;main_m.c: 200:     I2C_Master_Init(100000);
  1227  09C5  3000               	movlw	0
  1228  09C6  00AB               	movwf	I2C_Master_Init@c+3
  1229  09C7  3001               	movlw	1
  1230  09C8  00AA               	movwf	I2C_Master_Init@c+2
  1231  09C9  3086               	movlw	134
  1232  09CA  00A9               	movwf	I2C_Master_Init@c+1
  1233  09CB  30A0               	movlw	160
  1234  09CC  00A8               	movwf	I2C_Master_Init@c
  1235  09CD  120A  158A  2258  120A  158A  	fcall	_I2C_Master_Init
  1236  09D2                     l1688:
  1237                           
  1238                           ;main_m.c: 201:     Uart_conf();
  1239  09D2  120A  158A  2197  120A  158A  	fcall	_Uart_conf
  1240  09D7                     l84:
  1241  09D7  0008               	return
  1242  09D8                     __end_of_setup:
  1243                           
  1244                           	psect	text2
  1245  0997                     __ptext2:	
  1246 ;; *************** function _Uart_conf *****************
  1247 ;; Defined at:
  1248 ;;		line 3 in file "UART.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    2
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_setup
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _Uart_conf
  1278  0997                     _Uart_conf:
  1279  0997                     l1264:	
  1280                           ;incstack = 0
  1281                           ; Regs used in _Uart_conf: [wreg+status,2]
  1282                           
  1283                           
  1284                           ;UART.c: 7:     TXSTAbits.TXEN = 1;
  1285  0997  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0998  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0999  1698               	bsf	24,5	;volatile
  1288                           
  1289                           ;UART.c: 8:     TXSTAbits.SYNC = 0;
  1290  099A  1218               	bcf	24,4	;volatile
  1291                           
  1292                           ;UART.c: 9:     RCSTAbits.SPEN = 1;
  1293  099B  1283               	bcf	3,5	;RP0=0, select bank0
  1294  099C  1303               	bcf	3,6	;RP1=0, select bank0
  1295  099D  1798               	bsf	24,7	;volatile
  1296                           
  1297                           ;UART.c: 10:     TRISCbits.TRISC6 = 0;
  1298  099E  1683               	bsf	3,5	;RP0=1, select bank1
  1299  099F  1303               	bcf	3,6	;RP1=0, select bank1
  1300  09A0  1307               	bcf	7,6	;volatile
  1301                           
  1302                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1303  09A1  1318               	bcf	24,6	;volatile
  1304                           
  1305                           ;UART.c: 12:     PIE1bits.TXIE = 0;
  1306  09A2  120C               	bcf	12,4	;volatile
  1307                           
  1308                           ;UART.c: 16:     RCSTAbits.CREN = 1;
  1309  09A3  1283               	bcf	3,5	;RP0=0, select bank0
  1310  09A4  1303               	bcf	3,6	;RP1=0, select bank0
  1311  09A5  1618               	bsf	24,4	;volatile
  1312                           
  1313                           ;UART.c: 17:     PIE1bits.RCIE = 1;
  1314  09A6  1683               	bsf	3,5	;RP0=1, select bank1
  1315  09A7  1303               	bcf	3,6	;RP1=0, select bank1
  1316  09A8  168C               	bsf	12,5	;volatile
  1317                           
  1318                           ;UART.c: 18:     RCSTAbits.RX9 = 0;
  1319  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  1320  09AA  1303               	bcf	3,6	;RP1=0, select bank0
  1321  09AB  1318               	bcf	24,6	;volatile
  1322                           
  1323                           ;UART.c: 19:     TRISCbits.TRISC7 = 1;
  1324  09AC  1683               	bsf	3,5	;RP0=1, select bank1
  1325  09AD  1303               	bcf	3,6	;RP1=0, select bank1
  1326  09AE  1787               	bsf	7,7	;volatile
  1327  09AF                     l1266:
  1328                           
  1329                           ;UART.c: 23:     SPBRG = (8000000/(16 * 9600)) - 1;
  1330  09AF  3062               	movlw	98
  1331  09B0  0099               	movwf	25	;volatile
  1332  09B1                     l1268:
  1333                           
  1334                           ;UART.c: 24:     SPBRGH = 0;
  1335  09B1  019A               	clrf	26	;volatile
  1336  09B2                     l1270:
  1337                           
  1338                           ;UART.c: 25:     TXSTAbits.BRGH = 1;
  1339  09B2  1518               	bsf	24,2	;volatile
  1340  09B3                     l1272:
  1341                           
  1342                           ;UART.c: 26:     BAUDCTLbits.BRG16 = 0;
  1343  09B3  1683               	bsf	3,5	;RP0=1, select bank3
  1344  09B4  1703               	bsf	3,6	;RP1=1, select bank3
  1345  09B5  1187               	bcf	7,3	;volatile
  1346  09B6                     l229:
  1347  09B6  0008               	return
  1348  09B7                     __end_of_Uart_conf:
  1349                           
  1350                           	psect	text3
  1351  0A58                     __ptext3:	
  1352 ;; *************** function _I2C_Master_Init *****************
  1353 ;; Defined at:
  1354 ;;		line 16 in file "I2C.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  c               4    8[BANK0 ] const unsigned long 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       4       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          0       4       0       0       0
  1371 ;;      Totals:         0       8       0       0       0
  1372 ;;Total ram usage:        8 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    3
  1375 ;; This function calls:
  1376 ;;		___lldiv
  1377 ;; This function is called by:
  1378 ;;		_setup
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _I2C_Master_Init
  1384  0A58                     _I2C_Master_Init:
  1385  0A58                     l1584:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1388                           
  1389                           
  1390                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1391  0A58  3028               	movlw	40
  1392  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0A5B  0094               	movwf	20	;volatile
  1395  0A5C                     l1586:
  1396                           
  1397                           ;I2C.c: 19:     SSPCON2 = 0;
  1398  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0A5E  0191               	clrf	17	;volatile
  1401  0A5F                     l1588:
  1402                           
  1403                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1404  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0A61  0828               	movf	I2C_Master_Init@c,w
  1407  0A62  00AC               	movwf	??_I2C_Master_Init
  1408  0A63  0829               	movf	I2C_Master_Init@c+1,w
  1409  0A64  00AD               	movwf	??_I2C_Master_Init+1
  1410  0A65  082A               	movf	I2C_Master_Init@c+2,w
  1411  0A66  00AE               	movwf	??_I2C_Master_Init+2
  1412  0A67  082B               	movf	I2C_Master_Init@c+3,w
  1413  0A68  00AF               	movwf	??_I2C_Master_Init+3
  1414  0A69  3002               	movlw	2
  1415  0A6A                     u1615:
  1416  0A6A  1003               	clrc
  1417  0A6B  0DAC               	rlf	??_I2C_Master_Init,f
  1418  0A6C  0DAD               	rlf	??_I2C_Master_Init+1,f
  1419  0A6D  0DAE               	rlf	??_I2C_Master_Init+2,f
  1420  0A6E  0DAF               	rlf	??_I2C_Master_Init+3,f
  1421  0A6F                     u1610:
  1422  0A6F  3EFF               	addlw	-1
  1423  0A70  1D03               	skipz
  1424  0A71  2A6A               	goto	u1615
  1425  0A72  082F               	movf	??_I2C_Master_Init+3,w
  1426  0A73  00A3               	movwf	___lldiv@divisor+3
  1427  0A74  082E               	movf	??_I2C_Master_Init+2,w
  1428  0A75  00A2               	movwf	___lldiv@divisor+2
  1429  0A76  082D               	movf	??_I2C_Master_Init+1,w
  1430  0A77  00A1               	movwf	___lldiv@divisor+1
  1431  0A78  082C               	movf	??_I2C_Master_Init,w
  1432  0A79  00A0               	movwf	___lldiv@divisor
  1433  0A7A  3000               	movlw	0
  1434  0A7B  00A7               	movwf	___lldiv@dividend+3
  1435  0A7C  307A               	movlw	122
  1436  0A7D  00A6               	movwf	___lldiv@dividend+2
  1437  0A7E  3012               	movlw	18
  1438  0A7F  00A5               	movwf	___lldiv@dividend+1
  1439  0A80  3000               	movlw	0
  1440  0A81  00A4               	movwf	___lldiv@dividend
  1441  0A82  120A  118A  278D  120A  158A  	fcall	___lldiv
  1442  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0A89  0820               	movf	?___lldiv,w
  1445  0A8A  3EFF               	addlw	255
  1446  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0A8D  0093               	movwf	19	;volatile
  1449  0A8E                     l1590:
  1450                           
  1451                           ;I2C.c: 21:     SSPSTAT = 0;
  1452  0A8E  0194               	clrf	20	;volatile
  1453  0A8F                     l1592:
  1454                           
  1455                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1456  0A8F  1587               	bsf	7,3	;volatile
  1457  0A90                     l1594:
  1458                           
  1459                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1460  0A90  1607               	bsf	7,4	;volatile
  1461  0A91                     l122:
  1462  0A91  0008               	return
  1463  0A92                     __end_of_I2C_Master_Init:
  1464                           
  1465                           	psect	text4
  1466  0978                     __ptext4:	
  1467 ;; *************** function _UART_send_string *****************
  1468 ;; Defined at:
  1469 ;;		line 36 in file "UART.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  st_pt           1    wreg     PTR unsigned char 
  1472 ;;		 -> STR_2(2), STR_1(2), 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  st_pt           1    5[COMMON] PTR unsigned char 
  1475 ;;		 -> STR_2(2), STR_1(2), 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0
  1487 ;;      Temps:          1       0       0       0       0
  1488 ;;      Totals:         2       0       0       0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    3
  1492 ;; This function calls:
  1493 ;;		_Uart_send_char
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _UART_send_string
  1501  0978                     _UART_send_string:
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1505                           ;UART_send_string@st_pt stored from wreg
  1506  0978  00F5               	movwf	UART_send_string@st_pt
  1507  0979                     l1456:
  1508                           
  1509                           ;UART.c: 37:     while (*st_pt)
  1510  0979  298A               	goto	l1462
  1511  097A                     l1458:
  1512                           
  1513                           ;UART.c: 38:         Uart_send_char(*st_pt++);
  1514  097A  0875               	movf	UART_send_string@st_pt,w
  1515  097B  0084               	movwf	4
  1516  097C  120A  118A  27F5  120A  158A  	fcall	stringdir
  1517  0981  120A  158A  213B  120A  158A  	fcall	_Uart_send_char
  1518  0986                     l1460:
  1519  0986  3001               	movlw	1
  1520  0987  00F4               	movwf	??_UART_send_string
  1521  0988  0874               	movf	??_UART_send_string,w
  1522  0989  07F5               	addwf	UART_send_string@st_pt,f
  1523  098A                     l1462:
  1524                           
  1525                           ;UART.c: 37:     while (*st_pt)
  1526  098A  0875               	movf	UART_send_string@st_pt,w
  1527  098B  0084               	movwf	4
  1528  098C  120A  118A  27F5  120A  158A  	fcall	stringdir
  1529  0991  3A00               	xorlw	0
  1530  0992  1D03               	skipz
  1531  0993  2995               	goto	u1401
  1532  0994  2996               	goto	u1400
  1533  0995                     u1401:
  1534  0995  297A               	goto	l1458
  1535  0996                     u1400:
  1536  0996                     l241:
  1537  0996  0008               	return
  1538  0997                     __end_of_UART_send_string:
  1539                           
  1540                           	psect	text5
  1541  093B                     __ptext5:	
  1542 ;; *************** function _Uart_send_char *****************
  1543 ;; Defined at:
  1544 ;;		line 31 in file "UART.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  bt              1    wreg     unsigned char 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  bt              1    3[COMMON] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         1       0       0       0       0
  1562 ;;Total ram usage:        1 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;;		_UART_send_string
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _Uart_send_char
  1575  093B                     _Uart_send_char:
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _Uart_send_char: [wreg]
  1579                           ;Uart_send_char@bt stored from wreg
  1580  093B  00F3               	movwf	Uart_send_char@bt
  1581  093C                     l1248:
  1582  093C                     l232:	
  1583                           ;UART.c: 32:     while (!TXIF);
  1584                           
  1585  093C  1283               	bcf	3,5	;RP0=0, select bank0
  1586  093D  1303               	bcf	3,6	;RP1=0, select bank0
  1587  093E  1E0C               	btfss	12,4	;volatile
  1588  093F  2941               	goto	u861
  1589  0940  2942               	goto	u860
  1590  0941                     u861:
  1591  0941  293C               	goto	l232
  1592  0942                     u860:
  1593  0942                     l1250:
  1594                           
  1595                           ;UART.c: 33:     TXREG = bt;
  1596  0942  0873               	movf	Uart_send_char@bt,w
  1597  0943  0099               	movwf	25	;volatile
  1598  0944                     l235:
  1599  0944  0008               	return
  1600  0945                     __end_of_Uart_send_char:
  1601                           
  1602                           	psect	text6
  1603  0DA7                     __ptext6:	
  1604 ;; *************** function _Enviar_temp *****************
  1605 ;; Defined at:
  1606 ;;		line 203 in file "main_m.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0      10       0       0       0
  1623 ;;      Totals:         0      10       0       0       0
  1624 ;;Total ram usage:       10 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    3
  1627 ;; This function calls:
  1628 ;;		___lldiv
  1629 ;;		___wmul
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _Enviar_temp
  1637  0DA7                     _Enviar_temp:
  1638  0DA7                     l1736:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _Enviar_temp: [wreg+status,2+status,0+pclath+cstack]
  1641                           
  1642                           
  1643                           ;main_m.c: 204:     temp = temperature;
  1644  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0DA9  0858               	movf	(_temperature+3)^(0+128),w
  1647  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0DAC  00E9               	movwf	_temp+3
  1650  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0DAF  0857               	movf	(_temperature+2)^(0+128),w
  1653  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0DB2  00E8               	movwf	_temp+2
  1656  0DB3  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0DB4  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0DB5  0856               	movf	(_temperature+1)^(0+128),w
  1659  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0DB8  00E7               	movwf	_temp+1
  1662  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0DBB  0855               	movf	_temperature^(0+128),w
  1665  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0DBE  00E6               	movwf	_temp
  1668  0DBF                     l1738:
  1669                           
  1670                           ;main_m.c: 205:     dec_t = temp /1000;
  1671  0DBF  3000               	movlw	0
  1672  0DC0  00A3               	movwf	___lldiv@divisor+3
  1673  0DC1  3000               	movlw	0
  1674  0DC2  00A2               	movwf	___lldiv@divisor+2
  1675  0DC3  3003               	movlw	3
  1676  0DC4  00A1               	movwf	___lldiv@divisor+1
  1677  0DC5  30E8               	movlw	232
  1678  0DC6  00A0               	movwf	___lldiv@divisor
  1679  0DC7  0869               	movf	_temp+3,w
  1680  0DC8  00A7               	movwf	___lldiv@dividend+3
  1681  0DC9  0868               	movf	_temp+2,w
  1682  0DCA  00A6               	movwf	___lldiv@dividend+2
  1683  0DCB  0867               	movf	_temp+1,w
  1684  0DCC  00A5               	movwf	___lldiv@dividend+1
  1685  0DCD  0866               	movf	_temp,w
  1686  0DCE  00A4               	movwf	___lldiv@dividend
  1687  0DCF  120A  118A  278D  120A  158A  	fcall	___lldiv
  1688  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0DD6  0820               	movf	?___lldiv,w
  1691  0DD7  00A8               	movwf	??_Enviar_temp
  1692  0DD8  0828               	movf	??_Enviar_temp,w
  1693  0DD9  00ED               	movwf	_dec_t
  1694  0DDA                     l1740:
  1695                           
  1696                           ;main_m.c: 206:     temp = temp - (dec_t*1000);
  1697  0DDA  086D               	movf	_dec_t,w
  1698  0DDB  00A8               	movwf	??_Enviar_temp
  1699  0DDC  01A9               	clrf	??_Enviar_temp+1
  1700  0DDD  0828               	movf	??_Enviar_temp,w
  1701  0DDE  00F3               	movwf	___wmul@multiplier
  1702  0DDF  0829               	movf	??_Enviar_temp+1,w
  1703  0DE0  00F4               	movwf	___wmul@multiplier+1
  1704  0DE1  30E8               	movlw	232
  1705  0DE2  00F5               	movwf	___wmul@multiplicand
  1706  0DE3  3003               	movlw	3
  1707  0DE4  00F6               	movwf	___wmul@multiplicand+1
  1708  0DE5  120A  158A  21D8  120A  158A  	fcall	___wmul
  1709  0DEA  0873               	movf	?___wmul,w
  1710  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0DED  00AA               	movwf	??_Enviar_temp+2
  1713  0DEE  0874               	movf	?___wmul+1,w
  1714  0DEF  00AB               	movwf	??_Enviar_temp+3
  1715  0DF0  3000               	movlw	0
  1716  0DF1  1BAB               	btfsc	??_Enviar_temp+3,7
  1717  0DF2  30FF               	movlw	255
  1718  0DF3  00AC               	movwf	??_Enviar_temp+4
  1719  0DF4  00AD               	movwf	??_Enviar_temp+5
  1720  0DF5  0866               	movf	_temp,w
  1721  0DF6  00AE               	movwf	??_Enviar_temp+6
  1722  0DF7  0867               	movf	_temp+1,w
  1723  0DF8  00AF               	movwf	??_Enviar_temp+7
  1724  0DF9  0868               	movf	_temp+2,w
  1725  0DFA  00B0               	movwf	??_Enviar_temp+8
  1726  0DFB  0869               	movf	_temp+3,w
  1727  0DFC  00B1               	movwf	??_Enviar_temp+9
  1728  0DFD  082A               	movf	??_Enviar_temp+2,w
  1729  0DFE  02AE               	subwf	??_Enviar_temp+6,f
  1730  0DFF  082B               	movf	??_Enviar_temp+3,w
  1731  0E00  1C03               	skipc
  1732  0E01  0F2B               	incfsz	??_Enviar_temp+3,w
  1733  0E02  2E04               	goto	u2021
  1734  0E03  2E05               	goto	u2022
  1735  0E04                     u2021:
  1736  0E04  02AF               	subwf	??_Enviar_temp+7,f
  1737  0E05                     u2022:
  1738  0E05  082C               	movf	??_Enviar_temp+4,w
  1739  0E06  1C03               	skipc
  1740  0E07  0F2C               	incfsz	??_Enviar_temp+4,w
  1741  0E08  2E0A               	goto	u2023
  1742  0E09  2E0B               	goto	u2024
  1743  0E0A                     u2023:
  1744  0E0A  02B0               	subwf	??_Enviar_temp+8,f
  1745  0E0B                     u2024:
  1746  0E0B  082D               	movf	??_Enviar_temp+5,w
  1747  0E0C  1C03               	skipc
  1748  0E0D  0F2D               	incfsz	??_Enviar_temp+5,w
  1749  0E0E  2E10               	goto	u2025
  1750  0E0F  2E11               	goto	u2026
  1751  0E10                     u2025:
  1752  0E10  02B1               	subwf	??_Enviar_temp+9,f
  1753  0E11                     u2026:
  1754  0E11  0831               	movf	??_Enviar_temp+9,w
  1755  0E12  00E9               	movwf	_temp+3
  1756  0E13  0830               	movf	??_Enviar_temp+8,w
  1757  0E14  00E8               	movwf	_temp+2
  1758  0E15  082F               	movf	??_Enviar_temp+7,w
  1759  0E16  00E7               	movwf	_temp+1
  1760  0E17  082E               	movf	??_Enviar_temp+6,w
  1761  0E18  00E6               	movwf	_temp
  1762  0E19                     l1742:
  1763                           
  1764                           ;main_m.c: 207:     uni_t = temp /100;
  1765  0E19  3000               	movlw	0
  1766  0E1A  00A3               	movwf	___lldiv@divisor+3
  1767  0E1B  3000               	movlw	0
  1768  0E1C  00A2               	movwf	___lldiv@divisor+2
  1769  0E1D  3000               	movlw	0
  1770  0E1E  00A1               	movwf	___lldiv@divisor+1
  1771  0E1F  3064               	movlw	100
  1772  0E20  00A0               	movwf	___lldiv@divisor
  1773  0E21  0869               	movf	_temp+3,w
  1774  0E22  00A7               	movwf	___lldiv@dividend+3
  1775  0E23  0868               	movf	_temp+2,w
  1776  0E24  00A6               	movwf	___lldiv@dividend+2
  1777  0E25  0867               	movf	_temp+1,w
  1778  0E26  00A5               	movwf	___lldiv@dividend+1
  1779  0E27  0866               	movf	_temp,w
  1780  0E28  00A4               	movwf	___lldiv@dividend
  1781  0E29  120A  118A  278D  120A  158A  	fcall	___lldiv
  1782  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0E30  0820               	movf	?___lldiv,w
  1785  0E31  00A8               	movwf	??_Enviar_temp
  1786  0E32  0828               	movf	??_Enviar_temp,w
  1787  0E33  00EC               	movwf	_uni_t
  1788  0E34                     l1744:
  1789                           
  1790                           ;main_m.c: 208:     temp = temp - (uni_t*100);
  1791  0E34  086C               	movf	_uni_t,w
  1792  0E35  00A8               	movwf	??_Enviar_temp
  1793  0E36  01A9               	clrf	??_Enviar_temp+1
  1794  0E37  0828               	movf	??_Enviar_temp,w
  1795  0E38  00F3               	movwf	___wmul@multiplier
  1796  0E39  0829               	movf	??_Enviar_temp+1,w
  1797  0E3A  00F4               	movwf	___wmul@multiplier+1
  1798  0E3B  3064               	movlw	100
  1799  0E3C  00F5               	movwf	___wmul@multiplicand
  1800  0E3D  3000               	movlw	0
  1801  0E3E  00F6               	movwf	___wmul@multiplicand+1
  1802  0E3F  120A  158A  21D8  120A  158A  	fcall	___wmul
  1803  0E44  0873               	movf	?___wmul,w
  1804  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0E47  00AA               	movwf	??_Enviar_temp+2
  1807  0E48  0874               	movf	?___wmul+1,w
  1808  0E49  00AB               	movwf	??_Enviar_temp+3
  1809  0E4A  3000               	movlw	0
  1810  0E4B  1BAB               	btfsc	??_Enviar_temp+3,7
  1811  0E4C  30FF               	movlw	255
  1812  0E4D  00AC               	movwf	??_Enviar_temp+4
  1813  0E4E  00AD               	movwf	??_Enviar_temp+5
  1814  0E4F  0866               	movf	_temp,w
  1815  0E50  00AE               	movwf	??_Enviar_temp+6
  1816  0E51  0867               	movf	_temp+1,w
  1817  0E52  00AF               	movwf	??_Enviar_temp+7
  1818  0E53  0868               	movf	_temp+2,w
  1819  0E54  00B0               	movwf	??_Enviar_temp+8
  1820  0E55  0869               	movf	_temp+3,w
  1821  0E56  00B1               	movwf	??_Enviar_temp+9
  1822  0E57  082A               	movf	??_Enviar_temp+2,w
  1823  0E58  02AE               	subwf	??_Enviar_temp+6,f
  1824  0E59  082B               	movf	??_Enviar_temp+3,w
  1825  0E5A  1C03               	skipc
  1826  0E5B  0F2B               	incfsz	??_Enviar_temp+3,w
  1827  0E5C  2E5E               	goto	u2031
  1828  0E5D  2E5F               	goto	u2032
  1829  0E5E                     u2031:
  1830  0E5E  02AF               	subwf	??_Enviar_temp+7,f
  1831  0E5F                     u2032:
  1832  0E5F  082C               	movf	??_Enviar_temp+4,w
  1833  0E60  1C03               	skipc
  1834  0E61  0F2C               	incfsz	??_Enviar_temp+4,w
  1835  0E62  2E64               	goto	u2033
  1836  0E63  2E65               	goto	u2034
  1837  0E64                     u2033:
  1838  0E64  02B0               	subwf	??_Enviar_temp+8,f
  1839  0E65                     u2034:
  1840  0E65  082D               	movf	??_Enviar_temp+5,w
  1841  0E66  1C03               	skipc
  1842  0E67  0F2D               	incfsz	??_Enviar_temp+5,w
  1843  0E68  2E6A               	goto	u2035
  1844  0E69  2E6B               	goto	u2036
  1845  0E6A                     u2035:
  1846  0E6A  02B1               	subwf	??_Enviar_temp+9,f
  1847  0E6B                     u2036:
  1848  0E6B  0831               	movf	??_Enviar_temp+9,w
  1849  0E6C  00E9               	movwf	_temp+3
  1850  0E6D  0830               	movf	??_Enviar_temp+8,w
  1851  0E6E  00E8               	movwf	_temp+2
  1852  0E6F  082F               	movf	??_Enviar_temp+7,w
  1853  0E70  00E7               	movwf	_temp+1
  1854  0E71  082E               	movf	??_Enviar_temp+6,w
  1855  0E72  00E6               	movwf	_temp
  1856  0E73                     l1746:
  1857                           
  1858                           ;main_m.c: 209:     deci_t = temp /10;
  1859  0E73  3000               	movlw	0
  1860  0E74  00A3               	movwf	___lldiv@divisor+3
  1861  0E75  3000               	movlw	0
  1862  0E76  00A2               	movwf	___lldiv@divisor+2
  1863  0E77  3000               	movlw	0
  1864  0E78  00A1               	movwf	___lldiv@divisor+1
  1865  0E79  300A               	movlw	10
  1866  0E7A  00A0               	movwf	___lldiv@divisor
  1867  0E7B  0869               	movf	_temp+3,w
  1868  0E7C  00A7               	movwf	___lldiv@dividend+3
  1869  0E7D  0868               	movf	_temp+2,w
  1870  0E7E  00A6               	movwf	___lldiv@dividend+2
  1871  0E7F  0867               	movf	_temp+1,w
  1872  0E80  00A5               	movwf	___lldiv@dividend+1
  1873  0E81  0866               	movf	_temp,w
  1874  0E82  00A4               	movwf	___lldiv@dividend
  1875  0E83  120A  118A  278D  120A  158A  	fcall	___lldiv
  1876  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0E8A  0820               	movf	?___lldiv,w
  1879  0E8B  00A8               	movwf	??_Enviar_temp
  1880  0E8C  0828               	movf	??_Enviar_temp,w
  1881  0E8D  00EB               	movwf	_deci_t
  1882  0E8E                     l1748:
  1883                           
  1884                           ;main_m.c: 210:     temp = temp - (deci_t*10);
  1885  0E8E  086B               	movf	_deci_t,w
  1886  0E8F  00A8               	movwf	??_Enviar_temp
  1887  0E90  01A9               	clrf	??_Enviar_temp+1
  1888  0E91  0828               	movf	??_Enviar_temp,w
  1889  0E92  00F3               	movwf	___wmul@multiplier
  1890  0E93  0829               	movf	??_Enviar_temp+1,w
  1891  0E94  00F4               	movwf	___wmul@multiplier+1
  1892  0E95  300A               	movlw	10
  1893  0E96  00F5               	movwf	___wmul@multiplicand
  1894  0E97  3000               	movlw	0
  1895  0E98  00F6               	movwf	___wmul@multiplicand+1
  1896  0E99  120A  158A  21D8  120A  158A  	fcall	___wmul
  1897  0E9E  0873               	movf	?___wmul,w
  1898  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0EA1  00AA               	movwf	??_Enviar_temp+2
  1901  0EA2  0874               	movf	?___wmul+1,w
  1902  0EA3  00AB               	movwf	??_Enviar_temp+3
  1903  0EA4  3000               	movlw	0
  1904  0EA5  1BAB               	btfsc	??_Enviar_temp+3,7
  1905  0EA6  30FF               	movlw	255
  1906  0EA7  00AC               	movwf	??_Enviar_temp+4
  1907  0EA8  00AD               	movwf	??_Enviar_temp+5
  1908  0EA9  0866               	movf	_temp,w
  1909  0EAA  00AE               	movwf	??_Enviar_temp+6
  1910  0EAB  0867               	movf	_temp+1,w
  1911  0EAC  00AF               	movwf	??_Enviar_temp+7
  1912  0EAD  0868               	movf	_temp+2,w
  1913  0EAE  00B0               	movwf	??_Enviar_temp+8
  1914  0EAF  0869               	movf	_temp+3,w
  1915  0EB0  00B1               	movwf	??_Enviar_temp+9
  1916  0EB1  082A               	movf	??_Enviar_temp+2,w
  1917  0EB2  02AE               	subwf	??_Enviar_temp+6,f
  1918  0EB3  082B               	movf	??_Enviar_temp+3,w
  1919  0EB4  1C03               	skipc
  1920  0EB5  0F2B               	incfsz	??_Enviar_temp+3,w
  1921  0EB6  2EB8               	goto	u2041
  1922  0EB7  2EB9               	goto	u2042
  1923  0EB8                     u2041:
  1924  0EB8  02AF               	subwf	??_Enviar_temp+7,f
  1925  0EB9                     u2042:
  1926  0EB9  082C               	movf	??_Enviar_temp+4,w
  1927  0EBA  1C03               	skipc
  1928  0EBB  0F2C               	incfsz	??_Enviar_temp+4,w
  1929  0EBC  2EBE               	goto	u2043
  1930  0EBD  2EBF               	goto	u2044
  1931  0EBE                     u2043:
  1932  0EBE  02B0               	subwf	??_Enviar_temp+8,f
  1933  0EBF                     u2044:
  1934  0EBF  082D               	movf	??_Enviar_temp+5,w
  1935  0EC0  1C03               	skipc
  1936  0EC1  0F2D               	incfsz	??_Enviar_temp+5,w
  1937  0EC2  2EC4               	goto	u2045
  1938  0EC3  2EC5               	goto	u2046
  1939  0EC4                     u2045:
  1940  0EC4  02B1               	subwf	??_Enviar_temp+9,f
  1941  0EC5                     u2046:
  1942  0EC5  0831               	movf	??_Enviar_temp+9,w
  1943  0EC6  00E9               	movwf	_temp+3
  1944  0EC7  0830               	movf	??_Enviar_temp+8,w
  1945  0EC8  00E8               	movwf	_temp+2
  1946  0EC9  082F               	movf	??_Enviar_temp+7,w
  1947  0ECA  00E7               	movwf	_temp+1
  1948  0ECB  082E               	movf	??_Enviar_temp+6,w
  1949  0ECC  00E6               	movwf	_temp
  1950                           
  1951                           ;main_m.c: 211:     centi_t = temp;
  1952  0ECD  0866               	movf	_temp,w
  1953  0ECE  00A8               	movwf	??_Enviar_temp
  1954  0ECF  0828               	movf	??_Enviar_temp,w
  1955  0ED0  00EA               	movwf	_centi_t
  1956  0ED1                     l87:
  1957  0ED1  0008               	return
  1958  0ED2                     __end_of_Enviar_temp:
  1959                           
  1960                           	psect	text7
  1961  09D8                     __ptext7:	
  1962 ;; *************** function ___wmul *****************
  1963 ;; Defined at:
  1964 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  multiplier      2    3[COMMON] unsigned int 
  1967 ;;  multiplicand    2    5[COMMON] unsigned int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  product         2    7[COMMON] unsigned int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2    3[COMMON] unsigned int 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         4       0       0       0       0
  1980 ;;      Locals:         2       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0
  1982 ;;      Totals:         6       0       0       0       0
  1983 ;;Total ram usage:        6 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    2
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_Enviar_temp
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function ___wmul
  1995  09D8                     ___wmul:
  1996  09D8                     l1322:	
  1997                           ;incstack = 0
  1998                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1999                           
  2000  09D8  01F7               	clrf	___wmul@product
  2001  09D9  01F8               	clrf	___wmul@product+1
  2002  09DA                     l1324:
  2003  09DA  1C73               	btfss	___wmul@multiplier,0
  2004  09DB  29DD               	goto	u941
  2005  09DC  29DE               	goto	u940
  2006  09DD                     u941:
  2007  09DD  29E4               	goto	l334
  2008  09DE                     u940:
  2009  09DE                     l1326:
  2010  09DE  0875               	movf	___wmul@multiplicand,w
  2011  09DF  07F7               	addwf	___wmul@product,f
  2012  09E0  1803               	skipnc
  2013  09E1  0AF8               	incf	___wmul@product+1,f
  2014  09E2  0876               	movf	___wmul@multiplicand+1,w
  2015  09E3  07F8               	addwf	___wmul@product+1,f
  2016  09E4                     l334:
  2017  09E4  3001               	movlw	1
  2018  09E5                     u955:
  2019  09E5  1003               	clrc
  2020  09E6  0DF5               	rlf	___wmul@multiplicand,f
  2021  09E7  0DF6               	rlf	___wmul@multiplicand+1,f
  2022  09E8  3EFF               	addlw	-1
  2023  09E9  1D03               	skipz
  2024  09EA  29E5               	goto	u955
  2025  09EB                     l1328:
  2026  09EB  3001               	movlw	1
  2027  09EC                     u965:
  2028  09EC  1003               	clrc
  2029  09ED  0CF4               	rrf	___wmul@multiplier+1,f
  2030  09EE  0CF3               	rrf	___wmul@multiplier,f
  2031  09EF  3EFF               	addlw	-1
  2032  09F0  1D03               	skipz
  2033  09F1  29EC               	goto	u965
  2034  09F2                     l1330:
  2035  09F2  0873               	movf	___wmul@multiplier,w
  2036  09F3  0474               	iorwf	___wmul@multiplier+1,w
  2037  09F4  1D03               	btfss	3,2
  2038  09F5  29F7               	goto	u971
  2039  09F6  29F8               	goto	u970
  2040  09F7                     u971:
  2041  09F7  29DA               	goto	l1324
  2042  09F8                     u970:
  2043  09F8                     l1332:
  2044  09F8  0878               	movf	___wmul@product+1,w
  2045  09F9  00F4               	movwf	?___wmul+1
  2046  09FA  0877               	movf	___wmul@product,w
  2047  09FB  00F3               	movwf	?___wmul
  2048  09FC                     l336:
  2049  09FC  0008               	return
  2050  09FD                     __end_of___wmul:
  2051                           
  2052                           	psect	text8
  2053  055B                     __ptext8:	
  2054 ;; *************** function _BMP280_readTemperature *****************
  2055 ;; Defined at:
  2056 ;;		line 241 in file "BMP280.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  temp            1    wreg     PTR long 
  2059 ;;		 -> temperature(4), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  temp            1   49[BANK0 ] PTR long 
  2062 ;;		 -> temperature(4), 
  2063 ;;  var2            4   41[BANK0 ] long 
  2064 ;;  var1            4   37[BANK0 ] long 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  2    8[None  ] int 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0      17       0       0       0
  2076 ;;      Temps:          0      16       0       0       0
  2077 ;;      Totals:         0      33       0       0       0
  2078 ;;Total ram usage:       33 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    5
  2081 ;; This function calls:
  2082 ;;		_BMP280_Update
  2083 ;;		___aldiv
  2084 ;;		___lmul
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _BMP280_readTemperature
  2092  055B                     _BMP280_readTemperature:
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2096                           ;BMP280_readTemperature@temp stored from wreg
  2097  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2098  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2099  055D  00D1               	movwf	BMP280_readTemperature@temp
  2100  055E                     l1710:
  2101                           
  2102                           ;BMP280.c: 241: int BMP280_readTemperature(int32_t *temp);BMP280.c: 242: {;BMP280.c: 243
      +                          :   int32_t var1, var2;;BMP280.c: 245:   BMP280_Update();
  2103  055E  120A  158A  24D6  120A  118A  	fcall	_BMP280_Update
  2104                           
  2105                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2106  0563  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0564  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0565  0839               	movf	_BMP280_calib^(0+128),w
  2109  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0568  00B5               	movwf	??_BMP280_readTemperature
  2112  0569  1683               	bsf	3,5	;RP0=1, select bank1
  2113  056A  1303               	bcf	3,6	;RP1=0, select bank1
  2114  056B  083A               	movf	(_BMP280_calib+1)^(0+128),w
  2115  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2116  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2117  056E  00B6               	movwf	??_BMP280_readTemperature+1
  2118  056F  01B7               	clrf	??_BMP280_readTemperature+2
  2119  0570  01B8               	clrf	??_BMP280_readTemperature+3
  2120  0571  3001               	movlw	1
  2121  0572                     u1805:
  2122  0572  1003               	clrc
  2123  0573  0DB5               	rlf	??_BMP280_readTemperature,f
  2124  0574  0DB6               	rlf	??_BMP280_readTemperature+1,f
  2125  0575  0DB7               	rlf	??_BMP280_readTemperature+2,f
  2126  0576  0DB8               	rlf	??_BMP280_readTemperature+3,f
  2127  0577                     u1800:
  2128  0577  3EFF               	addlw	-1
  2129  0578  1D03               	skipz
  2130  0579  2D72               	goto	u1805
  2131  057A  3000               	movlw	0
  2132  057B  00A3               	movwf	___aldiv@divisor+3
  2133  057C  3000               	movlw	0
  2134  057D  00A2               	movwf	___aldiv@divisor+2
  2135  057E  3000               	movlw	0
  2136  057F  00A1               	movwf	___aldiv@divisor+1
  2137  0580  3008               	movlw	8
  2138  0581  00A0               	movwf	___aldiv@divisor
  2139  0582  0865               	movf	_adc_T+3,w
  2140  0583  00A7               	movwf	___aldiv@dividend+3
  2141  0584  0864               	movf	_adc_T+2,w
  2142  0585  00A6               	movwf	___aldiv@dividend+2
  2143  0586  0863               	movf	_adc_T+1,w
  2144  0587  00A5               	movwf	___aldiv@dividend+1
  2145  0588  0862               	movf	_adc_T,w
  2146  0589  00A4               	movwf	___aldiv@dividend
  2147  058A  120A  158A  2439  120A  118A  	fcall	___aldiv
  2148  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0591  0820               	movf	?___aldiv,w
  2151  0592  00B9               	movwf	??_BMP280_readTemperature+4
  2152  0593  0821               	movf	?___aldiv+1,w
  2153  0594  00BA               	movwf	??_BMP280_readTemperature+5
  2154  0595  0822               	movf	?___aldiv+2,w
  2155  0596  00BB               	movwf	??_BMP280_readTemperature+6
  2156  0597  0823               	movf	?___aldiv+3,w
  2157  0598  00BC               	movwf	??_BMP280_readTemperature+7
  2158  0599  0835               	movf	??_BMP280_readTemperature,w
  2159  059A  02B9               	subwf	??_BMP280_readTemperature+4,f
  2160  059B  0836               	movf	??_BMP280_readTemperature+1,w
  2161  059C  1C03               	skipc
  2162  059D  0F36               	incfsz	??_BMP280_readTemperature+1,w
  2163  059E  2DA0               	goto	u1811
  2164  059F  2DA1               	goto	u1812
  2165  05A0                     u1811:
  2166  05A0  02BA               	subwf	??_BMP280_readTemperature+5,f
  2167  05A1                     u1812:
  2168  05A1  0837               	movf	??_BMP280_readTemperature+2,w
  2169  05A2  1C03               	skipc
  2170  05A3  0F37               	incfsz	??_BMP280_readTemperature+2,w
  2171  05A4  2DA6               	goto	u1813
  2172  05A5  2DA7               	goto	u1814
  2173  05A6                     u1813:
  2174  05A6  02BB               	subwf	??_BMP280_readTemperature+6,f
  2175  05A7                     u1814:
  2176  05A7  0838               	movf	??_BMP280_readTemperature+3,w
  2177  05A8  1C03               	skipc
  2178  05A9  0F38               	incfsz	??_BMP280_readTemperature+3,w
  2179  05AA  2DAC               	goto	u1815
  2180  05AB  2DAD               	goto	u1816
  2181  05AC                     u1815:
  2182  05AC  02BC               	subwf	??_BMP280_readTemperature+7,f
  2183  05AD                     u1816:
  2184  05AD  083C               	movf	??_BMP280_readTemperature+7,w
  2185  05AE  00AB               	movwf	___lmul@multiplier+3
  2186  05AF  083B               	movf	??_BMP280_readTemperature+6,w
  2187  05B0  00AA               	movwf	___lmul@multiplier+2
  2188  05B1  083A               	movf	??_BMP280_readTemperature+5,w
  2189  05B2  00A9               	movwf	___lmul@multiplier+1
  2190  05B3  0839               	movf	??_BMP280_readTemperature+4,w
  2191  05B4  00A8               	movwf	___lmul@multiplier
  2192  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2193  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2194  05B7  083B               	movf	(_BMP280_calib^(0+128)+2),w
  2195  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2196  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2197  05BA  00AC               	movwf	___lmul@multiplicand
  2198  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2199  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2200  05BD  083C               	movf	((_BMP280_calib+1)^(0+128)+2),w
  2201  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2202  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2203  05C0  00AD               	movwf	___lmul@multiplicand+1
  2204  05C1  3000               	movlw	0
  2205  05C2  1BAD               	btfsc	___lmul@multiplicand+1,7
  2206  05C3  30FF               	movlw	255
  2207  05C4  00AE               	movwf	___lmul@multiplicand+2
  2208  05C5  00AF               	movwf	___lmul@multiplicand+3
  2209  05C6  120A  158A  231E  120A  118A  	fcall	___lmul
  2210  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2211  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2212  05CD  082B               	movf	?___lmul+3,w
  2213  05CE  00D5               	movwf	_BMP280_readTemperature$1213+3
  2214  05CF  082A               	movf	?___lmul+2,w
  2215  05D0  00D4               	movwf	_BMP280_readTemperature$1213+2
  2216  05D1  0829               	movf	?___lmul+1,w
  2217  05D2  00D3               	movwf	_BMP280_readTemperature$1213+1
  2218  05D3  0828               	movf	?___lmul,w
  2219  05D4  00D2               	movwf	_BMP280_readTemperature$1213
  2220                           
  2221                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  2222  05D5  3000               	movlw	0
  2223  05D6  00A3               	movwf	___aldiv@divisor+3
  2224  05D7  3000               	movlw	0
  2225  05D8  00A2               	movwf	___aldiv@divisor+2
  2226  05D9  3008               	movlw	8
  2227  05DA  00A1               	movwf	___aldiv@divisor+1
  2228  05DB  3000               	movlw	0
  2229  05DC  00A0               	movwf	___aldiv@divisor
  2230  05DD  0855               	movf	_BMP280_readTemperature$1213+3,w
  2231  05DE  00A7               	movwf	___aldiv@dividend+3
  2232  05DF  0854               	movf	_BMP280_readTemperature$1213+2,w
  2233  05E0  00A6               	movwf	___aldiv@dividend+2
  2234  05E1  0853               	movf	_BMP280_readTemperature$1213+1,w
  2235  05E2  00A5               	movwf	___aldiv@dividend+1
  2236  05E3  0852               	movf	_BMP280_readTemperature$1213,w
  2237  05E4  00A4               	movwf	___aldiv@dividend
  2238  05E5  120A  158A  2439  120A  118A  	fcall	___aldiv
  2239  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2240  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2241  05EC  0823               	movf	?___aldiv+3,w
  2242  05ED  00C8               	movwf	BMP280_readTemperature@var1+3
  2243  05EE  0822               	movf	?___aldiv+2,w
  2244  05EF  00C7               	movwf	BMP280_readTemperature@var1+2
  2245  05F0  0821               	movf	?___aldiv+1,w
  2246  05F1  00C6               	movwf	BMP280_readTemperature@var1+1
  2247  05F2  0820               	movf	?___aldiv,w
  2248  05F3  00C5               	movwf	BMP280_readTemperature@var1
  2249                           
  2250                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2251  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  2252  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  2253  05F6  0839               	movf	_BMP280_calib^(0+128),w
  2254  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2255  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2256  05F9  00B5               	movwf	??_BMP280_readTemperature
  2257  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2258  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2259  05FC  083A               	movf	(_BMP280_calib+1)^(0+128),w
  2260  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2261  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2262  05FF  00B6               	movwf	??_BMP280_readTemperature+1
  2263  0600  01B7               	clrf	??_BMP280_readTemperature+2
  2264  0601  01B8               	clrf	??_BMP280_readTemperature+3
  2265  0602  3000               	movlw	0
  2266  0603  00A3               	movwf	___aldiv@divisor+3
  2267  0604  3000               	movlw	0
  2268  0605  00A2               	movwf	___aldiv@divisor+2
  2269  0606  3000               	movlw	0
  2270  0607  00A1               	movwf	___aldiv@divisor+1
  2271  0608  3010               	movlw	16
  2272  0609  00A0               	movwf	___aldiv@divisor
  2273  060A  0865               	movf	_adc_T+3,w
  2274  060B  00A7               	movwf	___aldiv@dividend+3
  2275  060C  0864               	movf	_adc_T+2,w
  2276  060D  00A6               	movwf	___aldiv@dividend+2
  2277  060E  0863               	movf	_adc_T+1,w
  2278  060F  00A5               	movwf	___aldiv@dividend+1
  2279  0610  0862               	movf	_adc_T,w
  2280  0611  00A4               	movwf	___aldiv@dividend
  2281  0612  120A  158A  2439  120A  118A  	fcall	___aldiv
  2282  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0619  0820               	movf	?___aldiv,w
  2285  061A  00B9               	movwf	??_BMP280_readTemperature+4
  2286  061B  0821               	movf	?___aldiv+1,w
  2287  061C  00BA               	movwf	??_BMP280_readTemperature+5
  2288  061D  0822               	movf	?___aldiv+2,w
  2289  061E  00BB               	movwf	??_BMP280_readTemperature+6
  2290  061F  0823               	movf	?___aldiv+3,w
  2291  0620  00BC               	movwf	??_BMP280_readTemperature+7
  2292  0621  0835               	movf	??_BMP280_readTemperature,w
  2293  0622  02B9               	subwf	??_BMP280_readTemperature+4,f
  2294  0623  0836               	movf	??_BMP280_readTemperature+1,w
  2295  0624  1C03               	skipc
  2296  0625  0F36               	incfsz	??_BMP280_readTemperature+1,w
  2297  0626  2E28               	goto	u1821
  2298  0627  2E29               	goto	u1822
  2299  0628                     u1821:
  2300  0628  02BA               	subwf	??_BMP280_readTemperature+5,f
  2301  0629                     u1822:
  2302  0629  0837               	movf	??_BMP280_readTemperature+2,w
  2303  062A  1C03               	skipc
  2304  062B  0F37               	incfsz	??_BMP280_readTemperature+2,w
  2305  062C  2E2E               	goto	u1823
  2306  062D  2E2F               	goto	u1824
  2307  062E                     u1823:
  2308  062E  02BB               	subwf	??_BMP280_readTemperature+6,f
  2309  062F                     u1824:
  2310  062F  0838               	movf	??_BMP280_readTemperature+3,w
  2311  0630  1C03               	skipc
  2312  0631  0F38               	incfsz	??_BMP280_readTemperature+3,w
  2313  0632  2E34               	goto	u1825
  2314  0633  2E35               	goto	u1826
  2315  0634                     u1825:
  2316  0634  02BC               	subwf	??_BMP280_readTemperature+7,f
  2317  0635                     u1826:
  2318  0635  083C               	movf	??_BMP280_readTemperature+7,w
  2319  0636  00AB               	movwf	___lmul@multiplier+3
  2320  0637  083B               	movf	??_BMP280_readTemperature+6,w
  2321  0638  00AA               	movwf	___lmul@multiplier+2
  2322  0639  083A               	movf	??_BMP280_readTemperature+5,w
  2323  063A  00A9               	movwf	___lmul@multiplier+1
  2324  063B  0839               	movf	??_BMP280_readTemperature+4,w
  2325  063C  00A8               	movwf	___lmul@multiplier
  2326  063D  1683               	bsf	3,5	;RP0=1, select bank1
  2327  063E  1303               	bcf	3,6	;RP1=0, select bank1
  2328  063F  0839               	movf	_BMP280_calib^(0+128),w
  2329  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0642  00BD               	movwf	??_BMP280_readTemperature+8
  2332  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0645  083A               	movf	(_BMP280_calib+1)^(0+128),w
  2335  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0648  00BE               	movwf	??_BMP280_readTemperature+9
  2338  0649  01BF               	clrf	??_BMP280_readTemperature+10
  2339  064A  01C0               	clrf	??_BMP280_readTemperature+11
  2340  064B  3000               	movlw	0
  2341  064C  00A3               	movwf	___aldiv@divisor+3
  2342  064D  3000               	movlw	0
  2343  064E  00A2               	movwf	___aldiv@divisor+2
  2344  064F  3000               	movlw	0
  2345  0650  00A1               	movwf	___aldiv@divisor+1
  2346  0651  3010               	movlw	16
  2347  0652  00A0               	movwf	___aldiv@divisor
  2348  0653  0865               	movf	_adc_T+3,w
  2349  0654  00A7               	movwf	___aldiv@dividend+3
  2350  0655  0864               	movf	_adc_T+2,w
  2351  0656  00A6               	movwf	___aldiv@dividend+2
  2352  0657  0863               	movf	_adc_T+1,w
  2353  0658  00A5               	movwf	___aldiv@dividend+1
  2354  0659  0862               	movf	_adc_T,w
  2355  065A  00A4               	movwf	___aldiv@dividend
  2356  065B  120A  158A  2439  120A  118A  	fcall	___aldiv
  2357  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0662  0820               	movf	?___aldiv,w
  2360  0663  00C1               	movwf	??_BMP280_readTemperature+12
  2361  0664  0821               	movf	?___aldiv+1,w
  2362  0665  00C2               	movwf	??_BMP280_readTemperature+13
  2363  0666  0822               	movf	?___aldiv+2,w
  2364  0667  00C3               	movwf	??_BMP280_readTemperature+14
  2365  0668  0823               	movf	?___aldiv+3,w
  2366  0669  00C4               	movwf	??_BMP280_readTemperature+15
  2367  066A  083D               	movf	??_BMP280_readTemperature+8,w
  2368  066B  02C1               	subwf	??_BMP280_readTemperature+12,f
  2369  066C  083E               	movf	??_BMP280_readTemperature+9,w
  2370  066D  1C03               	skipc
  2371  066E  0F3E               	incfsz	??_BMP280_readTemperature+9,w
  2372  066F  2E71               	goto	u1831
  2373  0670  2E72               	goto	u1832
  2374  0671                     u1831:
  2375  0671  02C2               	subwf	??_BMP280_readTemperature+13,f
  2376  0672                     u1832:
  2377  0672  083F               	movf	??_BMP280_readTemperature+10,w
  2378  0673  1C03               	skipc
  2379  0674  0F3F               	incfsz	??_BMP280_readTemperature+10,w
  2380  0675  2E77               	goto	u1833
  2381  0676  2E78               	goto	u1834
  2382  0677                     u1833:
  2383  0677  02C3               	subwf	??_BMP280_readTemperature+14,f
  2384  0678                     u1834:
  2385  0678  0840               	movf	??_BMP280_readTemperature+11,w
  2386  0679  1C03               	skipc
  2387  067A  0F40               	incfsz	??_BMP280_readTemperature+11,w
  2388  067B  2E7D               	goto	u1835
  2389  067C  2E7E               	goto	u1836
  2390  067D                     u1835:
  2391  067D  02C4               	subwf	??_BMP280_readTemperature+15,f
  2392  067E                     u1836:
  2393  067E  0844               	movf	??_BMP280_readTemperature+15,w
  2394  067F  00AF               	movwf	___lmul@multiplicand+3
  2395  0680  0843               	movf	??_BMP280_readTemperature+14,w
  2396  0681  00AE               	movwf	___lmul@multiplicand+2
  2397  0682  0842               	movf	??_BMP280_readTemperature+13,w
  2398  0683  00AD               	movwf	___lmul@multiplicand+1
  2399  0684  0841               	movf	??_BMP280_readTemperature+12,w
  2400  0685  00AC               	movwf	___lmul@multiplicand
  2401  0686  120A  158A  231E  120A  118A  	fcall	___lmul
  2402  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2403  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2404  068D  082B               	movf	?___lmul+3,w
  2405  068E  00D5               	movwf	_BMP280_readTemperature$1213+3
  2406  068F  082A               	movf	?___lmul+2,w
  2407  0690  00D4               	movwf	_BMP280_readTemperature$1213+2
  2408  0691  0829               	movf	?___lmul+1,w
  2409  0692  00D3               	movwf	_BMP280_readTemperature$1213+1
  2410  0693  0828               	movf	?___lmul,w
  2411  0694  00D2               	movwf	_BMP280_readTemperature$1213
  2412                           
  2413                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2414  0695  3000               	movlw	0
  2415  0696  00A3               	movwf	___aldiv@divisor+3
  2416  0697  3000               	movlw	0
  2417  0698  00A2               	movwf	___aldiv@divisor+2
  2418  0699  3010               	movlw	16
  2419  069A  00A1               	movwf	___aldiv@divisor+1
  2420  069B  3000               	movlw	0
  2421  069C  00A0               	movwf	___aldiv@divisor
  2422  069D  0855               	movf	_BMP280_readTemperature$1213+3,w
  2423  069E  00A7               	movwf	___aldiv@dividend+3
  2424  069F  0854               	movf	_BMP280_readTemperature$1213+2,w
  2425  06A0  00A6               	movwf	___aldiv@dividend+2
  2426  06A1  0853               	movf	_BMP280_readTemperature$1213+1,w
  2427  06A2  00A5               	movwf	___aldiv@dividend+1
  2428  06A3  0852               	movf	_BMP280_readTemperature$1213,w
  2429  06A4  00A4               	movwf	___aldiv@dividend
  2430  06A5  120A  158A  2439  120A  118A  	fcall	___aldiv
  2431  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2432  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2433  06AC  0823               	movf	?___aldiv+3,w
  2434  06AD  00AB               	movwf	___lmul@multiplier+3
  2435  06AE  0822               	movf	?___aldiv+2,w
  2436  06AF  00AA               	movwf	___lmul@multiplier+2
  2437  06B0  0821               	movf	?___aldiv+1,w
  2438  06B1  00A9               	movwf	___lmul@multiplier+1
  2439  06B2  0820               	movf	?___aldiv,w
  2440  06B3  00A8               	movwf	___lmul@multiplier
  2441  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2442  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2443  06B6  083D               	movf	(_BMP280_calib^(0+128)+4),w
  2444  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2445  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2446  06B9  00AC               	movwf	___lmul@multiplicand
  2447  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2448  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2449  06BC  083E               	movf	((_BMP280_calib+1)^(0+128)+4),w
  2450  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2451  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2452  06BF  00AD               	movwf	___lmul@multiplicand+1
  2453  06C0  3000               	movlw	0
  2454  06C1  1BAD               	btfsc	___lmul@multiplicand+1,7
  2455  06C2  30FF               	movlw	255
  2456  06C3  00AE               	movwf	___lmul@multiplicand+2
  2457  06C4  00AF               	movwf	___lmul@multiplicand+3
  2458  06C5  120A  158A  231E  120A  118A  	fcall	___lmul
  2459  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2460  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2461  06CC  082B               	movf	?___lmul+3,w
  2462  06CD  00D0               	movwf	_BMP280_readTemperature$1214+3
  2463  06CE  082A               	movf	?___lmul+2,w
  2464  06CF  00CF               	movwf	_BMP280_readTemperature$1214+2
  2465  06D0  0829               	movf	?___lmul+1,w
  2466  06D1  00CE               	movwf	_BMP280_readTemperature$1214+1
  2467  06D2  0828               	movf	?___lmul,w
  2468  06D3  00CD               	movwf	_BMP280_readTemperature$1214
  2469                           
  2470                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  2471  06D4  3000               	movlw	0
  2472  06D5  00A3               	movwf	___aldiv@divisor+3
  2473  06D6  3000               	movlw	0
  2474  06D7  00A2               	movwf	___aldiv@divisor+2
  2475  06D8  3040               	movlw	64
  2476  06D9  00A1               	movwf	___aldiv@divisor+1
  2477  06DA  3000               	movlw	0
  2478  06DB  00A0               	movwf	___aldiv@divisor
  2479  06DC  0850               	movf	_BMP280_readTemperature$1214+3,w
  2480  06DD  00A7               	movwf	___aldiv@dividend+3
  2481  06DE  084F               	movf	_BMP280_readTemperature$1214+2,w
  2482  06DF  00A6               	movwf	___aldiv@dividend+2
  2483  06E0  084E               	movf	_BMP280_readTemperature$1214+1,w
  2484  06E1  00A5               	movwf	___aldiv@dividend+1
  2485  06E2  084D               	movf	_BMP280_readTemperature$1214,w
  2486  06E3  00A4               	movwf	___aldiv@dividend
  2487  06E4  120A  158A  2439  120A  118A  	fcall	___aldiv
  2488  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  2489  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  2490  06EB  0823               	movf	?___aldiv+3,w
  2491  06EC  00CC               	movwf	BMP280_readTemperature@var2+3
  2492  06ED  0822               	movf	?___aldiv+2,w
  2493  06EE  00CB               	movwf	BMP280_readTemperature@var2+2
  2494  06EF  0821               	movf	?___aldiv+1,w
  2495  06F0  00CA               	movwf	BMP280_readTemperature@var2+1
  2496  06F1  0820               	movf	?___aldiv,w
  2497  06F2  00C9               	movwf	BMP280_readTemperature@var2
  2498  06F3                     l1712:
  2499                           
  2500                           ;BMP280.c: 255:   t_fine = var1 + var2;
  2501  06F3  0845               	movf	BMP280_readTemperature@var1,w
  2502  06F4  0749               	addwf	BMP280_readTemperature@var2,w
  2503  06F5  00B5               	movwf	??_BMP280_readTemperature
  2504  06F6  3000               	movlw	0
  2505  06F7  1803               	skipnc
  2506  06F8  3001               	movlw	1
  2507  06F9  0746               	addwf	BMP280_readTemperature@var1+1,w
  2508  06FA  01B7               	clrf	??_BMP280_readTemperature+2
  2509  06FB  1803               	skipnc
  2510  06FC  0AB7               	incf	??_BMP280_readTemperature+2,f
  2511  06FD  074A               	addwf	BMP280_readTemperature@var2+1,w
  2512  06FE  00B6               	movwf	??_BMP280_readTemperature+1
  2513  06FF  1803               	skipnc
  2514  0700  0AB7               	incf	??_BMP280_readTemperature+2,f
  2515  0701  0847               	movf	BMP280_readTemperature@var1+2,w
  2516  0702  0737               	addwf	??_BMP280_readTemperature+2,w
  2517  0703  01B8               	clrf	??_BMP280_readTemperature+3
  2518  0704  1803               	skipnc
  2519  0705  0AB8               	incf	??_BMP280_readTemperature+3,f
  2520  0706  074B               	addwf	BMP280_readTemperature@var2+2,w
  2521  0707  00B7               	movwf	??_BMP280_readTemperature+2
  2522  0708  1803               	skipnc
  2523  0709  0AB8               	incf	??_BMP280_readTemperature+3,f
  2524  070A  0848               	movf	BMP280_readTemperature@var1+3,w
  2525  070B  0738               	addwf	??_BMP280_readTemperature+3,w
  2526  070C  074C               	addwf	BMP280_readTemperature@var2+3,w
  2527  070D  00B8               	movwf	??_BMP280_readTemperature+3
  2528  070E  0838               	movf	??_BMP280_readTemperature+3,w
  2529  070F  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0710  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0711  00B4               	movwf	(_t_fine+3)^(0+128)
  2532  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0714  0837               	movf	??_BMP280_readTemperature+2,w
  2535  0715  1683               	bsf	3,5	;RP0=1, select bank1
  2536  0716  1303               	bcf	3,6	;RP1=0, select bank1
  2537  0717  00B3               	movwf	(_t_fine+2)^(0+128)
  2538  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2540  071A  0836               	movf	??_BMP280_readTemperature+1,w
  2541  071B  1683               	bsf	3,5	;RP0=1, select bank1
  2542  071C  1303               	bcf	3,6	;RP1=0, select bank1
  2543  071D  00B2               	movwf	(_t_fine+1)^(0+128)
  2544  071E  1283               	bcf	3,5	;RP0=0, select bank0
  2545  071F  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0720  0835               	movf	??_BMP280_readTemperature,w
  2547  0721  1683               	bsf	3,5	;RP0=1, select bank1
  2548  0722  1303               	bcf	3,6	;RP1=0, select bank1
  2549  0723  00B1               	movwf	_t_fine^(0+128)
  2550  0724                     l1714:
  2551                           
  2552                           ;BMP280.c: 257:   *temp = (t_fine * 5 + 128) / 256;
  2553  0724  3000               	movlw	0
  2554  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0727  00A3               	movwf	___aldiv@divisor+3
  2557  0728  3000               	movlw	0
  2558  0729  00A2               	movwf	___aldiv@divisor+2
  2559  072A  3001               	movlw	1
  2560  072B  00A1               	movwf	___aldiv@divisor+1
  2561  072C  3000               	movlw	0
  2562  072D  00A0               	movwf	___aldiv@divisor
  2563  072E  3080               	movlw	128
  2564  072F  00B5               	movwf	??_BMP280_readTemperature
  2565  0730  3000               	movlw	0
  2566  0731  00B6               	movwf	??_BMP280_readTemperature+1
  2567  0732  3000               	movlw	0
  2568  0733  00B7               	movwf	??_BMP280_readTemperature+2
  2569  0734  3000               	movlw	0
  2570  0735  00B8               	movwf	??_BMP280_readTemperature+3
  2571  0736  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0737  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0738  0834               	movf	(_t_fine+3)^(0+128),w
  2574  0739  1283               	bcf	3,5	;RP0=0, select bank0
  2575  073A  1303               	bcf	3,6	;RP1=0, select bank0
  2576  073B  00AB               	movwf	___lmul@multiplier+3
  2577  073C  1683               	bsf	3,5	;RP0=1, select bank1
  2578  073D  1303               	bcf	3,6	;RP1=0, select bank1
  2579  073E  0833               	movf	(_t_fine+2)^(0+128),w
  2580  073F  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0740  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0741  00AA               	movwf	___lmul@multiplier+2
  2583  0742  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0743  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0744  0832               	movf	(_t_fine+1)^(0+128),w
  2586  0745  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0746  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0747  00A9               	movwf	___lmul@multiplier+1
  2589  0748  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0749  1303               	bcf	3,6	;RP1=0, select bank1
  2591  074A  0831               	movf	_t_fine^(0+128),w
  2592  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2593  074C  1303               	bcf	3,6	;RP1=0, select bank0
  2594  074D  00A8               	movwf	___lmul@multiplier
  2595  074E  3000               	movlw	0
  2596  074F  00AF               	movwf	___lmul@multiplicand+3
  2597  0750  3000               	movlw	0
  2598  0751  00AE               	movwf	___lmul@multiplicand+2
  2599  0752  3000               	movlw	0
  2600  0753  00AD               	movwf	___lmul@multiplicand+1
  2601  0754  3005               	movlw	5
  2602  0755  00AC               	movwf	___lmul@multiplicand
  2603  0756  120A  158A  231E  120A  118A  	fcall	___lmul
  2604  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2605  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2606  075D  0828               	movf	?___lmul,w
  2607  075E  07B5               	addwf	??_BMP280_readTemperature,f
  2608  075F  0829               	movf	?___lmul+1,w
  2609  0760  1803               	skipnc
  2610  0761  0F29               	incfsz	?___lmul+1,w
  2611  0762  2F64               	goto	u1840
  2612  0763  2F65               	goto	u1841
  2613  0764                     u1840:
  2614  0764  07B6               	addwf	??_BMP280_readTemperature+1,f
  2615  0765                     u1841:
  2616  0765  082A               	movf	?___lmul+2,w
  2617  0766  1803               	skipnc
  2618  0767  0F2A               	incfsz	?___lmul+2,w
  2619  0768  2F6A               	goto	u1842
  2620  0769  2F6B               	goto	u1843
  2621  076A                     u1842:
  2622  076A  07B7               	addwf	??_BMP280_readTemperature+2,f
  2623  076B                     u1843:
  2624  076B  082B               	movf	?___lmul+3,w
  2625  076C  1803               	skipnc
  2626  076D  0A2B               	incf	?___lmul+3,w
  2627  076E  07B8               	addwf	??_BMP280_readTemperature+3,f
  2628  076F  0838               	movf	??_BMP280_readTemperature+3,w
  2629  0770  00A7               	movwf	___aldiv@dividend+3
  2630  0771  0837               	movf	??_BMP280_readTemperature+2,w
  2631  0772  00A6               	movwf	___aldiv@dividend+2
  2632  0773  0836               	movf	??_BMP280_readTemperature+1,w
  2633  0774  00A5               	movwf	___aldiv@dividend+1
  2634  0775  0835               	movf	??_BMP280_readTemperature,w
  2635  0776  00A4               	movwf	___aldiv@dividend
  2636  0777  120A  158A  2439  120A  118A  	fcall	___aldiv
  2637  077C  1283               	bcf	3,5	;RP0=0, select bank0
  2638  077D  1303               	bcf	3,6	;RP1=0, select bank0
  2639  077E  0851               	movf	BMP280_readTemperature@temp,w
  2640  077F  0084               	movwf	4
  2641  0780  0820               	movf	?___aldiv,w
  2642  0781  1383               	bcf	3,7	;select IRP bank0
  2643  0782  0080               	movwf	0
  2644  0783  0A84               	incf	4,f
  2645  0784  0821               	movf	?___aldiv+1,w
  2646  0785  0080               	movwf	0
  2647  0786  0A84               	incf	4,f
  2648  0787  0822               	movf	?___aldiv+2,w
  2649  0788  0080               	movwf	0
  2650  0789  0A84               	incf	4,f
  2651  078A  0823               	movf	?___aldiv+3,w
  2652  078B  0080               	movwf	0
  2653  078C                     l198:
  2654  078C  0008               	return
  2655  078D                     __end_of_BMP280_readTemperature:
  2656                           
  2657                           	psect	text9
  2658  0CD6                     __ptext9:	
  2659 ;; *************** function _BMP280_Update *****************
  2660 ;; Defined at:
  2661 ;;		line 210 in file "BMP280.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  ret             4    4[BANK0 ] struct .
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       0       0       0
  2676 ;;      Locals:         0       4       0       0       0
  2677 ;;      Temps:          0       4       0       0       0
  2678 ;;      Totals:         0       8       0       0       0
  2679 ;;Total ram usage:        8 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    4
  2682 ;; This function calls:
  2683 ;;		_I2C_Master_Read
  2684 ;;		_I2C_Master_Start
  2685 ;;		_I2C_Master_Stop
  2686 ;;		_I2C_Master_Write
  2687 ;; This function is called by:
  2688 ;;		_BMP280_readTemperature
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _BMP280_Update
  2694  0CD6                     _BMP280_Update:
  2695  0CD6                     l1614:	
  2696                           ;incstack = 0
  2697                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  2698                           
  2699                           
  2700                           ;BMP280.c: 216:   } ret;;BMP280.c: 217:   ret.b[3] = 0x00;
  2701  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0CD8  01A7               	clrf	BMP280_Update@ret+3
  2704  0CD9                     l1616:
  2705                           
  2706                           ;BMP280.c: 219:   I2C_Master_Start();
  2707  0CD9  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  2708  0CDE                     l1618:
  2709                           
  2710                           ;BMP280.c: 220:   I2C_Master_Write( 0xEE);
  2711  0CDE  30EE               	movlw	238
  2712  0CDF  00F3               	movwf	I2C_Master_Write@d
  2713  0CE0  3000               	movlw	0
  2714  0CE1  00F4               	movwf	I2C_Master_Write@d+1
  2715  0CE2  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  2716  0CE7                     l1620:
  2717                           
  2718                           ;BMP280.c: 221:   I2C_Master_Write( 0xF7);
  2719  0CE7  30F7               	movlw	247
  2720  0CE8  00F3               	movwf	I2C_Master_Write@d
  2721  0CE9  3000               	movlw	0
  2722  0CEA  00F4               	movwf	I2C_Master_Write@d+1
  2723  0CEB  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  2724  0CF0                     l1622:
  2725                           
  2726                           ;BMP280.c: 222:   I2C_Master_Start();
  2727  0CF0  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  2728  0CF5                     l1624:
  2729                           
  2730                           ;BMP280.c: 223:   I2C_Master_Write( 0xEE | 1);
  2731  0CF5  30EF               	movlw	239
  2732  0CF6  00F3               	movwf	I2C_Master_Write@d
  2733  0CF7  3000               	movlw	0
  2734  0CF8  00F4               	movwf	I2C_Master_Write@d+1
  2735  0CF9  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  2736  0CFE                     l1626:
  2737                           
  2738                           ;BMP280.c: 224:   ret.b[2] = I2C_Master_Read( 1);
  2739  0CFE  3001               	movlw	1
  2740  0CFF  00F3               	movwf	I2C_Master_Read@a
  2741  0D00  3000               	movlw	0
  2742  0D01  00F4               	movwf	I2C_Master_Read@a+1
  2743  0D02  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2744  0D07  0873               	movf	?_I2C_Master_Read,w
  2745  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0D0A  00A0               	movwf	??_BMP280_Update
  2748  0D0B  0820               	movf	??_BMP280_Update,w
  2749  0D0C  00A6               	movwf	BMP280_Update@ret+2
  2750  0D0D                     l1628:
  2751                           
  2752                           ;BMP280.c: 225:   ret.b[1] = I2C_Master_Read( 1);
  2753  0D0D  3001               	movlw	1
  2754  0D0E  00F3               	movwf	I2C_Master_Read@a
  2755  0D0F  3000               	movlw	0
  2756  0D10  00F4               	movwf	I2C_Master_Read@a+1
  2757  0D11  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2758  0D16  0873               	movf	?_I2C_Master_Read,w
  2759  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0D19  00A0               	movwf	??_BMP280_Update
  2762  0D1A  0820               	movf	??_BMP280_Update,w
  2763  0D1B  00A5               	movwf	BMP280_Update@ret+1
  2764  0D1C                     l1630:
  2765                           
  2766                           ;BMP280.c: 226:   ret.b[0] = I2C_Master_Read( 1);
  2767  0D1C  3001               	movlw	1
  2768  0D1D  00F3               	movwf	I2C_Master_Read@a
  2769  0D1E  3000               	movlw	0
  2770  0D1F  00F4               	movwf	I2C_Master_Read@a+1
  2771  0D20  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2772  0D25  0873               	movf	?_I2C_Master_Read,w
  2773  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0D28  00A0               	movwf	??_BMP280_Update
  2776  0D29  0820               	movf	??_BMP280_Update,w
  2777  0D2A  00A4               	movwf	BMP280_Update@ret
  2778  0D2B                     l1632:
  2779                           
  2780                           ;BMP280.c: 228:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  2781  0D2B  0824               	movf	BMP280_Update@ret,w
  2782  0D2C  00A0               	movwf	??_BMP280_Update
  2783  0D2D  0825               	movf	BMP280_Update@ret+1,w
  2784  0D2E  00A1               	movwf	??_BMP280_Update+1
  2785  0D2F  0826               	movf	BMP280_Update@ret+2,w
  2786  0D30  00A2               	movwf	??_BMP280_Update+2
  2787  0D31  0827               	movf	BMP280_Update@ret+3,w
  2788  0D32  00A3               	movwf	??_BMP280_Update+3
  2789  0D33  3004               	movlw	4
  2790  0D34                     u1665:
  2791  0D34  1003               	clrc
  2792  0D35  0CA3               	rrf	??_BMP280_Update+3,f
  2793  0D36  0CA2               	rrf	??_BMP280_Update+2,f
  2794  0D37  0CA1               	rrf	??_BMP280_Update+1,f
  2795  0D38  0CA0               	rrf	??_BMP280_Update,f
  2796  0D39                     u1660:
  2797  0D39  3EFF               	addlw	-1
  2798  0D3A  1D03               	skipz
  2799  0D3B  2D34               	goto	u1665
  2800  0D3C  30FF               	movlw	255
  2801  0D3D  0520               	andwf	??_BMP280_Update,w
  2802  0D3E  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0D3F  1303               	bcf	3,6	;RP1=0, select bank1
  2804  0D40  00B5               	movwf	_adc_P^(0+128)
  2805  0D41  30FF               	movlw	255
  2806  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0D44  0521               	andwf	??_BMP280_Update+1,w
  2809  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  2811  0D47  00B6               	movwf	(_adc_P+1)^(0+128)
  2812  0D48  300F               	movlw	15
  2813  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0D4B  0522               	andwf	??_BMP280_Update+2,w
  2816  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  2818  0D4E  00B7               	movwf	(_adc_P+2)^(0+128)
  2819  0D4F  3000               	movlw	0
  2820  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0D52  0523               	andwf	??_BMP280_Update+3,w
  2823  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0D54  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0D55  00B8               	movwf	(_adc_P+3)^(0+128)
  2826  0D56                     l1634:
  2827                           
  2828                           ;BMP280.c: 230:   ret.b[2] = I2C_Master_Read(1);
  2829  0D56  3001               	movlw	1
  2830  0D57  00F3               	movwf	I2C_Master_Read@a
  2831  0D58  3000               	movlw	0
  2832  0D59  00F4               	movwf	I2C_Master_Read@a+1
  2833  0D5A  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2834  0D5F  0873               	movf	?_I2C_Master_Read,w
  2835  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0D62  00A0               	movwf	??_BMP280_Update
  2838  0D63  0820               	movf	??_BMP280_Update,w
  2839  0D64  00A6               	movwf	BMP280_Update@ret+2
  2840  0D65                     l1636:
  2841                           
  2842                           ;BMP280.c: 231:   ret.b[1] = I2C_Master_Read(1);
  2843  0D65  3001               	movlw	1
  2844  0D66  00F3               	movwf	I2C_Master_Read@a
  2845  0D67  3000               	movlw	0
  2846  0D68  00F4               	movwf	I2C_Master_Read@a+1
  2847  0D69  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2848  0D6E  0873               	movf	?_I2C_Master_Read,w
  2849  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0D71  00A0               	movwf	??_BMP280_Update
  2852  0D72  0820               	movf	??_BMP280_Update,w
  2853  0D73  00A5               	movwf	BMP280_Update@ret+1
  2854  0D74                     l1638:
  2855                           
  2856                           ;BMP280.c: 232:   ret.b[0] = I2C_Master_Read(0);
  2857  0D74  3000               	movlw	0
  2858  0D75  00F3               	movwf	I2C_Master_Read@a
  2859  0D76  00F4               	movwf	I2C_Master_Read@a+1
  2860  0D77  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  2861  0D7C  0873               	movf	?_I2C_Master_Read,w
  2862  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0D7F  00A0               	movwf	??_BMP280_Update
  2865  0D80  0820               	movf	??_BMP280_Update,w
  2866  0D81  00A4               	movwf	BMP280_Update@ret
  2867  0D82                     l1640:
  2868                           
  2869                           ;BMP280.c: 233:   I2C_Master_Stop();
  2870  0D82  120A  158A  2128  120A  158A  	fcall	_I2C_Master_Stop
  2871  0D87                     l1642:
  2872                           
  2873                           ;BMP280.c: 235:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  2874  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0D89  0824               	movf	BMP280_Update@ret,w
  2877  0D8A  00A0               	movwf	??_BMP280_Update
  2878  0D8B  0825               	movf	BMP280_Update@ret+1,w
  2879  0D8C  00A1               	movwf	??_BMP280_Update+1
  2880  0D8D  0826               	movf	BMP280_Update@ret+2,w
  2881  0D8E  00A2               	movwf	??_BMP280_Update+2
  2882  0D8F  0827               	movf	BMP280_Update@ret+3,w
  2883  0D90  00A3               	movwf	??_BMP280_Update+3
  2884  0D91  3004               	movlw	4
  2885  0D92                     u1675:
  2886  0D92  1003               	clrc
  2887  0D93  0CA3               	rrf	??_BMP280_Update+3,f
  2888  0D94  0CA2               	rrf	??_BMP280_Update+2,f
  2889  0D95  0CA1               	rrf	??_BMP280_Update+1,f
  2890  0D96  0CA0               	rrf	??_BMP280_Update,f
  2891  0D97                     u1670:
  2892  0D97  3EFF               	addlw	-1
  2893  0D98  1D03               	skipz
  2894  0D99  2D92               	goto	u1675
  2895  0D9A  30FF               	movlw	255
  2896  0D9B  0520               	andwf	??_BMP280_Update,w
  2897  0D9C  00E2               	movwf	_adc_T
  2898  0D9D  30FF               	movlw	255
  2899  0D9E  0521               	andwf	??_BMP280_Update+1,w
  2900  0D9F  00E3               	movwf	_adc_T+1
  2901  0DA0  300F               	movlw	15
  2902  0DA1  0522               	andwf	??_BMP280_Update+2,w
  2903  0DA2  00E4               	movwf	_adc_T+2
  2904  0DA3  3000               	movlw	0
  2905  0DA4  0523               	andwf	??_BMP280_Update+3,w
  2906  0DA5  00E5               	movwf	_adc_T+3
  2907  0DA6                     l195:
  2908  0DA6  0008               	return
  2909  0DA7                     __end_of_BMP280_Update:
  2910                           
  2911                           	psect	text10
  2912  0025                     __ptext10:	
  2913 ;; *************** function _BMP280_readPressure *****************
  2914 ;; Defined at:
  2915 ;;		line 265 in file "BMP280.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  pres            1    wreg     PTR unsigned long 
  2918 ;;		 -> pressure(4), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  pres            1   49[BANK0 ] PTR unsigned long 
  2921 ;;		 -> pressure(4), 
  2922 ;;  var1            4   62[BANK0 ] long 
  2923 ;;  p               4   58[BANK0 ] unsigned long 
  2924 ;;  var2            4   54[BANK0 ] long 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2   10[None  ] int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0      29       0       0       0
  2936 ;;      Temps:          0      16       0       0       0
  2937 ;;      Totals:         0      45       0       0       0
  2938 ;;Total ram usage:       45 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		___aldiv
  2943 ;;		___lldiv
  2944 ;;		___lmul
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _BMP280_readPressure
  2952  0025                     _BMP280_readPressure:
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2956                           ;BMP280_readPressure@pres stored from wreg
  2957  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0027  00D1               	movwf	BMP280_readPressure@pres
  2960  0028                     l1718:
  2961                           
  2962                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  2963  0028  3000               	movlw	0
  2964  0029  00B5               	movwf	??_BMP280_readPressure
  2965  002A  3006               	movlw	6
  2966  002B  00B6               	movwf	??_BMP280_readPressure+1
  2967  002C  30FF               	movlw	255
  2968  002D  00B7               	movwf	??_BMP280_readPressure+2
  2969  002E  30FF               	movlw	255
  2970  002F  00B8               	movwf	??_BMP280_readPressure+3
  2971  0030  3000               	movlw	0
  2972  0031  00A3               	movwf	___aldiv@divisor+3
  2973  0032  3000               	movlw	0
  2974  0033  00A2               	movwf	___aldiv@divisor+2
  2975  0034  3000               	movlw	0
  2976  0035  00A1               	movwf	___aldiv@divisor+1
  2977  0036  3002               	movlw	2
  2978  0037  00A0               	movwf	___aldiv@divisor
  2979  0038  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0039  1303               	bcf	3,6	;RP1=0, select bank1
  2981  003A  0834               	movf	(_t_fine+3)^(0+128),w
  2982  003B  1283               	bcf	3,5	;RP0=0, select bank0
  2983  003C  1303               	bcf	3,6	;RP1=0, select bank0
  2984  003D  00A7               	movwf	___aldiv@dividend+3
  2985  003E  1683               	bsf	3,5	;RP0=1, select bank1
  2986  003F  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0040  0833               	movf	(_t_fine+2)^(0+128),w
  2988  0041  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0042  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0043  00A6               	movwf	___aldiv@dividend+2
  2991  0044  1683               	bsf	3,5	;RP0=1, select bank1
  2992  0045  1303               	bcf	3,6	;RP1=0, select bank1
  2993  0046  0832               	movf	(_t_fine+1)^(0+128),w
  2994  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0049  00A5               	movwf	___aldiv@dividend+1
  2997  004A  1683               	bsf	3,5	;RP0=1, select bank1
  2998  004B  1303               	bcf	3,6	;RP1=0, select bank1
  2999  004C  0831               	movf	_t_fine^(0+128),w
  3000  004D  1283               	bcf	3,5	;RP0=0, select bank0
  3001  004E  1303               	bcf	3,6	;RP1=0, select bank0
  3002  004F  00A4               	movwf	___aldiv@dividend
  3003  0050  120A  158A  2439  120A  118A  	fcall	___aldiv
  3004  0055  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0056  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0057  0820               	movf	?___aldiv,w
  3007  0058  07B5               	addwf	??_BMP280_readPressure,f
  3008  0059  0821               	movf	?___aldiv+1,w
  3009  005A  1803               	skipnc
  3010  005B  0F21               	incfsz	?___aldiv+1,w
  3011  005C  285E               	goto	u1850
  3012  005D  285F               	goto	u1851
  3013  005E                     u1850:
  3014  005E  07B6               	addwf	??_BMP280_readPressure+1,f
  3015  005F                     u1851:
  3016  005F  0822               	movf	?___aldiv+2,w
  3017  0060  1803               	skipnc
  3018  0061  0F22               	incfsz	?___aldiv+2,w
  3019  0062  2864               	goto	u1852
  3020  0063  2865               	goto	u1853
  3021  0064                     u1852:
  3022  0064  07B7               	addwf	??_BMP280_readPressure+2,f
  3023  0065                     u1853:
  3024  0065  0823               	movf	?___aldiv+3,w
  3025  0066  1803               	skipnc
  3026  0067  0A23               	incf	?___aldiv+3,w
  3027  0068  07B8               	addwf	??_BMP280_readPressure+3,f
  3028  0069  0838               	movf	??_BMP280_readPressure+3,w
  3029  006A  00E1               	movwf	BMP280_readPressure@var1+3
  3030  006B  0837               	movf	??_BMP280_readPressure+2,w
  3031  006C  00E0               	movwf	BMP280_readPressure@var1+2
  3032  006D  0836               	movf	??_BMP280_readPressure+1,w
  3033  006E  00DF               	movwf	BMP280_readPressure@var1+1
  3034  006F  0835               	movf	??_BMP280_readPressure,w
  3035  0070  00DE               	movwf	BMP280_readPressure@var1
  3036                           
  3037                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3038  0071  3000               	movlw	0
  3039  0072  00A3               	movwf	___aldiv@divisor+3
  3040  0073  3000               	movlw	0
  3041  0074  00A2               	movwf	___aldiv@divisor+2
  3042  0075  3000               	movlw	0
  3043  0076  00A1               	movwf	___aldiv@divisor+1
  3044  0077  3004               	movlw	4
  3045  0078  00A0               	movwf	___aldiv@divisor
  3046  0079  0861               	movf	BMP280_readPressure@var1+3,w
  3047  007A  00A7               	movwf	___aldiv@dividend+3
  3048  007B  0860               	movf	BMP280_readPressure@var1+2,w
  3049  007C  00A6               	movwf	___aldiv@dividend+2
  3050  007D  085F               	movf	BMP280_readPressure@var1+1,w
  3051  007E  00A5               	movwf	___aldiv@dividend+1
  3052  007F  085E               	movf	BMP280_readPressure@var1,w
  3053  0080  00A4               	movwf	___aldiv@dividend
  3054  0081  120A  158A  2439  120A  118A  	fcall	___aldiv
  3055  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0088  0823               	movf	?___aldiv+3,w
  3058  0089  00AB               	movwf	___lmul@multiplier+3
  3059  008A  0822               	movf	?___aldiv+2,w
  3060  008B  00AA               	movwf	___lmul@multiplier+2
  3061  008C  0821               	movf	?___aldiv+1,w
  3062  008D  00A9               	movwf	___lmul@multiplier+1
  3063  008E  0820               	movf	?___aldiv,w
  3064  008F  00A8               	movwf	___lmul@multiplier
  3065  0090  3000               	movlw	0
  3066  0091  00A3               	movwf	___aldiv@divisor+3
  3067  0092  3000               	movlw	0
  3068  0093  00A2               	movwf	___aldiv@divisor+2
  3069  0094  3000               	movlw	0
  3070  0095  00A1               	movwf	___aldiv@divisor+1
  3071  0096  3004               	movlw	4
  3072  0097  00A0               	movwf	___aldiv@divisor
  3073  0098  0861               	movf	BMP280_readPressure@var1+3,w
  3074  0099  00A7               	movwf	___aldiv@dividend+3
  3075  009A  0860               	movf	BMP280_readPressure@var1+2,w
  3076  009B  00A6               	movwf	___aldiv@dividend+2
  3077  009C  085F               	movf	BMP280_readPressure@var1+1,w
  3078  009D  00A5               	movwf	___aldiv@dividend+1
  3079  009E  085E               	movf	BMP280_readPressure@var1,w
  3080  009F  00A4               	movwf	___aldiv@dividend
  3081  00A0  120A  158A  2439  120A  118A  	fcall	___aldiv
  3082  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  3083  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  3084  00A7  0823               	movf	?___aldiv+3,w
  3085  00A8  00AF               	movwf	___lmul@multiplicand+3
  3086  00A9  0822               	movf	?___aldiv+2,w
  3087  00AA  00AE               	movwf	___lmul@multiplicand+2
  3088  00AB  0821               	movf	?___aldiv+1,w
  3089  00AC  00AD               	movwf	___lmul@multiplicand+1
  3090  00AD  0820               	movf	?___aldiv,w
  3091  00AE  00AC               	movwf	___lmul@multiplicand
  3092  00AF  120A  158A  231E  120A  118A  	fcall	___lmul
  3093  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  3094  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  3095  00B6  082B               	movf	?___lmul+3,w
  3096  00B7  00D5               	movwf	_BMP280_readPressure$1215+3
  3097  00B8  082A               	movf	?___lmul+2,w
  3098  00B9  00D4               	movwf	_BMP280_readPressure$1215+2
  3099  00BA  0829               	movf	?___lmul+1,w
  3100  00BB  00D3               	movwf	_BMP280_readPressure$1215+1
  3101  00BC  0828               	movf	?___lmul,w
  3102  00BD  00D2               	movwf	_BMP280_readPressure$1215
  3103                           
  3104                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  3105  00BE  3000               	movlw	0
  3106  00BF  00A3               	movwf	___aldiv@divisor+3
  3107  00C0  3000               	movlw	0
  3108  00C1  00A2               	movwf	___aldiv@divisor+2
  3109  00C2  3008               	movlw	8
  3110  00C3  00A1               	movwf	___aldiv@divisor+1
  3111  00C4  3000               	movlw	0
  3112  00C5  00A0               	movwf	___aldiv@divisor
  3113  00C6  0855               	movf	_BMP280_readPressure$1215+3,w
  3114  00C7  00A7               	movwf	___aldiv@dividend+3
  3115  00C8  0854               	movf	_BMP280_readPressure$1215+2,w
  3116  00C9  00A6               	movwf	___aldiv@dividend+2
  3117  00CA  0853               	movf	_BMP280_readPressure$1215+1,w
  3118  00CB  00A5               	movwf	___aldiv@dividend+1
  3119  00CC  0852               	movf	_BMP280_readPressure$1215,w
  3120  00CD  00A4               	movwf	___aldiv@dividend
  3121  00CE  120A  158A  2439  120A  118A  	fcall	___aldiv
  3122  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  3123  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  3124  00D5  0823               	movf	?___aldiv+3,w
  3125  00D6  00AB               	movwf	___lmul@multiplier+3
  3126  00D7  0822               	movf	?___aldiv+2,w
  3127  00D8  00AA               	movwf	___lmul@multiplier+2
  3128  00D9  0821               	movf	?___aldiv+1,w
  3129  00DA  00A9               	movwf	___lmul@multiplier+1
  3130  00DB  0820               	movf	?___aldiv,w
  3131  00DC  00A8               	movwf	___lmul@multiplier
  3132  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  3133  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  3134  00DF  0849               	movf	(_BMP280_calib^(0+128)+16),w
  3135  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  3136  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  3137  00E2  00AC               	movwf	___lmul@multiplicand
  3138  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  3139  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  3140  00E5  084A               	movf	((_BMP280_calib+1)^(0+128)+16),w
  3141  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  3142  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  3143  00E8  00AD               	movwf	___lmul@multiplicand+1
  3144  00E9  3000               	movlw	0
  3145  00EA  1BAD               	btfsc	___lmul@multiplicand+1,7
  3146  00EB  30FF               	movlw	255
  3147  00EC  00AE               	movwf	___lmul@multiplicand+2
  3148  00ED  00AF               	movwf	___lmul@multiplicand+3
  3149  00EE  120A  158A  231E  120A  118A  	fcall	___lmul
  3150  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3151  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  3152  00F5  082B               	movf	?___lmul+3,w
  3153  00F6  00D9               	movwf	BMP280_readPressure@var2+3
  3154  00F7  082A               	movf	?___lmul+2,w
  3155  00F8  00D8               	movwf	BMP280_readPressure@var2+2
  3156  00F9  0829               	movf	?___lmul+1,w
  3157  00FA  00D7               	movwf	BMP280_readPressure@var2+1
  3158  00FB  0828               	movf	?___lmul,w
  3159  00FC  00D6               	movwf	BMP280_readPressure@var2
  3160                           
  3161                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  3162  00FD  0856               	movf	BMP280_readPressure@var2,w
  3163  00FE  00B5               	movwf	??_BMP280_readPressure
  3164  00FF  0857               	movf	BMP280_readPressure@var2+1,w
  3165  0100  00B6               	movwf	??_BMP280_readPressure+1
  3166  0101  0858               	movf	BMP280_readPressure@var2+2,w
  3167  0102  00B7               	movwf	??_BMP280_readPressure+2
  3168  0103  0859               	movf	BMP280_readPressure@var2+3,w
  3169  0104  00B8               	movwf	??_BMP280_readPressure+3
  3170  0105  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0106  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0107  0847               	movf	(_BMP280_calib^(0+128)+14),w
  3173  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0109  1303               	bcf	3,6	;RP1=0, select bank0
  3175  010A  00A8               	movwf	___lmul@multiplier
  3176  010B  1683               	bsf	3,5	;RP0=1, select bank1
  3177  010C  1303               	bcf	3,6	;RP1=0, select bank1
  3178  010D  0848               	movf	((_BMP280_calib+1)^(0+128)+14),w
  3179  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3180  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0110  00A9               	movwf	___lmul@multiplier+1
  3182  0111  3000               	movlw	0
  3183  0112  1BA9               	btfsc	___lmul@multiplier+1,7
  3184  0113  30FF               	movlw	255
  3185  0114  00AA               	movwf	___lmul@multiplier+2
  3186  0115  00AB               	movwf	___lmul@multiplier+3
  3187  0116  0861               	movf	BMP280_readPressure@var1+3,w
  3188  0117  00AF               	movwf	___lmul@multiplicand+3
  3189  0118  0860               	movf	BMP280_readPressure@var1+2,w
  3190  0119  00AE               	movwf	___lmul@multiplicand+2
  3191  011A  085F               	movf	BMP280_readPressure@var1+1,w
  3192  011B  00AD               	movwf	___lmul@multiplicand+1
  3193  011C  085E               	movf	BMP280_readPressure@var1,w
  3194  011D  00AC               	movwf	___lmul@multiplicand
  3195  011E  120A  158A  231E  120A  118A  	fcall	___lmul
  3196  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0124  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0125  0828               	movf	?___lmul,w
  3199  0126  00B9               	movwf	??_BMP280_readPressure+4
  3200  0127  0829               	movf	?___lmul+1,w
  3201  0128  00BA               	movwf	??_BMP280_readPressure+5
  3202  0129  082A               	movf	?___lmul+2,w
  3203  012A  00BB               	movwf	??_BMP280_readPressure+6
  3204  012B  082B               	movf	?___lmul+3,w
  3205  012C  00BC               	movwf	??_BMP280_readPressure+7
  3206  012D  3001               	movlw	1
  3207  012E                     u1865:
  3208  012E  1003               	clrc
  3209  012F  0DB9               	rlf	??_BMP280_readPressure+4,f
  3210  0130  0DBA               	rlf	??_BMP280_readPressure+5,f
  3211  0131  0DBB               	rlf	??_BMP280_readPressure+6,f
  3212  0132  0DBC               	rlf	??_BMP280_readPressure+7,f
  3213  0133                     u1860:
  3214  0133  3EFF               	addlw	-1
  3215  0134  1D03               	skipz
  3216  0135  292E               	goto	u1865
  3217  0136  0839               	movf	??_BMP280_readPressure+4,w
  3218  0137  07B5               	addwf	??_BMP280_readPressure,f
  3219  0138  083A               	movf	??_BMP280_readPressure+5,w
  3220  0139  1803               	skipnc
  3221  013A  0F3A               	incfsz	??_BMP280_readPressure+5,w
  3222  013B  293D               	goto	u1870
  3223  013C  293E               	goto	u1871
  3224  013D                     u1870:
  3225  013D  07B6               	addwf	??_BMP280_readPressure+1,f
  3226  013E                     u1871:
  3227  013E  083B               	movf	??_BMP280_readPressure+6,w
  3228  013F  1803               	skipnc
  3229  0140  0F3B               	incfsz	??_BMP280_readPressure+6,w
  3230  0141  2943               	goto	u1872
  3231  0142  2944               	goto	u1873
  3232  0143                     u1872:
  3233  0143  07B7               	addwf	??_BMP280_readPressure+2,f
  3234  0144                     u1873:
  3235  0144  083C               	movf	??_BMP280_readPressure+7,w
  3236  0145  1803               	skipnc
  3237  0146  0A3C               	incf	??_BMP280_readPressure+7,w
  3238  0147  07B8               	addwf	??_BMP280_readPressure+3,f
  3239  0148  0838               	movf	??_BMP280_readPressure+3,w
  3240  0149  00D9               	movwf	BMP280_readPressure@var2+3
  3241  014A  0837               	movf	??_BMP280_readPressure+2,w
  3242  014B  00D8               	movwf	BMP280_readPressure@var2+2
  3243  014C  0836               	movf	??_BMP280_readPressure+1,w
  3244  014D  00D7               	movwf	BMP280_readPressure@var2+1
  3245  014E  0835               	movf	??_BMP280_readPressure,w
  3246  014F  00D6               	movwf	BMP280_readPressure@var2
  3247                           
  3248                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  3249  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0151  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0152  0845               	movf	(_BMP280_calib^(0+128)+12),w
  3252  0153  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0154  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0155  00B5               	movwf	??_BMP280_readPressure
  3255  0156  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0157  1303               	bcf	3,6	;RP1=0, select bank1
  3257  0158  0846               	movf	((_BMP280_calib+1)^(0+128)+12),w
  3258  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3259  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3260  015B  00B6               	movwf	??_BMP280_readPressure+1
  3261  015C  01B7               	clrf	??_BMP280_readPressure+2
  3262  015D  01B8               	clrf	??_BMP280_readPressure+3
  3263  015E  3010               	movlw	16
  3264  015F                     u1885:
  3265  015F  1003               	clrc
  3266  0160  0DB5               	rlf	??_BMP280_readPressure,f
  3267  0161  0DB6               	rlf	??_BMP280_readPressure+1,f
  3268  0162  0DB7               	rlf	??_BMP280_readPressure+2,f
  3269  0163  0DB8               	rlf	??_BMP280_readPressure+3,f
  3270  0164                     u1880:
  3271  0164  3EFF               	addlw	-1
  3272  0165  1D03               	skipz
  3273  0166  295F               	goto	u1885
  3274  0167  3000               	movlw	0
  3275  0168  00A3               	movwf	___aldiv@divisor+3
  3276  0169  3000               	movlw	0
  3277  016A  00A2               	movwf	___aldiv@divisor+2
  3278  016B  3000               	movlw	0
  3279  016C  00A1               	movwf	___aldiv@divisor+1
  3280  016D  3004               	movlw	4
  3281  016E  00A0               	movwf	___aldiv@divisor
  3282  016F  0859               	movf	BMP280_readPressure@var2+3,w
  3283  0170  00A7               	movwf	___aldiv@dividend+3
  3284  0171  0858               	movf	BMP280_readPressure@var2+2,w
  3285  0172  00A6               	movwf	___aldiv@dividend+2
  3286  0173  0857               	movf	BMP280_readPressure@var2+1,w
  3287  0174  00A5               	movwf	___aldiv@dividend+1
  3288  0175  0856               	movf	BMP280_readPressure@var2,w
  3289  0176  00A4               	movwf	___aldiv@dividend
  3290  0177  120A  158A  2439  120A  118A  	fcall	___aldiv
  3291  017C  1283               	bcf	3,5	;RP0=0, select bank0
  3292  017D  1303               	bcf	3,6	;RP1=0, select bank0
  3293  017E  0820               	movf	?___aldiv,w
  3294  017F  07B5               	addwf	??_BMP280_readPressure,f
  3295  0180  0821               	movf	?___aldiv+1,w
  3296  0181  1803               	skipnc
  3297  0182  0F21               	incfsz	?___aldiv+1,w
  3298  0183  2985               	goto	u1890
  3299  0184  2986               	goto	u1891
  3300  0185                     u1890:
  3301  0185  07B6               	addwf	??_BMP280_readPressure+1,f
  3302  0186                     u1891:
  3303  0186  0822               	movf	?___aldiv+2,w
  3304  0187  1803               	skipnc
  3305  0188  0F22               	incfsz	?___aldiv+2,w
  3306  0189  298B               	goto	u1892
  3307  018A  298C               	goto	u1893
  3308  018B                     u1892:
  3309  018B  07B7               	addwf	??_BMP280_readPressure+2,f
  3310  018C                     u1893:
  3311  018C  0823               	movf	?___aldiv+3,w
  3312  018D  1803               	skipnc
  3313  018E  0A23               	incf	?___aldiv+3,w
  3314  018F  07B8               	addwf	??_BMP280_readPressure+3,f
  3315  0190  0838               	movf	??_BMP280_readPressure+3,w
  3316  0191  00D9               	movwf	BMP280_readPressure@var2+3
  3317  0192  0837               	movf	??_BMP280_readPressure+2,w
  3318  0193  00D8               	movwf	BMP280_readPressure@var2+2
  3319  0194  0836               	movf	??_BMP280_readPressure+1,w
  3320  0195  00D7               	movwf	BMP280_readPressure@var2+1
  3321  0196  0835               	movf	??_BMP280_readPressure,w
  3322  0197  00D6               	movwf	BMP280_readPressure@var2
  3323                           
  3324                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3325  0198  3000               	movlw	0
  3326  0199  00A3               	movwf	___aldiv@divisor+3
  3327  019A  3000               	movlw	0
  3328  019B  00A2               	movwf	___aldiv@divisor+2
  3329  019C  3000               	movlw	0
  3330  019D  00A1               	movwf	___aldiv@divisor+1
  3331  019E  3004               	movlw	4
  3332  019F  00A0               	movwf	___aldiv@divisor
  3333  01A0  0861               	movf	BMP280_readPressure@var1+3,w
  3334  01A1  00A7               	movwf	___aldiv@dividend+3
  3335  01A2  0860               	movf	BMP280_readPressure@var1+2,w
  3336  01A3  00A6               	movwf	___aldiv@dividend+2
  3337  01A4  085F               	movf	BMP280_readPressure@var1+1,w
  3338  01A5  00A5               	movwf	___aldiv@dividend+1
  3339  01A6  085E               	movf	BMP280_readPressure@var1,w
  3340  01A7  00A4               	movwf	___aldiv@dividend
  3341  01A8  120A  158A  2439  120A  118A  	fcall	___aldiv
  3342  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  3343  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  3344  01AF  0823               	movf	?___aldiv+3,w
  3345  01B0  00AB               	movwf	___lmul@multiplier+3
  3346  01B1  0822               	movf	?___aldiv+2,w
  3347  01B2  00AA               	movwf	___lmul@multiplier+2
  3348  01B3  0821               	movf	?___aldiv+1,w
  3349  01B4  00A9               	movwf	___lmul@multiplier+1
  3350  01B5  0820               	movf	?___aldiv,w
  3351  01B6  00A8               	movwf	___lmul@multiplier
  3352  01B7  3000               	movlw	0
  3353  01B8  00A3               	movwf	___aldiv@divisor+3
  3354  01B9  3000               	movlw	0
  3355  01BA  00A2               	movwf	___aldiv@divisor+2
  3356  01BB  3000               	movlw	0
  3357  01BC  00A1               	movwf	___aldiv@divisor+1
  3358  01BD  3004               	movlw	4
  3359  01BE  00A0               	movwf	___aldiv@divisor
  3360  01BF  0861               	movf	BMP280_readPressure@var1+3,w
  3361  01C0  00A7               	movwf	___aldiv@dividend+3
  3362  01C1  0860               	movf	BMP280_readPressure@var1+2,w
  3363  01C2  00A6               	movwf	___aldiv@dividend+2
  3364  01C3  085F               	movf	BMP280_readPressure@var1+1,w
  3365  01C4  00A5               	movwf	___aldiv@dividend+1
  3366  01C5  085E               	movf	BMP280_readPressure@var1,w
  3367  01C6  00A4               	movwf	___aldiv@dividend
  3368  01C7  120A  158A  2439  120A  118A  	fcall	___aldiv
  3369  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3370  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3371  01CE  0823               	movf	?___aldiv+3,w
  3372  01CF  00AF               	movwf	___lmul@multiplicand+3
  3373  01D0  0822               	movf	?___aldiv+2,w
  3374  01D1  00AE               	movwf	___lmul@multiplicand+2
  3375  01D2  0821               	movf	?___aldiv+1,w
  3376  01D3  00AD               	movwf	___lmul@multiplicand+1
  3377  01D4  0820               	movf	?___aldiv,w
  3378  01D5  00AC               	movwf	___lmul@multiplicand
  3379  01D6  120A  158A  231E  120A  118A  	fcall	___lmul
  3380  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3381  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  3382  01DD  082B               	movf	?___lmul+3,w
  3383  01DE  00D5               	movwf	_BMP280_readPressure$1215+3
  3384  01DF  082A               	movf	?___lmul+2,w
  3385  01E0  00D4               	movwf	_BMP280_readPressure$1215+2
  3386  01E1  0829               	movf	?___lmul+1,w
  3387  01E2  00D3               	movwf	_BMP280_readPressure$1215+1
  3388  01E3  0828               	movf	?___lmul,w
  3389  01E4  00D2               	movwf	_BMP280_readPressure$1215
  3390                           
  3391                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3392  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  3393  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  3394  01E7  0843               	movf	(_BMP280_calib^(0+128)+10),w
  3395  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3396  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3397  01EA  00A8               	movwf	___lmul@multiplier
  3398  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3399  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  3400  01ED  0844               	movf	((_BMP280_calib+1)^(0+128)+10),w
  3401  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3402  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3403  01F0  00A9               	movwf	___lmul@multiplier+1
  3404  01F1  3000               	movlw	0
  3405  01F2  1BA9               	btfsc	___lmul@multiplier+1,7
  3406  01F3  30FF               	movlw	255
  3407  01F4  00AA               	movwf	___lmul@multiplier+2
  3408  01F5  00AB               	movwf	___lmul@multiplier+3
  3409  01F6  3000               	movlw	0
  3410  01F7  00A3               	movwf	___aldiv@divisor+3
  3411  01F8  3000               	movlw	0
  3412  01F9  00A2               	movwf	___aldiv@divisor+2
  3413  01FA  3020               	movlw	32
  3414  01FB  00A1               	movwf	___aldiv@divisor+1
  3415  01FC  3000               	movlw	0
  3416  01FD  00A0               	movwf	___aldiv@divisor
  3417  01FE  0855               	movf	_BMP280_readPressure$1215+3,w
  3418  01FF  00A7               	movwf	___aldiv@dividend+3
  3419  0200  0854               	movf	_BMP280_readPressure$1215+2,w
  3420  0201  00A6               	movwf	___aldiv@dividend+2
  3421  0202  0853               	movf	_BMP280_readPressure$1215+1,w
  3422  0203  00A5               	movwf	___aldiv@dividend+1
  3423  0204  0852               	movf	_BMP280_readPressure$1215,w
  3424  0205  00A4               	movwf	___aldiv@dividend
  3425  0206  120A  158A  2439  120A  118A  	fcall	___aldiv
  3426  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3427  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3428  020D  0823               	movf	?___aldiv+3,w
  3429  020E  00AF               	movwf	___lmul@multiplicand+3
  3430  020F  0822               	movf	?___aldiv+2,w
  3431  0210  00AE               	movwf	___lmul@multiplicand+2
  3432  0211  0821               	movf	?___aldiv+1,w
  3433  0212  00AD               	movwf	___lmul@multiplicand+1
  3434  0213  0820               	movf	?___aldiv,w
  3435  0214  00AC               	movwf	___lmul@multiplicand
  3436  0215  120A  158A  231E  120A  118A  	fcall	___lmul
  3437  021A  1283               	bcf	3,5	;RP0=0, select bank0
  3438  021B  1303               	bcf	3,6	;RP1=0, select bank0
  3439  021C  082B               	movf	?___lmul+3,w
  3440  021D  00C8               	movwf	_BMP280_readPressure$1216+3
  3441  021E  082A               	movf	?___lmul+2,w
  3442  021F  00C7               	movwf	_BMP280_readPressure$1216+2
  3443  0220  0829               	movf	?___lmul+1,w
  3444  0221  00C6               	movwf	_BMP280_readPressure$1216+1
  3445  0222  0828               	movf	?___lmul,w
  3446  0223  00C5               	movwf	_BMP280_readPressure$1216
  3447                           
  3448                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3449  0224  3000               	movlw	0
  3450  0225  00A3               	movwf	___aldiv@divisor+3
  3451  0226  3000               	movlw	0
  3452  0227  00A2               	movwf	___aldiv@divisor+2
  3453  0228  3000               	movlw	0
  3454  0229  00A1               	movwf	___aldiv@divisor+1
  3455  022A  3002               	movlw	2
  3456  022B  00A0               	movwf	___aldiv@divisor
  3457  022C  1683               	bsf	3,5	;RP0=1, select bank1
  3458  022D  1303               	bcf	3,6	;RP1=0, select bank1
  3459  022E  0841               	movf	(_BMP280_calib^(0+128)+8),w
  3460  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0231  00A8               	movwf	___lmul@multiplier
  3463  0232  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0233  1303               	bcf	3,6	;RP1=0, select bank1
  3465  0234  0842               	movf	((_BMP280_calib+1)^(0+128)+8),w
  3466  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0237  00A9               	movwf	___lmul@multiplier+1
  3469  0238  3000               	movlw	0
  3470  0239  1BA9               	btfsc	___lmul@multiplier+1,7
  3471  023A  30FF               	movlw	255
  3472  023B  00AA               	movwf	___lmul@multiplier+2
  3473  023C  00AB               	movwf	___lmul@multiplier+3
  3474  023D  0861               	movf	BMP280_readPressure@var1+3,w
  3475  023E  00AF               	movwf	___lmul@multiplicand+3
  3476  023F  0860               	movf	BMP280_readPressure@var1+2,w
  3477  0240  00AE               	movwf	___lmul@multiplicand+2
  3478  0241  085F               	movf	BMP280_readPressure@var1+1,w
  3479  0242  00AD               	movwf	___lmul@multiplicand+1
  3480  0243  085E               	movf	BMP280_readPressure@var1,w
  3481  0244  00AC               	movwf	___lmul@multiplicand
  3482  0245  120A  158A  231E  120A  118A  	fcall	___lmul
  3483  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3484  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3485  024C  082B               	movf	?___lmul+3,w
  3486  024D  00A7               	movwf	___aldiv@dividend+3
  3487  024E  082A               	movf	?___lmul+2,w
  3488  024F  00A6               	movwf	___aldiv@dividend+2
  3489  0250  0829               	movf	?___lmul+1,w
  3490  0251  00A5               	movwf	___aldiv@dividend+1
  3491  0252  0828               	movf	?___lmul,w
  3492  0253  00A4               	movwf	___aldiv@dividend
  3493  0254  120A  158A  2439  120A  118A  	fcall	___aldiv
  3494  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3495  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3496  025B  0820               	movf	?___aldiv,w
  3497  025C  00B5               	movwf	??_BMP280_readPressure
  3498  025D  0821               	movf	?___aldiv+1,w
  3499  025E  00B6               	movwf	??_BMP280_readPressure+1
  3500  025F  0822               	movf	?___aldiv+2,w
  3501  0260  00B7               	movwf	??_BMP280_readPressure+2
  3502  0261  0823               	movf	?___aldiv+3,w
  3503  0262  00B8               	movwf	??_BMP280_readPressure+3
  3504  0263  3000               	movlw	0
  3505  0264  00A3               	movwf	___aldiv@divisor+3
  3506  0265  3000               	movlw	0
  3507  0266  00A2               	movwf	___aldiv@divisor+2
  3508  0267  3000               	movlw	0
  3509  0268  00A1               	movwf	___aldiv@divisor+1
  3510  0269  3008               	movlw	8
  3511  026A  00A0               	movwf	___aldiv@divisor
  3512  026B  0848               	movf	_BMP280_readPressure$1216+3,w
  3513  026C  00A7               	movwf	___aldiv@dividend+3
  3514  026D  0847               	movf	_BMP280_readPressure$1216+2,w
  3515  026E  00A6               	movwf	___aldiv@dividend+2
  3516  026F  0846               	movf	_BMP280_readPressure$1216+1,w
  3517  0270  00A5               	movwf	___aldiv@dividend+1
  3518  0271  0845               	movf	_BMP280_readPressure$1216,w
  3519  0272  00A4               	movwf	___aldiv@dividend
  3520  0273  120A  158A  2439  120A  118A  	fcall	___aldiv
  3521  0278  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0279  1303               	bcf	3,6	;RP1=0, select bank0
  3523  027A  0820               	movf	?___aldiv,w
  3524  027B  07B5               	addwf	??_BMP280_readPressure,f
  3525  027C  0821               	movf	?___aldiv+1,w
  3526  027D  1803               	skipnc
  3527  027E  0F21               	incfsz	?___aldiv+1,w
  3528  027F  2A81               	goto	u1900
  3529  0280  2A82               	goto	u1901
  3530  0281                     u1900:
  3531  0281  07B6               	addwf	??_BMP280_readPressure+1,f
  3532  0282                     u1901:
  3533  0282  0822               	movf	?___aldiv+2,w
  3534  0283  1803               	skipnc
  3535  0284  0F22               	incfsz	?___aldiv+2,w
  3536  0285  2A87               	goto	u1902
  3537  0286  2A88               	goto	u1903
  3538  0287                     u1902:
  3539  0287  07B7               	addwf	??_BMP280_readPressure+2,f
  3540  0288                     u1903:
  3541  0288  0823               	movf	?___aldiv+3,w
  3542  0289  1803               	skipnc
  3543  028A  0A23               	incf	?___aldiv+3,w
  3544  028B  07B8               	addwf	??_BMP280_readPressure+3,f
  3545  028C  0838               	movf	??_BMP280_readPressure+3,w
  3546  028D  00CC               	movwf	_BMP280_readPressure$1217+3
  3547  028E  0837               	movf	??_BMP280_readPressure+2,w
  3548  028F  00CB               	movwf	_BMP280_readPressure$1217+2
  3549  0290  0836               	movf	??_BMP280_readPressure+1,w
  3550  0291  00CA               	movwf	_BMP280_readPressure$1217+1
  3551  0292  0835               	movf	??_BMP280_readPressure,w
  3552  0293  00C9               	movwf	_BMP280_readPressure$1217
  3553                           
  3554                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  3555  0294  3000               	movlw	0
  3556  0295  00A3               	movwf	___aldiv@divisor+3
  3557  0296  3004               	movlw	4
  3558  0297  00A2               	movwf	___aldiv@divisor+2
  3559  0298  3000               	movlw	0
  3560  0299  00A1               	movwf	___aldiv@divisor+1
  3561  029A  3000               	movlw	0
  3562  029B  00A0               	movwf	___aldiv@divisor
  3563  029C  084C               	movf	_BMP280_readPressure$1217+3,w
  3564  029D  00A7               	movwf	___aldiv@dividend+3
  3565  029E  084B               	movf	_BMP280_readPressure$1217+2,w
  3566  029F  00A6               	movwf	___aldiv@dividend+2
  3567  02A0  084A               	movf	_BMP280_readPressure$1217+1,w
  3568  02A1  00A5               	movwf	___aldiv@dividend+1
  3569  02A2  0849               	movf	_BMP280_readPressure$1217,w
  3570  02A3  00A4               	movwf	___aldiv@dividend
  3571  02A4  120A  158A  2439  120A  118A  	fcall	___aldiv
  3572  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3573  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3574  02AB  0823               	movf	?___aldiv+3,w
  3575  02AC  00E1               	movwf	BMP280_readPressure@var1+3
  3576  02AD  0822               	movf	?___aldiv+2,w
  3577  02AE  00E0               	movwf	BMP280_readPressure@var1+2
  3578  02AF  0821               	movf	?___aldiv+1,w
  3579  02B0  00DF               	movwf	BMP280_readPressure@var1+1
  3580  02B1  0820               	movf	?___aldiv,w
  3581  02B2  00DE               	movwf	BMP280_readPressure@var1
  3582                           
  3583                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  3584  02B3  3000               	movlw	0
  3585  02B4  00A3               	movwf	___aldiv@divisor+3
  3586  02B5  3000               	movlw	0
  3587  02B6  00A2               	movwf	___aldiv@divisor+2
  3588  02B7  3080               	movlw	128
  3589  02B8  00A1               	movwf	___aldiv@divisor+1
  3590  02B9  3000               	movlw	0
  3591  02BA  00A0               	movwf	___aldiv@divisor
  3592  02BB  3000               	movlw	0
  3593  02BC  00B5               	movwf	??_BMP280_readPressure
  3594  02BD  3080               	movlw	128
  3595  02BE  00B6               	movwf	??_BMP280_readPressure+1
  3596  02BF  3000               	movlw	0
  3597  02C0  00B7               	movwf	??_BMP280_readPressure+2
  3598  02C1  3000               	movlw	0
  3599  02C2  00B8               	movwf	??_BMP280_readPressure+3
  3600  02C3  085E               	movf	BMP280_readPressure@var1,w
  3601  02C4  07B5               	addwf	??_BMP280_readPressure,f
  3602  02C5  085F               	movf	BMP280_readPressure@var1+1,w
  3603  02C6  1803               	skipnc
  3604  02C7  0F5F               	incfsz	BMP280_readPressure@var1+1,w
  3605  02C8  2ACA               	goto	u1910
  3606  02C9  2ACB               	goto	u1911
  3607  02CA                     u1910:
  3608  02CA  07B6               	addwf	??_BMP280_readPressure+1,f
  3609  02CB                     u1911:
  3610  02CB  0860               	movf	BMP280_readPressure@var1+2,w
  3611  02CC  1803               	skipnc
  3612  02CD  0F60               	incfsz	BMP280_readPressure@var1+2,w
  3613  02CE  2AD0               	goto	u1912
  3614  02CF  2AD1               	goto	u1913
  3615  02D0                     u1912:
  3616  02D0  07B7               	addwf	??_BMP280_readPressure+2,f
  3617  02D1                     u1913:
  3618  02D1  0861               	movf	BMP280_readPressure@var1+3,w
  3619  02D2  1803               	skipnc
  3620  02D3  0A61               	incf	BMP280_readPressure@var1+3,w
  3621  02D4  07B8               	addwf	??_BMP280_readPressure+3,f
  3622  02D5  0838               	movf	??_BMP280_readPressure+3,w
  3623  02D6  00AB               	movwf	___lmul@multiplier+3
  3624  02D7  0837               	movf	??_BMP280_readPressure+2,w
  3625  02D8  00AA               	movwf	___lmul@multiplier+2
  3626  02D9  0836               	movf	??_BMP280_readPressure+1,w
  3627  02DA  00A9               	movwf	___lmul@multiplier+1
  3628  02DB  0835               	movf	??_BMP280_readPressure,w
  3629  02DC  00A8               	movwf	___lmul@multiplier
  3630  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  3631  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  3632  02DF  083F               	movf	(_BMP280_calib^(0+128)+6),w
  3633  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3634  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3635  02E2  00AC               	movwf	___lmul@multiplicand
  3636  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3637  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  3638  02E5  0840               	movf	((_BMP280_calib+1)^(0+128)+6),w
  3639  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3640  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3641  02E8  00AD               	movwf	___lmul@multiplicand+1
  3642  02E9  01AE               	clrf	___lmul@multiplicand+2
  3643  02EA  01AF               	clrf	___lmul@multiplicand+3
  3644  02EB  120A  158A  231E  120A  118A  	fcall	___lmul
  3645  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3646  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  3647  02F2  082B               	movf	?___lmul+3,w
  3648  02F3  00A7               	movwf	___aldiv@dividend+3
  3649  02F4  082A               	movf	?___lmul+2,w
  3650  02F5  00A6               	movwf	___aldiv@dividend+2
  3651  02F6  0829               	movf	?___lmul+1,w
  3652  02F7  00A5               	movwf	___aldiv@dividend+1
  3653  02F8  0828               	movf	?___lmul,w
  3654  02F9  00A4               	movwf	___aldiv@dividend
  3655  02FA  120A  158A  2439  120A  118A  	fcall	___aldiv
  3656  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3658  0301  0823               	movf	?___aldiv+3,w
  3659  0302  00E1               	movwf	BMP280_readPressure@var1+3
  3660  0303  0822               	movf	?___aldiv+2,w
  3661  0304  00E0               	movwf	BMP280_readPressure@var1+2
  3662  0305  0821               	movf	?___aldiv+1,w
  3663  0306  00DF               	movwf	BMP280_readPressure@var1+1
  3664  0307  0820               	movf	?___aldiv,w
  3665  0308  00DE               	movwf	BMP280_readPressure@var1
  3666  0309                     l1720:
  3667                           
  3668                           ;BMP280.c: 282:   if (var1 == 0)
  3669  0309  0861               	movf	BMP280_readPressure@var1+3,w
  3670  030A  0460               	iorwf	BMP280_readPressure@var1+2,w
  3671  030B  045F               	iorwf	BMP280_readPressure@var1+1,w
  3672  030C  045E               	iorwf	BMP280_readPressure@var1,w
  3673  030D  1D03               	skipz
  3674  030E  2B10               	goto	u1921
  3675  030F  2B11               	goto	u1920
  3676  0310                     u1921:
  3677  0310  2B12               	goto	l1724
  3678  0311                     u1920:
  3679  0311  2D5A               	goto	l202
  3680  0312                     l1724:
  3681                           
  3682                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  3683  0312  3000               	movlw	0
  3684  0313  00B5               	movwf	??_BMP280_readPressure
  3685  0314  3000               	movlw	0
  3686  0315  00B6               	movwf	??_BMP280_readPressure+1
  3687  0316  3010               	movlw	16
  3688  0317  00B7               	movwf	??_BMP280_readPressure+2
  3689  0318  3000               	movlw	0
  3690  0319  00B8               	movwf	??_BMP280_readPressure+3
  3691  031A  3000               	movlw	0
  3692  031B  00A3               	movwf	___aldiv@divisor+3
  3693  031C  3000               	movlw	0
  3694  031D  00A2               	movwf	___aldiv@divisor+2
  3695  031E  3010               	movlw	16
  3696  031F  00A1               	movwf	___aldiv@divisor+1
  3697  0320  3000               	movlw	0
  3698  0321  00A0               	movwf	___aldiv@divisor
  3699  0322  0859               	movf	BMP280_readPressure@var2+3,w
  3700  0323  00A7               	movwf	___aldiv@dividend+3
  3701  0324  0858               	movf	BMP280_readPressure@var2+2,w
  3702  0325  00A6               	movwf	___aldiv@dividend+2
  3703  0326  0857               	movf	BMP280_readPressure@var2+1,w
  3704  0327  00A5               	movwf	___aldiv@dividend+1
  3705  0328  0856               	movf	BMP280_readPressure@var2,w
  3706  0329  00A4               	movwf	___aldiv@dividend
  3707  032A  120A  158A  2439  120A  118A  	fcall	___aldiv
  3708  032F  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0330  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0331  0935               	comf	_adc_P^(0+128),w
  3711  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0334  00B9               	movwf	??_BMP280_readPressure+4
  3714  0335  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0336  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0337  0936               	comf	(_adc_P+1)^(0+128),w
  3717  0338  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0339  1303               	bcf	3,6	;RP1=0, select bank0
  3719  033A  00BA               	movwf	??_BMP280_readPressure+5
  3720  033B  1683               	bsf	3,5	;RP0=1, select bank1
  3721  033C  1303               	bcf	3,6	;RP1=0, select bank1
  3722  033D  0937               	comf	(_adc_P+2)^(0+128),w
  3723  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3724  033F  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0340  00BB               	movwf	??_BMP280_readPressure+6
  3726  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3728  0343  0938               	comf	(_adc_P+3)^(0+128),w
  3729  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3731  0346  00BC               	movwf	??_BMP280_readPressure+7
  3732  0347  0AB9               	incf	??_BMP280_readPressure+4,f
  3733  0348  1903               	skipnz
  3734  0349  0ABA               	incf	??_BMP280_readPressure+5,f
  3735  034A  1903               	skipnz
  3736  034B  0ABB               	incf	??_BMP280_readPressure+6,f
  3737  034C  1903               	skipnz
  3738  034D  0ABC               	incf	??_BMP280_readPressure+7,f
  3739  034E  0820               	movf	?___aldiv,w
  3740  034F  02B9               	subwf	??_BMP280_readPressure+4,f
  3741  0350  0821               	movf	?___aldiv+1,w
  3742  0351  1C03               	skipc
  3743  0352  0F21               	incfsz	?___aldiv+1,w
  3744  0353  2B55               	goto	u1931
  3745  0354  2B56               	goto	u1932
  3746  0355                     u1931:
  3747  0355  02BA               	subwf	??_BMP280_readPressure+5,f
  3748  0356                     u1932:
  3749  0356  0822               	movf	?___aldiv+2,w
  3750  0357  1C03               	skipc
  3751  0358  0F22               	incfsz	?___aldiv+2,w
  3752  0359  2B5B               	goto	u1933
  3753  035A  2B5C               	goto	u1934
  3754  035B                     u1933:
  3755  035B  02BB               	subwf	??_BMP280_readPressure+6,f
  3756  035C                     u1934:
  3757  035C  0823               	movf	?___aldiv+3,w
  3758  035D  1C03               	skipc
  3759  035E  0F23               	incfsz	?___aldiv+3,w
  3760  035F  2B61               	goto	u1935
  3761  0360  2B62               	goto	u1936
  3762  0361                     u1935:
  3763  0361  02BC               	subwf	??_BMP280_readPressure+7,f
  3764  0362                     u1936:
  3765  0362  0839               	movf	??_BMP280_readPressure+4,w
  3766  0363  07B5               	addwf	??_BMP280_readPressure,f
  3767  0364  083A               	movf	??_BMP280_readPressure+5,w
  3768  0365  1803               	skipnc
  3769  0366  0F3A               	incfsz	??_BMP280_readPressure+5,w
  3770  0367  2B69               	goto	u1940
  3771  0368  2B6A               	goto	u1941
  3772  0369                     u1940:
  3773  0369  07B6               	addwf	??_BMP280_readPressure+1,f
  3774  036A                     u1941:
  3775  036A  083B               	movf	??_BMP280_readPressure+6,w
  3776  036B  1803               	skipnc
  3777  036C  0F3B               	incfsz	??_BMP280_readPressure+6,w
  3778  036D  2B6F               	goto	u1942
  3779  036E  2B70               	goto	u1943
  3780  036F                     u1942:
  3781  036F  07B7               	addwf	??_BMP280_readPressure+2,f
  3782  0370                     u1943:
  3783  0370  083C               	movf	??_BMP280_readPressure+7,w
  3784  0371  1803               	skipnc
  3785  0372  0A3C               	incf	??_BMP280_readPressure+7,w
  3786  0373  07B8               	addwf	??_BMP280_readPressure+3,f
  3787  0374  0838               	movf	??_BMP280_readPressure+3,w
  3788  0375  00AB               	movwf	___lmul@multiplier+3
  3789  0376  0837               	movf	??_BMP280_readPressure+2,w
  3790  0377  00AA               	movwf	___lmul@multiplier+2
  3791  0378  0836               	movf	??_BMP280_readPressure+1,w
  3792  0379  00A9               	movwf	___lmul@multiplier+1
  3793  037A  0835               	movf	??_BMP280_readPressure,w
  3794  037B  00A8               	movwf	___lmul@multiplier
  3795  037C  3000               	movlw	0
  3796  037D  00AF               	movwf	___lmul@multiplicand+3
  3797  037E  3000               	movlw	0
  3798  037F  00AE               	movwf	___lmul@multiplicand+2
  3799  0380  300C               	movlw	12
  3800  0381  00AD               	movwf	___lmul@multiplicand+1
  3801  0382  3035               	movlw	53
  3802  0383  00AC               	movwf	___lmul@multiplicand
  3803  0384  120A  158A  231E  120A  118A  	fcall	___lmul
  3804  0389  1283               	bcf	3,5	;RP0=0, select bank0
  3805  038A  1303               	bcf	3,6	;RP1=0, select bank0
  3806  038B  082B               	movf	?___lmul+3,w
  3807  038C  00DD               	movwf	BMP280_readPressure@p+3
  3808  038D  082A               	movf	?___lmul+2,w
  3809  038E  00DC               	movwf	BMP280_readPressure@p+2
  3810  038F  0829               	movf	?___lmul+1,w
  3811  0390  00DB               	movwf	BMP280_readPressure@p+1
  3812  0391  0828               	movf	?___lmul,w
  3813  0392  00DA               	movwf	BMP280_readPressure@p
  3814  0393                     l1726:
  3815                           
  3816                           ;BMP280.c: 287:   if (p < 0x80000000)
  3817  0393  3080               	movlw	128
  3818  0394  025D               	subwf	BMP280_readPressure@p+3,w
  3819  0395  1D03               	skipz
  3820  0396  2BA3               	goto	u1953
  3821  0397  3000               	movlw	0
  3822  0398  025C               	subwf	BMP280_readPressure@p+2,w
  3823  0399  1D03               	skipz
  3824  039A  2BA3               	goto	u1953
  3825  039B  3000               	movlw	0
  3826  039C  025B               	subwf	BMP280_readPressure@p+1,w
  3827  039D  1D03               	skipz
  3828  039E  2BA3               	goto	u1953
  3829  039F  3000               	movlw	0
  3830  03A0  025A               	subwf	BMP280_readPressure@p,w
  3831  03A1  1D03               	skipz
  3832  03A2  2BA3               	goto	u1953
  3833  03A3                     u1953:
  3834  03A3  1803               	btfsc	3,0
  3835  03A4  2BA6               	goto	u1951
  3836  03A5  2BA7               	goto	u1950
  3837  03A6                     u1951:
  3838  03A6  2BCA               	goto	l1730
  3839  03A7                     u1950:
  3840  03A7                     l1728:
  3841                           
  3842                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  3843  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3844  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3845  03A9  0861               	movf	BMP280_readPressure@var1+3,w
  3846  03AA  00A3               	movwf	___lldiv@divisor+3
  3847  03AB  0860               	movf	BMP280_readPressure@var1+2,w
  3848  03AC  00A2               	movwf	___lldiv@divisor+2
  3849  03AD  085F               	movf	BMP280_readPressure@var1+1,w
  3850  03AE  00A1               	movwf	___lldiv@divisor+1
  3851  03AF  085E               	movf	BMP280_readPressure@var1,w
  3852  03B0  00A0               	movwf	___lldiv@divisor
  3853  03B1  1003               	clrc
  3854  03B2  0D5A               	rlf	BMP280_readPressure@p,w
  3855  03B3  00A4               	movwf	___lldiv@dividend
  3856  03B4  0D5B               	rlf	BMP280_readPressure@p+1,w
  3857  03B5  00A5               	movwf	___lldiv@dividend+1
  3858  03B6  0D5C               	rlf	BMP280_readPressure@p+2,w
  3859  03B7  00A6               	movwf	___lldiv@dividend+2
  3860  03B8  0D5D               	rlf	BMP280_readPressure@p+3,w
  3861  03B9  00A7               	movwf	___lldiv@dividend+3
  3862  03BA  120A  118A  278D  120A  118A  	fcall	___lldiv
  3863  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3864  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3865  03C1  0823               	movf	?___lldiv+3,w
  3866  03C2  00DD               	movwf	BMP280_readPressure@p+3
  3867  03C3  0822               	movf	?___lldiv+2,w
  3868  03C4  00DC               	movwf	BMP280_readPressure@p+2
  3869  03C5  0821               	movf	?___lldiv+1,w
  3870  03C6  00DB               	movwf	BMP280_readPressure@p+1
  3871  03C7  0820               	movf	?___lldiv,w
  3872  03C8  00DA               	movwf	BMP280_readPressure@p
  3873  03C9  2BEC               	goto	l204
  3874  03CA                     l1730:
  3875                           
  3876                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  3877  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3878  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3879  03CC  0861               	movf	BMP280_readPressure@var1+3,w
  3880  03CD  00A3               	movwf	___lldiv@divisor+3
  3881  03CE  0860               	movf	BMP280_readPressure@var1+2,w
  3882  03CF  00A2               	movwf	___lldiv@divisor+2
  3883  03D0  085F               	movf	BMP280_readPressure@var1+1,w
  3884  03D1  00A1               	movwf	___lldiv@divisor+1
  3885  03D2  085E               	movf	BMP280_readPressure@var1,w
  3886  03D3  00A0               	movwf	___lldiv@divisor
  3887  03D4  085D               	movf	BMP280_readPressure@p+3,w
  3888  03D5  00A7               	movwf	___lldiv@dividend+3
  3889  03D6  085C               	movf	BMP280_readPressure@p+2,w
  3890  03D7  00A6               	movwf	___lldiv@dividend+2
  3891  03D8  085B               	movf	BMP280_readPressure@p+1,w
  3892  03D9  00A5               	movwf	___lldiv@dividend+1
  3893  03DA  085A               	movf	BMP280_readPressure@p,w
  3894  03DB  00A4               	movwf	___lldiv@dividend
  3895  03DC  120A  118A  278D  120A  118A  	fcall	___lldiv
  3896  03E1  1003               	clrc
  3897  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3898  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3899  03E4  0D20               	rlf	?___lldiv,w
  3900  03E5  00DA               	movwf	BMP280_readPressure@p
  3901  03E6  0D21               	rlf	?___lldiv+1,w
  3902  03E7  00DB               	movwf	BMP280_readPressure@p+1
  3903  03E8  0D22               	rlf	?___lldiv+2,w
  3904  03E9  00DC               	movwf	BMP280_readPressure@p+2
  3905  03EA  0D23               	rlf	?___lldiv+3,w
  3906  03EB  00DD               	movwf	BMP280_readPressure@p+3
  3907  03EC                     l204:
  3908                           
  3909                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3910  03EC  085A               	movf	BMP280_readPressure@p,w
  3911  03ED  00B5               	movwf	??_BMP280_readPressure
  3912  03EE  085B               	movf	BMP280_readPressure@p+1,w
  3913  03EF  00B6               	movwf	??_BMP280_readPressure+1
  3914  03F0  085C               	movf	BMP280_readPressure@p+2,w
  3915  03F1  00B7               	movwf	??_BMP280_readPressure+2
  3916  03F2  085D               	movf	BMP280_readPressure@p+3,w
  3917  03F3  00B8               	movwf	??_BMP280_readPressure+3
  3918  03F4  3003               	movlw	3
  3919  03F5                     u1965:
  3920  03F5  1003               	clrc
  3921  03F6  0CB8               	rrf	??_BMP280_readPressure+3,f
  3922  03F7  0CB7               	rrf	??_BMP280_readPressure+2,f
  3923  03F8  0CB6               	rrf	??_BMP280_readPressure+1,f
  3924  03F9  0CB5               	rrf	??_BMP280_readPressure,f
  3925  03FA                     u1960:
  3926  03FA  3EFF               	addlw	-1
  3927  03FB  1D03               	skipz
  3928  03FC  2BF5               	goto	u1965
  3929  03FD  0838               	movf	??_BMP280_readPressure+3,w
  3930  03FE  00AF               	movwf	___lmul@multiplicand+3
  3931  03FF  0837               	movf	??_BMP280_readPressure+2,w
  3932  0400  00AE               	movwf	___lmul@multiplicand+2
  3933  0401  0836               	movf	??_BMP280_readPressure+1,w
  3934  0402  00AD               	movwf	___lmul@multiplicand+1
  3935  0403  0835               	movf	??_BMP280_readPressure,w
  3936  0404  00AC               	movwf	___lmul@multiplicand
  3937  0405  085A               	movf	BMP280_readPressure@p,w
  3938  0406  00B9               	movwf	??_BMP280_readPressure+4
  3939  0407  085B               	movf	BMP280_readPressure@p+1,w
  3940  0408  00BA               	movwf	??_BMP280_readPressure+5
  3941  0409  085C               	movf	BMP280_readPressure@p+2,w
  3942  040A  00BB               	movwf	??_BMP280_readPressure+6
  3943  040B  085D               	movf	BMP280_readPressure@p+3,w
  3944  040C  00BC               	movwf	??_BMP280_readPressure+7
  3945  040D  3003               	movlw	3
  3946  040E                     u1975:
  3947  040E  1003               	clrc
  3948  040F  0CBC               	rrf	??_BMP280_readPressure+7,f
  3949  0410  0CBB               	rrf	??_BMP280_readPressure+6,f
  3950  0411  0CBA               	rrf	??_BMP280_readPressure+5,f
  3951  0412  0CB9               	rrf	??_BMP280_readPressure+4,f
  3952  0413                     u1970:
  3953  0413  3EFF               	addlw	-1
  3954  0414  1D03               	skipz
  3955  0415  2C0E               	goto	u1975
  3956  0416  083C               	movf	??_BMP280_readPressure+7,w
  3957  0417  00AB               	movwf	___lmul@multiplier+3
  3958  0418  083B               	movf	??_BMP280_readPressure+6,w
  3959  0419  00AA               	movwf	___lmul@multiplier+2
  3960  041A  083A               	movf	??_BMP280_readPressure+5,w
  3961  041B  00A9               	movwf	___lmul@multiplier+1
  3962  041C  0839               	movf	??_BMP280_readPressure+4,w
  3963  041D  00A8               	movwf	___lmul@multiplier
  3964  041E  120A  158A  231E  120A  118A  	fcall	___lmul
  3965  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0424  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0425  0828               	movf	?___lmul,w
  3968  0426  00BD               	movwf	??_BMP280_readPressure+8
  3969  0427  0829               	movf	?___lmul+1,w
  3970  0428  00BE               	movwf	??_BMP280_readPressure+9
  3971  0429  082A               	movf	?___lmul+2,w
  3972  042A  00BF               	movwf	??_BMP280_readPressure+10
  3973  042B  082B               	movf	?___lmul+3,w
  3974  042C  00C0               	movwf	??_BMP280_readPressure+11
  3975  042D  300D               	movlw	13
  3976  042E                     u1985:
  3977  042E  1003               	clrc
  3978  042F  0CC0               	rrf	??_BMP280_readPressure+11,f
  3979  0430  0CBF               	rrf	??_BMP280_readPressure+10,f
  3980  0431  0CBE               	rrf	??_BMP280_readPressure+9,f
  3981  0432  0CBD               	rrf	??_BMP280_readPressure+8,f
  3982  0433                     u1980:
  3983  0433  3EFF               	addlw	-1
  3984  0434  1D03               	skipz
  3985  0435  2C2E               	goto	u1985
  3986  0436  0840               	movf	??_BMP280_readPressure+11,w
  3987  0437  00D0               	movwf	_BMP280_readPressure$1218+3
  3988  0438  083F               	movf	??_BMP280_readPressure+10,w
  3989  0439  00CF               	movwf	_BMP280_readPressure$1218+2
  3990  043A  083E               	movf	??_BMP280_readPressure+9,w
  3991  043B  00CE               	movwf	_BMP280_readPressure$1218+1
  3992  043C  083D               	movf	??_BMP280_readPressure+8,w
  3993  043D  00CD               	movwf	_BMP280_readPressure$1218
  3994                           
  3995                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3996  043E  3000               	movlw	0
  3997  043F  00A3               	movwf	___aldiv@divisor+3
  3998  0440  3000               	movlw	0
  3999  0441  00A2               	movwf	___aldiv@divisor+2
  4000  0442  3010               	movlw	16
  4001  0443  00A1               	movwf	___aldiv@divisor+1
  4002  0444  3000               	movlw	0
  4003  0445  00A0               	movwf	___aldiv@divisor
  4004  0446  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0447  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0448  084F               	movf	(_BMP280_calib^(0+128)+22),w
  4007  0449  1283               	bcf	3,5	;RP0=0, select bank0
  4008  044A  1303               	bcf	3,6	;RP1=0, select bank0
  4009  044B  00A8               	movwf	___lmul@multiplier
  4010  044C  1683               	bsf	3,5	;RP0=1, select bank1
  4011  044D  1303               	bcf	3,6	;RP1=0, select bank1
  4012  044E  0850               	movf	((_BMP280_calib+1)^(0+128)+22),w
  4013  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0451  00A9               	movwf	___lmul@multiplier+1
  4016  0452  3000               	movlw	0
  4017  0453  1BA9               	btfsc	___lmul@multiplier+1,7
  4018  0454  30FF               	movlw	255
  4019  0455  00AA               	movwf	___lmul@multiplier+2
  4020  0456  00AB               	movwf	___lmul@multiplier+3
  4021  0457  0850               	movf	_BMP280_readPressure$1218+3,w
  4022  0458  00AF               	movwf	___lmul@multiplicand+3
  4023  0459  084F               	movf	_BMP280_readPressure$1218+2,w
  4024  045A  00AE               	movwf	___lmul@multiplicand+2
  4025  045B  084E               	movf	_BMP280_readPressure$1218+1,w
  4026  045C  00AD               	movwf	___lmul@multiplicand+1
  4027  045D  084D               	movf	_BMP280_readPressure$1218,w
  4028  045E  00AC               	movwf	___lmul@multiplicand
  4029  045F  120A  158A  231E  120A  118A  	fcall	___lmul
  4030  0464  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0465  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0466  082B               	movf	?___lmul+3,w
  4033  0467  00A7               	movwf	___aldiv@dividend+3
  4034  0468  082A               	movf	?___lmul+2,w
  4035  0469  00A6               	movwf	___aldiv@dividend+2
  4036  046A  0829               	movf	?___lmul+1,w
  4037  046B  00A5               	movwf	___aldiv@dividend+1
  4038  046C  0828               	movf	?___lmul,w
  4039  046D  00A4               	movwf	___aldiv@dividend
  4040  046E  120A  158A  2439  120A  118A  	fcall	___aldiv
  4041  0473  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0474  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0475  0823               	movf	?___aldiv+3,w
  4044  0476  00E1               	movwf	BMP280_readPressure@var1+3
  4045  0477  0822               	movf	?___aldiv+2,w
  4046  0478  00E0               	movwf	BMP280_readPressure@var1+2
  4047  0479  0821               	movf	?___aldiv+1,w
  4048  047A  00DF               	movwf	BMP280_readPressure@var1+1
  4049  047B  0820               	movf	?___aldiv,w
  4050  047C  00DE               	movwf	BMP280_readPressure@var1
  4051                           
  4052                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  4053  047D  3000               	movlw	0
  4054  047E  00A3               	movwf	___aldiv@divisor+3
  4055  047F  3000               	movlw	0
  4056  0480  00A2               	movwf	___aldiv@divisor+2
  4057  0481  3020               	movlw	32
  4058  0482  00A1               	movwf	___aldiv@divisor+1
  4059  0483  3000               	movlw	0
  4060  0484  00A0               	movwf	___aldiv@divisor
  4061  0485  085A               	movf	BMP280_readPressure@p,w
  4062  0486  00B5               	movwf	??_BMP280_readPressure
  4063  0487  085B               	movf	BMP280_readPressure@p+1,w
  4064  0488  00B6               	movwf	??_BMP280_readPressure+1
  4065  0489  085C               	movf	BMP280_readPressure@p+2,w
  4066  048A  00B7               	movwf	??_BMP280_readPressure+2
  4067  048B  085D               	movf	BMP280_readPressure@p+3,w
  4068  048C  00B8               	movwf	??_BMP280_readPressure+3
  4069  048D  3002               	movlw	2
  4070  048E                     u1995:
  4071  048E  1003               	clrc
  4072  048F  0CB8               	rrf	??_BMP280_readPressure+3,f
  4073  0490  0CB7               	rrf	??_BMP280_readPressure+2,f
  4074  0491  0CB6               	rrf	??_BMP280_readPressure+1,f
  4075  0492  0CB5               	rrf	??_BMP280_readPressure,f
  4076  0493                     u1990:
  4077  0493  3EFF               	addlw	-1
  4078  0494  1D03               	skipz
  4079  0495  2C8E               	goto	u1995
  4080  0496  0838               	movf	??_BMP280_readPressure+3,w
  4081  0497  00AB               	movwf	___lmul@multiplier+3
  4082  0498  0837               	movf	??_BMP280_readPressure+2,w
  4083  0499  00AA               	movwf	___lmul@multiplier+2
  4084  049A  0836               	movf	??_BMP280_readPressure+1,w
  4085  049B  00A9               	movwf	___lmul@multiplier+1
  4086  049C  0835               	movf	??_BMP280_readPressure,w
  4087  049D  00A8               	movwf	___lmul@multiplier
  4088  049E  1683               	bsf	3,5	;RP0=1, select bank1
  4089  049F  1303               	bcf	3,6	;RP1=0, select bank1
  4090  04A0  084D               	movf	(_BMP280_calib^(0+128)+20),w
  4091  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  4092  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  4093  04A3  00AC               	movwf	___lmul@multiplicand
  4094  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  4095  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  4096  04A6  084E               	movf	((_BMP280_calib+1)^(0+128)+20),w
  4097  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  4098  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  4099  04A9  00AD               	movwf	___lmul@multiplicand+1
  4100  04AA  3000               	movlw	0
  4101  04AB  1BAD               	btfsc	___lmul@multiplicand+1,7
  4102  04AC  30FF               	movlw	255
  4103  04AD  00AE               	movwf	___lmul@multiplicand+2
  4104  04AE  00AF               	movwf	___lmul@multiplicand+3
  4105  04AF  120A  158A  231E  120A  118A  	fcall	___lmul
  4106  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  4107  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  4108  04B6  082B               	movf	?___lmul+3,w
  4109  04B7  00A7               	movwf	___aldiv@dividend+3
  4110  04B8  082A               	movf	?___lmul+2,w
  4111  04B9  00A6               	movwf	___aldiv@dividend+2
  4112  04BA  0829               	movf	?___lmul+1,w
  4113  04BB  00A5               	movwf	___aldiv@dividend+1
  4114  04BC  0828               	movf	?___lmul,w
  4115  04BD  00A4               	movwf	___aldiv@dividend
  4116  04BE  120A  158A  2439  120A  118A  	fcall	___aldiv
  4117  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4118  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  4119  04C5  0823               	movf	?___aldiv+3,w
  4120  04C6  00D9               	movwf	BMP280_readPressure@var2+3
  4121  04C7  0822               	movf	?___aldiv+2,w
  4122  04C8  00D8               	movwf	BMP280_readPressure@var2+2
  4123  04C9  0821               	movf	?___aldiv+1,w
  4124  04CA  00D7               	movwf	BMP280_readPressure@var2+1
  4125  04CB  0820               	movf	?___aldiv,w
  4126  04CC  00D6               	movwf	BMP280_readPressure@var2
  4127                           
  4128                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  4129  04CD  3000               	movlw	0
  4130  04CE  00A3               	movwf	___aldiv@divisor+3
  4131  04CF  3000               	movlw	0
  4132  04D0  00A2               	movwf	___aldiv@divisor+2
  4133  04D1  3000               	movlw	0
  4134  04D2  00A1               	movwf	___aldiv@divisor+1
  4135  04D3  3010               	movlw	16
  4136  04D4  00A0               	movwf	___aldiv@divisor
  4137  04D5  0856               	movf	BMP280_readPressure@var2,w
  4138  04D6  00B5               	movwf	??_BMP280_readPressure
  4139  04D7  0857               	movf	BMP280_readPressure@var2+1,w
  4140  04D8  00B6               	movwf	??_BMP280_readPressure+1
  4141  04D9  0858               	movf	BMP280_readPressure@var2+2,w
  4142  04DA  00B7               	movwf	??_BMP280_readPressure+2
  4143  04DB  0859               	movf	BMP280_readPressure@var2+3,w
  4144  04DC  00B8               	movwf	??_BMP280_readPressure+3
  4145  04DD  085E               	movf	BMP280_readPressure@var1,w
  4146  04DE  00B9               	movwf	??_BMP280_readPressure+4
  4147  04DF  085F               	movf	BMP280_readPressure@var1+1,w
  4148  04E0  00BA               	movwf	??_BMP280_readPressure+5
  4149  04E1  0860               	movf	BMP280_readPressure@var1+2,w
  4150  04E2  00BB               	movwf	??_BMP280_readPressure+6
  4151  04E3  0861               	movf	BMP280_readPressure@var1+3,w
  4152  04E4  00BC               	movwf	??_BMP280_readPressure+7
  4153  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  4154  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  4155  04E7  084B               	movf	(_BMP280_calib^(0+128)+18),w
  4156  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  4157  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  4158  04EA  00BD               	movwf	??_BMP280_readPressure+8
  4159  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  4160  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  4161  04ED  084C               	movf	((_BMP280_calib+1)^(0+128)+18),w
  4162  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  4163  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  4164  04F0  00BE               	movwf	??_BMP280_readPressure+9
  4165  04F1  3000               	movlw	0
  4166  04F2  1BBE               	btfsc	??_BMP280_readPressure+9,7
  4167  04F3  30FF               	movlw	255
  4168  04F4  00BF               	movwf	??_BMP280_readPressure+10
  4169  04F5  00C0               	movwf	??_BMP280_readPressure+11
  4170  04F6  083D               	movf	??_BMP280_readPressure+8,w
  4171  04F7  07B9               	addwf	??_BMP280_readPressure+4,f
  4172  04F8  083E               	movf	??_BMP280_readPressure+9,w
  4173  04F9  1803               	skipnc
  4174  04FA  0F3E               	incfsz	??_BMP280_readPressure+9,w
  4175  04FB  2CFD               	goto	u2000
  4176  04FC  2CFE               	goto	u2001
  4177  04FD                     u2000:
  4178  04FD  07BA               	addwf	??_BMP280_readPressure+5,f
  4179  04FE                     u2001:
  4180  04FE  083F               	movf	??_BMP280_readPressure+10,w
  4181  04FF  1803               	skipnc
  4182  0500  0F3F               	incfsz	??_BMP280_readPressure+10,w
  4183  0501  2D03               	goto	u2002
  4184  0502  2D04               	goto	u2003
  4185  0503                     u2002:
  4186  0503  07BB               	addwf	??_BMP280_readPressure+6,f
  4187  0504                     u2003:
  4188  0504  0840               	movf	??_BMP280_readPressure+11,w
  4189  0505  1803               	skipnc
  4190  0506  0A40               	incf	??_BMP280_readPressure+11,w
  4191  0507  07BC               	addwf	??_BMP280_readPressure+7,f
  4192  0508  0839               	movf	??_BMP280_readPressure+4,w
  4193  0509  07B5               	addwf	??_BMP280_readPressure,f
  4194  050A  083A               	movf	??_BMP280_readPressure+5,w
  4195  050B  1803               	skipnc
  4196  050C  0F3A               	incfsz	??_BMP280_readPressure+5,w
  4197  050D  2D0F               	goto	u2010
  4198  050E  2D10               	goto	u2011
  4199  050F                     u2010:
  4200  050F  07B6               	addwf	??_BMP280_readPressure+1,f
  4201  0510                     u2011:
  4202  0510  083B               	movf	??_BMP280_readPressure+6,w
  4203  0511  1803               	skipnc
  4204  0512  0F3B               	incfsz	??_BMP280_readPressure+6,w
  4205  0513  2D15               	goto	u2012
  4206  0514  2D16               	goto	u2013
  4207  0515                     u2012:
  4208  0515  07B7               	addwf	??_BMP280_readPressure+2,f
  4209  0516                     u2013:
  4210  0516  083C               	movf	??_BMP280_readPressure+7,w
  4211  0517  1803               	skipnc
  4212  0518  0A3C               	incf	??_BMP280_readPressure+7,w
  4213  0519  07B8               	addwf	??_BMP280_readPressure+3,f
  4214  051A  0838               	movf	??_BMP280_readPressure+3,w
  4215  051B  00A7               	movwf	___aldiv@dividend+3
  4216  051C  0837               	movf	??_BMP280_readPressure+2,w
  4217  051D  00A6               	movwf	___aldiv@dividend+2
  4218  051E  0836               	movf	??_BMP280_readPressure+1,w
  4219  051F  00A5               	movwf	___aldiv@dividend+1
  4220  0520  0835               	movf	??_BMP280_readPressure,w
  4221  0521  00A4               	movwf	___aldiv@dividend
  4222  0522  120A  158A  2439  120A  118A  	fcall	___aldiv
  4223  0527  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0528  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0529  0820               	movf	?___aldiv,w
  4226  052A  075A               	addwf	BMP280_readPressure@p,w
  4227  052B  00C1               	movwf	??_BMP280_readPressure+12
  4228  052C  3000               	movlw	0
  4229  052D  1803               	skipnc
  4230  052E  3001               	movlw	1
  4231  052F  0721               	addwf	?___aldiv+1,w
  4232  0530  01C3               	clrf	??_BMP280_readPressure+14
  4233  0531  1803               	skipnc
  4234  0532  0AC3               	incf	??_BMP280_readPressure+14,f
  4235  0533  075B               	addwf	BMP280_readPressure@p+1,w
  4236  0534  00C2               	movwf	??_BMP280_readPressure+13
  4237  0535  1803               	skipnc
  4238  0536  0AC3               	incf	??_BMP280_readPressure+14,f
  4239  0537  0822               	movf	?___aldiv+2,w
  4240  0538  0743               	addwf	??_BMP280_readPressure+14,w
  4241  0539  01C4               	clrf	??_BMP280_readPressure+15
  4242  053A  1803               	skipnc
  4243  053B  0AC4               	incf	??_BMP280_readPressure+15,f
  4244  053C  075C               	addwf	BMP280_readPressure@p+2,w
  4245  053D  00C3               	movwf	??_BMP280_readPressure+14
  4246  053E  1803               	skipnc
  4247  053F  0AC4               	incf	??_BMP280_readPressure+15,f
  4248  0540  0823               	movf	?___aldiv+3,w
  4249  0541  0744               	addwf	??_BMP280_readPressure+15,w
  4250  0542  075D               	addwf	BMP280_readPressure@p+3,w
  4251  0543  00C4               	movwf	??_BMP280_readPressure+15
  4252  0544  0844               	movf	??_BMP280_readPressure+15,w
  4253  0545  00DD               	movwf	BMP280_readPressure@p+3
  4254  0546  0843               	movf	??_BMP280_readPressure+14,w
  4255  0547  00DC               	movwf	BMP280_readPressure@p+2
  4256  0548  0842               	movf	??_BMP280_readPressure+13,w
  4257  0549  00DB               	movwf	BMP280_readPressure@p+1
  4258  054A  0841               	movf	??_BMP280_readPressure+12,w
  4259  054B  00DA               	movwf	BMP280_readPressure@p
  4260  054C                     l1732:
  4261                           
  4262                           ;BMP280.c: 298:   *pres = p;
  4263  054C  0851               	movf	BMP280_readPressure@pres,w
  4264  054D  0084               	movwf	4
  4265  054E  085A               	movf	BMP280_readPressure@p,w
  4266  054F  1383               	bcf	3,7	;select IRP bank0
  4267  0550  0080               	movwf	0
  4268  0551  0A84               	incf	4,f
  4269  0552  085B               	movf	BMP280_readPressure@p+1,w
  4270  0553  0080               	movwf	0
  4271  0554  0A84               	incf	4,f
  4272  0555  085C               	movf	BMP280_readPressure@p+2,w
  4273  0556  0080               	movwf	0
  4274  0557  0A84               	incf	4,f
  4275  0558  085D               	movf	BMP280_readPressure@p+3,w
  4276  0559  0080               	movwf	0
  4277  055A                     l202:
  4278  055A  0008               	return
  4279  055B                     __end_of_BMP280_readPressure:
  4280                           
  4281                           	psect	text11
  4282  0B1E                     __ptext11:	
  4283 ;; *************** function ___lmul *****************
  4284 ;; Defined at:
  4285 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  multiplier      4    8[BANK0 ] unsigned long 
  4288 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  product         4   17[BANK0 ] unsigned long 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  4    8[BANK0 ] unsigned long 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       8       0       0       0
  4301 ;;      Locals:         0       4       0       0       0
  4302 ;;      Temps:          0       1       0       0       0
  4303 ;;      Totals:         0      13       0       0       0
  4304 ;;Total ram usage:       13 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    2
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_BMP280_readTemperature
  4311 ;;		_BMP280_readPressure
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function ___lmul
  4317  0B1E                     ___lmul:
  4318  0B1E                     l1336:	
  4319                           ;incstack = 0
  4320                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4321                           
  4322  0B1E  3000               	movlw	0
  4323  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  4324  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  4325  0B21  00B4               	movwf	___lmul@product+3
  4326  0B22  3000               	movlw	0
  4327  0B23  00B3               	movwf	___lmul@product+2
  4328  0B24  3000               	movlw	0
  4329  0B25  00B2               	movwf	___lmul@product+1
  4330  0B26  3000               	movlw	0
  4331  0B27  00B1               	movwf	___lmul@product
  4332  0B28                     l1338:
  4333  0B28  1C28               	btfss	___lmul@multiplier,0
  4334  0B29  2B2B               	goto	u981
  4335  0B2A  2B2C               	goto	u980
  4336  0B2B                     u981:
  4337  0B2B  2B43               	goto	l1342
  4338  0B2C                     u980:
  4339  0B2C                     l1340:
  4340  0B2C  082C               	movf	___lmul@multiplicand,w
  4341  0B2D  07B1               	addwf	___lmul@product,f
  4342  0B2E  082D               	movf	___lmul@multiplicand+1,w
  4343  0B2F  1103               	clrz
  4344  0B30  1803               	skipnc
  4345  0B31  3E01               	addlw	1
  4346  0B32  1903               	skipnz
  4347  0B33  2B35               	goto	u991
  4348  0B34  07B2               	addwf	___lmul@product+1,f
  4349  0B35                     u991:
  4350  0B35  082E               	movf	___lmul@multiplicand+2,w
  4351  0B36  1103               	clrz
  4352  0B37  1803               	skipnc
  4353  0B38  3E01               	addlw	1
  4354  0B39  1903               	skipnz
  4355  0B3A  2B3C               	goto	u992
  4356  0B3B  07B3               	addwf	___lmul@product+2,f
  4357  0B3C                     u992:
  4358  0B3C  082F               	movf	___lmul@multiplicand+3,w
  4359  0B3D  1103               	clrz
  4360  0B3E  1803               	skipnc
  4361  0B3F  3E01               	addlw	1
  4362  0B40  1903               	skipnz
  4363  0B41  2B43               	goto	u993
  4364  0B42  07B4               	addwf	___lmul@product+3,f
  4365  0B43                     u993:
  4366  0B43                     l1342:
  4367  0B43  3001               	movlw	1
  4368  0B44  00B0               	movwf	??___lmul
  4369  0B45                     u1005:
  4370  0B45  1003               	clrc
  4371  0B46  0DAC               	rlf	___lmul@multiplicand,f
  4372  0B47  0DAD               	rlf	___lmul@multiplicand+1,f
  4373  0B48  0DAE               	rlf	___lmul@multiplicand+2,f
  4374  0B49  0DAF               	rlf	___lmul@multiplicand+3,f
  4375  0B4A  0BB0               	decfsz	??___lmul,f
  4376  0B4B  2B45               	goto	u1005
  4377  0B4C                     l1344:
  4378  0B4C  3001               	movlw	1
  4379  0B4D                     u1015:
  4380  0B4D  1003               	clrc
  4381  0B4E  0CAB               	rrf	___lmul@multiplier+3,f
  4382  0B4F  0CAA               	rrf	___lmul@multiplier+2,f
  4383  0B50  0CA9               	rrf	___lmul@multiplier+1,f
  4384  0B51  0CA8               	rrf	___lmul@multiplier,f
  4385  0B52  3EFF               	addlw	-1
  4386  0B53  1D03               	skipz
  4387  0B54  2B4D               	goto	u1015
  4388  0B55  082B               	movf	___lmul@multiplier+3,w
  4389  0B56  042A               	iorwf	___lmul@multiplier+2,w
  4390  0B57  0429               	iorwf	___lmul@multiplier+1,w
  4391  0B58  0428               	iorwf	___lmul@multiplier,w
  4392  0B59  1D03               	skipz
  4393  0B5A  2B5C               	goto	u1021
  4394  0B5B  2B5D               	goto	u1020
  4395  0B5C                     u1021:
  4396  0B5C  2B28               	goto	l1338
  4397  0B5D                     u1020:
  4398  0B5D                     l1346:
  4399  0B5D  0834               	movf	___lmul@product+3,w
  4400  0B5E  00AB               	movwf	?___lmul+3
  4401  0B5F  0833               	movf	___lmul@product+2,w
  4402  0B60  00AA               	movwf	?___lmul+2
  4403  0B61  0832               	movf	___lmul@product+1,w
  4404  0B62  00A9               	movwf	?___lmul+1
  4405  0B63  0831               	movf	___lmul@product,w
  4406  0B64  00A8               	movwf	?___lmul
  4407  0B65                     l348:
  4408  0B65  0008               	return
  4409  0B66                     __end_of___lmul:
  4410                           
  4411                           	psect	text12
  4412  078D                     __ptext12:	
  4413 ;; *************** function ___lldiv *****************
  4414 ;; Defined at:
  4415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  divisor         4    0[BANK0 ] unsigned long 
  4418 ;;  dividend        4    4[BANK0 ] unsigned long 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  quotient        4    4[COMMON] unsigned long 
  4421 ;;  counter         1    8[COMMON] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  4    0[BANK0 ] unsigned long 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       8       0       0       0
  4432 ;;      Locals:         5       0       0       0       0
  4433 ;;      Temps:          1       0       0       0       0
  4434 ;;      Totals:         6       8       0       0       0
  4435 ;;Total ram usage:       14 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_Enviar_temp
  4442 ;;		_I2C_Master_Init
  4443 ;;		_BMP280_readPressure
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function ___lldiv
  4449  078D                     ___lldiv:
  4450  078D                     l1560:	
  4451                           ;incstack = 0
  4452                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4453                           
  4454  078D  3000               	movlw	0
  4455  078E  00F7               	movwf	___lldiv@quotient+3
  4456  078F  3000               	movlw	0
  4457  0790  00F6               	movwf	___lldiv@quotient+2
  4458  0791  3000               	movlw	0
  4459  0792  00F5               	movwf	___lldiv@quotient+1
  4460  0793  3000               	movlw	0
  4461  0794  00F4               	movwf	___lldiv@quotient
  4462  0795  1283               	bcf	3,5	;RP0=0, select bank0
  4463  0796  1303               	bcf	3,6	;RP1=0, select bank0
  4464  0797  0823               	movf	___lldiv@divisor+3,w
  4465  0798  0422               	iorwf	___lldiv@divisor+2,w
  4466  0799  0421               	iorwf	___lldiv@divisor+1,w
  4467  079A  0420               	iorwf	___lldiv@divisor,w
  4468  079B  1903               	skipnz
  4469  079C  2F9E               	goto	u1541
  4470  079D  2F9F               	goto	u1540
  4471  079E                     u1541:
  4472  079E  2FEC               	goto	l1580
  4473  079F                     u1540:
  4474  079F                     l1562:
  4475  079F  01F8               	clrf	___lldiv@counter
  4476  07A0  0AF8               	incf	___lldiv@counter,f
  4477  07A1  2FAF               	goto	l1566
  4478  07A2                     l1564:
  4479  07A2  3001               	movlw	1
  4480  07A3  00F3               	movwf	??___lldiv
  4481  07A4                     u1555:
  4482  07A4  1003               	clrc
  4483  07A5  0DA0               	rlf	___lldiv@divisor,f
  4484  07A6  0DA1               	rlf	___lldiv@divisor+1,f
  4485  07A7  0DA2               	rlf	___lldiv@divisor+2,f
  4486  07A8  0DA3               	rlf	___lldiv@divisor+3,f
  4487  07A9  0BF3               	decfsz	??___lldiv,f
  4488  07AA  2FA4               	goto	u1555
  4489  07AB  3001               	movlw	1
  4490  07AC  00F3               	movwf	??___lldiv
  4491  07AD  0873               	movf	??___lldiv,w
  4492  07AE  07F8               	addwf	___lldiv@counter,f
  4493  07AF                     l1566:
  4494  07AF  1FA3               	btfss	___lldiv@divisor+3,7
  4495  07B0  2FB2               	goto	u1561
  4496  07B1  2FB3               	goto	u1560
  4497  07B2                     u1561:
  4498  07B2  2FA2               	goto	l1564
  4499  07B3                     u1560:
  4500  07B3                     l1568:
  4501  07B3  3001               	movlw	1
  4502  07B4  00F3               	movwf	??___lldiv
  4503  07B5                     u1575:
  4504  07B5  1003               	clrc
  4505  07B6  0DF4               	rlf	___lldiv@quotient,f
  4506  07B7  0DF5               	rlf	___lldiv@quotient+1,f
  4507  07B8  0DF6               	rlf	___lldiv@quotient+2,f
  4508  07B9  0DF7               	rlf	___lldiv@quotient+3,f
  4509  07BA  0BF3               	decfsz	??___lldiv,f
  4510  07BB  2FB5               	goto	u1575
  4511  07BC                     l1570:
  4512  07BC  0823               	movf	___lldiv@divisor+3,w
  4513  07BD  0227               	subwf	___lldiv@dividend+3,w
  4514  07BE  1D03               	skipz
  4515  07BF  2FCA               	goto	u1585
  4516  07C0  0822               	movf	___lldiv@divisor+2,w
  4517  07C1  0226               	subwf	___lldiv@dividend+2,w
  4518  07C2  1D03               	skipz
  4519  07C3  2FCA               	goto	u1585
  4520  07C4  0821               	movf	___lldiv@divisor+1,w
  4521  07C5  0225               	subwf	___lldiv@dividend+1,w
  4522  07C6  1D03               	skipz
  4523  07C7  2FCA               	goto	u1585
  4524  07C8  0820               	movf	___lldiv@divisor,w
  4525  07C9  0224               	subwf	___lldiv@dividend,w
  4526  07CA                     u1585:
  4527  07CA  1C03               	skipc
  4528  07CB  2FCD               	goto	u1581
  4529  07CC  2FCE               	goto	u1580
  4530  07CD                     u1581:
  4531  07CD  2FDD               	goto	l1576
  4532  07CE                     u1580:
  4533  07CE                     l1572:
  4534  07CE  0820               	movf	___lldiv@divisor,w
  4535  07CF  02A4               	subwf	___lldiv@dividend,f
  4536  07D0  0821               	movf	___lldiv@divisor+1,w
  4537  07D1  1C03               	skipc
  4538  07D2  0F21               	incfsz	___lldiv@divisor+1,w
  4539  07D3  02A5               	subwf	___lldiv@dividend+1,f
  4540  07D4  0822               	movf	___lldiv@divisor+2,w
  4541  07D5  1C03               	skipc
  4542  07D6  0F22               	incfsz	___lldiv@divisor+2,w
  4543  07D7  02A6               	subwf	___lldiv@dividend+2,f
  4544  07D8  0823               	movf	___lldiv@divisor+3,w
  4545  07D9  1C03               	skipc
  4546  07DA  0F23               	incfsz	___lldiv@divisor+3,w
  4547  07DB  02A7               	subwf	___lldiv@dividend+3,f
  4548  07DC                     l1574:
  4549  07DC  1474               	bsf	___lldiv@quotient,0
  4550  07DD                     l1576:
  4551  07DD  3001               	movlw	1
  4552  07DE                     u1595:
  4553  07DE  1003               	clrc
  4554  07DF  0CA3               	rrf	___lldiv@divisor+3,f
  4555  07E0  0CA2               	rrf	___lldiv@divisor+2,f
  4556  07E1  0CA1               	rrf	___lldiv@divisor+1,f
  4557  07E2  0CA0               	rrf	___lldiv@divisor,f
  4558  07E3  3EFF               	addlw	-1
  4559  07E4  1D03               	skipz
  4560  07E5  2FDE               	goto	u1595
  4561  07E6                     l1578:
  4562  07E6  3001               	movlw	1
  4563  07E7  02F8               	subwf	___lldiv@counter,f
  4564  07E8  1D03               	btfss	3,2
  4565  07E9  2FEB               	goto	u1601
  4566  07EA  2FEC               	goto	u1600
  4567  07EB                     u1601:
  4568  07EB  2FB3               	goto	l1568
  4569  07EC                     u1600:
  4570  07EC                     l1580:
  4571  07EC  0877               	movf	___lldiv@quotient+3,w
  4572  07ED  00A3               	movwf	?___lldiv+3
  4573  07EE  0876               	movf	___lldiv@quotient+2,w
  4574  07EF  00A2               	movwf	?___lldiv+2
  4575  07F0  0875               	movf	___lldiv@quotient+1,w
  4576  07F1  00A1               	movwf	?___lldiv+1
  4577  07F2  0874               	movf	___lldiv@quotient,w
  4578  07F3  00A0               	movwf	?___lldiv
  4579  07F4                     l370:
  4580  07F4  0008               	return
  4581  07F5                     __end_of___lldiv:
  4582                           
  4583                           	psect	text13
  4584  0C39                     __ptext13:	
  4585 ;; *************** function ___aldiv *****************
  4586 ;; Defined at:
  4587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  divisor         4    0[BANK0 ] long 
  4590 ;;  dividend        4    4[BANK0 ] long 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  quotient        4    6[COMMON] long 
  4593 ;;  sign            1    5[COMMON] unsigned char 
  4594 ;;  counter         1    4[COMMON] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  4    0[BANK0 ] long 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         0       8       0       0       0
  4605 ;;      Locals:         6       0       0       0       0
  4606 ;;      Temps:          1       0       0       0       0
  4607 ;;      Totals:         7       8       0       0       0
  4608 ;;Total ram usage:       15 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    2
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_BMP280_readTemperature
  4615 ;;		_BMP280_readPressure
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function ___aldiv
  4621  0C39                     ___aldiv:
  4622  0C39                     l1644:	
  4623                           ;incstack = 0
  4624                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4625                           
  4626  0C39  01F5               	clrf	___aldiv@sign
  4627  0C3A                     l1646:
  4628  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0C3C  1FA3               	btfss	___aldiv@divisor+3,7
  4631  0C3D  2C3F               	goto	u1681
  4632  0C3E  2C40               	goto	u1680
  4633  0C3F                     u1681:
  4634  0C3F  2C4D               	goto	l399
  4635  0C40                     u1680:
  4636  0C40                     l1648:
  4637  0C40  09A0               	comf	___aldiv@divisor,f
  4638  0C41  09A1               	comf	___aldiv@divisor+1,f
  4639  0C42  09A2               	comf	___aldiv@divisor+2,f
  4640  0C43  09A3               	comf	___aldiv@divisor+3,f
  4641  0C44  0AA0               	incf	___aldiv@divisor,f
  4642  0C45  1903               	skipnz
  4643  0C46  0AA1               	incf	___aldiv@divisor+1,f
  4644  0C47  1903               	skipnz
  4645  0C48  0AA2               	incf	___aldiv@divisor+2,f
  4646  0C49  1903               	skipnz
  4647  0C4A  0AA3               	incf	___aldiv@divisor+3,f
  4648  0C4B  01F5               	clrf	___aldiv@sign
  4649  0C4C  0AF5               	incf	___aldiv@sign,f
  4650  0C4D                     l399:
  4651  0C4D  1FA7               	btfss	___aldiv@dividend+3,7
  4652  0C4E  2C50               	goto	u1691
  4653  0C4F  2C51               	goto	u1690
  4654  0C50                     u1691:
  4655  0C50  2C60               	goto	l1654
  4656  0C51                     u1690:
  4657  0C51                     l1650:
  4658  0C51  09A4               	comf	___aldiv@dividend,f
  4659  0C52  09A5               	comf	___aldiv@dividend+1,f
  4660  0C53  09A6               	comf	___aldiv@dividend+2,f
  4661  0C54  09A7               	comf	___aldiv@dividend+3,f
  4662  0C55  0AA4               	incf	___aldiv@dividend,f
  4663  0C56  1903               	skipnz
  4664  0C57  0AA5               	incf	___aldiv@dividend+1,f
  4665  0C58  1903               	skipnz
  4666  0C59  0AA6               	incf	___aldiv@dividend+2,f
  4667  0C5A  1903               	skipnz
  4668  0C5B  0AA7               	incf	___aldiv@dividend+3,f
  4669  0C5C                     l1652:
  4670  0C5C  3001               	movlw	1
  4671  0C5D  00F3               	movwf	??___aldiv
  4672  0C5E  0873               	movf	??___aldiv,w
  4673  0C5F  06F5               	xorwf	___aldiv@sign,f
  4674  0C60                     l1654:
  4675  0C60  3000               	movlw	0
  4676  0C61  00F9               	movwf	___aldiv@quotient+3
  4677  0C62  3000               	movlw	0
  4678  0C63  00F8               	movwf	___aldiv@quotient+2
  4679  0C64  3000               	movlw	0
  4680  0C65  00F7               	movwf	___aldiv@quotient+1
  4681  0C66  3000               	movlw	0
  4682  0C67  00F6               	movwf	___aldiv@quotient
  4683  0C68                     l1656:
  4684  0C68  0823               	movf	___aldiv@divisor+3,w
  4685  0C69  0422               	iorwf	___aldiv@divisor+2,w
  4686  0C6A  0421               	iorwf	___aldiv@divisor+1,w
  4687  0C6B  0420               	iorwf	___aldiv@divisor,w
  4688  0C6C  1903               	skipnz
  4689  0C6D  2C6F               	goto	u1701
  4690  0C6E  2C70               	goto	u1700
  4691  0C6F                     u1701:
  4692  0C6F  2CBD               	goto	l1676
  4693  0C70                     u1700:
  4694  0C70                     l1658:
  4695  0C70  01F4               	clrf	___aldiv@counter
  4696  0C71  0AF4               	incf	___aldiv@counter,f
  4697  0C72  2C80               	goto	l1662
  4698  0C73                     l1660:
  4699  0C73  3001               	movlw	1
  4700  0C74  00F3               	movwf	??___aldiv
  4701  0C75                     u1715:
  4702  0C75  1003               	clrc
  4703  0C76  0DA0               	rlf	___aldiv@divisor,f
  4704  0C77  0DA1               	rlf	___aldiv@divisor+1,f
  4705  0C78  0DA2               	rlf	___aldiv@divisor+2,f
  4706  0C79  0DA3               	rlf	___aldiv@divisor+3,f
  4707  0C7A  0BF3               	decfsz	??___aldiv,f
  4708  0C7B  2C75               	goto	u1715
  4709  0C7C  3001               	movlw	1
  4710  0C7D  00F3               	movwf	??___aldiv
  4711  0C7E  0873               	movf	??___aldiv,w
  4712  0C7F  07F4               	addwf	___aldiv@counter,f
  4713  0C80                     l1662:
  4714  0C80  1FA3               	btfss	___aldiv@divisor+3,7
  4715  0C81  2C83               	goto	u1721
  4716  0C82  2C84               	goto	u1720
  4717  0C83                     u1721:
  4718  0C83  2C73               	goto	l1660
  4719  0C84                     u1720:
  4720  0C84                     l1664:
  4721  0C84  3001               	movlw	1
  4722  0C85  00F3               	movwf	??___aldiv
  4723  0C86                     u1735:
  4724  0C86  1003               	clrc
  4725  0C87  0DF6               	rlf	___aldiv@quotient,f
  4726  0C88  0DF7               	rlf	___aldiv@quotient+1,f
  4727  0C89  0DF8               	rlf	___aldiv@quotient+2,f
  4728  0C8A  0DF9               	rlf	___aldiv@quotient+3,f
  4729  0C8B  0BF3               	decfsz	??___aldiv,f
  4730  0C8C  2C86               	goto	u1735
  4731  0C8D                     l1666:
  4732  0C8D  0823               	movf	___aldiv@divisor+3,w
  4733  0C8E  0227               	subwf	___aldiv@dividend+3,w
  4734  0C8F  1D03               	skipz
  4735  0C90  2C9B               	goto	u1745
  4736  0C91  0822               	movf	___aldiv@divisor+2,w
  4737  0C92  0226               	subwf	___aldiv@dividend+2,w
  4738  0C93  1D03               	skipz
  4739  0C94  2C9B               	goto	u1745
  4740  0C95  0821               	movf	___aldiv@divisor+1,w
  4741  0C96  0225               	subwf	___aldiv@dividend+1,w
  4742  0C97  1D03               	skipz
  4743  0C98  2C9B               	goto	u1745
  4744  0C99  0820               	movf	___aldiv@divisor,w
  4745  0C9A  0224               	subwf	___aldiv@dividend,w
  4746  0C9B                     u1745:
  4747  0C9B  1C03               	skipc
  4748  0C9C  2C9E               	goto	u1741
  4749  0C9D  2C9F               	goto	u1740
  4750  0C9E                     u1741:
  4751  0C9E  2CAE               	goto	l1672
  4752  0C9F                     u1740:
  4753  0C9F                     l1668:
  4754  0C9F  0820               	movf	___aldiv@divisor,w
  4755  0CA0  02A4               	subwf	___aldiv@dividend,f
  4756  0CA1  0821               	movf	___aldiv@divisor+1,w
  4757  0CA2  1C03               	skipc
  4758  0CA3  0F21               	incfsz	___aldiv@divisor+1,w
  4759  0CA4  02A5               	subwf	___aldiv@dividend+1,f
  4760  0CA5  0822               	movf	___aldiv@divisor+2,w
  4761  0CA6  1C03               	skipc
  4762  0CA7  0F22               	incfsz	___aldiv@divisor+2,w
  4763  0CA8  02A6               	subwf	___aldiv@dividend+2,f
  4764  0CA9  0823               	movf	___aldiv@divisor+3,w
  4765  0CAA  1C03               	skipc
  4766  0CAB  0F23               	incfsz	___aldiv@divisor+3,w
  4767  0CAC  02A7               	subwf	___aldiv@dividend+3,f
  4768  0CAD                     l1670:
  4769  0CAD  1476               	bsf	___aldiv@quotient,0
  4770  0CAE                     l1672:
  4771  0CAE  3001               	movlw	1
  4772  0CAF                     u1755:
  4773  0CAF  1003               	clrc
  4774  0CB0  0CA3               	rrf	___aldiv@divisor+3,f
  4775  0CB1  0CA2               	rrf	___aldiv@divisor+2,f
  4776  0CB2  0CA1               	rrf	___aldiv@divisor+1,f
  4777  0CB3  0CA0               	rrf	___aldiv@divisor,f
  4778  0CB4  3EFF               	addlw	-1
  4779  0CB5  1D03               	skipz
  4780  0CB6  2CAF               	goto	u1755
  4781  0CB7                     l1674:
  4782  0CB7  3001               	movlw	1
  4783  0CB8  02F4               	subwf	___aldiv@counter,f
  4784  0CB9  1D03               	btfss	3,2
  4785  0CBA  2CBC               	goto	u1761
  4786  0CBB  2CBD               	goto	u1760
  4787  0CBC                     u1761:
  4788  0CBC  2C84               	goto	l1664
  4789  0CBD                     u1760:
  4790  0CBD                     l1676:
  4791  0CBD  0875               	movf	___aldiv@sign,w
  4792  0CBE  1903               	btfsc	3,2
  4793  0CBF  2CC1               	goto	u1771
  4794  0CC0  2CC2               	goto	u1770
  4795  0CC1                     u1771:
  4796  0CC1  2CCD               	goto	l1680
  4797  0CC2                     u1770:
  4798  0CC2                     l1678:
  4799  0CC2  09F6               	comf	___aldiv@quotient,f
  4800  0CC3  09F7               	comf	___aldiv@quotient+1,f
  4801  0CC4  09F8               	comf	___aldiv@quotient+2,f
  4802  0CC5  09F9               	comf	___aldiv@quotient+3,f
  4803  0CC6  0AF6               	incf	___aldiv@quotient,f
  4804  0CC7  1903               	skipnz
  4805  0CC8  0AF7               	incf	___aldiv@quotient+1,f
  4806  0CC9  1903               	skipnz
  4807  0CCA  0AF8               	incf	___aldiv@quotient+2,f
  4808  0CCB  1903               	skipnz
  4809  0CCC  0AF9               	incf	___aldiv@quotient+3,f
  4810  0CCD                     l1680:
  4811  0CCD  0879               	movf	___aldiv@quotient+3,w
  4812  0CCE  00A3               	movwf	?___aldiv+3
  4813  0CCF  0878               	movf	___aldiv@quotient+2,w
  4814  0CD0  00A2               	movwf	?___aldiv+2
  4815  0CD1  0877               	movf	___aldiv@quotient+1,w
  4816  0CD2  00A1               	movwf	?___aldiv+1
  4817  0CD3  0876               	movf	___aldiv@quotient,w
  4818  0CD4  00A0               	movwf	?___aldiv
  4819  0CD5                     l409:
  4820  0CD5  0008               	return
  4821  0CD6                     __end_of___aldiv:
  4822                           
  4823                           	psect	text14
  4824  0ED2                     __ptext14:	
  4825 ;; *************** function _BMP280_begin *****************
  4826 ;; Defined at:
  4827 ;;		line 155 in file "BMP280.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  mode            1    wreg     enum E1307
  4830 ;;  T_sampling      1   10[BANK0 ] enum E1312
  4831 ;;  P_sampling      1   11[BANK0 ] enum E1312
  4832 ;;  filter          1   12[BANK0 ] enum E1320
  4833 ;;  standby         1   13[BANK0 ] enum E1327
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  mode            1    9[COMMON] enum E1307
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  2   10[BANK0 ] int 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4845 ;;      Params:         0       4       0       0       0
  4846 ;;      Locals:         1       0       0       0       0
  4847 ;;      Temps:          0       4       0       0       0
  4848 ;;      Totals:         1       8       0       0       0
  4849 ;;Total ram usage:        9 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    6
  4852 ;; This function calls:
  4853 ;;		_BMP280_Configure
  4854 ;;		_BMP280_Read16
  4855 ;;		_BMP280_Read8
  4856 ;;		_BMP280_Write
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _BMP280_begin
  4864  0ED2                     _BMP280_begin:
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  4868                           ;BMP280_begin@mode stored from wreg
  4869  0ED2  00F9               	movwf	BMP280_begin@mode
  4870  0ED3                     l1690:
  4871                           
  4872                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  4873  0ED3  30D0               	movlw	208
  4874  0ED4  120A  158A  2292  120A  158A  	fcall	_BMP280_Read8
  4875  0ED9  3A58               	xorlw	88
  4876  0EDA  1903               	skipnz
  4877  0EDB  2EDD               	goto	u1781
  4878  0EDC  2EDE               	goto	u1780
  4879  0EDD                     u1781:
  4880  0EDD  2EE3               	goto	l1696
  4881  0EDE                     u1780:
  4882  0EDE                     l1692:
  4883                           
  4884                           ;BMP280.c: 162:     return 0;
  4885  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  4886  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  4887  0EE0  01AA               	clrf	?_BMP280_begin
  4888  0EE1  01AB               	clrf	?_BMP280_begin+1
  4889  0EE2  2FFF               	goto	l182
  4890  0EE3                     l1696:
  4891                           
  4892                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  4893  0EE3  30B6               	movlw	182
  4894  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0EE6  00AE               	movwf	??_BMP280_begin
  4897  0EE7  082E               	movf	??_BMP280_begin,w
  4898  0EE8  00F5               	movwf	BMP280_Write@_data
  4899  0EE9  30E0               	movlw	224
  4900  0EEA  120A  158A  21FD  120A  158A  	fcall	_BMP280_Write
  4901  0EEF                     l1698:
  4902                           
  4903                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  4904  0EEF  3002               	movlw	2
  4905  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  4907  0EF2  00B0               	movwf	??_BMP280_begin+2
  4908  0EF3  3004               	movlw	4
  4909  0EF4  00AF               	movwf	??_BMP280_begin+1
  4910  0EF5  30B9               	movlw	185
  4911  0EF6  00AE               	movwf	??_BMP280_begin
  4912  0EF7                     u2127:
  4913  0EF7  0BAE               	decfsz	??_BMP280_begin,f
  4914  0EF8  2EF7               	goto	u2127
  4915  0EF9  0BAF               	decfsz	??_BMP280_begin+1,f
  4916  0EFA  2EF7               	goto	u2127
  4917  0EFB  0BB0               	decfsz	??_BMP280_begin+2,f
  4918  0EFC  2EF7               	goto	u2127
  4919  0EFD  2EFE               	nop2
  4920  0EFE                     l1702:	
  4921                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4922                           
  4923                           
  4924                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  4925  0EFE  30F3               	movlw	243
  4926  0EFF  120A  158A  2292  120A  158A  	fcall	_BMP280_Read8
  4927  0F04  3901               	andlw	1
  4928  0F05  1D03               	btfss	3,2
  4929  0F06  2F08               	goto	u1791
  4930  0F07  2F09               	goto	u1790
  4931  0F08                     u1791:
  4932  0F08  2EEF               	goto	l1698
  4933  0F09                     u1790:
  4934  0F09                     l1704:
  4935                           
  4936                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  4937  0F09  3088               	movlw	136
  4938  0F0A  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  4939  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0F11  0821               	movf	?_BMP280_Read16+1,w
  4942  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  4943  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  4944  0F14  00BA               	movwf	(_BMP280_calib+1)^(0+128)
  4945  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4946  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4947  0F17  0820               	movf	?_BMP280_Read16,w
  4948  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  4949  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  4950  0F1A  00B9               	movwf	_BMP280_calib^(0+128)
  4951                           
  4952                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  4953  0F1B  308A               	movlw	138
  4954  0F1C  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  4955  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4956  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4957  0F23  0821               	movf	?_BMP280_Read16+1,w
  4958  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  4960  0F26  00BC               	movwf	((_BMP280_calib+1)^(0+128)+2)
  4961  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0F29  0820               	movf	?_BMP280_Read16,w
  4964  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  4965  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  4966  0F2C  00BB               	movwf	(_BMP280_calib^(0+128)+2)
  4967                           
  4968                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  4969  0F2D  308C               	movlw	140
  4970  0F2E  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  4971  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0F35  0821               	movf	?_BMP280_Read16+1,w
  4974  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0F38  00BE               	movwf	((_BMP280_calib+1)^(0+128)+4)
  4977  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4978  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4979  0F3B  0820               	movf	?_BMP280_Read16,w
  4980  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4981  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4982  0F3E  00BD               	movwf	(_BMP280_calib^(0+128)+4)
  4983                           
  4984                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  4985  0F3F  308E               	movlw	142
  4986  0F40  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  4987  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0F47  0821               	movf	?_BMP280_Read16+1,w
  4990  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  4991  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  4992  0F4A  00C0               	movwf	((_BMP280_calib+1)^(0+128)+6)
  4993  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0F4D  0820               	movf	?_BMP280_Read16,w
  4996  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  4997  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  4998  0F50  00BF               	movwf	(_BMP280_calib^(0+128)+6)
  4999                           
  5000                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  5001  0F51  3090               	movlw	144
  5002  0F52  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5003  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  5004  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  5005  0F59  0821               	movf	?_BMP280_Read16+1,w
  5006  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  5007  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  5008  0F5C  00C2               	movwf	((_BMP280_calib+1)^(0+128)+8)
  5009  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0F5F  0820               	movf	?_BMP280_Read16,w
  5012  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  5013  0F61  1303               	bcf	3,6	;RP1=0, select bank1
  5014  0F62  00C1               	movwf	(_BMP280_calib^(0+128)+8)
  5015                           
  5016                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  5017  0F63  3092               	movlw	146
  5018  0F64  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5019  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0F6B  0821               	movf	?_BMP280_Read16+1,w
  5022  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  5023  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  5024  0F6E  00C4               	movwf	((_BMP280_calib+1)^(0+128)+10)
  5025  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0F71  0820               	movf	?_BMP280_Read16,w
  5028  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  5029  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  5030  0F74  00C3               	movwf	(_BMP280_calib^(0+128)+10)
  5031                           
  5032                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  5033  0F75  3094               	movlw	148
  5034  0F76  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5035  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  5036  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  5037  0F7D  0821               	movf	?_BMP280_Read16+1,w
  5038  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  5039  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  5040  0F80  00C6               	movwf	((_BMP280_calib+1)^(0+128)+12)
  5041  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  5042  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  5043  0F83  0820               	movf	?_BMP280_Read16,w
  5044  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0F86  00C5               	movwf	(_BMP280_calib^(0+128)+12)
  5047                           
  5048                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  5049  0F87  3096               	movlw	150
  5050  0F88  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5051  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0F8F  0821               	movf	?_BMP280_Read16+1,w
  5054  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  5055  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  5056  0F92  00C8               	movwf	((_BMP280_calib+1)^(0+128)+14)
  5057  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0F95  0820               	movf	?_BMP280_Read16,w
  5060  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  5061  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  5062  0F98  00C7               	movwf	(_BMP280_calib^(0+128)+14)
  5063                           
  5064                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  5065  0F99  3098               	movlw	152
  5066  0F9A  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5067  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  5068  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  5069  0FA1  0821               	movf	?_BMP280_Read16+1,w
  5070  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  5071  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  5072  0FA4  00CA               	movwf	((_BMP280_calib+1)^(0+128)+16)
  5073  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  5074  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  5075  0FA7  0820               	movf	?_BMP280_Read16,w
  5076  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  5077  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  5078  0FAA  00C9               	movwf	(_BMP280_calib^(0+128)+16)
  5079                           
  5080                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  5081  0FAB  309A               	movlw	154
  5082  0FAC  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5083  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0FB3  0821               	movf	?_BMP280_Read16+1,w
  5086  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  5087  0FB5  1303               	bcf	3,6	;RP1=0, select bank1
  5088  0FB6  00CC               	movwf	((_BMP280_calib+1)^(0+128)+18)
  5089  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0FB9  0820               	movf	?_BMP280_Read16,w
  5092  0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  5093  0FBB  1303               	bcf	3,6	;RP1=0, select bank1
  5094  0FBC  00CB               	movwf	(_BMP280_calib^(0+128)+18)
  5095                           
  5096                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  5097  0FBD  309C               	movlw	156
  5098  0FBE  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5099  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0FC5  0821               	movf	?_BMP280_Read16+1,w
  5102  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  5103  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  5104  0FC8  00CE               	movwf	((_BMP280_calib+1)^(0+128)+20)
  5105  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0FCB  0820               	movf	?_BMP280_Read16,w
  5108  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  5109  0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  5110  0FCE  00CD               	movwf	(_BMP280_calib^(0+128)+20)
  5111                           
  5112                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  5113  0FCF  309E               	movlw	158
  5114  0FD0  120A  158A  2366  120A  158A  	fcall	_BMP280_Read16
  5115  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0FD7  0821               	movf	?_BMP280_Read16+1,w
  5118  0FD8  1683               	bsf	3,5	;RP0=1, select bank1
  5119  0FD9  1303               	bcf	3,6	;RP1=0, select bank1
  5120  0FDA  00D0               	movwf	((_BMP280_calib+1)^(0+128)+22)
  5121  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0FDD  0820               	movf	?_BMP280_Read16,w
  5124  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0FE0  00CF               	movwf	(_BMP280_calib^(0+128)+22)
  5127                           
  5128                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  5129  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0FE3  082A               	movf	BMP280_begin@T_sampling,w
  5132  0FE4  00AE               	movwf	??_BMP280_begin
  5133  0FE5  082E               	movf	??_BMP280_begin,w
  5134  0FE6  00A0               	movwf	BMP280_Configure@T_sampling
  5135  0FE7  082B               	movf	BMP280_begin@P_sampling,w
  5136  0FE8  00AF               	movwf	??_BMP280_begin+1
  5137  0FE9  082F               	movf	??_BMP280_begin+1,w
  5138  0FEA  00A1               	movwf	BMP280_Configure@P_sampling
  5139  0FEB  082C               	movf	BMP280_begin@filter,w
  5140  0FEC  00B0               	movwf	??_BMP280_begin+2
  5141  0FED  0830               	movf	??_BMP280_begin+2,w
  5142  0FEE  00A2               	movwf	BMP280_Configure@filter
  5143  0FEF  082D               	movf	BMP280_begin@standby,w
  5144  0FF0  00B1               	movwf	??_BMP280_begin+3
  5145  0FF1  0831               	movf	??_BMP280_begin+3,w
  5146  0FF2  00A3               	movwf	BMP280_Configure@standby
  5147  0FF3  0879               	movf	BMP280_begin@mode,w
  5148  0FF4  120A  158A  22D6  120A  158A  	fcall	_BMP280_Configure
  5149  0FF9                     l1706:
  5150                           
  5151                           ;BMP280.c: 188:   return 1;
  5152  0FF9  3001               	movlw	1
  5153  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0FFC  00AA               	movwf	?_BMP280_begin
  5156  0FFD  3000               	movlw	0
  5157  0FFE  00AB               	movwf	?_BMP280_begin+1
  5158  0FFF                     l182:
  5159  0FFF  0008               	return
  5160  1000                     __end_of_BMP280_begin:
  5161                           
  5162                           	psect	text15
  5163  0A92                     __ptext15:	
  5164 ;; *************** function _BMP280_Read8 *****************
  5165 ;; Defined at:
  5166 ;;		line 105 in file "BMP280.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  reg_addr        1    wreg     unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  reg_addr        1    2[BANK0 ] unsigned char 
  5171 ;;  ret             1    3[BANK0 ] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      unsigned char 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0, pclath, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5181 ;;      Params:         0       0       0       0       0
  5182 ;;      Locals:         0       2       0       0       0
  5183 ;;      Temps:          0       2       0       0       0
  5184 ;;      Totals:         0       4       0       0       0
  5185 ;;Total ram usage:        4 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    4
  5188 ;; This function calls:
  5189 ;;		_I2C_Master_Read
  5190 ;;		_I2C_Master_Start
  5191 ;;		_I2C_Master_Stop
  5192 ;;		_I2C_Master_Write
  5193 ;; This function is called by:
  5194 ;;		_BMP280_begin
  5195 ;;		_BMP280_ForcedMeasurement
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _BMP280_Read8
  5201  0A92                     _BMP280_Read8:
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  5205                           ;BMP280_Read8@reg_addr stored from wreg
  5206  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0A94  00A2               	movwf	BMP280_Read8@reg_addr
  5209  0A95                     l1596:
  5210                           
  5211                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  5212  0A95  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  5213                           
  5214                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  5215  0A9A  30EE               	movlw	238
  5216  0A9B  00F3               	movwf	I2C_Master_Write@d
  5217  0A9C  3000               	movlw	0
  5218  0A9D  00F4               	movwf	I2C_Master_Write@d+1
  5219  0A9E  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5220                           
  5221                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  5222  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  5223  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  5224  0AA5  0822               	movf	BMP280_Read8@reg_addr,w
  5225  0AA6  00A0               	movwf	??_BMP280_Read8
  5226  0AA7  01A1               	clrf	??_BMP280_Read8+1
  5227  0AA8  0820               	movf	??_BMP280_Read8,w
  5228  0AA9  00F3               	movwf	I2C_Master_Write@d
  5229  0AAA  0821               	movf	??_BMP280_Read8+1,w
  5230  0AAB  00F4               	movwf	I2C_Master_Write@d+1
  5231  0AAC  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5232                           
  5233                           ;BMP280.c: 112:   I2C_Master_Start();
  5234  0AB1  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  5235                           
  5236                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  5237  0AB6  30EF               	movlw	239
  5238  0AB7  00F3               	movwf	I2C_Master_Write@d
  5239  0AB8  3000               	movlw	0
  5240  0AB9  00F4               	movwf	I2C_Master_Write@d+1
  5241  0ABA  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5242                           
  5243                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  5244  0ABF  3000               	movlw	0
  5245  0AC0  00F3               	movwf	I2C_Master_Read@a
  5246  0AC1  00F4               	movwf	I2C_Master_Read@a+1
  5247  0AC2  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  5248  0AC7  0873               	movf	?_I2C_Master_Read,w
  5249  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  5250  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  5251  0ACA  00A0               	movwf	??_BMP280_Read8
  5252  0ACB  0820               	movf	??_BMP280_Read8,w
  5253  0ACC  00A3               	movwf	BMP280_Read8@ret
  5254                           
  5255                           ;BMP280.c: 115:   I2C_Master_Stop();
  5256  0ACD  120A  158A  2128  120A  158A  	fcall	_I2C_Master_Stop
  5257  0AD2                     l1598:
  5258                           
  5259                           ;BMP280.c: 117:   return ret;
  5260  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  5261  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  5262  0AD4  0823               	movf	BMP280_Read8@ret,w
  5263  0AD5                     l172:
  5264  0AD5  0008               	return
  5265  0AD6                     __end_of_BMP280_Read8:
  5266                           
  5267                           	psect	text16
  5268  0B66                     __ptext16:	
  5269 ;; *************** function _BMP280_Read16 *****************
  5270 ;; Defined at:
  5271 ;;		line 121 in file "BMP280.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  reg_addr        1    wreg     unsigned char 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  reg_addr        1    4[BANK0 ] unsigned char 
  5276 ;;  ret             2    5[BANK0 ] struct .
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    0[BANK0 ] unsigned int 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         0       2       0       0       0
  5287 ;;      Locals:         0       3       0       0       0
  5288 ;;      Temps:          0       2       0       0       0
  5289 ;;      Totals:         0       7       0       0       0
  5290 ;;Total ram usage:        7 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    4
  5293 ;; This function calls:
  5294 ;;		_I2C_Master_Read
  5295 ;;		_I2C_Master_Start
  5296 ;;		_I2C_Master_Stop
  5297 ;;		_I2C_Master_Write
  5298 ;; This function is called by:
  5299 ;;		_BMP280_begin
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function _BMP280_Read16
  5305  0B66                     _BMP280_Read16:
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  5309                           ;BMP280_Read16@reg_addr stored from wreg
  5310  0B66  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0B67  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0B68  00A4               	movwf	BMP280_Read16@reg_addr
  5313  0B69                     l1602:
  5314                           
  5315                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  5316  0B69  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  5317                           
  5318                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  5319  0B6E  30EE               	movlw	238
  5320  0B6F  00F3               	movwf	I2C_Master_Write@d
  5321  0B70  3000               	movlw	0
  5322  0B71  00F4               	movwf	I2C_Master_Write@d+1
  5323  0B72  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5324                           
  5325                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  5326  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0B79  0824               	movf	BMP280_Read16@reg_addr,w
  5329  0B7A  00A2               	movwf	??_BMP280_Read16
  5330  0B7B  01A3               	clrf	??_BMP280_Read16+1
  5331  0B7C  0822               	movf	??_BMP280_Read16,w
  5332  0B7D  00F3               	movwf	I2C_Master_Write@d
  5333  0B7E  0823               	movf	??_BMP280_Read16+1,w
  5334  0B7F  00F4               	movwf	I2C_Master_Write@d+1
  5335  0B80  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5336                           
  5337                           ;BMP280.c: 132:   I2C_Master_Start();
  5338  0B85  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  5339                           
  5340                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  5341  0B8A  30EF               	movlw	239
  5342  0B8B  00F3               	movwf	I2C_Master_Write@d
  5343  0B8C  3000               	movlw	0
  5344  0B8D  00F4               	movwf	I2C_Master_Write@d+1
  5345  0B8E  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5346                           
  5347                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  5348  0B93  3001               	movlw	1
  5349  0B94  00F3               	movwf	I2C_Master_Read@a
  5350  0B95  3000               	movlw	0
  5351  0B96  00F4               	movwf	I2C_Master_Read@a+1
  5352  0B97  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  5353  0B9C  0873               	movf	?_I2C_Master_Read,w
  5354  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0B9F  00A2               	movwf	??_BMP280_Read16
  5357  0BA0  0822               	movf	??_BMP280_Read16,w
  5358  0BA1  00A5               	movwf	BMP280_Read16@ret
  5359                           
  5360                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  5361  0BA2  3000               	movlw	0
  5362  0BA3  00F3               	movwf	I2C_Master_Read@a
  5363  0BA4  00F4               	movwf	I2C_Master_Read@a+1
  5364  0BA5  120A  158A  222A  120A  158A  	fcall	_I2C_Master_Read
  5365  0BAA  0873               	movf	?_I2C_Master_Read,w
  5366  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5367  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0BAD  00A2               	movwf	??_BMP280_Read16
  5369  0BAE  0822               	movf	??_BMP280_Read16,w
  5370  0BAF  00A6               	movwf	BMP280_Read16@ret+1
  5371                           
  5372                           ;BMP280.c: 136:   I2C_Master_Stop();
  5373  0BB0  120A  158A  2128  120A  158A  	fcall	_I2C_Master_Stop
  5374  0BB5                     l1604:
  5375                           
  5376                           ;BMP280.c: 138:   return(ret.w);
  5377  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  5378  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  5379  0BB7  0826               	movf	BMP280_Read16@ret+1,w
  5380  0BB8  00A1               	movwf	?_BMP280_Read16+1
  5381  0BB9  0825               	movf	BMP280_Read16@ret,w
  5382  0BBA  00A0               	movwf	?_BMP280_Read16
  5383  0BBB                     l175:
  5384  0BBB  0008               	return
  5385  0BBC                     __end_of_BMP280_Read16:
  5386                           
  5387                           	psect	text17
  5388  0A2A                     __ptext17:	
  5389 ;; *************** function _I2C_Master_Read *****************
  5390 ;; Defined at:
  5391 ;;		line 74 in file "I2C.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  a               2    3[COMMON] unsigned short 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  temp            2    7[COMMON] unsigned short 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  2    3[COMMON] unsigned short 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0, pclath, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5405 ;;      Params:         2       0       0       0       0
  5406 ;;      Locals:         2       0       0       0       0
  5407 ;;      Temps:          2       0       0       0       0
  5408 ;;      Totals:         6       0       0       0       0
  5409 ;;Total ram usage:        6 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    3
  5412 ;; This function calls:
  5413 ;;		_I2C_Master_Wait
  5414 ;; This function is called by:
  5415 ;;		_BMP280_Read8
  5416 ;;		_BMP280_Read16
  5417 ;;		_BMP280_Update
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           
  5422                           ;psect for function _I2C_Master_Read
  5423  0A2A                     _I2C_Master_Read:
  5424  0A2A                     l1542:	
  5425                           ;incstack = 0
  5426                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5427                           
  5428                           
  5429                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5430  0A2A  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5431  0A2F                     l1544:
  5432                           
  5433                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5434  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  5435  0A30  1303               	bcf	3,6	;RP1=0, select bank1
  5436  0A31  1591               	bsf	17,3	;volatile
  5437                           
  5438                           ;I2C.c: 79:     I2C_Master_Wait();
  5439  0A32  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5440  0A37                     l1546:
  5441                           
  5442                           ;I2C.c: 80:     temp = SSPBUF;
  5443  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0A39  0813               	movf	19,w	;volatile
  5446  0A3A  00F5               	movwf	??_I2C_Master_Read
  5447  0A3B  01F6               	clrf	??_I2C_Master_Read+1
  5448  0A3C  0875               	movf	??_I2C_Master_Read,w
  5449  0A3D  00F7               	movwf	I2C_Master_Read@temp
  5450  0A3E  0876               	movf	??_I2C_Master_Read+1,w
  5451  0A3F  00F8               	movwf	I2C_Master_Read@temp+1
  5452  0A40                     l1548:
  5453                           
  5454                           ;I2C.c: 81:     I2C_Master_Wait();
  5455  0A40  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5456  0A45                     l1550:
  5457                           
  5458                           ;I2C.c: 82:     if(a == 1){
  5459  0A45  0373               	decf	I2C_Master_Read@a,w
  5460  0A46  0474               	iorwf	I2C_Master_Read@a+1,w
  5461  0A47  1D03               	btfss	3,2
  5462  0A48  2A4A               	goto	u1531
  5463  0A49  2A4B               	goto	u1530
  5464  0A4A                     u1531:
  5465  0A4A  2A4F               	goto	l143
  5466  0A4B                     u1530:
  5467  0A4B                     l1552:
  5468                           
  5469                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5470  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  5471  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  5472  0A4D  1291               	bcf	17,5	;volatile
  5473                           
  5474                           ;I2C.c: 84:     }else{
  5475  0A4E  2A52               	goto	l144
  5476  0A4F                     l143:
  5477                           
  5478                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5479  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  5480  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  5481  0A51  1691               	bsf	17,5	;volatile
  5482  0A52                     l144:	
  5483                           ;I2C.c: 86:     }
  5484                           
  5485                           
  5486                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5487  0A52  1611               	bsf	17,4	;volatile
  5488  0A53                     l1554:
  5489                           
  5490                           ;I2C.c: 88:     return temp;
  5491  0A53  0878               	movf	I2C_Master_Read@temp+1,w
  5492  0A54  00F4               	movwf	?_I2C_Master_Read+1
  5493  0A55  0877               	movf	I2C_Master_Read@temp,w
  5494  0A56  00F3               	movwf	?_I2C_Master_Read
  5495  0A57                     l145:
  5496  0A57  0008               	return
  5497  0A58                     __end_of_I2C_Master_Read:
  5498                           
  5499                           	psect	text18
  5500  0AD6                     __ptext18:	
  5501 ;; *************** function _BMP280_Configure *****************
  5502 ;; Defined at:
  5503 ;;		line 142 in file "BMP280.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  mode            1    wreg     enum E1307
  5506 ;;  T_sampling      1    0[BANK0 ] enum E1312
  5507 ;;  P_sampling      1    1[BANK0 ] enum E1312
  5508 ;;  filter          1    2[BANK0 ] enum E1320
  5509 ;;  standby         1    3[BANK0 ] enum E1327
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  mode            1    7[BANK0 ] enum E1307
  5512 ;;  _config         1    9[BANK0 ] unsigned char 
  5513 ;;  _ctrl_meas      1    8[BANK0 ] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         0       4       0       0       0
  5524 ;;      Locals:         0       3       0       0       0
  5525 ;;      Temps:          0       3       0       0       0
  5526 ;;      Totals:         0      10       0       0       0
  5527 ;;Total ram usage:       10 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    5
  5530 ;; This function calls:
  5531 ;;		_BMP280_Write
  5532 ;; This function is called by:
  5533 ;;		_BMP280_begin
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _BMP280_Configure
  5539  0AD6                     _BMP280_Configure:
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  5543                           ;BMP280_Configure@mode stored from wreg
  5544  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0AD8  00A7               	movwf	BMP280_Configure@mode
  5547  0AD9                     l1608:
  5548                           
  5549                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  5550  0AD9  0822               	movf	BMP280_Configure@filter,w
  5551  0ADA  00A4               	movwf	??_BMP280_Configure
  5552  0ADB  3002               	movlw	2
  5553  0ADC                     u1625:
  5554  0ADC  1003               	clrc
  5555  0ADD  0DA4               	rlf	??_BMP280_Configure,f
  5556  0ADE  3EFF               	addlw	-1
  5557  0ADF  1D03               	skipz
  5558  0AE0  2ADC               	goto	u1625
  5559  0AE1  0823               	movf	BMP280_Configure@standby,w
  5560  0AE2  00A5               	movwf	??_BMP280_Configure+1
  5561  0AE3  3004               	movlw	4
  5562  0AE4                     u1635:
  5563  0AE4  1003               	clrc
  5564  0AE5  0DA5               	rlf	??_BMP280_Configure+1,f
  5565  0AE6  3EFF               	addlw	-1
  5566  0AE7  1D03               	skipz
  5567  0AE8  2AE4               	goto	u1635
  5568  0AE9  1003               	clrc
  5569  0AEA  0D25               	rlf	??_BMP280_Configure+1,w
  5570  0AEB  0424               	iorwf	??_BMP280_Configure,w
  5571  0AEC  39FC               	andlw	252
  5572  0AED  00A6               	movwf	??_BMP280_Configure+2
  5573  0AEE  0826               	movf	??_BMP280_Configure+2,w
  5574  0AEF  00A9               	movwf	BMP280_Configure@_config
  5575                           
  5576                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  5577  0AF0  0821               	movf	BMP280_Configure@P_sampling,w
  5578  0AF1  00A4               	movwf	??_BMP280_Configure
  5579  0AF2  3002               	movlw	2
  5580  0AF3                     u1645:
  5581  0AF3  1003               	clrc
  5582  0AF4  0DA4               	rlf	??_BMP280_Configure,f
  5583  0AF5  3EFF               	addlw	-1
  5584  0AF6  1D03               	skipz
  5585  0AF7  2AF3               	goto	u1645
  5586  0AF8  0820               	movf	BMP280_Configure@T_sampling,w
  5587  0AF9  00A5               	movwf	??_BMP280_Configure+1
  5588  0AFA  3004               	movlw	4
  5589  0AFB                     u1655:
  5590  0AFB  1003               	clrc
  5591  0AFC  0DA5               	rlf	??_BMP280_Configure+1,f
  5592  0AFD  3EFF               	addlw	-1
  5593  0AFE  1D03               	skipz
  5594  0AFF  2AFB               	goto	u1655
  5595  0B00  1003               	clrc
  5596  0B01  0D25               	rlf	??_BMP280_Configure+1,w
  5597  0B02  0424               	iorwf	??_BMP280_Configure,w
  5598  0B03  0427               	iorwf	BMP280_Configure@mode,w
  5599  0B04  00A6               	movwf	??_BMP280_Configure+2
  5600  0B05  0826               	movf	??_BMP280_Configure+2,w
  5601  0B06  00A8               	movwf	BMP280_Configure@_ctrl_meas
  5602  0B07                     l1610:
  5603                           
  5604                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  5605  0B07  0829               	movf	BMP280_Configure@_config,w
  5606  0B08  00A4               	movwf	??_BMP280_Configure
  5607  0B09  0824               	movf	??_BMP280_Configure,w
  5608  0B0A  00F5               	movwf	BMP280_Write@_data
  5609  0B0B  30F5               	movlw	245
  5610  0B0C  120A  158A  21FD  120A  158A  	fcall	_BMP280_Write
  5611  0B11                     l1612:
  5612                           
  5613                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  5614  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0B13  0828               	movf	BMP280_Configure@_ctrl_meas,w
  5617  0B14  00A4               	movwf	??_BMP280_Configure
  5618  0B15  0824               	movf	??_BMP280_Configure,w
  5619  0B16  00F5               	movwf	BMP280_Write@_data
  5620  0B17  30F4               	movlw	244
  5621  0B18  120A  158A  21FD  120A  158A  	fcall	_BMP280_Write
  5622  0B1D                     l178:
  5623  0B1D  0008               	return
  5624  0B1E                     __end_of_BMP280_Configure:
  5625                           
  5626                           	psect	text19
  5627  09FD                     __ptext19:	
  5628 ;; *************** function _BMP280_Write *****************
  5629 ;; Defined at:
  5630 ;;		line 95 in file "BMP280.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  reg_addr        1    wreg     unsigned char 
  5633 ;;  _data           1    5[COMMON] unsigned char 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  reg_addr        1    8[COMMON] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         1       0       0       0       0
  5646 ;;      Locals:         1       0       0       0       0
  5647 ;;      Temps:          2       0       0       0       0
  5648 ;;      Totals:         4       0       0       0       0
  5649 ;;Total ram usage:        4 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		_I2C_Master_Start
  5654 ;;		_I2C_Master_Stop
  5655 ;;		_I2C_Master_Write
  5656 ;; This function is called by:
  5657 ;;		_BMP280_Configure
  5658 ;;		_BMP280_begin
  5659 ;;		_BMP280_ForcedMeasurement
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _BMP280_Write
  5665  09FD                     _BMP280_Write:
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  5669                           ;BMP280_Write@reg_addr stored from wreg
  5670  09FD  00F8               	movwf	BMP280_Write@reg_addr
  5671  09FE                     l1558:
  5672                           
  5673                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  5674  09FE  120A  158A  211F  120A  158A  	fcall	_I2C_Master_Start
  5675                           
  5676                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  5677  0A03  30EE               	movlw	238
  5678  0A04  00F3               	movwf	I2C_Master_Write@d
  5679  0A05  3000               	movlw	0
  5680  0A06  00F4               	movwf	I2C_Master_Write@d+1
  5681  0A07  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5682                           
  5683                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  5684  0A0C  0878               	movf	BMP280_Write@reg_addr,w
  5685  0A0D  00F6               	movwf	??_BMP280_Write
  5686  0A0E  01F7               	clrf	??_BMP280_Write+1
  5687  0A0F  0876               	movf	??_BMP280_Write,w
  5688  0A10  00F3               	movwf	I2C_Master_Write@d
  5689  0A11  0877               	movf	??_BMP280_Write+1,w
  5690  0A12  00F4               	movwf	I2C_Master_Write@d+1
  5691  0A13  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5692                           
  5693                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  5694  0A18  0875               	movf	BMP280_Write@_data,w
  5695  0A19  00F6               	movwf	??_BMP280_Write
  5696  0A1A  01F7               	clrf	??_BMP280_Write+1
  5697  0A1B  0876               	movf	??_BMP280_Write,w
  5698  0A1C  00F3               	movwf	I2C_Master_Write@d
  5699  0A1D  0877               	movf	??_BMP280_Write+1,w
  5700  0A1E  00F4               	movwf	I2C_Master_Write@d+1
  5701  0A1F  120A  158A  2131  120A  158A  	fcall	_I2C_Master_Write
  5702                           
  5703                           ;BMP280.c: 101:   I2C_Master_Stop();
  5704  0A24  120A  158A  2128  120A  158A  	fcall	_I2C_Master_Stop
  5705  0A29                     l169:
  5706  0A29  0008               	return
  5707  0A2A                     __end_of_BMP280_Write:
  5708                           
  5709                           	psect	text20
  5710  0931                     __ptext20:	
  5711 ;; *************** function _I2C_Master_Write *****************
  5712 ;; Defined at:
  5713 ;;		line 65 in file "I2C.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  d               2    3[COMMON] unsigned int 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0, pclath, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         2       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0
  5730 ;;      Totals:         2       0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    3
  5734 ;; This function calls:
  5735 ;;		_I2C_Master_Wait
  5736 ;; This function is called by:
  5737 ;;		_BMP280_Write
  5738 ;;		_BMP280_Read8
  5739 ;;		_BMP280_Read16
  5740 ;;		_BMP280_Update
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function _I2C_Master_Write
  5746  0931                     _I2C_Master_Write:
  5747  0931                     l1538:	
  5748                           ;incstack = 0
  5749                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5750                           
  5751                           
  5752                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5753  0931  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5754  0936                     l1540:
  5755                           
  5756                           ;I2C.c: 68:     SSPBUF = d;
  5757  0936  0873               	movf	I2C_Master_Write@d,w
  5758  0937  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0938  1303               	bcf	3,6	;RP1=0, select bank0
  5760  0939  0093               	movwf	19	;volatile
  5761  093A                     l140:
  5762  093A  0008               	return
  5763  093B                     __end_of_I2C_Master_Write:
  5764                           
  5765                           	psect	text21
  5766  0928                     __ptext21:	
  5767 ;; *************** function _I2C_Master_Stop *****************
  5768 ;; Defined at:
  5769 ;;		line 55 in file "I2C.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, pclath, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    3
  5790 ;; This function calls:
  5791 ;;		_I2C_Master_Wait
  5792 ;; This function is called by:
  5793 ;;		_BMP280_Write
  5794 ;;		_BMP280_Read8
  5795 ;;		_BMP280_Read16
  5796 ;;		_BMP280_Update
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _I2C_Master_Stop
  5802  0928                     _I2C_Master_Stop:
  5803  0928                     l1534:	
  5804                           ;incstack = 0
  5805                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5806                           
  5807                           
  5808                           ;I2C.c: 57:     I2C_Master_Wait();
  5809  0928  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5810  092D                     l1536:
  5811                           
  5812                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5813  092D  1683               	bsf	3,5	;RP0=1, select bank1
  5814  092E  1303               	bcf	3,6	;RP1=0, select bank1
  5815  092F  1511               	bsf	17,2	;volatile
  5816  0930                     l137:
  5817  0930  0008               	return
  5818  0931                     __end_of_I2C_Master_Stop:
  5819                           
  5820                           	psect	text22
  5821  091F                     __ptext22:	
  5822 ;; *************** function _I2C_Master_Start *****************
  5823 ;; Defined at:
  5824 ;;		line 39 in file "I2C.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    3
  5845 ;; This function calls:
  5846 ;;		_I2C_Master_Wait
  5847 ;; This function is called by:
  5848 ;;		_BMP280_Write
  5849 ;;		_BMP280_Read8
  5850 ;;		_BMP280_Read16
  5851 ;;		_BMP280_Update
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function _I2C_Master_Start
  5857  091F                     _I2C_Master_Start:
  5858  091F                     l1530:	
  5859                           ;incstack = 0
  5860                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5861                           
  5862                           
  5863                           ;I2C.c: 41:     I2C_Master_Wait();
  5864  091F  120A  158A  2145  120A  158A  	fcall	_I2C_Master_Wait
  5865  0924                     l1532:
  5866                           
  5867                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5868  0924  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0925  1303               	bcf	3,6	;RP1=0, select bank1
  5870  0926  1411               	bsf	17,0	;volatile
  5871  0927                     l131:
  5872  0927  0008               	return
  5873  0928                     __end_of_I2C_Master_Start:
  5874                           
  5875                           	psect	text23
  5876  0945                     __ptext23:	
  5877 ;; *************** function _I2C_Master_Wait *****************
  5878 ;; Defined at:
  5879 ;;		line 32 in file "I2C.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         0       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0
  5896 ;;      Totals:         0       0       0       0       0
  5897 ;;Total ram usage:        0 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    2
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_I2C_Master_Start
  5904 ;;		_I2C_Master_Stop
  5905 ;;		_I2C_Master_Write
  5906 ;;		_I2C_Master_Read
  5907 ;;		_I2C_Master_RepeatedStart
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _I2C_Master_Wait
  5913  0945                     _I2C_Master_Wait:
  5914  0945                     l1526:	
  5915                           ;incstack = 0
  5916                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5917                           
  5918  0945                     l125:	
  5919                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5920                           
  5921  0945  1683               	bsf	3,5	;RP0=1, select bank1
  5922  0946  1303               	bcf	3,6	;RP1=0, select bank1
  5923  0947  1914               	btfsc	20,2	;volatile
  5924  0948  294A               	goto	u1511
  5925  0949  294B               	goto	u1510
  5926  094A                     u1511:
  5927  094A  2945               	goto	l125
  5928  094B                     u1510:
  5929  094B                     l1528:
  5930  094B  0811               	movf	17,w	;volatile
  5931  094C  391F               	andlw	31
  5932  094D  1D03               	btfss	3,2
  5933  094E  2950               	goto	u1521
  5934  094F  2951               	goto	u1520
  5935  0950                     u1521:
  5936  0950  2945               	goto	l125
  5937  0951                     u1520:
  5938  0951                     l128:
  5939  0951  0008               	return
  5940  0952                     __end_of_I2C_Master_Wait:
  5941                           
  5942                           	psect	text24
  5943  0960                     __ptext24:	
  5944 ;; *************** function _isr *****************
  5945 ;; Defined at:
  5946 ;;		line 218 in file "main_m.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5960 ;;      Params:         0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0
  5962 ;;      Temps:          3       0       0       0       0
  5963 ;;      Totals:         3       0       0       0       0
  5964 ;;Total ram usage:        3 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    1
  5967 ;; This function calls:
  5968 ;;		_UART_get_char
  5969 ;; This function is called by:
  5970 ;;		Interrupt level 1
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _isr
  5976  0960                     _isr:
  5977  0960                     i1l1504:
  5978                           
  5979                           ;main_m.c: 219:     if (PIR1bits.RCIF == 1) {
  5980  0960  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0961  1303               	bcf	3,6	;RP1=0, select bank0
  5982  0962  1E8C               	btfss	12,5	;volatile
  5983  0963  2965               	goto	u148_21
  5984  0964  2966               	goto	u148_20
  5985  0965                     u148_21:
  5986  0965  2971               	goto	i1l93
  5987  0966                     u148_20:
  5988  0966                     i1l1506:
  5989                           
  5990                           ;main_m.c: 220:         RX_Trans = UART_get_char();
  5991  0966  120A  158A  2152  120A  158A  	fcall	_UART_get_char
  5992  096B  00F0               	movwf	??_isr
  5993  096C  0870               	movf	??_isr,w
  5994  096D  1283               	bcf	3,5	;RP0=0, select bank0
  5995  096E  1303               	bcf	3,6	;RP1=0, select bank0
  5996  096F  00EE               	movwf	_RX_Trans
  5997  0970                     i1l1508:
  5998                           
  5999                           ;main_m.c: 221:         PIR1bits.RCIF = 0;
  6000  0970  128C               	bcf	12,5	;volatile
  6001  0971                     i1l93:
  6002  0971  0872               	movf	??_isr+2,w
  6003  0972  008A               	movwf	10
  6004  0973  0E71               	swapf	??_isr+1,w
  6005  0974  0083               	movwf	3
  6006  0975  0EFE               	swapf	btemp,f
  6007  0976  0E7E               	swapf	btemp,w
  6008  0977  0009               	retfie
  6009  0978                     __end_of_isr:
  6010                           
  6011                           	psect	intentry
  6012  0004                     __pintentry:	
  6013                           ;incstack = 0
  6014                           ; Regs used in _isr: [wreg+pclath+cstack]
  6015                           
  6016  0004                     interrupt_function:
  6017  007E                     saved_w	set	btemp
  6018  0004  00FE               	movwf	btemp
  6019  0005  0E03               	swapf	3,w
  6020  0006  00F1               	movwf	??_isr+1
  6021  0007  080A               	movf	10,w
  6022  0008  00F2               	movwf	??_isr+2
  6023  0009  120A  158A  2960   	ljmp	_isr
  6024                           
  6025                           	psect	text25
  6026  0952                     __ptext25:	
  6027 ;; *************** function _UART_get_char *****************
  6028 ;; Defined at:
  6029 ;;		line 41 in file "UART.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      unsigned char 
  6036 ;; Registers used:
  6037 ;;		wreg
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6043 ;;      Params:         0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_isr
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _UART_get_char
  6058  0952                     _UART_get_char:
  6059  0952                     i1l1464:	
  6060                           ;incstack = 0
  6061                           ; Regs used in _UART_get_char: [wreg]
  6062                           
  6063                           
  6064                           ;UART.c: 42:     if (RCSTAbits.OERR == 1)
  6065  0952  1283               	bcf	3,5	;RP0=0, select bank0
  6066  0953  1303               	bcf	3,6	;RP1=0, select bank0
  6067  0954  1C98               	btfss	24,1	;volatile
  6068  0955  2957               	goto	u141_21
  6069  0956  2958               	goto	u141_20
  6070  0957                     u141_21:
  6071  0957  295A               	goto	i1l245
  6072  0958                     u141_20:
  6073  0958                     i1l1466:
  6074                           
  6075                           ;UART.c: 43:     {;UART.c: 44:         RCSTAbits.CREN = 0;
  6076  0958  1218               	bcf	24,4	;volatile
  6077                           
  6078                           ;UART.c: 45:         RCSTAbits.CREN = 1;
  6079  0959  1618               	bsf	24,4	;volatile
  6080  095A                     i1l245:
  6081  095A  1E8C               	btfss	12,5	;volatile
  6082  095B  295D               	goto	u142_21
  6083  095C  295E               	goto	u142_20
  6084  095D                     u142_21:
  6085  095D  295A               	goto	i1l245
  6086  095E                     u142_20:
  6087  095E                     i1l1468:
  6088                           
  6089                           ;UART.c: 49:     return RCREG;
  6090  095E  081A               	movf	26,w	;volatile
  6091  095F                     i1l248:
  6092  095F  0008               	return
  6093  0960                     __end_of_UART_get_char:
  6094  007E                     btemp	set	126	;btemp
  6095  007E                     wtemp0	set	126
  6096                           
  6097                           	psect	config
  6098                           
  6099                           ;Config register CONFIG1 @ 0x2007
  6100                           ;	Oscillator Selection bits
  6101                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6102                           ;	Watchdog Timer Enable bit
  6103                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6104                           ;	Power-up Timer Enable bit
  6105                           ;	PWRTE = OFF, PWRT disabled
  6106                           ;	RE3/MCLR pin function select bit
  6107                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6108                           ;	Code Protection bit
  6109                           ;	CP = OFF, Program memory code protection is disabled
  6110                           ;	Data Code Protection bit
  6111                           ;	CPD = OFF, Data memory code protection is disabled
  6112                           ;	Brown Out Reset Selection bits
  6113                           ;	BOREN = ON, BOR enabled
  6114                           ;	Internal External Switchover bit
  6115                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6116                           ;	Fail-Safe Clock Monitor Enabled bit
  6117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6118                           ;	Low Voltage Programming Enable bit
  6119                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6120                           ;	In-Circuit Debugger Mode bit
  6121                           ;	DEBUG = 0x1, unprogrammed default
  6122  2007                     	org	8199
  6123  2007  23F4               	dw	9204
  6124                           
  6125                           ;Config register CONFIG2 @ 0x2008
  6126                           ;	Brown-out Reset Selection bit
  6127                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6128                           ;	Flash Program Memory Self Write Enable bits
  6129                           ;	WRT = OFF, Write protection off
  6130  2008                     	org	8200
  6131  2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     66      79
    BANK1            80      0      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK1[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _UART_send_string->_Uart_send_char
    _Enviar_temp->___lldiv
    _Enviar_temp->___wmul
    _BMP280_readTemperature->___aldiv
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___aldiv
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Write
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Enviar_temp->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30466
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                        _Enviar_temp
                   _UART_send_string
                     _Uart_send_char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1442
                    _I2C_Master_Init
                          _Uart_conf
 ---------------------------------------------------------------------------------
 (2) _Uart_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4    1442
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     133
                                              4 COMMON     2     2      0
                     _Uart_send_char
 ---------------------------------------------------------------------------------
 (1) _Uart_send_char                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Enviar_temp                                         10    10      0    1869
                                              8 BANK0     10    10      0
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    9433
                                             21 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    2239
                                              0 BANK0      8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    9264
                                             21 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              8 BANK0     13     5      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    1321
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    4585
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    8303
                                              9 COMMON     1     1      0
                                             10 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    2051
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    2088
                                              0 BANK0      7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     875
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    2116
                                              0 BANK0     10     6      4
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1533
                                              5 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                      _UART_get_char
 ---------------------------------------------------------------------------------
 (7) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _Enviar_temp
     ___lldiv
     ___wmul
   _UART_send_string
     _Uart_send_char
   _Uart_send_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Uart_conf

 _isr (ROOT)
   _UART_get_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      93       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      93      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 14:01:09 2021

               _BMP280_Configure 0AD6                                pc 0002                               l67 0BD9  
                             l84 09D7                               l68 0BD8                               l69 0BD8  
                             l87 0ED1                               fsr 0004              ___wmul@multiplicand 0075  
               Uart_send_char@bt 0073                              l202 055A                              l122 0A91  
                            l131 0927                              l140 093A                              l204 03EC  
                            l125 0945                              l143 0A4F                              l128 0951  
                            l144 0A52                              l232 093C                              l137 0930  
                            l145 0A57                              l241 0996                              l235 0944  
                            l172 0AD5                              l229 09B6                              l182 0FFF  
                            l334 09E4                              l175 0BBB                              l336 09FC  
                            l169 0A29                              l409 0CD5                              l178 0B1D  
                            l370 07F4                              l195 0DA6                              l348 0B65  
                            l198 078C                              l399 0C4D                              _GIE 005F  
        BMP280_Configure@_config 0029                              u940 09DE                              u860 0942  
                            u941 09DD                              u861 0941                              u970 09F8  
                            u971 09F7                              u955 09E5                              u980 0B2C  
                            u981 0B2B                              u965 09EC                              u991 0B35  
                            u992 0B3C                              u993 0B43                              _isr 0960  
                            fsr0 0004                              indf 0000     __size_of_BMP280_readPressure 0536  
         BMP280_begin@P_sampling 002B                             l1330 09F2                             l1322 09D8  
                           l1250 0942                             l1340 0B2C                             l1332 09F8  
                           l1324 09DA                             l1342 0B43                             l1326 09DE  
                           l1270 09B2                             l1344 0B4C                             l1336 0B1E  
                           l1328 09EB                             l1248 093C                             l1272 09B3  
                           l1264 0997                             l1530 091F                             l1610 0B07  
                           l1602 0B69                             l1346 0B5D                             l1338 0B28  
                           l1266 09AF                             l1532 0924                             l1540 0936  
                           l1612 0B11                             l1604 0BB5                             l1620 0CE7  
                           l1460 0986                             l1268 09B1                             l1526 0945  
                           l1534 0928                             l1550 0A45                             l1542 0A2A  
                           l1702 0EFE                             l1630 0D1C                             l1622 0CF0  
                           l1614 0CD6                             l1710 055E                             l1462 098A  
                           l1528 094B                             l1536 092D                             l1608 0AD9  
                           l1552 0A4B                             l1544 0A2F                             l1704 0F09  
                           l1560 078D                             l1720 0309                             l1640 0D82  
                           l1632 0D2B                             l1624 0CF5                             l1616 0CD9  
                           l1712 06F3                             l1456 0979                             l1538 0931  
                           l1554 0A53                             l1546 0A37                             l1706 0FF9  
                           l1650 0C51                             l1570 07BC                             l1562 079F  
                           l1730 03CA                             l1642 0D87                             l1634 0D56  
                           l1626 0CFE                             l1618 0CDE                             l1714 0724  
                           l1458 097A                             l1548 0A40                             l1660 0C73  
                           l1652 0C5C                             l1644 0C39                             l1572 07CE  
                           l1564 07A2                             l1580 07EC                             l1732 054C  
                           l1724 0312                             l1636 0D65                             l1628 0D0D  
                           l1740 0DDA                             l1558 09FE                             l1670 0CAD  
                           l1662 0C80                             l1654 0C60                             l1646 0C3A  
                           l1574 07DC                             l1566 07AF                             l1726 0393  
                           l1718 0028                             l1638 0D74                             l1742 0E19  
                           l1590 0A8E                             l1750 0BBC                             l1680 0CCD  
                           l1672 0CAE                             l1664 0C84                             l1656 0C68  
                           l1648 0C40                             l1576 07DD                             l1568 07B3  
                           l1728 03A7                             l1744 0E34                             l1736 0DA7  
                           l1592 0A8F                             l1584 0A58                             l1760 0C00  
                           l1752 0BD7                             l1690 0ED3                             l1674 0CB7  
                           l1666 0C8D                             l1658 0C70                             l1578 07E6  
                           l1746 0E73                             l1738 0DBF                             l1594 0A90  
                           l1586 0A5C                             l1770 0C1F                             l1762 0C06  
                           l1754 0BD9                             l1596 0A95                             l1692 0EDE  
                           l1668 0C9F                             l1676 0CBD                             l1748 0E8E  
                           l1588 0A5F                             l1684 09B7                             l1780 0C34  
                           l1772 0C24                             l1764 0C0E                             l1756 0BE5  
                           l1598 0AD2                             l1678 0CC2                             l1686 09C5  
                           l1774 0C26                             l1766 0C16                             l1758 0BEA  
                           l1696 0EE3                             l1688 09D2                             l1776 0C2C  
                           l1768 0C1D                             l1698 0EEF                             l1778 0C2E  
                           ?_isr 0070                             STR_1 07FB                             STR_2 07FD  
                           u1020 0B5D                             u1021 0B5C                             u1005 0B45  
                           u1015 0B4D                             u2000 04FD                             u2001 04FE  
                           u2010 050F                             u2002 0503                             u2011 0510  
                           u2003 0504                             u2012 0515                             u2013 0516  
                           u2021 0E04                             u2022 0E05                             u2031 0E5E  
                           u2023 0E0A                             u2032 0E5F                             u2024 0E0B  
                           u1400 0996                             u2041 0EB8                             u2033 0E64  
                           u2025 0E10                             u1401 0995                             u2042 0EB9  
                           u2034 0E65                             u2026 0E11                             u2050 0BD7  
                           u2043 0EBE                             u2035 0E6A                             u2051 0BD6  
                           u2044 0EBF                             u2036 0E6B                             u2060 0C1D  
                           u2045 0EC4                             u2061 0C1C                             u1510 094B  
                           u2046 0EC5                             u2070 0C24                             u1511 094A  
                           u2127 0EF7                             u2071 0C23                             u1520 0951  
                           u1600 07EC                             u2080 0C2C                             u1521 0950  
                           u1601 07EB                             u2081 0C2B                             u1530 0A4B  
                           u1610 0A6F                             u2090 0C34                             u1531 0A4A  
                           u2091 0C33                             u1700 0C70                             u1540 079F  
                           u1701 0C6F                             u1541 079E                             u1615 0A6A  
                           u1720 0C84                             u1560 07B3                             u1800 0577  
                           u1625 0ADC                             u1721 0C83                             u1561 07B2  
                           u1635 0AE4                             u1715 0C75                             u1555 07A4  
                           u1811 05A0                             u1740 0C9F                             u1580 07CE  
                           u1900 0281                             u1660 0D39                             u1812 05A1  
                           u1645 0AF3                             u1741 0C9E                             u1581 07CD  
                           u1901 0282                             u1821 0628                             u1813 05A6  
                           u1805 0572                             u1910 02CA                             u1902 0287  
                           u1670 0D97                             u1822 0629                             u1814 05A7  
                           u1655 0AFB                             u1735 0C86                             u1575 07B5  
                           u1911 02CB                             u1903 0288                             u1831 0671  
                           u1823 062E                             u1815 05AC                             u1760 0CBD  
                           u1680 0C40                             u1920 0311                             u1912 02D0  
                           u1840 0764                             u1832 0672                             u1824 062F  
                           u1816 05AD                             u1761 0CBC                             u1745 0C9B  
                           u1681 0C3F                             u1585 07CA                             u1921 0310  
                           u1913 02D1                             u1665 0D34                             u1841 0765  
                           u1833 0677                             u1825 0634                             u1770 0CC2  
                           u1690 0C51                             u1850 005E                             u1842 076A  
                           u1834 0678                             u1826 0635                             u1771 0CC1  
                           u1755 0CAF                             u1691 0C50                             u1595 07DE  
                           u1931 0355                             u1851 005F                             u1675 0D92  
                           u1843 076B                             u1835 067D                             u1780 0EDE  
                           u1940 0369                             u1932 0356                             u1860 0133  
                           u1852 0064                             u1836 067E                             u1781 0EDD  
                           u1941 036A                             u1933 035B                             u1853 0065  
                           u1790 0F09                             u1950 03A7                             u1942 036F  
                           u1934 035C                             u1870 013D                             u1791 0F08  
                           u1951 03A6                             u1943 0370                             u1935 0361  
                           u1871 013E                             u1960 03FA                             u1936 0362  
                           u1880 0164                             u1872 0143                             u1953 03A3  
                           u1873 0144                             u1865 012E                             u1970 0413  
                           u1890 0185                             u1891 0186                             _PEIE 005E  
                           u1980 0433                             u1892 018B                             u1965 03F5  
                           u1893 018C                             u1885 015F                             u1990 0493  
                           u1975 040E                             u1985 042E                             u1995 048E  
                           i1l93 0971                             _TXIF 0064          BMP280_Configure@standby 0023  
                  ??_Enviar_temp 0028                             _main 0BBC                             _temp 0066  
                           btemp 007E                             start 000C  __size_of_BMP280_readTemperature 0232  
         BMP280_begin@T_sampling 002A        __size_of_UART_send_string 001F            __size_of_BMP280_Read8 0044  
                          ??_isr 0070                 ?_I2C_Master_Init 0028                 ?_I2C_Master_Read 0073  
               ?_I2C_Master_Wait 0070            __size_of_BMP280_Write 002D                 ?_I2C_Master_Stop 0070  
          __size_of_BMP280_begin 012E                  __end_of___aldiv 0CD6                            ?_main 0070  
                          _ANSEL 0188                  __end_of___lldiv 07F5                            i1l245 095A  
                          i1l248 095F                            _RCREG 001A                  BMP280_Read8@ret 0023  
    _BMP280_readTemperature$1213 0052      _BMP280_readTemperature$1214 004D                            _SPBRG 0099  
                          _PORTB 0006                            _PORTD 0008                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _SSPIE 0463  
                          _TRISE 0089                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002C                            _adc_P 00B5                            _adc_T 0062  
                          _dec_t 006D                            _setup 09B7                            _uni_t 006C  
                          pclath 000A                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0A92                     _BMP280_Write 09FD                     _BMP280_calib 00B9  
                   _BMP280_begin 0ED2                  __initialization 000F              __end_of_Enviar_temp 0ED2  
                   __end_of_main 0C39           __size_of_BMP280_Read16 0056                           ??_main 007A  
         __size_of_BMP280_Update 00D1          __size_of_Uart_send_char 000A           _BMP280_readTemperature 055B  
              ?_I2C_Master_Start 0070                ?_I2C_Master_Write 0073                 BMP280_Read16@ret 0025  
             ??_I2C_Master_Start 0073               ??_I2C_Master_Write 0075                           ?_setup 0070  
                         _ANSELH 0189                           i1l1504 0960                           i1l1506 0966  
                         i1l1508 0970                           i1l1464 0952                           i1l1466 0958  
                         i1l1468 095E                           u141_20 0958                           u141_21 0957  
                         u142_20 095E                           u142_21 095D                           u148_20 0966  
                         u148_21 0965                           _SPBRGH 009A                           _SSPADD 0093  
                         _TRISC3 043B                           _TRISC4 043C                           _SSPCON 0014  
                         _SSPBUF 0013                           ___lmul 0B1E                        ??___aldiv 0073  
                         ___wmul 09D8                           _deci_t 006B                        ??___lldiv 0073  
                         _buffer 00A0                           _t_fine 00B1       BMP280_Configure@P_sampling 0021  
             __size_of_Uart_conf 0020                           saved_w 007E         __end_of_BMP280_Configure 0B1E  
                  _BMP280_Read16 0B66          __end_of__initialization 0021                      _Enviar_temp 0DA7  
     BMP280_Configure@T_sampling 0020                    _BMP280_Update 0CD6                   __pcstackCOMMON 0070  
            _BMP280_readPressure 0025                 _UART_send_string 0978                    __end_of_setup 09D8  
          __end_of_UART_get_char 0960                 BMP280_Update@ret 0024             ?_BMP280_readPressure 0070  
                        ??_setup 0079                       __pbssBANK0 0062                       __pbssBANK1 00A0  
                 ?_BMP280_Read16 0020                   ?_BMP280_Update 0070                __end_of_Uart_conf 09B7  
        BMP280_readPressure@var1 005E          BMP280_readPressure@var2 0056          BMP280_readPressure@pres 0051  
                     __pmaintext 0BBC                          ?___lmul 0028                          ?___wmul 0073  
                     __pintentry 0004                   ___lmul@product 0031                   _Uart_send_char 093B  
               BMP280_begin@mode 0079            ??_BMP280_readPressure 0035                          _SSPCON2 0091  
                        _SSPSTAT 0094                       __stringtab 07F5       BMP280_Configure@_ctrl_meas 0028  
           BMP280_Write@reg_addr 0078                          ___aldiv 0C39                  __size_of___lmul 0048  
                        ___lldiv 078D                  __size_of___wmul 0025           __end_of_Uart_send_char 0945  
        ?_BMP280_readTemperature 0070                          _centi_t 006A                          __ptext1 09B7  
                        __ptext2 0997                          __ptext3 0A58                          __ptext4 0978  
                        __ptext5 093B                          __ptext6 0DA7                          __ptext7 09D8  
                        __ptext8 055B                          __ptext9 0CD6                     __size_of_isr 0018  
               ___aldiv@dividend 0024         __size_of_I2C_Master_Init 003A         __size_of_I2C_Master_Read 002E  
       __size_of_I2C_Master_Wait 000D         __size_of_I2C_Master_Stop 0009                          _presmas 007A  
                ??_BMP280_Read16 0022                          clrloop0 0918             end_of_initialization 0021  
                ??_BMP280_Update 0020            BMP280_Read16@reg_addr 0024               BMP280_begin@filter 002C  
      __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A                  ___lldiv@divisor 0020  
                ___lldiv@counter 0078                        _RCSTAbits 0018                 ___aldiv@quotient 0076  
               I2C_Master_Init@c 0028                 I2C_Master_Read@a 0073   __end_of_BMP280_readTemperature 078D  
                ?_Uart_send_char 0070                        _PORTBbits 0006                        _TRISCbits 0087  
              ?_BMP280_Configure 0020         __end_of_UART_send_string 0997               ??_BMP280_Configure 0024  
         BMP280_Configure@filter 0022                     ?_Enviar_temp 0070                        _TXSTAbits 0098  
                 __end_of___lmul 0B66                   __end_of___wmul 09FD                      _BAUDCTLbits 0187  
            start_initialization 000F                      __end_of_isr 0978                ??_I2C_Master_Init 002C  
              ??_I2C_Master_Read 0075                ??_I2C_Master_Wait 0073                ??_I2C_Master_Stop 0073  
                      _Uart_conf 0997                         ??___lmul 0030                         ??___wmul 0077  
                    __pbssCOMMON 007A             BMP280_Configure@mode 0027                        ___latbits 0002  
                  __pcstackBANK0 0020                    ?_BMP280_Read8 0070                 _I2C_Master_Start 091F  
               _I2C_Master_Write 0931           __size_of_UART_get_char 000E                    ?_BMP280_Write 0075  
                  ?_BMP280_begin 002A             BMP280_readPressure@p 005A                BMP280_Write@_data 0075  
                     ?_Uart_conf 0070                         ?___aldiv 0020                         ?___lldiv 0020  
                      __pstrings 07F5      __end_of_BMP280_readPressure 055B                   __size_of_setup 0021  
                ___aldiv@divisor 0020                interrupt_function 0004                  ___aldiv@counter 0074  
                 ___wmul@product 0077                   ??_BMP280_Read8 0020                        clear_ram0 0917  
                 ??_BMP280_Write 0076                         _PIE1bits 008C                   ??_BMP280_begin 002E  
           __size_of_Enviar_temp 012B                         _PIR1bits 000C                 ??_Uart_send_char 0073  
       _BMP280_readPressure$1215 0052         _BMP280_readPressure$1216 0045         _BMP280_readPressure$1217 0049  
       _BMP280_readPressure$1218 004D                      __stringbase 07FA                ___wmul@multiplier 0073  
          UART_send_string@st_pt 0075                    _UART_get_char 0952                         _RX_Trans 006E  
            I2C_Master_Read@temp 0077                ___lmul@multiplier 0028                ?_UART_send_string 0070  
          __end_of_BMP280_Read16 0BBC               ??_UART_send_string 0074            __end_of_BMP280_Update 0DA7  
      __size_of_BMP280_Configure 0048                      ??_Uart_conf 0073                 __size_of___aldiv 009D  
               __size_of___lldiv 0068               __end_of__stringtab 07FB                   ?_UART_get_char 0070  
                _I2C_Master_Init 0A58                  _I2C_Master_Read 0A2A                  _I2C_Master_Wait 0945  
                _I2C_Master_Stop 0928                         __ptext10 0025                         __ptext11 0B1E  
                       __ptext20 0931                         __ptext12 078D                         __ptext21 0928  
                       __ptext13 0C39                         __ptext22 091F                         __ptext14 0ED2  
                       __ptext23 0945                         __ptext15 0A92                         __ptext24 0960  
                       __ptext16 0B66                         __ptext25 0952                         __ptext17 0A2A  
                       __ptext18 0AD6                         __ptext19 09FD       BMP280_readTemperature@var1 0045  
     BMP280_readTemperature@var2 0049       BMP280_readTemperature@temp 0051                    __size_of_main 007D  
                       _pressure 00D1             __end_of_BMP280_Read8 0AD6         __end_of_I2C_Master_Start 0928  
       __end_of_I2C_Master_Write 093B             __end_of_BMP280_Write 0A2A             __end_of_BMP280_begin 1000  
                       intlevel1 0000             BMP280_Read8@reg_addr 0022                 ___lldiv@dividend 0024  
            BMP280_begin@standby 002D         ??_BMP280_readTemperature 0035                        stringcode 07F5  
        __end_of_I2C_Master_Init 0A92          __end_of_I2C_Master_Read 0A58          __end_of_I2C_Master_Wait 0952  
        __end_of_I2C_Master_Stop 0931                  ??_UART_get_char 0070                      _temperature 00D5  
               ___lldiv@quotient 0074                I2C_Master_Write@d 0073                         stringdir 07F5  
                       stringtab 07F5                     ___aldiv@sign 0075                      _SSPCON2bits 0091  
