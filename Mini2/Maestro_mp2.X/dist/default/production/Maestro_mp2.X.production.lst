

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 21:44:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  001A                     _RCREG	set	26
   457  000C                     _PIR1bits	set	12
   458  0019                     _TXREG	set	25
   459  0018                     _RCSTAbits	set	24
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  0008                     _PORTD	set	8
   463  0006                     _PORTB	set	6
   464  0006                     _PORTBbits	set	6
   465  0064                     _TXIF	set	100
   466  0063                     _SSPIF	set	99
   467  005E                     _PEIE	set	94
   468  005F                     _GIE	set	95
   469  009A                     _SPBRGH	set	154
   470  0099                     _SPBRG	set	153
   471  008C                     _PIE1bits	set	140
   472  0098                     _TXSTAbits	set	152
   473  0091                     _SSPCON2bits	set	145
   474  0087                     _TRISCbits	set	135
   475  0094                     _SSPSTAT	set	148
   476  0093                     _SSPADD	set	147
   477  0091                     _SSPCON2	set	145
   478  0088                     _TRISD	set	136
   479  0089                     _TRISE	set	137
   480  0086                     _TRISB	set	134
   481  0087                     _TRISC	set	135
   482  0463                     _SSPIE	set	1123
   483  043C                     _TRISC4	set	1084
   484  043B                     _TRISC3	set	1083
   485  0187                     _BAUDCTLbits	set	391
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  07EB                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07EB                     __initialization:
   494                           
   495                           ; Clear objects allocated to BANK0
   496  07EB  1383               	bcf	3,7	;select IRP bank0
   497  07EC  305B               	movlw	low __pbssBANK0
   498  07ED  0084               	movwf	4
   499  07EE  306E               	movlw	low (__pbssBANK0+19)
   500  07EF  120A  158A  23E5  120A  118A  	fcall	clear_ram0
   501                           
   502                           ; Clear objects allocated to BANK1
   503  07F4  30A0               	movlw	low __pbssBANK1
   504  07F5  0084               	movwf	4
   505  07F6  30CD               	movlw	low (__pbssBANK1+45)
   506  07F7  120A  158A  23E5  120A  118A  	fcall	clear_ram0
   507  07FC                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  07FC                     __end_of__initialization:
   511  07FC  0183               	clrf	3
   512  07FD  120A  158A  2C52   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssBANK0
   515  005B                     __pbssBANK0:
   516  005B                     _t_fine:
   517  005B                     	ds	4
   518  005F                     _adc_T:
   519  005F                     	ds	4
   520  0063                     _presion:
   521  0063                     	ds	2
   522  0065                     _presmas:
   523  0065                     	ds	1
   524  0066                     _pressure:
   525  0066                     	ds	4
   526  006A                     _temperature:
   527  006A                     	ds	4
   528                           
   529                           	psect	bssBANK1
   530  00A0                     __pbssBANK1:
   531  00A0                     _buffer:
   532  00A0                     	ds	17
   533  00B1                     _adc_P:
   534  00B1                     	ds	4
   535  00B5                     _BMP280_calib:
   536  00B5                     	ds	24
   537                           
   538                           	psect	clrtext
   539  0BE5                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543  0BE5  0064               	clrwdt	;clear the watchdog before getting into this loop
   544  0BE6                     clrloop0:
   545  0BE6  0180               	clrf	0	;clear RAM location pointed to by FSR
   546  0BE7  0A84               	incf	4,f	;increment pointer
   547  0BE8  0604               	xorwf	4,w	;XOR with final address
   548  0BE9  1903               	btfsc	3,2	;have we reached the end yet?
   549  0BEA  3400               	retlw	0	;all done for this memory range, return
   550  0BEB  0604               	xorwf	4,w	;XOR again to restore value
   551  0BEC  2BE6               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:
   555  0070                     ?_setup:
   556  0070                     ?_main:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_I2C_Master_Wait:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_I2C_Master_Start:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_I2C_Master_Start:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_I2C_Master_Stop:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Write:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_BMP280_Read8:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_BMP280_Update:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_BMP280_readTemperature:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_BMP280_readPressure:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?_I2C_Master_Read:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___lldiv:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     ?___aldiv:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     I2C_Master_Write@d:	
   602                           ; 4 bytes @ 0x0
   603                           
   604  0070                     I2C_Master_Read@a:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___lldiv@divisor:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___aldiv@divisor:	
   611                           ; 4 bytes @ 0x0
   612                           
   613                           
   614                           ; 4 bytes @ 0x0
   615  0070                     	ds	2
   616  0072                     ??_I2C_Master_Write:
   617  0072                     ??_I2C_Master_Read:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ?_BMP280_Write:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     BMP280_Write@_data:	
   624                           ; 1 bytes @ 0x2
   625                           
   626                           
   627                           ; 1 bytes @ 0x2
   628  0072                     	ds	1
   629  0073                     ??_BMP280_Write:
   630                           
   631                           ; 1 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     I2C_Master_Read@temp:
   634  0074                     ___lldiv@dividend:	
   635                           ; 2 bytes @ 0x4
   636                           
   637  0074                     ___aldiv@dividend:	
   638                           ; 4 bytes @ 0x4
   639                           
   640                           
   641                           ; 4 bytes @ 0x4
   642  0074                     	ds	1
   643  0075                     BMP280_Write@reg_addr:
   644                           
   645                           ; 1 bytes @ 0x5
   646  0075                     	ds	1
   647  0076                     ??_BMP280_Read8:
   648  0076                     ?_BMP280_Configure:	
   649                           ; 1 bytes @ 0x6
   650                           
   651  0076                     ??_BMP280_Update:	
   652                           ; 1 bytes @ 0x6
   653                           
   654  0076                     ?_BMP280_Read16:	
   655                           ; 1 bytes @ 0x6
   656                           
   657  0076                     BMP280_Configure@T_sampling:	
   658                           ; 2 bytes @ 0x6
   659                           
   660                           
   661                           ; 1 bytes @ 0x6
   662  0076                     	ds	1
   663  0077                     BMP280_Configure@P_sampling:
   664                           
   665                           ; 1 bytes @ 0x7
   666  0077                     	ds	1
   667  0078                     ??_BMP280_Read16:
   668  0078                     ??___lldiv:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0078                     ??___aldiv:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0078                     BMP280_Read8@reg_addr:	
   675                           ; 1 bytes @ 0x8
   676                           
   677  0078                     BMP280_Configure@filter:	
   678                           ; 1 bytes @ 0x8
   679                           
   680                           
   681                           ; 1 bytes @ 0x8
   682  0078                     	ds	1
   683  0079                     ??___lmul:
   684  0079                     BMP280_Read8@ret:	
   685                           ; 1 bytes @ 0x9
   686                           
   687  0079                     BMP280_Configure@standby:	
   688                           ; 1 bytes @ 0x9
   689                           
   690  0079                     ___lldiv@quotient:	
   691                           ; 1 bytes @ 0x9
   692                           
   693                           
   694                           ; 4 bytes @ 0x9
   695  0079                     	ds	1
   696  007A                     ??_BMP280_Configure:
   697  007A                     BMP280_Read16@reg_addr:	
   698                           ; 1 bytes @ 0xA
   699                           
   700  007A                     BMP280_Update@ret:	
   701                           ; 1 bytes @ 0xA
   702                           
   703  007A                     ___lmul@product:	
   704                           ; 4 bytes @ 0xA
   705                           
   706                           
   707                           ; 4 bytes @ 0xA
   708  007A                     	ds	1
   709  007B                     BMP280_Read16@ret:
   710                           
   711                           ; 2 bytes @ 0xB
   712  007B                     	ds	2
   713  007D                     BMP280_begin@mode:
   714  007D                     ___lldiv@counter:	
   715                           ; 1 bytes @ 0xD
   716                           
   717                           
   718                           ; 1 bytes @ 0xD
   719  007D                     	ds	1
   720  007E                     ??_setup:
   721  007E                     ??_main:	
   722                           ; 1 bytes @ 0xE
   723                           
   724                           
   725                           	psect	cstackBANK0
   726  0020                     __pcstackBANK0:	
   727                           ; 1 bytes @ 0xE
   728                           
   729  0020                     ?_I2C_Master_Init:
   730  0020                     BMP280_Configure@mode:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___aldiv@counter:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     I2C_Master_Init@c:	
   737                           ; 1 bytes @ 0x0
   738                           
   739                           
   740                           ; 4 bytes @ 0x0
   741  0020                     	ds	1
   742  0021                     BMP280_Configure@_ctrl_meas:
   743  0021                     ___aldiv@sign:	
   744                           ; 1 bytes @ 0x1
   745                           
   746                           
   747                           ; 1 bytes @ 0x1
   748  0021                     	ds	1
   749  0022                     BMP280_Configure@_config:
   750  0022                     ___aldiv@quotient:	
   751                           ; 1 bytes @ 0x2
   752                           
   753                           
   754                           ; 4 bytes @ 0x2
   755  0022                     	ds	1
   756  0023                     ?_BMP280_begin:
   757  0023                     BMP280_begin@T_sampling:	
   758                           ; 2 bytes @ 0x3
   759                           
   760                           
   761                           ; 1 bytes @ 0x3
   762  0023                     	ds	1
   763  0024                     ??_I2C_Master_Init:
   764  0024                     BMP280_begin@P_sampling:	
   765                           ; 1 bytes @ 0x4
   766                           
   767                           
   768                           ; 1 bytes @ 0x4
   769  0024                     	ds	1
   770  0025                     BMP280_begin@filter:
   771                           
   772                           ; 1 bytes @ 0x5
   773  0025                     	ds	1
   774  0026                     ?___lmul:
   775  0026                     BMP280_begin@standby:	
   776                           ; 4 bytes @ 0x6
   777                           
   778  0026                     ___lmul@multiplier:	
   779                           ; 1 bytes @ 0x6
   780                           
   781                           
   782                           ; 4 bytes @ 0x6
   783  0026                     	ds	1
   784  0027                     ??_BMP280_begin:
   785                           
   786                           ; 1 bytes @ 0x7
   787  0027                     	ds	3
   788  002A                     ___lmul@multiplicand:
   789                           
   790                           ; 4 bytes @ 0xA
   791  002A                     	ds	4
   792  002E                     ??_BMP280_readTemperature:
   793  002E                     ??_BMP280_readPressure:	
   794                           ; 1 bytes @ 0xE
   795                           
   796                           
   797                           ; 1 bytes @ 0xE
   798  002E                     	ds	16
   799  003E                     BMP280_readTemperature@var1:
   800  003E                     _BMP280_readPressure$1179:	
   801                           ; 4 bytes @ 0x1E
   802                           
   803                           
   804                           ; 4 bytes @ 0x1E
   805  003E                     	ds	4
   806  0042                     BMP280_readTemperature@var2:
   807  0042                     _BMP280_readPressure$1180:	
   808                           ; 4 bytes @ 0x22
   809                           
   810                           
   811                           ; 4 bytes @ 0x22
   812  0042                     	ds	4
   813  0046                     _BMP280_readTemperature$1177:
   814  0046                     _BMP280_readPressure$1181:	
   815                           ; 4 bytes @ 0x26
   816                           
   817                           
   818                           ; 4 bytes @ 0x26
   819  0046                     	ds	4
   820  004A                     BMP280_readTemperature@temp:
   821  004A                     BMP280_readPressure@pres:	
   822                           ; 1 bytes @ 0x2A
   823                           
   824                           
   825                           ; 1 bytes @ 0x2A
   826  004A                     	ds	1
   827  004B                     _BMP280_readTemperature$1176:
   828  004B                     _BMP280_readPressure$1178:	
   829                           ; 4 bytes @ 0x2B
   830                           
   831                           
   832                           ; 4 bytes @ 0x2B
   833  004B                     	ds	4
   834  004F                     BMP280_readPressure@var2:
   835                           
   836                           ; 4 bytes @ 0x2F
   837  004F                     	ds	4
   838  0053                     BMP280_readPressure@p:
   839                           
   840                           ; 4 bytes @ 0x33
   841  0053                     	ds	4
   842  0057                     BMP280_readPressure@var1:
   843                           
   844                           ; 4 bytes @ 0x37
   845  0057                     	ds	4
   846                           
   847                           	psect	maintext
   848  0C52                     __pmaintext:	
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 145 in file "main_m.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : B00/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels required when called:    5
   874 ;; This function calls:
   875 ;;		_BMP280_begin
   876 ;;		_BMP280_readPressure
   877 ;;		_BMP280_readTemperature
   878 ;;		_setup
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _main
   886  0C52                     _main:
   887  0C52                     l1312:	
   888                           ;incstack = 0
   889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   890                           
   891                           
   892                           ;main_m.c: 146:     setup();
   893  0C52  120A  158A  2409  120A  158A  	fcall	_setup
   894                           
   895                           ;main_m.c: 147:     if(BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, S
      +                          TANDBY_0_5) == 0)
   896  0C57  1283               	bcf	3,5	;RP0=0, select bank0
   897  0C58  1303               	bcf	3,6	;RP1=0, select bank0
   898  0C59  01A3               	clrf	BMP280_begin@T_sampling
   899  0C5A  0AA3               	incf	BMP280_begin@T_sampling,f
   900  0C5B  01A4               	clrf	BMP280_begin@P_sampling
   901  0C5C  0AA4               	incf	BMP280_begin@P_sampling,f
   902  0C5D  01A5               	clrf	BMP280_begin@filter
   903  0C5E  01A6               	clrf	BMP280_begin@standby
   904  0C5F  3003               	movlw	3
   905  0C60  120A  158A  271A  120A  158A  	fcall	_BMP280_begin
   906  0C65  1283               	bcf	3,5	;RP0=0, select bank0
   907  0C66  1303               	bcf	3,6	;RP1=0, select bank0
   908  0C67  0823               	movf	?_BMP280_begin,w
   909  0C68  0424               	iorwf	?_BMP280_begin+1,w
   910  0C69  1D03               	btfss	3,2
   911  0C6A  2C6C               	goto	u1201
   912  0C6B  2C6D               	goto	u1200
   913  0C6C                     u1201:
   914  0C6C  2C6F               	goto	l1316
   915  0C6D                     u1200:
   916  0C6D                     l1314:
   917                           
   918                           ;main_m.c: 148: {;main_m.c: 149:         PORTBbits.RB2 = 1;
   919  0C6D  1506               	bsf	6,2	;volatile
   920  0C6E                     l46:	
   921                           ;main_m.c: 150:     while (1) {}}
   922                           
   923  0C6E                     l47:
   924  0C6E  2C6E               	goto	l46
   925  0C6F                     l1316:
   926                           
   927                           ;main_m.c: 152:     BMP280_readTemperature(&temperature);
   928  0C6F  306A               	movlw	(low (_temperature| 0))& (0+255)
   929  0C70  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   930                           
   931                           ;main_m.c: 153:     BMP280_readPressure(&pressure);
   932  0C75  3066               	movlw	(low (_pressure| 0))& (0+255)
   933  0C76  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   934  0C7B  2C6F               	goto	l1316
   935  0C7C  120A  118A  2800   	ljmp	start
   936  0C7F                     __end_of_main:
   937                           
   938                           	psect	text1
   939  0C09                     __ptext1:	
   940 ;; *************** function _setup *****************
   941 ;; Defined at:
   942 ;;		line 162 in file "main_m.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    2
   963 ;; This function calls:
   964 ;;		_I2C_Master_Init
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _setup
   972  0C09                     _setup:
   973  0C09                     l1262:	
   974                           ;incstack = 0
   975                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   976                           
   977                           
   978                           ;main_m.c: 163:     ANSEL = 0;
   979  0C09  1683               	bsf	3,5	;RP0=1, select bank3
   980  0C0A  1703               	bsf	3,6	;RP1=1, select bank3
   981  0C0B  0188               	clrf	8	;volatile
   982                           
   983                           ;main_m.c: 164:     ANSELH = 0;
   984  0C0C  0189               	clrf	9	;volatile
   985                           
   986                           ;main_m.c: 165:     TRISC = 0;
   987  0C0D  1683               	bsf	3,5	;RP0=1, select bank1
   988  0C0E  1303               	bcf	3,6	;RP1=0, select bank1
   989  0C0F  0187               	clrf	7	;volatile
   990                           
   991                           ;main_m.c: 166:     TRISB = 0;
   992  0C10  0186               	clrf	6	;volatile
   993                           
   994                           ;main_m.c: 167:     TRISE = 0;
   995  0C11  0189               	clrf	9	;volatile
   996                           
   997                           ;main_m.c: 168:     TRISD = 0;
   998  0C12  0188               	clrf	8	;volatile
   999                           
  1000                           ;main_m.c: 169:     PORTB = 0;
  1001  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0C15  0186               	clrf	6	;volatile
  1004                           
  1005                           ;main_m.c: 170:     PORTD = 0;
  1006  0C16  0188               	clrf	8	;volatile
  1007  0C17                     l1264:
  1008                           
  1009                           ;main_m.c: 171:     I2C_Master_Init(100000);
  1010  0C17  3000               	movlw	0
  1011  0C18  00A3               	movwf	I2C_Master_Init@c+3
  1012  0C19  3001               	movlw	1
  1013  0C1A  00A2               	movwf	I2C_Master_Init@c+2
  1014  0C1B  3086               	movlw	134
  1015  0C1C  00A1               	movwf	I2C_Master_Init@c+1
  1016  0C1D  30A0               	movlw	160
  1017  0C1E  00A0               	movwf	I2C_Master_Init@c
  1018  0C1F  120A  158A  24AD  120A  158A  	fcall	_I2C_Master_Init
  1019  0C24                     l55:
  1020  0C24  0008               	return
  1021  0C25                     __end_of_setup:
  1022                           
  1023                           	psect	text2
  1024  0CAD                     __ptext2:	
  1025 ;; *************** function _I2C_Master_Init *****************
  1026 ;; Defined at:
  1027 ;;		line 16 in file "I2C.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  c               4    0[BANK0 ] const unsigned long 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       4       0       0       0
  1042 ;;      Locals:         0       0       0       0       0
  1043 ;;      Temps:          0       4       0       0       0
  1044 ;;      Totals:         0       8       0       0       0
  1045 ;;Total ram usage:        8 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    1
  1048 ;; This function calls:
  1049 ;;		___lldiv
  1050 ;; This function is called by:
  1051 ;;		_setup
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _I2C_Master_Init
  1057  0CAD                     _I2C_Master_Init:
  1058  0CAD                     l1148:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1064  0CAD  3028               	movlw	40
  1065  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0CB0  0094               	movwf	20	;volatile
  1068  0CB1                     l1150:
  1069                           
  1070                           ;I2C.c: 19:     SSPCON2 = 0;
  1071  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0CB3  0191               	clrf	17	;volatile
  1074  0CB4                     l1152:
  1075                           
  1076                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1077  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0CB6  0820               	movf	I2C_Master_Init@c,w
  1080  0CB7  00A4               	movwf	??_I2C_Master_Init
  1081  0CB8  0821               	movf	I2C_Master_Init@c+1,w
  1082  0CB9  00A5               	movwf	??_I2C_Master_Init+1
  1083  0CBA  0822               	movf	I2C_Master_Init@c+2,w
  1084  0CBB  00A6               	movwf	??_I2C_Master_Init+2
  1085  0CBC  0823               	movf	I2C_Master_Init@c+3,w
  1086  0CBD  00A7               	movwf	??_I2C_Master_Init+3
  1087  0CBE  3002               	movlw	2
  1088  0CBF                     u745:
  1089  0CBF  1003               	clrc
  1090  0CC0  0DA4               	rlf	??_I2C_Master_Init,f
  1091  0CC1  0DA5               	rlf	??_I2C_Master_Init+1,f
  1092  0CC2  0DA6               	rlf	??_I2C_Master_Init+2,f
  1093  0CC3  0DA7               	rlf	??_I2C_Master_Init+3,f
  1094  0CC4                     u740:
  1095  0CC4  3EFF               	addlw	-1
  1096  0CC5  1D03               	skipz
  1097  0CC6  2CBF               	goto	u745
  1098  0CC7  0827               	movf	??_I2C_Master_Init+3,w
  1099  0CC8  00F3               	movwf	___lldiv@divisor+3
  1100  0CC9  0826               	movf	??_I2C_Master_Init+2,w
  1101  0CCA  00F2               	movwf	___lldiv@divisor+2
  1102  0CCB  0825               	movf	??_I2C_Master_Init+1,w
  1103  0CCC  00F1               	movwf	___lldiv@divisor+1
  1104  0CCD  0824               	movf	??_I2C_Master_Init,w
  1105  0CCE  00F0               	movwf	___lldiv@divisor
  1106  0CCF  3000               	movlw	0
  1107  0CD0  00F7               	movwf	___lldiv@dividend+3
  1108  0CD1  307A               	movlw	122
  1109  0CD2  00F6               	movwf	___lldiv@dividend+2
  1110  0CD3  3012               	movlw	18
  1111  0CD4  00F5               	movwf	___lldiv@dividend+1
  1112  0CD5  3000               	movlw	0
  1113  0CD6  00F4               	movwf	___lldiv@dividend
  1114  0CD7  120A  158A  25FD  120A  158A  	fcall	___lldiv
  1115  0CDC  0870               	movf	?___lldiv,w
  1116  0CDD  3EFF               	addlw	255
  1117  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0CE0  0093               	movwf	19	;volatile
  1120  0CE1                     l1154:
  1121                           
  1122                           ;I2C.c: 21:     SSPSTAT = 0;
  1123  0CE1  0194               	clrf	20	;volatile
  1124  0CE2                     l1156:
  1125                           
  1126                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1127  0CE2  1587               	bsf	7,3	;volatile
  1128  0CE3                     l1158:
  1129                           
  1130                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1131  0CE3  1607               	bsf	7,4	;volatile
  1132  0CE4                     l84:
  1133  0CE4  0008               	return
  1134  0CE5                     __end_of_I2C_Master_Init:
  1135                           
  1136                           	psect	text3
  1137  00B3                     __ptext3:	
  1138 ;; *************** function _BMP280_readTemperature *****************
  1139 ;; Defined at:
  1140 ;;		line 241 in file "BMP280.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  temp            1    wreg     PTR long 
  1143 ;;		 -> temperature(4), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  temp            1   42[BANK0 ] PTR long 
  1146 ;;		 -> temperature(4), 
  1147 ;;  var2            4   34[BANK0 ] long 
  1148 ;;  var1            4   30[BANK0 ] long 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2    8[None  ] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0      17       0       0       0
  1160 ;;      Temps:          0      16       0       0       0
  1161 ;;      Totals:         0      33       0       0       0
  1162 ;;Total ram usage:       33 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    3
  1165 ;; This function calls:
  1166 ;;		_BMP280_Update
  1167 ;;		___aldiv
  1168 ;;		___lmul
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _BMP280_readTemperature
  1176  00B3                     _BMP280_readTemperature:
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1180                           ;BMP280_readTemperature@temp stored from wreg
  1181  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00B5  00CA               	movwf	BMP280_readTemperature@temp
  1184  00B6                     l1286:
  1185                           
  1186                           ;BMP280.c: 241: int BMP280_readTemperature(int32_t *temp);BMP280.c: 242: {;BMP280.c: 243
      +                          :   int32_t var1, var2;;BMP280.c: 245:   BMP280_Update();
  1187  00B6  120A  158A  2663  120A  118A  	fcall	_BMP280_Update
  1188                           
  1189                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1190  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1191  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1192  00BD  0835               	movf	_BMP280_calib^(0+128),w
  1193  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00C0  00AE               	movwf	??_BMP280_readTemperature
  1196  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1197  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1198  00C3  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1199  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00C6  00AF               	movwf	??_BMP280_readTemperature+1
  1202  00C7  01B0               	clrf	??_BMP280_readTemperature+2
  1203  00C8  01B1               	clrf	??_BMP280_readTemperature+3
  1204  00C9  3001               	movlw	1
  1205  00CA                     u985:
  1206  00CA  1003               	clrc
  1207  00CB  0DAE               	rlf	??_BMP280_readTemperature,f
  1208  00CC  0DAF               	rlf	??_BMP280_readTemperature+1,f
  1209  00CD  0DB0               	rlf	??_BMP280_readTemperature+2,f
  1210  00CE  0DB1               	rlf	??_BMP280_readTemperature+3,f
  1211  00CF                     u980:
  1212  00CF  3EFF               	addlw	-1
  1213  00D0  1D03               	skipz
  1214  00D1  28CA               	goto	u985
  1215  00D2  3000               	movlw	0
  1216  00D3  00F3               	movwf	___aldiv@divisor+3
  1217  00D4  3000               	movlw	0
  1218  00D5  00F2               	movwf	___aldiv@divisor+2
  1219  00D6  3000               	movlw	0
  1220  00D7  00F1               	movwf	___aldiv@divisor+1
  1221  00D8  3008               	movlw	8
  1222  00D9  00F0               	movwf	___aldiv@divisor
  1223  00DA  0862               	movf	_adc_T+3,w
  1224  00DB  00F7               	movwf	___aldiv@dividend+3
  1225  00DC  0861               	movf	_adc_T+2,w
  1226  00DD  00F6               	movwf	___aldiv@dividend+2
  1227  00DE  0860               	movf	_adc_T+1,w
  1228  00DF  00F5               	movwf	___aldiv@dividend+1
  1229  00E0  085F               	movf	_adc_T,w
  1230  00E1  00F4               	movwf	___aldiv@dividend
  1231  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1232  00E7  0870               	movf	?___aldiv,w
  1233  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1234  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1235  00EA  00B2               	movwf	??_BMP280_readTemperature+4
  1236  00EB  0871               	movf	?___aldiv+1,w
  1237  00EC  00B3               	movwf	??_BMP280_readTemperature+5
  1238  00ED  0872               	movf	?___aldiv+2,w
  1239  00EE  00B4               	movwf	??_BMP280_readTemperature+6
  1240  00EF  0873               	movf	?___aldiv+3,w
  1241  00F0  00B5               	movwf	??_BMP280_readTemperature+7
  1242  00F1  082E               	movf	??_BMP280_readTemperature,w
  1243  00F2  02B2               	subwf	??_BMP280_readTemperature+4,f
  1244  00F3  082F               	movf	??_BMP280_readTemperature+1,w
  1245  00F4  1C03               	skipc
  1246  00F5  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1247  00F6  28F8               	goto	u991
  1248  00F7  28F9               	goto	u992
  1249  00F8                     u991:
  1250  00F8  02B3               	subwf	??_BMP280_readTemperature+5,f
  1251  00F9                     u992:
  1252  00F9  0830               	movf	??_BMP280_readTemperature+2,w
  1253  00FA  1C03               	skipc
  1254  00FB  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1255  00FC  28FE               	goto	u993
  1256  00FD  28FF               	goto	u994
  1257  00FE                     u993:
  1258  00FE  02B4               	subwf	??_BMP280_readTemperature+6,f
  1259  00FF                     u994:
  1260  00FF  0831               	movf	??_BMP280_readTemperature+3,w
  1261  0100  1C03               	skipc
  1262  0101  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1263  0102  2904               	goto	u995
  1264  0103  2905               	goto	u996
  1265  0104                     u995:
  1266  0104  02B5               	subwf	??_BMP280_readTemperature+7,f
  1267  0105                     u996:
  1268  0105  0835               	movf	??_BMP280_readTemperature+7,w
  1269  0106  00A9               	movwf	___lmul@multiplier+3
  1270  0107  0834               	movf	??_BMP280_readTemperature+6,w
  1271  0108  00A8               	movwf	___lmul@multiplier+2
  1272  0109  0833               	movf	??_BMP280_readTemperature+5,w
  1273  010A  00A7               	movwf	___lmul@multiplier+1
  1274  010B  0832               	movf	??_BMP280_readTemperature+4,w
  1275  010C  00A6               	movwf	___lmul@multiplier
  1276  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1277  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1278  010F  0837               	movf	(_BMP280_calib^(0+128)+2),w
  1279  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0112  00AA               	movwf	___lmul@multiplicand
  1282  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0115  0838               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1285  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0118  00AB               	movwf	___lmul@multiplicand+1
  1288  0119  3000               	movlw	0
  1289  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1290  011B  30FF               	movlw	255
  1291  011C  00AC               	movwf	___lmul@multiplicand+2
  1292  011D  00AD               	movwf	___lmul@multiplicand+3
  1293  011E  120A  158A  2569  120A  118A  	fcall	___lmul
  1294  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0125  0829               	movf	?___lmul+3,w
  1297  0126  00CE               	movwf	_BMP280_readTemperature$1176+3
  1298  0127  0828               	movf	?___lmul+2,w
  1299  0128  00CD               	movwf	_BMP280_readTemperature$1176+2
  1300  0129  0827               	movf	?___lmul+1,w
  1301  012A  00CC               	movwf	_BMP280_readTemperature$1176+1
  1302  012B  0826               	movf	?___lmul,w
  1303  012C  00CB               	movwf	_BMP280_readTemperature$1176
  1304                           
  1305                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1306  012D  3000               	movlw	0
  1307  012E  00F3               	movwf	___aldiv@divisor+3
  1308  012F  3000               	movlw	0
  1309  0130  00F2               	movwf	___aldiv@divisor+2
  1310  0131  3008               	movlw	8
  1311  0132  00F1               	movwf	___aldiv@divisor+1
  1312  0133  3000               	movlw	0
  1313  0134  00F0               	movwf	___aldiv@divisor
  1314  0135  084E               	movf	_BMP280_readTemperature$1176+3,w
  1315  0136  00F7               	movwf	___aldiv@dividend+3
  1316  0137  084D               	movf	_BMP280_readTemperature$1176+2,w
  1317  0138  00F6               	movwf	___aldiv@dividend+2
  1318  0139  084C               	movf	_BMP280_readTemperature$1176+1,w
  1319  013A  00F5               	movwf	___aldiv@dividend+1
  1320  013B  084B               	movf	_BMP280_readTemperature$1176,w
  1321  013C  00F4               	movwf	___aldiv@dividend
  1322  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1323  0142  0873               	movf	?___aldiv+3,w
  1324  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0145  00C1               	movwf	BMP280_readTemperature@var1+3
  1327  0146  0872               	movf	?___aldiv+2,w
  1328  0147  00C0               	movwf	BMP280_readTemperature@var1+2
  1329  0148  0871               	movf	?___aldiv+1,w
  1330  0149  00BF               	movwf	BMP280_readTemperature@var1+1
  1331  014A  0870               	movf	?___aldiv,w
  1332  014B  00BE               	movwf	BMP280_readTemperature@var1
  1333                           
  1334                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1335  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1336  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1337  014E  0835               	movf	_BMP280_calib^(0+128),w
  1338  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0151  00AE               	movwf	??_BMP280_readTemperature
  1341  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0154  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1344  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0157  00AF               	movwf	??_BMP280_readTemperature+1
  1347  0158  01B0               	clrf	??_BMP280_readTemperature+2
  1348  0159  01B1               	clrf	??_BMP280_readTemperature+3
  1349  015A  3000               	movlw	0
  1350  015B  00F3               	movwf	___aldiv@divisor+3
  1351  015C  3000               	movlw	0
  1352  015D  00F2               	movwf	___aldiv@divisor+2
  1353  015E  3000               	movlw	0
  1354  015F  00F1               	movwf	___aldiv@divisor+1
  1355  0160  3010               	movlw	16
  1356  0161  00F0               	movwf	___aldiv@divisor
  1357  0162  0862               	movf	_adc_T+3,w
  1358  0163  00F7               	movwf	___aldiv@dividend+3
  1359  0164  0861               	movf	_adc_T+2,w
  1360  0165  00F6               	movwf	___aldiv@dividend+2
  1361  0166  0860               	movf	_adc_T+1,w
  1362  0167  00F5               	movwf	___aldiv@dividend+1
  1363  0168  085F               	movf	_adc_T,w
  1364  0169  00F4               	movwf	___aldiv@dividend
  1365  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1366  016F  0870               	movf	?___aldiv,w
  1367  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0172  00B2               	movwf	??_BMP280_readTemperature+4
  1370  0173  0871               	movf	?___aldiv+1,w
  1371  0174  00B3               	movwf	??_BMP280_readTemperature+5
  1372  0175  0872               	movf	?___aldiv+2,w
  1373  0176  00B4               	movwf	??_BMP280_readTemperature+6
  1374  0177  0873               	movf	?___aldiv+3,w
  1375  0178  00B5               	movwf	??_BMP280_readTemperature+7
  1376  0179  082E               	movf	??_BMP280_readTemperature,w
  1377  017A  02B2               	subwf	??_BMP280_readTemperature+4,f
  1378  017B  082F               	movf	??_BMP280_readTemperature+1,w
  1379  017C  1C03               	skipc
  1380  017D  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1381  017E  2980               	goto	u1001
  1382  017F  2981               	goto	u1002
  1383  0180                     u1001:
  1384  0180  02B3               	subwf	??_BMP280_readTemperature+5,f
  1385  0181                     u1002:
  1386  0181  0830               	movf	??_BMP280_readTemperature+2,w
  1387  0182  1C03               	skipc
  1388  0183  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1389  0184  2986               	goto	u1003
  1390  0185  2987               	goto	u1004
  1391  0186                     u1003:
  1392  0186  02B4               	subwf	??_BMP280_readTemperature+6,f
  1393  0187                     u1004:
  1394  0187  0831               	movf	??_BMP280_readTemperature+3,w
  1395  0188  1C03               	skipc
  1396  0189  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1397  018A  298C               	goto	u1005
  1398  018B  298D               	goto	u1006
  1399  018C                     u1005:
  1400  018C  02B5               	subwf	??_BMP280_readTemperature+7,f
  1401  018D                     u1006:
  1402  018D  0835               	movf	??_BMP280_readTemperature+7,w
  1403  018E  00A9               	movwf	___lmul@multiplier+3
  1404  018F  0834               	movf	??_BMP280_readTemperature+6,w
  1405  0190  00A8               	movwf	___lmul@multiplier+2
  1406  0191  0833               	movf	??_BMP280_readTemperature+5,w
  1407  0192  00A7               	movwf	___lmul@multiplier+1
  1408  0193  0832               	movf	??_BMP280_readTemperature+4,w
  1409  0194  00A6               	movwf	___lmul@multiplier
  1410  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0197  0835               	movf	_BMP280_calib^(0+128),w
  1413  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1415  019A  00B6               	movwf	??_BMP280_readTemperature+8
  1416  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1417  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1418  019D  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1419  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1420  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1421  01A0  00B7               	movwf	??_BMP280_readTemperature+9
  1422  01A1  01B8               	clrf	??_BMP280_readTemperature+10
  1423  01A2  01B9               	clrf	??_BMP280_readTemperature+11
  1424  01A3  3000               	movlw	0
  1425  01A4  00F3               	movwf	___aldiv@divisor+3
  1426  01A5  3000               	movlw	0
  1427  01A6  00F2               	movwf	___aldiv@divisor+2
  1428  01A7  3000               	movlw	0
  1429  01A8  00F1               	movwf	___aldiv@divisor+1
  1430  01A9  3010               	movlw	16
  1431  01AA  00F0               	movwf	___aldiv@divisor
  1432  01AB  0862               	movf	_adc_T+3,w
  1433  01AC  00F7               	movwf	___aldiv@dividend+3
  1434  01AD  0861               	movf	_adc_T+2,w
  1435  01AE  00F6               	movwf	___aldiv@dividend+2
  1436  01AF  0860               	movf	_adc_T+1,w
  1437  01B0  00F5               	movwf	___aldiv@dividend+1
  1438  01B1  085F               	movf	_adc_T,w
  1439  01B2  00F4               	movwf	___aldiv@dividend
  1440  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1441  01B8  0870               	movf	?___aldiv,w
  1442  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1443  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1444  01BB  00BA               	movwf	??_BMP280_readTemperature+12
  1445  01BC  0871               	movf	?___aldiv+1,w
  1446  01BD  00BB               	movwf	??_BMP280_readTemperature+13
  1447  01BE  0872               	movf	?___aldiv+2,w
  1448  01BF  00BC               	movwf	??_BMP280_readTemperature+14
  1449  01C0  0873               	movf	?___aldiv+3,w
  1450  01C1  00BD               	movwf	??_BMP280_readTemperature+15
  1451  01C2  0836               	movf	??_BMP280_readTemperature+8,w
  1452  01C3  02BA               	subwf	??_BMP280_readTemperature+12,f
  1453  01C4  0837               	movf	??_BMP280_readTemperature+9,w
  1454  01C5  1C03               	skipc
  1455  01C6  0F37               	incfsz	??_BMP280_readTemperature+9,w
  1456  01C7  29C9               	goto	u1011
  1457  01C8  29CA               	goto	u1012
  1458  01C9                     u1011:
  1459  01C9  02BB               	subwf	??_BMP280_readTemperature+13,f
  1460  01CA                     u1012:
  1461  01CA  0838               	movf	??_BMP280_readTemperature+10,w
  1462  01CB  1C03               	skipc
  1463  01CC  0F38               	incfsz	??_BMP280_readTemperature+10,w
  1464  01CD  29CF               	goto	u1013
  1465  01CE  29D0               	goto	u1014
  1466  01CF                     u1013:
  1467  01CF  02BC               	subwf	??_BMP280_readTemperature+14,f
  1468  01D0                     u1014:
  1469  01D0  0839               	movf	??_BMP280_readTemperature+11,w
  1470  01D1  1C03               	skipc
  1471  01D2  0F39               	incfsz	??_BMP280_readTemperature+11,w
  1472  01D3  29D5               	goto	u1015
  1473  01D4  29D6               	goto	u1016
  1474  01D5                     u1015:
  1475  01D5  02BD               	subwf	??_BMP280_readTemperature+15,f
  1476  01D6                     u1016:
  1477  01D6  083D               	movf	??_BMP280_readTemperature+15,w
  1478  01D7  00AD               	movwf	___lmul@multiplicand+3
  1479  01D8  083C               	movf	??_BMP280_readTemperature+14,w
  1480  01D9  00AC               	movwf	___lmul@multiplicand+2
  1481  01DA  083B               	movf	??_BMP280_readTemperature+13,w
  1482  01DB  00AB               	movwf	___lmul@multiplicand+1
  1483  01DC  083A               	movf	??_BMP280_readTemperature+12,w
  1484  01DD  00AA               	movwf	___lmul@multiplicand
  1485  01DE  120A  158A  2569  120A  118A  	fcall	___lmul
  1486  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1487  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1488  01E5  0829               	movf	?___lmul+3,w
  1489  01E6  00CE               	movwf	_BMP280_readTemperature$1176+3
  1490  01E7  0828               	movf	?___lmul+2,w
  1491  01E8  00CD               	movwf	_BMP280_readTemperature$1176+2
  1492  01E9  0827               	movf	?___lmul+1,w
  1493  01EA  00CC               	movwf	_BMP280_readTemperature$1176+1
  1494  01EB  0826               	movf	?___lmul,w
  1495  01EC  00CB               	movwf	_BMP280_readTemperature$1176
  1496                           
  1497                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1498  01ED  3000               	movlw	0
  1499  01EE  00F3               	movwf	___aldiv@divisor+3
  1500  01EF  3000               	movlw	0
  1501  01F0  00F2               	movwf	___aldiv@divisor+2
  1502  01F1  3010               	movlw	16
  1503  01F2  00F1               	movwf	___aldiv@divisor+1
  1504  01F3  3000               	movlw	0
  1505  01F4  00F0               	movwf	___aldiv@divisor
  1506  01F5  084E               	movf	_BMP280_readTemperature$1176+3,w
  1507  01F6  00F7               	movwf	___aldiv@dividend+3
  1508  01F7  084D               	movf	_BMP280_readTemperature$1176+2,w
  1509  01F8  00F6               	movwf	___aldiv@dividend+2
  1510  01F9  084C               	movf	_BMP280_readTemperature$1176+1,w
  1511  01FA  00F5               	movwf	___aldiv@dividend+1
  1512  01FB  084B               	movf	_BMP280_readTemperature$1176,w
  1513  01FC  00F4               	movwf	___aldiv@dividend
  1514  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1515  0202  0873               	movf	?___aldiv+3,w
  1516  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0205  00A9               	movwf	___lmul@multiplier+3
  1519  0206  0872               	movf	?___aldiv+2,w
  1520  0207  00A8               	movwf	___lmul@multiplier+2
  1521  0208  0871               	movf	?___aldiv+1,w
  1522  0209  00A7               	movwf	___lmul@multiplier+1
  1523  020A  0870               	movf	?___aldiv,w
  1524  020B  00A6               	movwf	___lmul@multiplier
  1525  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1526  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1527  020E  0839               	movf	(_BMP280_calib^(0+128)+4),w
  1528  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0211  00AA               	movwf	___lmul@multiplicand
  1531  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0214  083A               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1534  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0217  00AB               	movwf	___lmul@multiplicand+1
  1537  0218  3000               	movlw	0
  1538  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1539  021A  30FF               	movlw	255
  1540  021B  00AC               	movwf	___lmul@multiplicand+2
  1541  021C  00AD               	movwf	___lmul@multiplicand+3
  1542  021D  120A  158A  2569  120A  118A  	fcall	___lmul
  1543  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0224  0829               	movf	?___lmul+3,w
  1546  0225  00C9               	movwf	_BMP280_readTemperature$1177+3
  1547  0226  0828               	movf	?___lmul+2,w
  1548  0227  00C8               	movwf	_BMP280_readTemperature$1177+2
  1549  0228  0827               	movf	?___lmul+1,w
  1550  0229  00C7               	movwf	_BMP280_readTemperature$1177+1
  1551  022A  0826               	movf	?___lmul,w
  1552  022B  00C6               	movwf	_BMP280_readTemperature$1177
  1553                           
  1554                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1555  022C  3000               	movlw	0
  1556  022D  00F3               	movwf	___aldiv@divisor+3
  1557  022E  3000               	movlw	0
  1558  022F  00F2               	movwf	___aldiv@divisor+2
  1559  0230  3040               	movlw	64
  1560  0231  00F1               	movwf	___aldiv@divisor+1
  1561  0232  3000               	movlw	0
  1562  0233  00F0               	movwf	___aldiv@divisor
  1563  0234  0849               	movf	_BMP280_readTemperature$1177+3,w
  1564  0235  00F7               	movwf	___aldiv@dividend+3
  1565  0236  0848               	movf	_BMP280_readTemperature$1177+2,w
  1566  0237  00F6               	movwf	___aldiv@dividend+2
  1567  0238  0847               	movf	_BMP280_readTemperature$1177+1,w
  1568  0239  00F5               	movwf	___aldiv@dividend+1
  1569  023A  0846               	movf	_BMP280_readTemperature$1177,w
  1570  023B  00F4               	movwf	___aldiv@dividend
  1571  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1572  0241  0873               	movf	?___aldiv+3,w
  1573  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0244  00C5               	movwf	BMP280_readTemperature@var2+3
  1576  0245  0872               	movf	?___aldiv+2,w
  1577  0246  00C4               	movwf	BMP280_readTemperature@var2+2
  1578  0247  0871               	movf	?___aldiv+1,w
  1579  0248  00C3               	movwf	BMP280_readTemperature@var2+1
  1580  0249  0870               	movf	?___aldiv,w
  1581  024A  00C2               	movwf	BMP280_readTemperature@var2
  1582  024B                     l1288:
  1583                           
  1584                           ;BMP280.c: 255:   t_fine = var1 + var2;
  1585  024B  083E               	movf	BMP280_readTemperature@var1,w
  1586  024C  0742               	addwf	BMP280_readTemperature@var2,w
  1587  024D  00AE               	movwf	??_BMP280_readTemperature
  1588  024E  3000               	movlw	0
  1589  024F  1803               	skipnc
  1590  0250  3001               	movlw	1
  1591  0251  073F               	addwf	BMP280_readTemperature@var1+1,w
  1592  0252  01B0               	clrf	??_BMP280_readTemperature+2
  1593  0253  1803               	skipnc
  1594  0254  0AB0               	incf	??_BMP280_readTemperature+2,f
  1595  0255  0743               	addwf	BMP280_readTemperature@var2+1,w
  1596  0256  00AF               	movwf	??_BMP280_readTemperature+1
  1597  0257  1803               	skipnc
  1598  0258  0AB0               	incf	??_BMP280_readTemperature+2,f
  1599  0259  0840               	movf	BMP280_readTemperature@var1+2,w
  1600  025A  0730               	addwf	??_BMP280_readTemperature+2,w
  1601  025B  01B1               	clrf	??_BMP280_readTemperature+3
  1602  025C  1803               	skipnc
  1603  025D  0AB1               	incf	??_BMP280_readTemperature+3,f
  1604  025E  0744               	addwf	BMP280_readTemperature@var2+2,w
  1605  025F  00B0               	movwf	??_BMP280_readTemperature+2
  1606  0260  1803               	skipnc
  1607  0261  0AB1               	incf	??_BMP280_readTemperature+3,f
  1608  0262  0841               	movf	BMP280_readTemperature@var1+3,w
  1609  0263  0731               	addwf	??_BMP280_readTemperature+3,w
  1610  0264  0745               	addwf	BMP280_readTemperature@var2+3,w
  1611  0265  00B1               	movwf	??_BMP280_readTemperature+3
  1612  0266  0831               	movf	??_BMP280_readTemperature+3,w
  1613  0267  00DE               	movwf	_t_fine+3
  1614  0268  0830               	movf	??_BMP280_readTemperature+2,w
  1615  0269  00DD               	movwf	_t_fine+2
  1616  026A  082F               	movf	??_BMP280_readTemperature+1,w
  1617  026B  00DC               	movwf	_t_fine+1
  1618  026C  082E               	movf	??_BMP280_readTemperature,w
  1619  026D  00DB               	movwf	_t_fine
  1620  026E                     l1290:
  1621                           
  1622                           ;BMP280.c: 257:   *temp = (t_fine * 5 + 128) / 256;
  1623  026E  3000               	movlw	0
  1624  026F  00F3               	movwf	___aldiv@divisor+3
  1625  0270  3000               	movlw	0
  1626  0271  00F2               	movwf	___aldiv@divisor+2
  1627  0272  3001               	movlw	1
  1628  0273  00F1               	movwf	___aldiv@divisor+1
  1629  0274  3000               	movlw	0
  1630  0275  00F0               	movwf	___aldiv@divisor
  1631  0276  3080               	movlw	128
  1632  0277  00AE               	movwf	??_BMP280_readTemperature
  1633  0278  3000               	movlw	0
  1634  0279  00AF               	movwf	??_BMP280_readTemperature+1
  1635  027A  3000               	movlw	0
  1636  027B  00B0               	movwf	??_BMP280_readTemperature+2
  1637  027C  3000               	movlw	0
  1638  027D  00B1               	movwf	??_BMP280_readTemperature+3
  1639  027E  085E               	movf	_t_fine+3,w
  1640  027F  00A9               	movwf	___lmul@multiplier+3
  1641  0280  085D               	movf	_t_fine+2,w
  1642  0281  00A8               	movwf	___lmul@multiplier+2
  1643  0282  085C               	movf	_t_fine+1,w
  1644  0283  00A7               	movwf	___lmul@multiplier+1
  1645  0284  085B               	movf	_t_fine,w
  1646  0285  00A6               	movwf	___lmul@multiplier
  1647  0286  3000               	movlw	0
  1648  0287  00AD               	movwf	___lmul@multiplicand+3
  1649  0288  3000               	movlw	0
  1650  0289  00AC               	movwf	___lmul@multiplicand+2
  1651  028A  3000               	movlw	0
  1652  028B  00AB               	movwf	___lmul@multiplicand+1
  1653  028C  3005               	movlw	5
  1654  028D  00AA               	movwf	___lmul@multiplicand
  1655  028E  120A  158A  2569  120A  118A  	fcall	___lmul
  1656  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0295  0826               	movf	?___lmul,w
  1659  0296  07AE               	addwf	??_BMP280_readTemperature,f
  1660  0297  0827               	movf	?___lmul+1,w
  1661  0298  1803               	skipnc
  1662  0299  0F27               	incfsz	?___lmul+1,w
  1663  029A  2A9C               	goto	u1020
  1664  029B  2A9D               	goto	u1021
  1665  029C                     u1020:
  1666  029C  07AF               	addwf	??_BMP280_readTemperature+1,f
  1667  029D                     u1021:
  1668  029D  0828               	movf	?___lmul+2,w
  1669  029E  1803               	skipnc
  1670  029F  0F28               	incfsz	?___lmul+2,w
  1671  02A0  2AA2               	goto	u1022
  1672  02A1  2AA3               	goto	u1023
  1673  02A2                     u1022:
  1674  02A2  07B0               	addwf	??_BMP280_readTemperature+2,f
  1675  02A3                     u1023:
  1676  02A3  0829               	movf	?___lmul+3,w
  1677  02A4  1803               	skipnc
  1678  02A5  0A29               	incf	?___lmul+3,w
  1679  02A6  07B1               	addwf	??_BMP280_readTemperature+3,f
  1680  02A7  0831               	movf	??_BMP280_readTemperature+3,w
  1681  02A8  00F7               	movwf	___aldiv@dividend+3
  1682  02A9  0830               	movf	??_BMP280_readTemperature+2,w
  1683  02AA  00F6               	movwf	___aldiv@dividend+2
  1684  02AB  082F               	movf	??_BMP280_readTemperature+1,w
  1685  02AC  00F5               	movwf	___aldiv@dividend+1
  1686  02AD  082E               	movf	??_BMP280_readTemperature,w
  1687  02AE  00F4               	movwf	___aldiv@dividend
  1688  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1689  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1690  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1691  02B6  084A               	movf	BMP280_readTemperature@temp,w
  1692  02B7  0084               	movwf	4
  1693  02B8  0870               	movf	?___aldiv,w
  1694  02B9  1383               	bcf	3,7	;select IRP bank0
  1695  02BA  0080               	movwf	0
  1696  02BB  0A84               	incf	4,f
  1697  02BC  0871               	movf	?___aldiv+1,w
  1698  02BD  0080               	movwf	0
  1699  02BE  0A84               	incf	4,f
  1700  02BF  0872               	movf	?___aldiv+2,w
  1701  02C0  0080               	movwf	0
  1702  02C1  0A84               	incf	4,f
  1703  02C2  0873               	movf	?___aldiv+3,w
  1704  02C3  0080               	movwf	0
  1705  02C4                     l160:
  1706  02C4  0008               	return
  1707  02C5                     __end_of_BMP280_readTemperature:
  1708                           
  1709                           	psect	text4
  1710  0E63                     __ptext4:	
  1711 ;; *************** function _BMP280_Update *****************
  1712 ;; Defined at:
  1713 ;;		line 210 in file "BMP280.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  ret             4   10[COMMON] struct .
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         4       0       0       0       0
  1729 ;;      Temps:          4       0       0       0       0
  1730 ;;      Totals:         8       0       0       0       0
  1731 ;;Total ram usage:        8 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    2
  1734 ;; This function calls:
  1735 ;;		_I2C_Master_Read
  1736 ;;		_I2C_Master_Start
  1737 ;;		_I2C_Master_Stop
  1738 ;;		_I2C_Master_Write
  1739 ;; This function is called by:
  1740 ;;		_BMP280_readTemperature
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _BMP280_Update
  1746  0E63                     _BMP280_Update:
  1747  0E63                     l1178:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;BMP280.c: 216:   } ret;;BMP280.c: 217:   ret.b[3] = 0x00;
  1753  0E63  01FD               	clrf	BMP280_Update@ret+3
  1754  0E64                     l1180:
  1755                           
  1756                           ;BMP280.c: 219:   I2C_Master_Start();
  1757  0E64  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  1758  0E69                     l1182:
  1759                           
  1760                           ;BMP280.c: 220:   I2C_Master_Write( 0xEE);
  1761  0E69  30EE               	movlw	238
  1762  0E6A  00F0               	movwf	I2C_Master_Write@d
  1763  0E6B  3000               	movlw	0
  1764  0E6C  00F1               	movwf	I2C_Master_Write@d+1
  1765  0E6D  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1766  0E72                     l1184:
  1767                           
  1768                           ;BMP280.c: 221:   I2C_Master_Write( 0xF7);
  1769  0E72  30F7               	movlw	247
  1770  0E73  00F0               	movwf	I2C_Master_Write@d
  1771  0E74  3000               	movlw	0
  1772  0E75  00F1               	movwf	I2C_Master_Write@d+1
  1773  0E76  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1774  0E7B                     l1186:
  1775                           
  1776                           ;BMP280.c: 222:   I2C_Master_Start();
  1777  0E7B  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  1778  0E80                     l1188:
  1779                           
  1780                           ;BMP280.c: 223:   I2C_Master_Write( 0xEE | 1);
  1781  0E80  30EF               	movlw	239
  1782  0E81  00F0               	movwf	I2C_Master_Write@d
  1783  0E82  3000               	movlw	0
  1784  0E83  00F1               	movwf	I2C_Master_Write@d+1
  1785  0E84  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1786  0E89                     l1190:
  1787                           
  1788                           ;BMP280.c: 224:   ret.b[2] = I2C_Master_Read( 1);
  1789  0E89  3001               	movlw	1
  1790  0E8A  00F0               	movwf	I2C_Master_Read@a
  1791  0E8B  3000               	movlw	0
  1792  0E8C  00F1               	movwf	I2C_Master_Read@a+1
  1793  0E8D  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1794  0E92  0870               	movf	?_I2C_Master_Read,w
  1795  0E93  00F6               	movwf	??_BMP280_Update
  1796  0E94  0876               	movf	??_BMP280_Update,w
  1797  0E95  00FC               	movwf	BMP280_Update@ret+2
  1798  0E96                     l1192:
  1799                           
  1800                           ;BMP280.c: 225:   ret.b[1] = I2C_Master_Read( 1);
  1801  0E96  3001               	movlw	1
  1802  0E97  00F0               	movwf	I2C_Master_Read@a
  1803  0E98  3000               	movlw	0
  1804  0E99  00F1               	movwf	I2C_Master_Read@a+1
  1805  0E9A  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1806  0E9F  0870               	movf	?_I2C_Master_Read,w
  1807  0EA0  00F6               	movwf	??_BMP280_Update
  1808  0EA1  0876               	movf	??_BMP280_Update,w
  1809  0EA2  00FB               	movwf	BMP280_Update@ret+1
  1810  0EA3                     l1194:
  1811                           
  1812                           ;BMP280.c: 226:   ret.b[0] = I2C_Master_Read( 1);
  1813  0EA3  3001               	movlw	1
  1814  0EA4  00F0               	movwf	I2C_Master_Read@a
  1815  0EA5  3000               	movlw	0
  1816  0EA6  00F1               	movwf	I2C_Master_Read@a+1
  1817  0EA7  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1818  0EAC  0870               	movf	?_I2C_Master_Read,w
  1819  0EAD  00F6               	movwf	??_BMP280_Update
  1820  0EAE  0876               	movf	??_BMP280_Update,w
  1821  0EAF  00FA               	movwf	BMP280_Update@ret
  1822  0EB0                     l1196:
  1823                           
  1824                           ;BMP280.c: 228:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1825  0EB0  087A               	movf	BMP280_Update@ret,w
  1826  0EB1  00F6               	movwf	??_BMP280_Update
  1827  0EB2  087B               	movf	BMP280_Update@ret+1,w
  1828  0EB3  00F7               	movwf	??_BMP280_Update+1
  1829  0EB4  087C               	movf	BMP280_Update@ret+2,w
  1830  0EB5  00F8               	movwf	??_BMP280_Update+2
  1831  0EB6  087D               	movf	BMP280_Update@ret+3,w
  1832  0EB7  00F9               	movwf	??_BMP280_Update+3
  1833  0EB8  3004               	movlw	4
  1834  0EB9                     u795:
  1835  0EB9  1003               	clrc
  1836  0EBA  0CF9               	rrf	??_BMP280_Update+3,f
  1837  0EBB  0CF8               	rrf	??_BMP280_Update+2,f
  1838  0EBC  0CF7               	rrf	??_BMP280_Update+1,f
  1839  0EBD  0CF6               	rrf	??_BMP280_Update,f
  1840  0EBE                     u790:
  1841  0EBE  3EFF               	addlw	-1
  1842  0EBF  1D03               	skipz
  1843  0EC0  2EB9               	goto	u795
  1844  0EC1  30FF               	movlw	255
  1845  0EC2  0576               	andwf	??_BMP280_Update,w
  1846  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0EC5  00B1               	movwf	_adc_P^(0+128)
  1849  0EC6  30FF               	movlw	255
  1850  0EC7  0577               	andwf	??_BMP280_Update+1,w
  1851  0EC8  00B2               	movwf	(_adc_P+1)^(0+128)
  1852  0EC9  300F               	movlw	15
  1853  0ECA  0578               	andwf	??_BMP280_Update+2,w
  1854  0ECB  00B3               	movwf	(_adc_P+2)^(0+128)
  1855  0ECC  3000               	movlw	0
  1856  0ECD  0579               	andwf	??_BMP280_Update+3,w
  1857  0ECE  00B4               	movwf	(_adc_P+3)^(0+128)
  1858  0ECF                     l1198:
  1859                           
  1860                           ;BMP280.c: 230:   ret.b[2] = I2C_Master_Read(1);
  1861  0ECF  3001               	movlw	1
  1862  0ED0  00F0               	movwf	I2C_Master_Read@a
  1863  0ED1  3000               	movlw	0
  1864  0ED2  00F1               	movwf	I2C_Master_Read@a+1
  1865  0ED3  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1866  0ED8  0870               	movf	?_I2C_Master_Read,w
  1867  0ED9  00F6               	movwf	??_BMP280_Update
  1868  0EDA  0876               	movf	??_BMP280_Update,w
  1869  0EDB  00FC               	movwf	BMP280_Update@ret+2
  1870  0EDC                     l1200:
  1871                           
  1872                           ;BMP280.c: 231:   ret.b[1] = I2C_Master_Read(1);
  1873  0EDC  3001               	movlw	1
  1874  0EDD  00F0               	movwf	I2C_Master_Read@a
  1875  0EDE  3000               	movlw	0
  1876  0EDF  00F1               	movwf	I2C_Master_Read@a+1
  1877  0EE0  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1878  0EE5  0870               	movf	?_I2C_Master_Read,w
  1879  0EE6  00F6               	movwf	??_BMP280_Update
  1880  0EE7  0876               	movf	??_BMP280_Update,w
  1881  0EE8  00FB               	movwf	BMP280_Update@ret+1
  1882  0EE9                     l1202:
  1883                           
  1884                           ;BMP280.c: 232:   ret.b[0] = I2C_Master_Read(0);
  1885  0EE9  3000               	movlw	0
  1886  0EEA  00F0               	movwf	I2C_Master_Read@a
  1887  0EEB  00F1               	movwf	I2C_Master_Read@a+1
  1888  0EEC  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1889  0EF1  0870               	movf	?_I2C_Master_Read,w
  1890  0EF2  00F6               	movwf	??_BMP280_Update
  1891  0EF3  0876               	movf	??_BMP280_Update,w
  1892  0EF4  00FA               	movwf	BMP280_Update@ret
  1893  0EF5                     l1204:
  1894                           
  1895                           ;BMP280.c: 233:   I2C_Master_Stop();
  1896  0EF5  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  1897  0EFA                     l1206:
  1898                           
  1899                           ;BMP280.c: 235:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1900  0EFA  087A               	movf	BMP280_Update@ret,w
  1901  0EFB  00F6               	movwf	??_BMP280_Update
  1902  0EFC  087B               	movf	BMP280_Update@ret+1,w
  1903  0EFD  00F7               	movwf	??_BMP280_Update+1
  1904  0EFE  087C               	movf	BMP280_Update@ret+2,w
  1905  0EFF  00F8               	movwf	??_BMP280_Update+2
  1906  0F00  087D               	movf	BMP280_Update@ret+3,w
  1907  0F01  00F9               	movwf	??_BMP280_Update+3
  1908  0F02  3004               	movlw	4
  1909  0F03                     u805:
  1910  0F03  1003               	clrc
  1911  0F04  0CF9               	rrf	??_BMP280_Update+3,f
  1912  0F05  0CF8               	rrf	??_BMP280_Update+2,f
  1913  0F06  0CF7               	rrf	??_BMP280_Update+1,f
  1914  0F07  0CF6               	rrf	??_BMP280_Update,f
  1915  0F08                     u800:
  1916  0F08  3EFF               	addlw	-1
  1917  0F09  1D03               	skipz
  1918  0F0A  2F03               	goto	u805
  1919  0F0B  30FF               	movlw	255
  1920  0F0C  0576               	andwf	??_BMP280_Update,w
  1921  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0F0F  00DF               	movwf	_adc_T
  1924  0F10  30FF               	movlw	255
  1925  0F11  0577               	andwf	??_BMP280_Update+1,w
  1926  0F12  00E0               	movwf	_adc_T+1
  1927  0F13  300F               	movlw	15
  1928  0F14  0578               	andwf	??_BMP280_Update+2,w
  1929  0F15  00E1               	movwf	_adc_T+2
  1930  0F16  3000               	movlw	0
  1931  0F17  0579               	andwf	??_BMP280_Update+3,w
  1932  0F18  00E2               	movwf	_adc_T+3
  1933  0F19                     l157:
  1934  0F19  0008               	return
  1935  0F1A                     __end_of_BMP280_Update:
  1936                           
  1937                           	psect	text5
  1938  02C5                     __ptext5:	
  1939 ;; *************** function _BMP280_readPressure *****************
  1940 ;; Defined at:
  1941 ;;		line 265 in file "BMP280.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  pres            1    wreg     PTR unsigned long 
  1944 ;;		 -> pressure(4), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  pres            1   42[BANK0 ] PTR unsigned long 
  1947 ;;		 -> pressure(4), 
  1948 ;;  var1            4   55[BANK0 ] long 
  1949 ;;  p               4   51[BANK0 ] unsigned long 
  1950 ;;  var2            4   47[BANK0 ] long 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2   10[None  ] int 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0      29       0       0       0
  1962 ;;      Temps:          0      16       0       0       0
  1963 ;;      Totals:         0      45       0       0       0
  1964 ;;Total ram usage:       45 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    1
  1967 ;; This function calls:
  1968 ;;		___aldiv
  1969 ;;		___lldiv
  1970 ;;		___lmul
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _BMP280_readPressure
  1978  02C5                     _BMP280_readPressure:
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1982                           ;BMP280_readPressure@pres stored from wreg
  1983  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1984  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1985  02C7  00CA               	movwf	BMP280_readPressure@pres
  1986  02C8                     l1294:
  1987                           
  1988                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1989  02C8  3000               	movlw	0
  1990  02C9  00AE               	movwf	??_BMP280_readPressure
  1991  02CA  3006               	movlw	6
  1992  02CB  00AF               	movwf	??_BMP280_readPressure+1
  1993  02CC  30FF               	movlw	255
  1994  02CD  00B0               	movwf	??_BMP280_readPressure+2
  1995  02CE  30FF               	movlw	255
  1996  02CF  00B1               	movwf	??_BMP280_readPressure+3
  1997  02D0  3000               	movlw	0
  1998  02D1  00F3               	movwf	___aldiv@divisor+3
  1999  02D2  3000               	movlw	0
  2000  02D3  00F2               	movwf	___aldiv@divisor+2
  2001  02D4  3000               	movlw	0
  2002  02D5  00F1               	movwf	___aldiv@divisor+1
  2003  02D6  3002               	movlw	2
  2004  02D7  00F0               	movwf	___aldiv@divisor
  2005  02D8  085E               	movf	_t_fine+3,w
  2006  02D9  00F7               	movwf	___aldiv@dividend+3
  2007  02DA  085D               	movf	_t_fine+2,w
  2008  02DB  00F6               	movwf	___aldiv@dividend+2
  2009  02DC  085C               	movf	_t_fine+1,w
  2010  02DD  00F5               	movwf	___aldiv@dividend+1
  2011  02DE  085B               	movf	_t_fine,w
  2012  02DF  00F4               	movwf	___aldiv@dividend
  2013  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  2014  02E5  0870               	movf	?___aldiv,w
  2015  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2016  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2017  02E8  07AE               	addwf	??_BMP280_readPressure,f
  2018  02E9  0871               	movf	?___aldiv+1,w
  2019  02EA  1803               	skipnc
  2020  02EB  0F71               	incfsz	?___aldiv+1,w
  2021  02EC  2AEE               	goto	u1030
  2022  02ED  2AEF               	goto	u1031
  2023  02EE                     u1030:
  2024  02EE  07AF               	addwf	??_BMP280_readPressure+1,f
  2025  02EF                     u1031:
  2026  02EF  0872               	movf	?___aldiv+2,w
  2027  02F0  1803               	skipnc
  2028  02F1  0F72               	incfsz	?___aldiv+2,w
  2029  02F2  2AF4               	goto	u1032
  2030  02F3  2AF5               	goto	u1033
  2031  02F4                     u1032:
  2032  02F4  07B0               	addwf	??_BMP280_readPressure+2,f
  2033  02F5                     u1033:
  2034  02F5  0873               	movf	?___aldiv+3,w
  2035  02F6  1803               	skipnc
  2036  02F7  0A73               	incf	?___aldiv+3,w
  2037  02F8  07B1               	addwf	??_BMP280_readPressure+3,f
  2038  02F9  0831               	movf	??_BMP280_readPressure+3,w
  2039  02FA  00DA               	movwf	BMP280_readPressure@var1+3
  2040  02FB  0830               	movf	??_BMP280_readPressure+2,w
  2041  02FC  00D9               	movwf	BMP280_readPressure@var1+2
  2042  02FD  082F               	movf	??_BMP280_readPressure+1,w
  2043  02FE  00D8               	movwf	BMP280_readPressure@var1+1
  2044  02FF  082E               	movf	??_BMP280_readPressure,w
  2045  0300  00D7               	movwf	BMP280_readPressure@var1
  2046                           
  2047                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2048  0301  3000               	movlw	0
  2049  0302  00F3               	movwf	___aldiv@divisor+3
  2050  0303  3000               	movlw	0
  2051  0304  00F2               	movwf	___aldiv@divisor+2
  2052  0305  3000               	movlw	0
  2053  0306  00F1               	movwf	___aldiv@divisor+1
  2054  0307  3004               	movlw	4
  2055  0308  00F0               	movwf	___aldiv@divisor
  2056  0309  085A               	movf	BMP280_readPressure@var1+3,w
  2057  030A  00F7               	movwf	___aldiv@dividend+3
  2058  030B  0859               	movf	BMP280_readPressure@var1+2,w
  2059  030C  00F6               	movwf	___aldiv@dividend+2
  2060  030D  0858               	movf	BMP280_readPressure@var1+1,w
  2061  030E  00F5               	movwf	___aldiv@dividend+1
  2062  030F  0857               	movf	BMP280_readPressure@var1,w
  2063  0310  00F4               	movwf	___aldiv@dividend
  2064  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  2065  0316  0873               	movf	?___aldiv+3,w
  2066  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0319  00A9               	movwf	___lmul@multiplier+3
  2069  031A  0872               	movf	?___aldiv+2,w
  2070  031B  00A8               	movwf	___lmul@multiplier+2
  2071  031C  0871               	movf	?___aldiv+1,w
  2072  031D  00A7               	movwf	___lmul@multiplier+1
  2073  031E  0870               	movf	?___aldiv,w
  2074  031F  00A6               	movwf	___lmul@multiplier
  2075  0320  3000               	movlw	0
  2076  0321  00F3               	movwf	___aldiv@divisor+3
  2077  0322  3000               	movlw	0
  2078  0323  00F2               	movwf	___aldiv@divisor+2
  2079  0324  3000               	movlw	0
  2080  0325  00F1               	movwf	___aldiv@divisor+1
  2081  0326  3004               	movlw	4
  2082  0327  00F0               	movwf	___aldiv@divisor
  2083  0328  085A               	movf	BMP280_readPressure@var1+3,w
  2084  0329  00F7               	movwf	___aldiv@dividend+3
  2085  032A  0859               	movf	BMP280_readPressure@var1+2,w
  2086  032B  00F6               	movwf	___aldiv@dividend+2
  2087  032C  0858               	movf	BMP280_readPressure@var1+1,w
  2088  032D  00F5               	movwf	___aldiv@dividend+1
  2089  032E  0857               	movf	BMP280_readPressure@var1,w
  2090  032F  00F4               	movwf	___aldiv@dividend
  2091  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  2092  0335  0873               	movf	?___aldiv+3,w
  2093  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0338  00AD               	movwf	___lmul@multiplicand+3
  2096  0339  0872               	movf	?___aldiv+2,w
  2097  033A  00AC               	movwf	___lmul@multiplicand+2
  2098  033B  0871               	movf	?___aldiv+1,w
  2099  033C  00AB               	movwf	___lmul@multiplicand+1
  2100  033D  0870               	movf	?___aldiv,w
  2101  033E  00AA               	movwf	___lmul@multiplicand
  2102  033F  120A  158A  2569  120A  118A  	fcall	___lmul
  2103  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0346  0829               	movf	?___lmul+3,w
  2106  0347  00CE               	movwf	_BMP280_readPressure$1178+3
  2107  0348  0828               	movf	?___lmul+2,w
  2108  0349  00CD               	movwf	_BMP280_readPressure$1178+2
  2109  034A  0827               	movf	?___lmul+1,w
  2110  034B  00CC               	movwf	_BMP280_readPressure$1178+1
  2111  034C  0826               	movf	?___lmul,w
  2112  034D  00CB               	movwf	_BMP280_readPressure$1178
  2113                           
  2114                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2115  034E  3000               	movlw	0
  2116  034F  00F3               	movwf	___aldiv@divisor+3
  2117  0350  3000               	movlw	0
  2118  0351  00F2               	movwf	___aldiv@divisor+2
  2119  0352  3008               	movlw	8
  2120  0353  00F1               	movwf	___aldiv@divisor+1
  2121  0354  3000               	movlw	0
  2122  0355  00F0               	movwf	___aldiv@divisor
  2123  0356  084E               	movf	_BMP280_readPressure$1178+3,w
  2124  0357  00F7               	movwf	___aldiv@dividend+3
  2125  0358  084D               	movf	_BMP280_readPressure$1178+2,w
  2126  0359  00F6               	movwf	___aldiv@dividend+2
  2127  035A  084C               	movf	_BMP280_readPressure$1178+1,w
  2128  035B  00F5               	movwf	___aldiv@dividend+1
  2129  035C  084B               	movf	_BMP280_readPressure$1178,w
  2130  035D  00F4               	movwf	___aldiv@dividend
  2131  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2132  0363  0873               	movf	?___aldiv+3,w
  2133  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0366  00A9               	movwf	___lmul@multiplier+3
  2136  0367  0872               	movf	?___aldiv+2,w
  2137  0368  00A8               	movwf	___lmul@multiplier+2
  2138  0369  0871               	movf	?___aldiv+1,w
  2139  036A  00A7               	movwf	___lmul@multiplier+1
  2140  036B  0870               	movf	?___aldiv,w
  2141  036C  00A6               	movwf	___lmul@multiplier
  2142  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2143  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2144  036F  0845               	movf	(_BMP280_calib^(0+128)+16),w
  2145  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0372  00AA               	movwf	___lmul@multiplicand
  2148  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0375  0846               	movf	((_BMP280_calib+1)^(0+128)+16),w
  2151  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0378  00AB               	movwf	___lmul@multiplicand+1
  2154  0379  3000               	movlw	0
  2155  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  2156  037B  30FF               	movlw	255
  2157  037C  00AC               	movwf	___lmul@multiplicand+2
  2158  037D  00AD               	movwf	___lmul@multiplicand+3
  2159  037E  120A  158A  2569  120A  118A  	fcall	___lmul
  2160  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0385  0829               	movf	?___lmul+3,w
  2163  0386  00D2               	movwf	BMP280_readPressure@var2+3
  2164  0387  0828               	movf	?___lmul+2,w
  2165  0388  00D1               	movwf	BMP280_readPressure@var2+2
  2166  0389  0827               	movf	?___lmul+1,w
  2167  038A  00D0               	movwf	BMP280_readPressure@var2+1
  2168  038B  0826               	movf	?___lmul,w
  2169  038C  00CF               	movwf	BMP280_readPressure@var2
  2170                           
  2171                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  2172  038D  084F               	movf	BMP280_readPressure@var2,w
  2173  038E  00AE               	movwf	??_BMP280_readPressure
  2174  038F  0850               	movf	BMP280_readPressure@var2+1,w
  2175  0390  00AF               	movwf	??_BMP280_readPressure+1
  2176  0391  0851               	movf	BMP280_readPressure@var2+2,w
  2177  0392  00B0               	movwf	??_BMP280_readPressure+2
  2178  0393  0852               	movf	BMP280_readPressure@var2+3,w
  2179  0394  00B1               	movwf	??_BMP280_readPressure+3
  2180  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0397  0843               	movf	(_BMP280_calib^(0+128)+14),w
  2183  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2185  039A  00A6               	movwf	___lmul@multiplier
  2186  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2187  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2188  039D  0844               	movf	((_BMP280_calib+1)^(0+128)+14),w
  2189  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2190  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2191  03A0  00A7               	movwf	___lmul@multiplier+1
  2192  03A1  3000               	movlw	0
  2193  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  2194  03A3  30FF               	movlw	255
  2195  03A4  00A8               	movwf	___lmul@multiplier+2
  2196  03A5  00A9               	movwf	___lmul@multiplier+3
  2197  03A6  085A               	movf	BMP280_readPressure@var1+3,w
  2198  03A7  00AD               	movwf	___lmul@multiplicand+3
  2199  03A8  0859               	movf	BMP280_readPressure@var1+2,w
  2200  03A9  00AC               	movwf	___lmul@multiplicand+2
  2201  03AA  0858               	movf	BMP280_readPressure@var1+1,w
  2202  03AB  00AB               	movwf	___lmul@multiplicand+1
  2203  03AC  0857               	movf	BMP280_readPressure@var1,w
  2204  03AD  00AA               	movwf	___lmul@multiplicand
  2205  03AE  120A  158A  2569  120A  118A  	fcall	___lmul
  2206  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2207  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2208  03B5  0826               	movf	?___lmul,w
  2209  03B6  00B2               	movwf	??_BMP280_readPressure+4
  2210  03B7  0827               	movf	?___lmul+1,w
  2211  03B8  00B3               	movwf	??_BMP280_readPressure+5
  2212  03B9  0828               	movf	?___lmul+2,w
  2213  03BA  00B4               	movwf	??_BMP280_readPressure+6
  2214  03BB  0829               	movf	?___lmul+3,w
  2215  03BC  00B5               	movwf	??_BMP280_readPressure+7
  2216  03BD  3001               	movlw	1
  2217  03BE                     u1045:
  2218  03BE  1003               	clrc
  2219  03BF  0DB2               	rlf	??_BMP280_readPressure+4,f
  2220  03C0  0DB3               	rlf	??_BMP280_readPressure+5,f
  2221  03C1  0DB4               	rlf	??_BMP280_readPressure+6,f
  2222  03C2  0DB5               	rlf	??_BMP280_readPressure+7,f
  2223  03C3                     u1040:
  2224  03C3  3EFF               	addlw	-1
  2225  03C4  1D03               	skipz
  2226  03C5  2BBE               	goto	u1045
  2227  03C6  0832               	movf	??_BMP280_readPressure+4,w
  2228  03C7  07AE               	addwf	??_BMP280_readPressure,f
  2229  03C8  0833               	movf	??_BMP280_readPressure+5,w
  2230  03C9  1803               	skipnc
  2231  03CA  0F33               	incfsz	??_BMP280_readPressure+5,w
  2232  03CB  2BCD               	goto	u1050
  2233  03CC  2BCE               	goto	u1051
  2234  03CD                     u1050:
  2235  03CD  07AF               	addwf	??_BMP280_readPressure+1,f
  2236  03CE                     u1051:
  2237  03CE  0834               	movf	??_BMP280_readPressure+6,w
  2238  03CF  1803               	skipnc
  2239  03D0  0F34               	incfsz	??_BMP280_readPressure+6,w
  2240  03D1  2BD3               	goto	u1052
  2241  03D2  2BD4               	goto	u1053
  2242  03D3                     u1052:
  2243  03D3  07B0               	addwf	??_BMP280_readPressure+2,f
  2244  03D4                     u1053:
  2245  03D4  0835               	movf	??_BMP280_readPressure+7,w
  2246  03D5  1803               	skipnc
  2247  03D6  0A35               	incf	??_BMP280_readPressure+7,w
  2248  03D7  07B1               	addwf	??_BMP280_readPressure+3,f
  2249  03D8  0831               	movf	??_BMP280_readPressure+3,w
  2250  03D9  00D2               	movwf	BMP280_readPressure@var2+3
  2251  03DA  0830               	movf	??_BMP280_readPressure+2,w
  2252  03DB  00D1               	movwf	BMP280_readPressure@var2+2
  2253  03DC  082F               	movf	??_BMP280_readPressure+1,w
  2254  03DD  00D0               	movwf	BMP280_readPressure@var2+1
  2255  03DE  082E               	movf	??_BMP280_readPressure,w
  2256  03DF  00CF               	movwf	BMP280_readPressure@var2
  2257                           
  2258                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2259  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2260  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2261  03E2  0841               	movf	(_BMP280_calib^(0+128)+12),w
  2262  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2263  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2264  03E5  00AE               	movwf	??_BMP280_readPressure
  2265  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2266  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2267  03E8  0842               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2268  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2269  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2270  03EB  00AF               	movwf	??_BMP280_readPressure+1
  2271  03EC  01B0               	clrf	??_BMP280_readPressure+2
  2272  03ED  01B1               	clrf	??_BMP280_readPressure+3
  2273  03EE  3010               	movlw	16
  2274  03EF                     u1065:
  2275  03EF  1003               	clrc
  2276  03F0  0DAE               	rlf	??_BMP280_readPressure,f
  2277  03F1  0DAF               	rlf	??_BMP280_readPressure+1,f
  2278  03F2  0DB0               	rlf	??_BMP280_readPressure+2,f
  2279  03F3  0DB1               	rlf	??_BMP280_readPressure+3,f
  2280  03F4                     u1060:
  2281  03F4  3EFF               	addlw	-1
  2282  03F5  1D03               	skipz
  2283  03F6  2BEF               	goto	u1065
  2284  03F7  3000               	movlw	0
  2285  03F8  00F3               	movwf	___aldiv@divisor+3
  2286  03F9  3000               	movlw	0
  2287  03FA  00F2               	movwf	___aldiv@divisor+2
  2288  03FB  3000               	movlw	0
  2289  03FC  00F1               	movwf	___aldiv@divisor+1
  2290  03FD  3004               	movlw	4
  2291  03FE  00F0               	movwf	___aldiv@divisor
  2292  03FF  0852               	movf	BMP280_readPressure@var2+3,w
  2293  0400  00F7               	movwf	___aldiv@dividend+3
  2294  0401  0851               	movf	BMP280_readPressure@var2+2,w
  2295  0402  00F6               	movwf	___aldiv@dividend+2
  2296  0403  0850               	movf	BMP280_readPressure@var2+1,w
  2297  0404  00F5               	movwf	___aldiv@dividend+1
  2298  0405  084F               	movf	BMP280_readPressure@var2,w
  2299  0406  00F4               	movwf	___aldiv@dividend
  2300  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2301  040C  0870               	movf	?___aldiv,w
  2302  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2303  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2304  040F  07AE               	addwf	??_BMP280_readPressure,f
  2305  0410  0871               	movf	?___aldiv+1,w
  2306  0411  1803               	skipnc
  2307  0412  0F71               	incfsz	?___aldiv+1,w
  2308  0413  2C15               	goto	u1070
  2309  0414  2C16               	goto	u1071
  2310  0415                     u1070:
  2311  0415  07AF               	addwf	??_BMP280_readPressure+1,f
  2312  0416                     u1071:
  2313  0416  0872               	movf	?___aldiv+2,w
  2314  0417  1803               	skipnc
  2315  0418  0F72               	incfsz	?___aldiv+2,w
  2316  0419  2C1B               	goto	u1072
  2317  041A  2C1C               	goto	u1073
  2318  041B                     u1072:
  2319  041B  07B0               	addwf	??_BMP280_readPressure+2,f
  2320  041C                     u1073:
  2321  041C  0873               	movf	?___aldiv+3,w
  2322  041D  1803               	skipnc
  2323  041E  0A73               	incf	?___aldiv+3,w
  2324  041F  07B1               	addwf	??_BMP280_readPressure+3,f
  2325  0420  0831               	movf	??_BMP280_readPressure+3,w
  2326  0421  00D2               	movwf	BMP280_readPressure@var2+3
  2327  0422  0830               	movf	??_BMP280_readPressure+2,w
  2328  0423  00D1               	movwf	BMP280_readPressure@var2+2
  2329  0424  082F               	movf	??_BMP280_readPressure+1,w
  2330  0425  00D0               	movwf	BMP280_readPressure@var2+1
  2331  0426  082E               	movf	??_BMP280_readPressure,w
  2332  0427  00CF               	movwf	BMP280_readPressure@var2
  2333                           
  2334                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2335  0428  3000               	movlw	0
  2336  0429  00F3               	movwf	___aldiv@divisor+3
  2337  042A  3000               	movlw	0
  2338  042B  00F2               	movwf	___aldiv@divisor+2
  2339  042C  3000               	movlw	0
  2340  042D  00F1               	movwf	___aldiv@divisor+1
  2341  042E  3004               	movlw	4
  2342  042F  00F0               	movwf	___aldiv@divisor
  2343  0430  085A               	movf	BMP280_readPressure@var1+3,w
  2344  0431  00F7               	movwf	___aldiv@dividend+3
  2345  0432  0859               	movf	BMP280_readPressure@var1+2,w
  2346  0433  00F6               	movwf	___aldiv@dividend+2
  2347  0434  0858               	movf	BMP280_readPressure@var1+1,w
  2348  0435  00F5               	movwf	___aldiv@dividend+1
  2349  0436  0857               	movf	BMP280_readPressure@var1,w
  2350  0437  00F4               	movwf	___aldiv@dividend
  2351  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2352  043D  0873               	movf	?___aldiv+3,w
  2353  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2354  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0440  00A9               	movwf	___lmul@multiplier+3
  2356  0441  0872               	movf	?___aldiv+2,w
  2357  0442  00A8               	movwf	___lmul@multiplier+2
  2358  0443  0871               	movf	?___aldiv+1,w
  2359  0444  00A7               	movwf	___lmul@multiplier+1
  2360  0445  0870               	movf	?___aldiv,w
  2361  0446  00A6               	movwf	___lmul@multiplier
  2362  0447  3000               	movlw	0
  2363  0448  00F3               	movwf	___aldiv@divisor+3
  2364  0449  3000               	movlw	0
  2365  044A  00F2               	movwf	___aldiv@divisor+2
  2366  044B  3000               	movlw	0
  2367  044C  00F1               	movwf	___aldiv@divisor+1
  2368  044D  3004               	movlw	4
  2369  044E  00F0               	movwf	___aldiv@divisor
  2370  044F  085A               	movf	BMP280_readPressure@var1+3,w
  2371  0450  00F7               	movwf	___aldiv@dividend+3
  2372  0451  0859               	movf	BMP280_readPressure@var1+2,w
  2373  0452  00F6               	movwf	___aldiv@dividend+2
  2374  0453  0858               	movf	BMP280_readPressure@var1+1,w
  2375  0454  00F5               	movwf	___aldiv@dividend+1
  2376  0455  0857               	movf	BMP280_readPressure@var1,w
  2377  0456  00F4               	movwf	___aldiv@dividend
  2378  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2379  045C  0873               	movf	?___aldiv+3,w
  2380  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2381  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2382  045F  00AD               	movwf	___lmul@multiplicand+3
  2383  0460  0872               	movf	?___aldiv+2,w
  2384  0461  00AC               	movwf	___lmul@multiplicand+2
  2385  0462  0871               	movf	?___aldiv+1,w
  2386  0463  00AB               	movwf	___lmul@multiplicand+1
  2387  0464  0870               	movf	?___aldiv,w
  2388  0465  00AA               	movwf	___lmul@multiplicand
  2389  0466  120A  158A  2569  120A  118A  	fcall	___lmul
  2390  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2391  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2392  046D  0829               	movf	?___lmul+3,w
  2393  046E  00CE               	movwf	_BMP280_readPressure$1178+3
  2394  046F  0828               	movf	?___lmul+2,w
  2395  0470  00CD               	movwf	_BMP280_readPressure$1178+2
  2396  0471  0827               	movf	?___lmul+1,w
  2397  0472  00CC               	movwf	_BMP280_readPressure$1178+1
  2398  0473  0826               	movf	?___lmul,w
  2399  0474  00CB               	movwf	_BMP280_readPressure$1178
  2400                           
  2401                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2402  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0477  083F               	movf	(_BMP280_calib^(0+128)+10),w
  2405  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2407  047A  00A6               	movwf	___lmul@multiplier
  2408  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2409  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2410  047D  0840               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2411  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2412  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0480  00A7               	movwf	___lmul@multiplier+1
  2414  0481  3000               	movlw	0
  2415  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2416  0483  30FF               	movlw	255
  2417  0484  00A8               	movwf	___lmul@multiplier+2
  2418  0485  00A9               	movwf	___lmul@multiplier+3
  2419  0486  3000               	movlw	0
  2420  0487  00F3               	movwf	___aldiv@divisor+3
  2421  0488  3000               	movlw	0
  2422  0489  00F2               	movwf	___aldiv@divisor+2
  2423  048A  3020               	movlw	32
  2424  048B  00F1               	movwf	___aldiv@divisor+1
  2425  048C  3000               	movlw	0
  2426  048D  00F0               	movwf	___aldiv@divisor
  2427  048E  084E               	movf	_BMP280_readPressure$1178+3,w
  2428  048F  00F7               	movwf	___aldiv@dividend+3
  2429  0490  084D               	movf	_BMP280_readPressure$1178+2,w
  2430  0491  00F6               	movwf	___aldiv@dividend+2
  2431  0492  084C               	movf	_BMP280_readPressure$1178+1,w
  2432  0493  00F5               	movwf	___aldiv@dividend+1
  2433  0494  084B               	movf	_BMP280_readPressure$1178,w
  2434  0495  00F4               	movwf	___aldiv@dividend
  2435  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2436  049B  0873               	movf	?___aldiv+3,w
  2437  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2438  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2439  049E  00AD               	movwf	___lmul@multiplicand+3
  2440  049F  0872               	movf	?___aldiv+2,w
  2441  04A0  00AC               	movwf	___lmul@multiplicand+2
  2442  04A1  0871               	movf	?___aldiv+1,w
  2443  04A2  00AB               	movwf	___lmul@multiplicand+1
  2444  04A3  0870               	movf	?___aldiv,w
  2445  04A4  00AA               	movwf	___lmul@multiplicand
  2446  04A5  120A  158A  2569  120A  118A  	fcall	___lmul
  2447  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2448  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2449  04AC  0829               	movf	?___lmul+3,w
  2450  04AD  00C1               	movwf	_BMP280_readPressure$1179+3
  2451  04AE  0828               	movf	?___lmul+2,w
  2452  04AF  00C0               	movwf	_BMP280_readPressure$1179+2
  2453  04B0  0827               	movf	?___lmul+1,w
  2454  04B1  00BF               	movwf	_BMP280_readPressure$1179+1
  2455  04B2  0826               	movf	?___lmul,w
  2456  04B3  00BE               	movwf	_BMP280_readPressure$1179
  2457                           
  2458                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2459  04B4  3000               	movlw	0
  2460  04B5  00F3               	movwf	___aldiv@divisor+3
  2461  04B6  3000               	movlw	0
  2462  04B7  00F2               	movwf	___aldiv@divisor+2
  2463  04B8  3000               	movlw	0
  2464  04B9  00F1               	movwf	___aldiv@divisor+1
  2465  04BA  3002               	movlw	2
  2466  04BB  00F0               	movwf	___aldiv@divisor
  2467  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2468  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2469  04BE  083D               	movf	(_BMP280_calib^(0+128)+8),w
  2470  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2471  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2472  04C1  00A6               	movwf	___lmul@multiplier
  2473  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2474  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2475  04C4  083E               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2476  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2477  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2478  04C7  00A7               	movwf	___lmul@multiplier+1
  2479  04C8  3000               	movlw	0
  2480  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2481  04CA  30FF               	movlw	255
  2482  04CB  00A8               	movwf	___lmul@multiplier+2
  2483  04CC  00A9               	movwf	___lmul@multiplier+3
  2484  04CD  085A               	movf	BMP280_readPressure@var1+3,w
  2485  04CE  00AD               	movwf	___lmul@multiplicand+3
  2486  04CF  0859               	movf	BMP280_readPressure@var1+2,w
  2487  04D0  00AC               	movwf	___lmul@multiplicand+2
  2488  04D1  0858               	movf	BMP280_readPressure@var1+1,w
  2489  04D2  00AB               	movwf	___lmul@multiplicand+1
  2490  04D3  0857               	movf	BMP280_readPressure@var1,w
  2491  04D4  00AA               	movwf	___lmul@multiplicand
  2492  04D5  120A  158A  2569  120A  118A  	fcall	___lmul
  2493  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2494  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2495  04DC  0829               	movf	?___lmul+3,w
  2496  04DD  00F7               	movwf	___aldiv@dividend+3
  2497  04DE  0828               	movf	?___lmul+2,w
  2498  04DF  00F6               	movwf	___aldiv@dividend+2
  2499  04E0  0827               	movf	?___lmul+1,w
  2500  04E1  00F5               	movwf	___aldiv@dividend+1
  2501  04E2  0826               	movf	?___lmul,w
  2502  04E3  00F4               	movwf	___aldiv@dividend
  2503  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2504  04E9  0870               	movf	?___aldiv,w
  2505  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2506  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2507  04EC  00AE               	movwf	??_BMP280_readPressure
  2508  04ED  0871               	movf	?___aldiv+1,w
  2509  04EE  00AF               	movwf	??_BMP280_readPressure+1
  2510  04EF  0872               	movf	?___aldiv+2,w
  2511  04F0  00B0               	movwf	??_BMP280_readPressure+2
  2512  04F1  0873               	movf	?___aldiv+3,w
  2513  04F2  00B1               	movwf	??_BMP280_readPressure+3
  2514  04F3  3000               	movlw	0
  2515  04F4  00F3               	movwf	___aldiv@divisor+3
  2516  04F5  3000               	movlw	0
  2517  04F6  00F2               	movwf	___aldiv@divisor+2
  2518  04F7  3000               	movlw	0
  2519  04F8  00F1               	movwf	___aldiv@divisor+1
  2520  04F9  3008               	movlw	8
  2521  04FA  00F0               	movwf	___aldiv@divisor
  2522  04FB  0841               	movf	_BMP280_readPressure$1179+3,w
  2523  04FC  00F7               	movwf	___aldiv@dividend+3
  2524  04FD  0840               	movf	_BMP280_readPressure$1179+2,w
  2525  04FE  00F6               	movwf	___aldiv@dividend+2
  2526  04FF  083F               	movf	_BMP280_readPressure$1179+1,w
  2527  0500  00F5               	movwf	___aldiv@dividend+1
  2528  0501  083E               	movf	_BMP280_readPressure$1179,w
  2529  0502  00F4               	movwf	___aldiv@dividend
  2530  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2531  0508  0870               	movf	?___aldiv,w
  2532  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2533  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2534  050B  07AE               	addwf	??_BMP280_readPressure,f
  2535  050C  0871               	movf	?___aldiv+1,w
  2536  050D  1803               	skipnc
  2537  050E  0F71               	incfsz	?___aldiv+1,w
  2538  050F  2D11               	goto	u1080
  2539  0510  2D12               	goto	u1081
  2540  0511                     u1080:
  2541  0511  07AF               	addwf	??_BMP280_readPressure+1,f
  2542  0512                     u1081:
  2543  0512  0872               	movf	?___aldiv+2,w
  2544  0513  1803               	skipnc
  2545  0514  0F72               	incfsz	?___aldiv+2,w
  2546  0515  2D17               	goto	u1082
  2547  0516  2D18               	goto	u1083
  2548  0517                     u1082:
  2549  0517  07B0               	addwf	??_BMP280_readPressure+2,f
  2550  0518                     u1083:
  2551  0518  0873               	movf	?___aldiv+3,w
  2552  0519  1803               	skipnc
  2553  051A  0A73               	incf	?___aldiv+3,w
  2554  051B  07B1               	addwf	??_BMP280_readPressure+3,f
  2555  051C  0831               	movf	??_BMP280_readPressure+3,w
  2556  051D  00C5               	movwf	_BMP280_readPressure$1180+3
  2557  051E  0830               	movf	??_BMP280_readPressure+2,w
  2558  051F  00C4               	movwf	_BMP280_readPressure$1180+2
  2559  0520  082F               	movf	??_BMP280_readPressure+1,w
  2560  0521  00C3               	movwf	_BMP280_readPressure$1180+1
  2561  0522  082E               	movf	??_BMP280_readPressure,w
  2562  0523  00C2               	movwf	_BMP280_readPressure$1180
  2563                           
  2564                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2565  0524  3000               	movlw	0
  2566  0525  00F3               	movwf	___aldiv@divisor+3
  2567  0526  3004               	movlw	4
  2568  0527  00F2               	movwf	___aldiv@divisor+2
  2569  0528  3000               	movlw	0
  2570  0529  00F1               	movwf	___aldiv@divisor+1
  2571  052A  3000               	movlw	0
  2572  052B  00F0               	movwf	___aldiv@divisor
  2573  052C  0845               	movf	_BMP280_readPressure$1180+3,w
  2574  052D  00F7               	movwf	___aldiv@dividend+3
  2575  052E  0844               	movf	_BMP280_readPressure$1180+2,w
  2576  052F  00F6               	movwf	___aldiv@dividend+2
  2577  0530  0843               	movf	_BMP280_readPressure$1180+1,w
  2578  0531  00F5               	movwf	___aldiv@dividend+1
  2579  0532  0842               	movf	_BMP280_readPressure$1180,w
  2580  0533  00F4               	movwf	___aldiv@dividend
  2581  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2582  0539  0873               	movf	?___aldiv+3,w
  2583  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2584  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2585  053C  00DA               	movwf	BMP280_readPressure@var1+3
  2586  053D  0872               	movf	?___aldiv+2,w
  2587  053E  00D9               	movwf	BMP280_readPressure@var1+2
  2588  053F  0871               	movf	?___aldiv+1,w
  2589  0540  00D8               	movwf	BMP280_readPressure@var1+1
  2590  0541  0870               	movf	?___aldiv,w
  2591  0542  00D7               	movwf	BMP280_readPressure@var1
  2592                           
  2593                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2594  0543  3000               	movlw	0
  2595  0544  00F3               	movwf	___aldiv@divisor+3
  2596  0545  3000               	movlw	0
  2597  0546  00F2               	movwf	___aldiv@divisor+2
  2598  0547  3080               	movlw	128
  2599  0548  00F1               	movwf	___aldiv@divisor+1
  2600  0549  3000               	movlw	0
  2601  054A  00F0               	movwf	___aldiv@divisor
  2602  054B  3000               	movlw	0
  2603  054C  00AE               	movwf	??_BMP280_readPressure
  2604  054D  3080               	movlw	128
  2605  054E  00AF               	movwf	??_BMP280_readPressure+1
  2606  054F  3000               	movlw	0
  2607  0550  00B0               	movwf	??_BMP280_readPressure+2
  2608  0551  3000               	movlw	0
  2609  0552  00B1               	movwf	??_BMP280_readPressure+3
  2610  0553  0857               	movf	BMP280_readPressure@var1,w
  2611  0554  07AE               	addwf	??_BMP280_readPressure,f
  2612  0555  0858               	movf	BMP280_readPressure@var1+1,w
  2613  0556  1803               	skipnc
  2614  0557  0F58               	incfsz	BMP280_readPressure@var1+1,w
  2615  0558  2D5A               	goto	u1090
  2616  0559  2D5B               	goto	u1091
  2617  055A                     u1090:
  2618  055A  07AF               	addwf	??_BMP280_readPressure+1,f
  2619  055B                     u1091:
  2620  055B  0859               	movf	BMP280_readPressure@var1+2,w
  2621  055C  1803               	skipnc
  2622  055D  0F59               	incfsz	BMP280_readPressure@var1+2,w
  2623  055E  2D60               	goto	u1092
  2624  055F  2D61               	goto	u1093
  2625  0560                     u1092:
  2626  0560  07B0               	addwf	??_BMP280_readPressure+2,f
  2627  0561                     u1093:
  2628  0561  085A               	movf	BMP280_readPressure@var1+3,w
  2629  0562  1803               	skipnc
  2630  0563  0A5A               	incf	BMP280_readPressure@var1+3,w
  2631  0564  07B1               	addwf	??_BMP280_readPressure+3,f
  2632  0565  0831               	movf	??_BMP280_readPressure+3,w
  2633  0566  00A9               	movwf	___lmul@multiplier+3
  2634  0567  0830               	movf	??_BMP280_readPressure+2,w
  2635  0568  00A8               	movwf	___lmul@multiplier+2
  2636  0569  082F               	movf	??_BMP280_readPressure+1,w
  2637  056A  00A7               	movwf	___lmul@multiplier+1
  2638  056B  082E               	movf	??_BMP280_readPressure,w
  2639  056C  00A6               	movwf	___lmul@multiplier
  2640  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2641  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2642  056F  083B               	movf	(_BMP280_calib^(0+128)+6),w
  2643  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0572  00AA               	movwf	___lmul@multiplicand
  2646  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2648  0575  083C               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2649  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0578  00AB               	movwf	___lmul@multiplicand+1
  2652  0579  01AC               	clrf	___lmul@multiplicand+2
  2653  057A  01AD               	clrf	___lmul@multiplicand+3
  2654  057B  120A  158A  2569  120A  118A  	fcall	___lmul
  2655  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0582  0829               	movf	?___lmul+3,w
  2658  0583  00F7               	movwf	___aldiv@dividend+3
  2659  0584  0828               	movf	?___lmul+2,w
  2660  0585  00F6               	movwf	___aldiv@dividend+2
  2661  0586  0827               	movf	?___lmul+1,w
  2662  0587  00F5               	movwf	___aldiv@dividend+1
  2663  0588  0826               	movf	?___lmul,w
  2664  0589  00F4               	movwf	___aldiv@dividend
  2665  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2666  058F  0873               	movf	?___aldiv+3,w
  2667  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0592  00DA               	movwf	BMP280_readPressure@var1+3
  2670  0593  0872               	movf	?___aldiv+2,w
  2671  0594  00D9               	movwf	BMP280_readPressure@var1+2
  2672  0595  0871               	movf	?___aldiv+1,w
  2673  0596  00D8               	movwf	BMP280_readPressure@var1+1
  2674  0597  0870               	movf	?___aldiv,w
  2675  0598  00D7               	movwf	BMP280_readPressure@var1
  2676  0599                     l1296:
  2677                           
  2678                           ;BMP280.c: 282:   if (var1 == 0)
  2679  0599  085A               	movf	BMP280_readPressure@var1+3,w
  2680  059A  0459               	iorwf	BMP280_readPressure@var1+2,w
  2681  059B  0458               	iorwf	BMP280_readPressure@var1+1,w
  2682  059C  0457               	iorwf	BMP280_readPressure@var1,w
  2683  059D  1D03               	skipz
  2684  059E  2DA0               	goto	u1101
  2685  059F  2DA1               	goto	u1100
  2686  05A0                     u1101:
  2687  05A0  2DA2               	goto	l1300
  2688  05A1                     u1100:
  2689  05A1  2FEA               	goto	l164
  2690  05A2                     l1300:
  2691                           
  2692                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2693  05A2  3000               	movlw	0
  2694  05A3  00AE               	movwf	??_BMP280_readPressure
  2695  05A4  3000               	movlw	0
  2696  05A5  00AF               	movwf	??_BMP280_readPressure+1
  2697  05A6  3010               	movlw	16
  2698  05A7  00B0               	movwf	??_BMP280_readPressure+2
  2699  05A8  3000               	movlw	0
  2700  05A9  00B1               	movwf	??_BMP280_readPressure+3
  2701  05AA  3000               	movlw	0
  2702  05AB  00F3               	movwf	___aldiv@divisor+3
  2703  05AC  3000               	movlw	0
  2704  05AD  00F2               	movwf	___aldiv@divisor+2
  2705  05AE  3010               	movlw	16
  2706  05AF  00F1               	movwf	___aldiv@divisor+1
  2707  05B0  3000               	movlw	0
  2708  05B1  00F0               	movwf	___aldiv@divisor
  2709  05B2  0852               	movf	BMP280_readPressure@var2+3,w
  2710  05B3  00F7               	movwf	___aldiv@dividend+3
  2711  05B4  0851               	movf	BMP280_readPressure@var2+2,w
  2712  05B5  00F6               	movwf	___aldiv@dividend+2
  2713  05B6  0850               	movf	BMP280_readPressure@var2+1,w
  2714  05B7  00F5               	movwf	___aldiv@dividend+1
  2715  05B8  084F               	movf	BMP280_readPressure@var2,w
  2716  05B9  00F4               	movwf	___aldiv@dividend
  2717  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2718  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2719  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2720  05C1  0931               	comf	_adc_P^(0+128),w
  2721  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2722  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2723  05C4  00B2               	movwf	??_BMP280_readPressure+4
  2724  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2725  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2726  05C7  0932               	comf	(_adc_P+1)^(0+128),w
  2727  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2728  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2729  05CA  00B3               	movwf	??_BMP280_readPressure+5
  2730  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2731  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2732  05CD  0933               	comf	(_adc_P+2)^(0+128),w
  2733  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2734  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2735  05D0  00B4               	movwf	??_BMP280_readPressure+6
  2736  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2737  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2738  05D3  0934               	comf	(_adc_P+3)^(0+128),w
  2739  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2740  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2741  05D6  00B5               	movwf	??_BMP280_readPressure+7
  2742  05D7  0AB2               	incf	??_BMP280_readPressure+4,f
  2743  05D8  1903               	skipnz
  2744  05D9  0AB3               	incf	??_BMP280_readPressure+5,f
  2745  05DA  1903               	skipnz
  2746  05DB  0AB4               	incf	??_BMP280_readPressure+6,f
  2747  05DC  1903               	skipnz
  2748  05DD  0AB5               	incf	??_BMP280_readPressure+7,f
  2749  05DE  0870               	movf	?___aldiv,w
  2750  05DF  02B2               	subwf	??_BMP280_readPressure+4,f
  2751  05E0  0871               	movf	?___aldiv+1,w
  2752  05E1  1C03               	skipc
  2753  05E2  0F71               	incfsz	?___aldiv+1,w
  2754  05E3  2DE5               	goto	u1111
  2755  05E4  2DE6               	goto	u1112
  2756  05E5                     u1111:
  2757  05E5  02B3               	subwf	??_BMP280_readPressure+5,f
  2758  05E6                     u1112:
  2759  05E6  0872               	movf	?___aldiv+2,w
  2760  05E7  1C03               	skipc
  2761  05E8  0F72               	incfsz	?___aldiv+2,w
  2762  05E9  2DEB               	goto	u1113
  2763  05EA  2DEC               	goto	u1114
  2764  05EB                     u1113:
  2765  05EB  02B4               	subwf	??_BMP280_readPressure+6,f
  2766  05EC                     u1114:
  2767  05EC  0873               	movf	?___aldiv+3,w
  2768  05ED  1C03               	skipc
  2769  05EE  0F73               	incfsz	?___aldiv+3,w
  2770  05EF  2DF1               	goto	u1115
  2771  05F0  2DF2               	goto	u1116
  2772  05F1                     u1115:
  2773  05F1  02B5               	subwf	??_BMP280_readPressure+7,f
  2774  05F2                     u1116:
  2775  05F2  0832               	movf	??_BMP280_readPressure+4,w
  2776  05F3  07AE               	addwf	??_BMP280_readPressure,f
  2777  05F4  0833               	movf	??_BMP280_readPressure+5,w
  2778  05F5  1803               	skipnc
  2779  05F6  0F33               	incfsz	??_BMP280_readPressure+5,w
  2780  05F7  2DF9               	goto	u1120
  2781  05F8  2DFA               	goto	u1121
  2782  05F9                     u1120:
  2783  05F9  07AF               	addwf	??_BMP280_readPressure+1,f
  2784  05FA                     u1121:
  2785  05FA  0834               	movf	??_BMP280_readPressure+6,w
  2786  05FB  1803               	skipnc
  2787  05FC  0F34               	incfsz	??_BMP280_readPressure+6,w
  2788  05FD  2DFF               	goto	u1122
  2789  05FE  2E00               	goto	u1123
  2790  05FF                     u1122:
  2791  05FF  07B0               	addwf	??_BMP280_readPressure+2,f
  2792  0600                     u1123:
  2793  0600  0835               	movf	??_BMP280_readPressure+7,w
  2794  0601  1803               	skipnc
  2795  0602  0A35               	incf	??_BMP280_readPressure+7,w
  2796  0603  07B1               	addwf	??_BMP280_readPressure+3,f
  2797  0604  0831               	movf	??_BMP280_readPressure+3,w
  2798  0605  00A9               	movwf	___lmul@multiplier+3
  2799  0606  0830               	movf	??_BMP280_readPressure+2,w
  2800  0607  00A8               	movwf	___lmul@multiplier+2
  2801  0608  082F               	movf	??_BMP280_readPressure+1,w
  2802  0609  00A7               	movwf	___lmul@multiplier+1
  2803  060A  082E               	movf	??_BMP280_readPressure,w
  2804  060B  00A6               	movwf	___lmul@multiplier
  2805  060C  3000               	movlw	0
  2806  060D  00AD               	movwf	___lmul@multiplicand+3
  2807  060E  3000               	movlw	0
  2808  060F  00AC               	movwf	___lmul@multiplicand+2
  2809  0610  300C               	movlw	12
  2810  0611  00AB               	movwf	___lmul@multiplicand+1
  2811  0612  3035               	movlw	53
  2812  0613  00AA               	movwf	___lmul@multiplicand
  2813  0614  120A  158A  2569  120A  118A  	fcall	___lmul
  2814  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2815  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2816  061B  0829               	movf	?___lmul+3,w
  2817  061C  00D6               	movwf	BMP280_readPressure@p+3
  2818  061D  0828               	movf	?___lmul+2,w
  2819  061E  00D5               	movwf	BMP280_readPressure@p+2
  2820  061F  0827               	movf	?___lmul+1,w
  2821  0620  00D4               	movwf	BMP280_readPressure@p+1
  2822  0621  0826               	movf	?___lmul,w
  2823  0622  00D3               	movwf	BMP280_readPressure@p
  2824  0623                     l1302:
  2825                           
  2826                           ;BMP280.c: 287:   if (p < 0x80000000)
  2827  0623  3080               	movlw	128
  2828  0624  0256               	subwf	BMP280_readPressure@p+3,w
  2829  0625  1D03               	skipz
  2830  0626  2E33               	goto	u1133
  2831  0627  3000               	movlw	0
  2832  0628  0255               	subwf	BMP280_readPressure@p+2,w
  2833  0629  1D03               	skipz
  2834  062A  2E33               	goto	u1133
  2835  062B  3000               	movlw	0
  2836  062C  0254               	subwf	BMP280_readPressure@p+1,w
  2837  062D  1D03               	skipz
  2838  062E  2E33               	goto	u1133
  2839  062F  3000               	movlw	0
  2840  0630  0253               	subwf	BMP280_readPressure@p,w
  2841  0631  1D03               	skipz
  2842  0632  2E33               	goto	u1133
  2843  0633                     u1133:
  2844  0633  1803               	btfsc	3,0
  2845  0634  2E36               	goto	u1131
  2846  0635  2E37               	goto	u1130
  2847  0636                     u1131:
  2848  0636  2E5A               	goto	l1306
  2849  0637                     u1130:
  2850  0637                     l1304:
  2851                           
  2852                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  2853  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0639  085A               	movf	BMP280_readPressure@var1+3,w
  2856  063A  00F3               	movwf	___lldiv@divisor+3
  2857  063B  0859               	movf	BMP280_readPressure@var1+2,w
  2858  063C  00F2               	movwf	___lldiv@divisor+2
  2859  063D  0858               	movf	BMP280_readPressure@var1+1,w
  2860  063E  00F1               	movwf	___lldiv@divisor+1
  2861  063F  0857               	movf	BMP280_readPressure@var1,w
  2862  0640  00F0               	movwf	___lldiv@divisor
  2863  0641  1003               	clrc
  2864  0642  0D53               	rlf	BMP280_readPressure@p,w
  2865  0643  00F4               	movwf	___lldiv@dividend
  2866  0644  0D54               	rlf	BMP280_readPressure@p+1,w
  2867  0645  00F5               	movwf	___lldiv@dividend+1
  2868  0646  0D55               	rlf	BMP280_readPressure@p+2,w
  2869  0647  00F6               	movwf	___lldiv@dividend+2
  2870  0648  0D56               	rlf	BMP280_readPressure@p+3,w
  2871  0649  00F7               	movwf	___lldiv@dividend+3
  2872  064A  120A  158A  25FD  120A  118A  	fcall	___lldiv
  2873  064F  0873               	movf	?___lldiv+3,w
  2874  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0652  00D6               	movwf	BMP280_readPressure@p+3
  2877  0653  0872               	movf	?___lldiv+2,w
  2878  0654  00D5               	movwf	BMP280_readPressure@p+2
  2879  0655  0871               	movf	?___lldiv+1,w
  2880  0656  00D4               	movwf	BMP280_readPressure@p+1
  2881  0657  0870               	movf	?___lldiv,w
  2882  0658  00D3               	movwf	BMP280_readPressure@p
  2883  0659  2E7C               	goto	l166
  2884  065A                     l1306:
  2885                           
  2886                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  2887  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2888  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2889  065C  085A               	movf	BMP280_readPressure@var1+3,w
  2890  065D  00F3               	movwf	___lldiv@divisor+3
  2891  065E  0859               	movf	BMP280_readPressure@var1+2,w
  2892  065F  00F2               	movwf	___lldiv@divisor+2
  2893  0660  0858               	movf	BMP280_readPressure@var1+1,w
  2894  0661  00F1               	movwf	___lldiv@divisor+1
  2895  0662  0857               	movf	BMP280_readPressure@var1,w
  2896  0663  00F0               	movwf	___lldiv@divisor
  2897  0664  0856               	movf	BMP280_readPressure@p+3,w
  2898  0665  00F7               	movwf	___lldiv@dividend+3
  2899  0666  0855               	movf	BMP280_readPressure@p+2,w
  2900  0667  00F6               	movwf	___lldiv@dividend+2
  2901  0668  0854               	movf	BMP280_readPressure@p+1,w
  2902  0669  00F5               	movwf	___lldiv@dividend+1
  2903  066A  0853               	movf	BMP280_readPressure@p,w
  2904  066B  00F4               	movwf	___lldiv@dividend
  2905  066C  120A  158A  25FD  120A  118A  	fcall	___lldiv
  2906  0671  1003               	clrc
  2907  0672  0D70               	rlf	?___lldiv,w
  2908  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0675  00D3               	movwf	BMP280_readPressure@p
  2911  0676  0D71               	rlf	?___lldiv+1,w
  2912  0677  00D4               	movwf	BMP280_readPressure@p+1
  2913  0678  0D72               	rlf	?___lldiv+2,w
  2914  0679  00D5               	movwf	BMP280_readPressure@p+2
  2915  067A  0D73               	rlf	?___lldiv+3,w
  2916  067B  00D6               	movwf	BMP280_readPressure@p+3
  2917  067C                     l166:
  2918                           
  2919                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2920  067C  0853               	movf	BMP280_readPressure@p,w
  2921  067D  00AE               	movwf	??_BMP280_readPressure
  2922  067E  0854               	movf	BMP280_readPressure@p+1,w
  2923  067F  00AF               	movwf	??_BMP280_readPressure+1
  2924  0680  0855               	movf	BMP280_readPressure@p+2,w
  2925  0681  00B0               	movwf	??_BMP280_readPressure+2
  2926  0682  0856               	movf	BMP280_readPressure@p+3,w
  2927  0683  00B1               	movwf	??_BMP280_readPressure+3
  2928  0684  3003               	movlw	3
  2929  0685                     u1145:
  2930  0685  1003               	clrc
  2931  0686  0CB1               	rrf	??_BMP280_readPressure+3,f
  2932  0687  0CB0               	rrf	??_BMP280_readPressure+2,f
  2933  0688  0CAF               	rrf	??_BMP280_readPressure+1,f
  2934  0689  0CAE               	rrf	??_BMP280_readPressure,f
  2935  068A                     u1140:
  2936  068A  3EFF               	addlw	-1
  2937  068B  1D03               	skipz
  2938  068C  2E85               	goto	u1145
  2939  068D  0831               	movf	??_BMP280_readPressure+3,w
  2940  068E  00AD               	movwf	___lmul@multiplicand+3
  2941  068F  0830               	movf	??_BMP280_readPressure+2,w
  2942  0690  00AC               	movwf	___lmul@multiplicand+2
  2943  0691  082F               	movf	??_BMP280_readPressure+1,w
  2944  0692  00AB               	movwf	___lmul@multiplicand+1
  2945  0693  082E               	movf	??_BMP280_readPressure,w
  2946  0694  00AA               	movwf	___lmul@multiplicand
  2947  0695  0853               	movf	BMP280_readPressure@p,w
  2948  0696  00B2               	movwf	??_BMP280_readPressure+4
  2949  0697  0854               	movf	BMP280_readPressure@p+1,w
  2950  0698  00B3               	movwf	??_BMP280_readPressure+5
  2951  0699  0855               	movf	BMP280_readPressure@p+2,w
  2952  069A  00B4               	movwf	??_BMP280_readPressure+6
  2953  069B  0856               	movf	BMP280_readPressure@p+3,w
  2954  069C  00B5               	movwf	??_BMP280_readPressure+7
  2955  069D  3003               	movlw	3
  2956  069E                     u1155:
  2957  069E  1003               	clrc
  2958  069F  0CB5               	rrf	??_BMP280_readPressure+7,f
  2959  06A0  0CB4               	rrf	??_BMP280_readPressure+6,f
  2960  06A1  0CB3               	rrf	??_BMP280_readPressure+5,f
  2961  06A2  0CB2               	rrf	??_BMP280_readPressure+4,f
  2962  06A3                     u1150:
  2963  06A3  3EFF               	addlw	-1
  2964  06A4  1D03               	skipz
  2965  06A5  2E9E               	goto	u1155
  2966  06A6  0835               	movf	??_BMP280_readPressure+7,w
  2967  06A7  00A9               	movwf	___lmul@multiplier+3
  2968  06A8  0834               	movf	??_BMP280_readPressure+6,w
  2969  06A9  00A8               	movwf	___lmul@multiplier+2
  2970  06AA  0833               	movf	??_BMP280_readPressure+5,w
  2971  06AB  00A7               	movwf	___lmul@multiplier+1
  2972  06AC  0832               	movf	??_BMP280_readPressure+4,w
  2973  06AD  00A6               	movwf	___lmul@multiplier
  2974  06AE  120A  158A  2569  120A  118A  	fcall	___lmul
  2975  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2976  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2977  06B5  0826               	movf	?___lmul,w
  2978  06B6  00B6               	movwf	??_BMP280_readPressure+8
  2979  06B7  0827               	movf	?___lmul+1,w
  2980  06B8  00B7               	movwf	??_BMP280_readPressure+9
  2981  06B9  0828               	movf	?___lmul+2,w
  2982  06BA  00B8               	movwf	??_BMP280_readPressure+10
  2983  06BB  0829               	movf	?___lmul+3,w
  2984  06BC  00B9               	movwf	??_BMP280_readPressure+11
  2985  06BD  300D               	movlw	13
  2986  06BE                     u1165:
  2987  06BE  1003               	clrc
  2988  06BF  0CB9               	rrf	??_BMP280_readPressure+11,f
  2989  06C0  0CB8               	rrf	??_BMP280_readPressure+10,f
  2990  06C1  0CB7               	rrf	??_BMP280_readPressure+9,f
  2991  06C2  0CB6               	rrf	??_BMP280_readPressure+8,f
  2992  06C3                     u1160:
  2993  06C3  3EFF               	addlw	-1
  2994  06C4  1D03               	skipz
  2995  06C5  2EBE               	goto	u1165
  2996  06C6  0839               	movf	??_BMP280_readPressure+11,w
  2997  06C7  00C9               	movwf	_BMP280_readPressure$1181+3
  2998  06C8  0838               	movf	??_BMP280_readPressure+10,w
  2999  06C9  00C8               	movwf	_BMP280_readPressure$1181+2
  3000  06CA  0837               	movf	??_BMP280_readPressure+9,w
  3001  06CB  00C7               	movwf	_BMP280_readPressure$1181+1
  3002  06CC  0836               	movf	??_BMP280_readPressure+8,w
  3003  06CD  00C6               	movwf	_BMP280_readPressure$1181
  3004                           
  3005                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  3006  06CE  3000               	movlw	0
  3007  06CF  00F3               	movwf	___aldiv@divisor+3
  3008  06D0  3000               	movlw	0
  3009  06D1  00F2               	movwf	___aldiv@divisor+2
  3010  06D2  3010               	movlw	16
  3011  06D3  00F1               	movwf	___aldiv@divisor+1
  3012  06D4  3000               	movlw	0
  3013  06D5  00F0               	movwf	___aldiv@divisor
  3014  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3015  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3016  06D8  084B               	movf	(_BMP280_calib^(0+128)+22),w
  3017  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3018  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3019  06DB  00A6               	movwf	___lmul@multiplier
  3020  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3021  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3022  06DE  084C               	movf	((_BMP280_calib+1)^(0+128)+22),w
  3023  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3024  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3025  06E1  00A7               	movwf	___lmul@multiplier+1
  3026  06E2  3000               	movlw	0
  3027  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  3028  06E4  30FF               	movlw	255
  3029  06E5  00A8               	movwf	___lmul@multiplier+2
  3030  06E6  00A9               	movwf	___lmul@multiplier+3
  3031  06E7  0849               	movf	_BMP280_readPressure$1181+3,w
  3032  06E8  00AD               	movwf	___lmul@multiplicand+3
  3033  06E9  0848               	movf	_BMP280_readPressure$1181+2,w
  3034  06EA  00AC               	movwf	___lmul@multiplicand+2
  3035  06EB  0847               	movf	_BMP280_readPressure$1181+1,w
  3036  06EC  00AB               	movwf	___lmul@multiplicand+1
  3037  06ED  0846               	movf	_BMP280_readPressure$1181,w
  3038  06EE  00AA               	movwf	___lmul@multiplicand
  3039  06EF  120A  158A  2569  120A  118A  	fcall	___lmul
  3040  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3041  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3042  06F6  0829               	movf	?___lmul+3,w
  3043  06F7  00F7               	movwf	___aldiv@dividend+3
  3044  06F8  0828               	movf	?___lmul+2,w
  3045  06F9  00F6               	movwf	___aldiv@dividend+2
  3046  06FA  0827               	movf	?___lmul+1,w
  3047  06FB  00F5               	movwf	___aldiv@dividend+1
  3048  06FC  0826               	movf	?___lmul,w
  3049  06FD  00F4               	movwf	___aldiv@dividend
  3050  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  3051  0703  0873               	movf	?___aldiv+3,w
  3052  0704  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0705  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0706  00DA               	movwf	BMP280_readPressure@var1+3
  3055  0707  0872               	movf	?___aldiv+2,w
  3056  0708  00D9               	movwf	BMP280_readPressure@var1+2
  3057  0709  0871               	movf	?___aldiv+1,w
  3058  070A  00D8               	movwf	BMP280_readPressure@var1+1
  3059  070B  0870               	movf	?___aldiv,w
  3060  070C  00D7               	movwf	BMP280_readPressure@var1
  3061                           
  3062                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  3063  070D  3000               	movlw	0
  3064  070E  00F3               	movwf	___aldiv@divisor+3
  3065  070F  3000               	movlw	0
  3066  0710  00F2               	movwf	___aldiv@divisor+2
  3067  0711  3020               	movlw	32
  3068  0712  00F1               	movwf	___aldiv@divisor+1
  3069  0713  3000               	movlw	0
  3070  0714  00F0               	movwf	___aldiv@divisor
  3071  0715  0853               	movf	BMP280_readPressure@p,w
  3072  0716  00AE               	movwf	??_BMP280_readPressure
  3073  0717  0854               	movf	BMP280_readPressure@p+1,w
  3074  0718  00AF               	movwf	??_BMP280_readPressure+1
  3075  0719  0855               	movf	BMP280_readPressure@p+2,w
  3076  071A  00B0               	movwf	??_BMP280_readPressure+2
  3077  071B  0856               	movf	BMP280_readPressure@p+3,w
  3078  071C  00B1               	movwf	??_BMP280_readPressure+3
  3079  071D  3002               	movlw	2
  3080  071E                     u1175:
  3081  071E  1003               	clrc
  3082  071F  0CB1               	rrf	??_BMP280_readPressure+3,f
  3083  0720  0CB0               	rrf	??_BMP280_readPressure+2,f
  3084  0721  0CAF               	rrf	??_BMP280_readPressure+1,f
  3085  0722  0CAE               	rrf	??_BMP280_readPressure,f
  3086  0723                     u1170:
  3087  0723  3EFF               	addlw	-1
  3088  0724  1D03               	skipz
  3089  0725  2F1E               	goto	u1175
  3090  0726  0831               	movf	??_BMP280_readPressure+3,w
  3091  0727  00A9               	movwf	___lmul@multiplier+3
  3092  0728  0830               	movf	??_BMP280_readPressure+2,w
  3093  0729  00A8               	movwf	___lmul@multiplier+2
  3094  072A  082F               	movf	??_BMP280_readPressure+1,w
  3095  072B  00A7               	movwf	___lmul@multiplier+1
  3096  072C  082E               	movf	??_BMP280_readPressure,w
  3097  072D  00A6               	movwf	___lmul@multiplier
  3098  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3099  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0730  0849               	movf	(_BMP280_calib^(0+128)+20),w
  3101  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0733  00AA               	movwf	___lmul@multiplicand
  3104  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3105  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3106  0736  084A               	movf	((_BMP280_calib+1)^(0+128)+20),w
  3107  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0739  00AB               	movwf	___lmul@multiplicand+1
  3110  073A  3000               	movlw	0
  3111  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  3112  073C  30FF               	movlw	255
  3113  073D  00AC               	movwf	___lmul@multiplicand+2
  3114  073E  00AD               	movwf	___lmul@multiplicand+3
  3115  073F  120A  158A  2569  120A  118A  	fcall	___lmul
  3116  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0746  0829               	movf	?___lmul+3,w
  3119  0747  00F7               	movwf	___aldiv@dividend+3
  3120  0748  0828               	movf	?___lmul+2,w
  3121  0749  00F6               	movwf	___aldiv@dividend+2
  3122  074A  0827               	movf	?___lmul+1,w
  3123  074B  00F5               	movwf	___aldiv@dividend+1
  3124  074C  0826               	movf	?___lmul,w
  3125  074D  00F4               	movwf	___aldiv@dividend
  3126  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  3127  0753  0873               	movf	?___aldiv+3,w
  3128  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0756  00D2               	movwf	BMP280_readPressure@var2+3
  3131  0757  0872               	movf	?___aldiv+2,w
  3132  0758  00D1               	movwf	BMP280_readPressure@var2+2
  3133  0759  0871               	movf	?___aldiv+1,w
  3134  075A  00D0               	movwf	BMP280_readPressure@var2+1
  3135  075B  0870               	movf	?___aldiv,w
  3136  075C  00CF               	movwf	BMP280_readPressure@var2
  3137                           
  3138                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  3139  075D  3000               	movlw	0
  3140  075E  00F3               	movwf	___aldiv@divisor+3
  3141  075F  3000               	movlw	0
  3142  0760  00F2               	movwf	___aldiv@divisor+2
  3143  0761  3000               	movlw	0
  3144  0762  00F1               	movwf	___aldiv@divisor+1
  3145  0763  3010               	movlw	16
  3146  0764  00F0               	movwf	___aldiv@divisor
  3147  0765  084F               	movf	BMP280_readPressure@var2,w
  3148  0766  00AE               	movwf	??_BMP280_readPressure
  3149  0767  0850               	movf	BMP280_readPressure@var2+1,w
  3150  0768  00AF               	movwf	??_BMP280_readPressure+1
  3151  0769  0851               	movf	BMP280_readPressure@var2+2,w
  3152  076A  00B0               	movwf	??_BMP280_readPressure+2
  3153  076B  0852               	movf	BMP280_readPressure@var2+3,w
  3154  076C  00B1               	movwf	??_BMP280_readPressure+3
  3155  076D  0857               	movf	BMP280_readPressure@var1,w
  3156  076E  00B2               	movwf	??_BMP280_readPressure+4
  3157  076F  0858               	movf	BMP280_readPressure@var1+1,w
  3158  0770  00B3               	movwf	??_BMP280_readPressure+5
  3159  0771  0859               	movf	BMP280_readPressure@var1+2,w
  3160  0772  00B4               	movwf	??_BMP280_readPressure+6
  3161  0773  085A               	movf	BMP280_readPressure@var1+3,w
  3162  0774  00B5               	movwf	??_BMP280_readPressure+7
  3163  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3164  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3165  0777  0847               	movf	(_BMP280_calib^(0+128)+18),w
  3166  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3168  077A  00B6               	movwf	??_BMP280_readPressure+8
  3169  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3170  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3171  077D  0848               	movf	((_BMP280_calib+1)^(0+128)+18),w
  3172  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3173  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0780  00B7               	movwf	??_BMP280_readPressure+9
  3175  0781  3000               	movlw	0
  3176  0782  1BB7               	btfsc	??_BMP280_readPressure+9,7
  3177  0783  30FF               	movlw	255
  3178  0784  00B8               	movwf	??_BMP280_readPressure+10
  3179  0785  00B9               	movwf	??_BMP280_readPressure+11
  3180  0786  0836               	movf	??_BMP280_readPressure+8,w
  3181  0787  07B2               	addwf	??_BMP280_readPressure+4,f
  3182  0788  0837               	movf	??_BMP280_readPressure+9,w
  3183  0789  1803               	skipnc
  3184  078A  0F37               	incfsz	??_BMP280_readPressure+9,w
  3185  078B  2F8D               	goto	u1180
  3186  078C  2F8E               	goto	u1181
  3187  078D                     u1180:
  3188  078D  07B3               	addwf	??_BMP280_readPressure+5,f
  3189  078E                     u1181:
  3190  078E  0838               	movf	??_BMP280_readPressure+10,w
  3191  078F  1803               	skipnc
  3192  0790  0F38               	incfsz	??_BMP280_readPressure+10,w
  3193  0791  2F93               	goto	u1182
  3194  0792  2F94               	goto	u1183
  3195  0793                     u1182:
  3196  0793  07B4               	addwf	??_BMP280_readPressure+6,f
  3197  0794                     u1183:
  3198  0794  0839               	movf	??_BMP280_readPressure+11,w
  3199  0795  1803               	skipnc
  3200  0796  0A39               	incf	??_BMP280_readPressure+11,w
  3201  0797  07B5               	addwf	??_BMP280_readPressure+7,f
  3202  0798  0832               	movf	??_BMP280_readPressure+4,w
  3203  0799  07AE               	addwf	??_BMP280_readPressure,f
  3204  079A  0833               	movf	??_BMP280_readPressure+5,w
  3205  079B  1803               	skipnc
  3206  079C  0F33               	incfsz	??_BMP280_readPressure+5,w
  3207  079D  2F9F               	goto	u1190
  3208  079E  2FA0               	goto	u1191
  3209  079F                     u1190:
  3210  079F  07AF               	addwf	??_BMP280_readPressure+1,f
  3211  07A0                     u1191:
  3212  07A0  0834               	movf	??_BMP280_readPressure+6,w
  3213  07A1  1803               	skipnc
  3214  07A2  0F34               	incfsz	??_BMP280_readPressure+6,w
  3215  07A3  2FA5               	goto	u1192
  3216  07A4  2FA6               	goto	u1193
  3217  07A5                     u1192:
  3218  07A5  07B0               	addwf	??_BMP280_readPressure+2,f
  3219  07A6                     u1193:
  3220  07A6  0835               	movf	??_BMP280_readPressure+7,w
  3221  07A7  1803               	skipnc
  3222  07A8  0A35               	incf	??_BMP280_readPressure+7,w
  3223  07A9  07B1               	addwf	??_BMP280_readPressure+3,f
  3224  07AA  0831               	movf	??_BMP280_readPressure+3,w
  3225  07AB  00F7               	movwf	___aldiv@dividend+3
  3226  07AC  0830               	movf	??_BMP280_readPressure+2,w
  3227  07AD  00F6               	movwf	___aldiv@dividend+2
  3228  07AE  082F               	movf	??_BMP280_readPressure+1,w
  3229  07AF  00F5               	movwf	___aldiv@dividend+1
  3230  07B0  082E               	movf	??_BMP280_readPressure,w
  3231  07B1  00F4               	movwf	___aldiv@dividend
  3232  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3233  07B7  0870               	movf	?___aldiv,w
  3234  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3235  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3236  07BA  0753               	addwf	BMP280_readPressure@p,w
  3237  07BB  00BA               	movwf	??_BMP280_readPressure+12
  3238  07BC  3000               	movlw	0
  3239  07BD  1803               	skipnc
  3240  07BE  3001               	movlw	1
  3241  07BF  0771               	addwf	?___aldiv+1,w
  3242  07C0  01BC               	clrf	??_BMP280_readPressure+14
  3243  07C1  1803               	skipnc
  3244  07C2  0ABC               	incf	??_BMP280_readPressure+14,f
  3245  07C3  0754               	addwf	BMP280_readPressure@p+1,w
  3246  07C4  00BB               	movwf	??_BMP280_readPressure+13
  3247  07C5  1803               	skipnc
  3248  07C6  0ABC               	incf	??_BMP280_readPressure+14,f
  3249  07C7  0872               	movf	?___aldiv+2,w
  3250  07C8  073C               	addwf	??_BMP280_readPressure+14,w
  3251  07C9  01BD               	clrf	??_BMP280_readPressure+15
  3252  07CA  1803               	skipnc
  3253  07CB  0ABD               	incf	??_BMP280_readPressure+15,f
  3254  07CC  0755               	addwf	BMP280_readPressure@p+2,w
  3255  07CD  00BC               	movwf	??_BMP280_readPressure+14
  3256  07CE  1803               	skipnc
  3257  07CF  0ABD               	incf	??_BMP280_readPressure+15,f
  3258  07D0  0873               	movf	?___aldiv+3,w
  3259  07D1  073D               	addwf	??_BMP280_readPressure+15,w
  3260  07D2  0756               	addwf	BMP280_readPressure@p+3,w
  3261  07D3  00BD               	movwf	??_BMP280_readPressure+15
  3262  07D4  083D               	movf	??_BMP280_readPressure+15,w
  3263  07D5  00D6               	movwf	BMP280_readPressure@p+3
  3264  07D6  083C               	movf	??_BMP280_readPressure+14,w
  3265  07D7  00D5               	movwf	BMP280_readPressure@p+2
  3266  07D8  083B               	movf	??_BMP280_readPressure+13,w
  3267  07D9  00D4               	movwf	BMP280_readPressure@p+1
  3268  07DA  083A               	movf	??_BMP280_readPressure+12,w
  3269  07DB  00D3               	movwf	BMP280_readPressure@p
  3270  07DC                     l1308:
  3271                           
  3272                           ;BMP280.c: 298:   *pres = p;
  3273  07DC  084A               	movf	BMP280_readPressure@pres,w
  3274  07DD  0084               	movwf	4
  3275  07DE  0853               	movf	BMP280_readPressure@p,w
  3276  07DF  1383               	bcf	3,7	;select IRP bank0
  3277  07E0  0080               	movwf	0
  3278  07E1  0A84               	incf	4,f
  3279  07E2  0854               	movf	BMP280_readPressure@p+1,w
  3280  07E3  0080               	movwf	0
  3281  07E4  0A84               	incf	4,f
  3282  07E5  0855               	movf	BMP280_readPressure@p+2,w
  3283  07E6  0080               	movwf	0
  3284  07E7  0A84               	incf	4,f
  3285  07E8  0856               	movf	BMP280_readPressure@p+3,w
  3286  07E9  0080               	movwf	0
  3287  07EA                     l164:
  3288  07EA  0008               	return
  3289  07EB                     __end_of_BMP280_readPressure:
  3290                           
  3291                           	psect	text6
  3292  0D69                     __ptext6:	
  3293 ;; *************** function ___lmul *****************
  3294 ;; Defined at:
  3295 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3298 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  product         4   10[COMMON] unsigned long 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  4    6[BANK0 ] unsigned long 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         0       8       0       0       0
  3311 ;;      Locals:         4       0       0       0       0
  3312 ;;      Temps:          1       0       0       0       0
  3313 ;;      Totals:         5       8       0       0       0
  3314 ;;Total ram usage:       13 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_BMP280_readTemperature
  3320 ;;		_BMP280_readPressure
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function ___lmul
  3326  0D69                     ___lmul:
  3327  0D69                     l1208:	
  3328                           ;incstack = 0
  3329                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3330                           
  3331  0D69  3000               	movlw	0
  3332  0D6A  00FD               	movwf	___lmul@product+3
  3333  0D6B  3000               	movlw	0
  3334  0D6C  00FC               	movwf	___lmul@product+2
  3335  0D6D  3000               	movlw	0
  3336  0D6E  00FB               	movwf	___lmul@product+1
  3337  0D6F  3000               	movlw	0
  3338  0D70  00FA               	movwf	___lmul@product
  3339  0D71                     l1210:
  3340  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0D73  1C26               	btfss	___lmul@multiplier,0
  3343  0D74  2D76               	goto	u811
  3344  0D75  2D77               	goto	u810
  3345  0D76                     u811:
  3346  0D76  2D8E               	goto	l1214
  3347  0D77                     u810:
  3348  0D77                     l1212:
  3349  0D77  082A               	movf	___lmul@multiplicand,w
  3350  0D78  07FA               	addwf	___lmul@product,f
  3351  0D79  082B               	movf	___lmul@multiplicand+1,w
  3352  0D7A  1103               	clrz
  3353  0D7B  1803               	skipnc
  3354  0D7C  3E01               	addlw	1
  3355  0D7D  1903               	skipnz
  3356  0D7E  2D80               	goto	u821
  3357  0D7F  07FB               	addwf	___lmul@product+1,f
  3358  0D80                     u821:
  3359  0D80  082C               	movf	___lmul@multiplicand+2,w
  3360  0D81  1103               	clrz
  3361  0D82  1803               	skipnc
  3362  0D83  3E01               	addlw	1
  3363  0D84  1903               	skipnz
  3364  0D85  2D87               	goto	u822
  3365  0D86  07FC               	addwf	___lmul@product+2,f
  3366  0D87                     u822:
  3367  0D87  082D               	movf	___lmul@multiplicand+3,w
  3368  0D88  1103               	clrz
  3369  0D89  1803               	skipnc
  3370  0D8A  3E01               	addlw	1
  3371  0D8B  1903               	skipnz
  3372  0D8C  2D8E               	goto	u823
  3373  0D8D  07FD               	addwf	___lmul@product+3,f
  3374  0D8E                     u823:
  3375  0D8E                     l1214:
  3376  0D8E  3001               	movlw	1
  3377  0D8F  00F9               	movwf	??___lmul
  3378  0D90                     u835:
  3379  0D90  1003               	clrc
  3380  0D91  0DAA               	rlf	___lmul@multiplicand,f
  3381  0D92  0DAB               	rlf	___lmul@multiplicand+1,f
  3382  0D93  0DAC               	rlf	___lmul@multiplicand+2,f
  3383  0D94  0DAD               	rlf	___lmul@multiplicand+3,f
  3384  0D95  0BF9               	decfsz	??___lmul,f
  3385  0D96  2D90               	goto	u835
  3386  0D97                     l1216:
  3387  0D97  3001               	movlw	1
  3388  0D98                     u845:
  3389  0D98  1003               	clrc
  3390  0D99  0CA9               	rrf	___lmul@multiplier+3,f
  3391  0D9A  0CA8               	rrf	___lmul@multiplier+2,f
  3392  0D9B  0CA7               	rrf	___lmul@multiplier+1,f
  3393  0D9C  0CA6               	rrf	___lmul@multiplier,f
  3394  0D9D  3EFF               	addlw	-1
  3395  0D9E  1D03               	skipz
  3396  0D9F  2D98               	goto	u845
  3397  0DA0  0829               	movf	___lmul@multiplier+3,w
  3398  0DA1  0428               	iorwf	___lmul@multiplier+2,w
  3399  0DA2  0427               	iorwf	___lmul@multiplier+1,w
  3400  0DA3  0426               	iorwf	___lmul@multiplier,w
  3401  0DA4  1D03               	skipz
  3402  0DA5  2DA7               	goto	u851
  3403  0DA6  2DA8               	goto	u850
  3404  0DA7                     u851:
  3405  0DA7  2D71               	goto	l1210
  3406  0DA8                     u850:
  3407  0DA8                     l1218:
  3408  0DA8  087D               	movf	___lmul@product+3,w
  3409  0DA9  00A9               	movwf	?___lmul+3
  3410  0DAA  087C               	movf	___lmul@product+2,w
  3411  0DAB  00A8               	movwf	?___lmul+2
  3412  0DAC  087B               	movf	___lmul@product+1,w
  3413  0DAD  00A7               	movwf	?___lmul+1
  3414  0DAE  087A               	movf	___lmul@product,w
  3415  0DAF  00A6               	movwf	?___lmul
  3416  0DB0                     l310:
  3417  0DB0  0008               	return
  3418  0DB1                     __end_of___lmul:
  3419                           
  3420                           	psect	text7
  3421  0DFD                     __ptext7:	
  3422 ;; *************** function ___lldiv *****************
  3423 ;; Defined at:
  3424 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  divisor         4    0[COMMON] unsigned long 
  3427 ;;  dividend        4    4[COMMON] unsigned long 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  quotient        4    9[COMMON] unsigned long 
  3430 ;;  counter         1   13[COMMON] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  4    0[COMMON] unsigned long 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         8       0       0       0       0
  3441 ;;      Locals:         5       0       0       0       0
  3442 ;;      Temps:          1       0       0       0       0
  3443 ;;      Totals:        14       0       0       0       0
  3444 ;;Total ram usage:       14 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_I2C_Master_Init
  3450 ;;		_BMP280_readPressure
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function ___lldiv
  3456  0DFD                     ___lldiv:
  3457  0DFD                     l1124:	
  3458                           ;incstack = 0
  3459                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3460                           
  3461  0DFD  3000               	movlw	0
  3462  0DFE  00FC               	movwf	___lldiv@quotient+3
  3463  0DFF  3000               	movlw	0
  3464  0E00  00FB               	movwf	___lldiv@quotient+2
  3465  0E01  3000               	movlw	0
  3466  0E02  00FA               	movwf	___lldiv@quotient+1
  3467  0E03  3000               	movlw	0
  3468  0E04  00F9               	movwf	___lldiv@quotient
  3469  0E05  0873               	movf	___lldiv@divisor+3,w
  3470  0E06  0472               	iorwf	___lldiv@divisor+2,w
  3471  0E07  0471               	iorwf	___lldiv@divisor+1,w
  3472  0E08  0470               	iorwf	___lldiv@divisor,w
  3473  0E09  1903               	skipnz
  3474  0E0A  2E0C               	goto	u671
  3475  0E0B  2E0D               	goto	u670
  3476  0E0C                     u671:
  3477  0E0C  2E5A               	goto	l1144
  3478  0E0D                     u670:
  3479  0E0D                     l1126:
  3480  0E0D  01FD               	clrf	___lldiv@counter
  3481  0E0E  0AFD               	incf	___lldiv@counter,f
  3482  0E0F  2E1D               	goto	l1130
  3483  0E10                     l1128:
  3484  0E10  3001               	movlw	1
  3485  0E11  00F8               	movwf	??___lldiv
  3486  0E12                     u685:
  3487  0E12  1003               	clrc
  3488  0E13  0DF0               	rlf	___lldiv@divisor,f
  3489  0E14  0DF1               	rlf	___lldiv@divisor+1,f
  3490  0E15  0DF2               	rlf	___lldiv@divisor+2,f
  3491  0E16  0DF3               	rlf	___lldiv@divisor+3,f
  3492  0E17  0BF8               	decfsz	??___lldiv,f
  3493  0E18  2E12               	goto	u685
  3494  0E19  3001               	movlw	1
  3495  0E1A  00F8               	movwf	??___lldiv
  3496  0E1B  0878               	movf	??___lldiv,w
  3497  0E1C  07FD               	addwf	___lldiv@counter,f
  3498  0E1D                     l1130:
  3499  0E1D  1FF3               	btfss	___lldiv@divisor+3,7
  3500  0E1E  2E20               	goto	u691
  3501  0E1F  2E21               	goto	u690
  3502  0E20                     u691:
  3503  0E20  2E10               	goto	l1128
  3504  0E21                     u690:
  3505  0E21                     l1132:
  3506  0E21  3001               	movlw	1
  3507  0E22  00F8               	movwf	??___lldiv
  3508  0E23                     u705:
  3509  0E23  1003               	clrc
  3510  0E24  0DF9               	rlf	___lldiv@quotient,f
  3511  0E25  0DFA               	rlf	___lldiv@quotient+1,f
  3512  0E26  0DFB               	rlf	___lldiv@quotient+2,f
  3513  0E27  0DFC               	rlf	___lldiv@quotient+3,f
  3514  0E28  0BF8               	decfsz	??___lldiv,f
  3515  0E29  2E23               	goto	u705
  3516  0E2A                     l1134:
  3517  0E2A  0873               	movf	___lldiv@divisor+3,w
  3518  0E2B  0277               	subwf	___lldiv@dividend+3,w
  3519  0E2C  1D03               	skipz
  3520  0E2D  2E38               	goto	u715
  3521  0E2E  0872               	movf	___lldiv@divisor+2,w
  3522  0E2F  0276               	subwf	___lldiv@dividend+2,w
  3523  0E30  1D03               	skipz
  3524  0E31  2E38               	goto	u715
  3525  0E32  0871               	movf	___lldiv@divisor+1,w
  3526  0E33  0275               	subwf	___lldiv@dividend+1,w
  3527  0E34  1D03               	skipz
  3528  0E35  2E38               	goto	u715
  3529  0E36  0870               	movf	___lldiv@divisor,w
  3530  0E37  0274               	subwf	___lldiv@dividend,w
  3531  0E38                     u715:
  3532  0E38  1C03               	skipc
  3533  0E39  2E3B               	goto	u711
  3534  0E3A  2E3C               	goto	u710
  3535  0E3B                     u711:
  3536  0E3B  2E4B               	goto	l1140
  3537  0E3C                     u710:
  3538  0E3C                     l1136:
  3539  0E3C  0870               	movf	___lldiv@divisor,w
  3540  0E3D  02F4               	subwf	___lldiv@dividend,f
  3541  0E3E  0871               	movf	___lldiv@divisor+1,w
  3542  0E3F  1C03               	skipc
  3543  0E40  0F71               	incfsz	___lldiv@divisor+1,w
  3544  0E41  02F5               	subwf	___lldiv@dividend+1,f
  3545  0E42  0872               	movf	___lldiv@divisor+2,w
  3546  0E43  1C03               	skipc
  3547  0E44  0F72               	incfsz	___lldiv@divisor+2,w
  3548  0E45  02F6               	subwf	___lldiv@dividend+2,f
  3549  0E46  0873               	movf	___lldiv@divisor+3,w
  3550  0E47  1C03               	skipc
  3551  0E48  0F73               	incfsz	___lldiv@divisor+3,w
  3552  0E49  02F7               	subwf	___lldiv@dividend+3,f
  3553  0E4A                     l1138:
  3554  0E4A  1479               	bsf	___lldiv@quotient,0
  3555  0E4B                     l1140:
  3556  0E4B  3001               	movlw	1
  3557  0E4C                     u725:
  3558  0E4C  1003               	clrc
  3559  0E4D  0CF3               	rrf	___lldiv@divisor+3,f
  3560  0E4E  0CF2               	rrf	___lldiv@divisor+2,f
  3561  0E4F  0CF1               	rrf	___lldiv@divisor+1,f
  3562  0E50  0CF0               	rrf	___lldiv@divisor,f
  3563  0E51  3EFF               	addlw	-1
  3564  0E52  1D03               	skipz
  3565  0E53  2E4C               	goto	u725
  3566  0E54                     l1142:
  3567  0E54  3001               	movlw	1
  3568  0E55  02FD               	subwf	___lldiv@counter,f
  3569  0E56  1D03               	btfss	3,2
  3570  0E57  2E59               	goto	u731
  3571  0E58  2E5A               	goto	u730
  3572  0E59                     u731:
  3573  0E59  2E21               	goto	l1132
  3574  0E5A                     u730:
  3575  0E5A                     l1144:
  3576  0E5A  087C               	movf	___lldiv@quotient+3,w
  3577  0E5B  00F3               	movwf	?___lldiv+3
  3578  0E5C  087B               	movf	___lldiv@quotient+2,w
  3579  0E5D  00F2               	movwf	?___lldiv+2
  3580  0E5E  087A               	movf	___lldiv@quotient+1,w
  3581  0E5F  00F1               	movwf	?___lldiv+1
  3582  0E60  0879               	movf	___lldiv@quotient,w
  3583  0E61  00F0               	movwf	?___lldiv
  3584  0E62                     l332:
  3585  0E62  0008               	return
  3586  0E63                     __end_of___lldiv:
  3587                           
  3588                           	psect	text8
  3589  0016                     __ptext8:	
  3590 ;; *************** function ___aldiv *****************
  3591 ;; Defined at:
  3592 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  divisor         4    0[COMMON] long 
  3595 ;;  dividend        4    4[COMMON] long 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  quotient        4    2[BANK0 ] long 
  3598 ;;  sign            1    1[BANK0 ] unsigned char 
  3599 ;;  counter         1    0[BANK0 ] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  4    0[COMMON] long 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         8       0       0       0       0
  3610 ;;      Locals:         0       6       0       0       0
  3611 ;;      Temps:          1       0       0       0       0
  3612 ;;      Totals:         9       6       0       0       0
  3613 ;;Total ram usage:       15 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_BMP280_readTemperature
  3619 ;;		_BMP280_readPressure
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function ___aldiv
  3625  0016                     ___aldiv:
  3626  0016                     l1222:	
  3627                           ;incstack = 0
  3628                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3629                           
  3630  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0018  01A1               	clrf	___aldiv@sign
  3633  0019                     l1224:
  3634  0019  1FF3               	btfss	___aldiv@divisor+3,7
  3635  001A  281C               	goto	u861
  3636  001B  281D               	goto	u860
  3637  001C                     u861:
  3638  001C  282A               	goto	l361
  3639  001D                     u860:
  3640  001D                     l1226:
  3641  001D  09F0               	comf	___aldiv@divisor,f
  3642  001E  09F1               	comf	___aldiv@divisor+1,f
  3643  001F  09F2               	comf	___aldiv@divisor+2,f
  3644  0020  09F3               	comf	___aldiv@divisor+3,f
  3645  0021  0AF0               	incf	___aldiv@divisor,f
  3646  0022  1903               	skipnz
  3647  0023  0AF1               	incf	___aldiv@divisor+1,f
  3648  0024  1903               	skipnz
  3649  0025  0AF2               	incf	___aldiv@divisor+2,f
  3650  0026  1903               	skipnz
  3651  0027  0AF3               	incf	___aldiv@divisor+3,f
  3652  0028  01A1               	clrf	___aldiv@sign
  3653  0029  0AA1               	incf	___aldiv@sign,f
  3654  002A                     l361:
  3655  002A  1FF7               	btfss	___aldiv@dividend+3,7
  3656  002B  282D               	goto	u871
  3657  002C  282E               	goto	u870
  3658  002D                     u871:
  3659  002D  283D               	goto	l1232
  3660  002E                     u870:
  3661  002E                     l1228:
  3662  002E  09F4               	comf	___aldiv@dividend,f
  3663  002F  09F5               	comf	___aldiv@dividend+1,f
  3664  0030  09F6               	comf	___aldiv@dividend+2,f
  3665  0031  09F7               	comf	___aldiv@dividend+3,f
  3666  0032  0AF4               	incf	___aldiv@dividend,f
  3667  0033  1903               	skipnz
  3668  0034  0AF5               	incf	___aldiv@dividend+1,f
  3669  0035  1903               	skipnz
  3670  0036  0AF6               	incf	___aldiv@dividend+2,f
  3671  0037  1903               	skipnz
  3672  0038  0AF7               	incf	___aldiv@dividend+3,f
  3673  0039                     l1230:
  3674  0039  3001               	movlw	1
  3675  003A  00F8               	movwf	??___aldiv
  3676  003B  0878               	movf	??___aldiv,w
  3677  003C  06A1               	xorwf	___aldiv@sign,f
  3678  003D                     l1232:
  3679  003D  3000               	movlw	0
  3680  003E  00A5               	movwf	___aldiv@quotient+3
  3681  003F  3000               	movlw	0
  3682  0040  00A4               	movwf	___aldiv@quotient+2
  3683  0041  3000               	movlw	0
  3684  0042  00A3               	movwf	___aldiv@quotient+1
  3685  0043  3000               	movlw	0
  3686  0044  00A2               	movwf	___aldiv@quotient
  3687  0045                     l1234:
  3688  0045  0873               	movf	___aldiv@divisor+3,w
  3689  0046  0472               	iorwf	___aldiv@divisor+2,w
  3690  0047  0471               	iorwf	___aldiv@divisor+1,w
  3691  0048  0470               	iorwf	___aldiv@divisor,w
  3692  0049  1903               	skipnz
  3693  004A  284C               	goto	u881
  3694  004B  284D               	goto	u880
  3695  004C                     u881:
  3696  004C  289A               	goto	l1254
  3697  004D                     u880:
  3698  004D                     l1236:
  3699  004D  01A0               	clrf	___aldiv@counter
  3700  004E  0AA0               	incf	___aldiv@counter,f
  3701  004F  285D               	goto	l1240
  3702  0050                     l1238:
  3703  0050  3001               	movlw	1
  3704  0051  00F8               	movwf	??___aldiv
  3705  0052                     u895:
  3706  0052  1003               	clrc
  3707  0053  0DF0               	rlf	___aldiv@divisor,f
  3708  0054  0DF1               	rlf	___aldiv@divisor+1,f
  3709  0055  0DF2               	rlf	___aldiv@divisor+2,f
  3710  0056  0DF3               	rlf	___aldiv@divisor+3,f
  3711  0057  0BF8               	decfsz	??___aldiv,f
  3712  0058  2852               	goto	u895
  3713  0059  3001               	movlw	1
  3714  005A  00F8               	movwf	??___aldiv
  3715  005B  0878               	movf	??___aldiv,w
  3716  005C  07A0               	addwf	___aldiv@counter,f
  3717  005D                     l1240:
  3718  005D  1FF3               	btfss	___aldiv@divisor+3,7
  3719  005E  2860               	goto	u901
  3720  005F  2861               	goto	u900
  3721  0060                     u901:
  3722  0060  2850               	goto	l1238
  3723  0061                     u900:
  3724  0061                     l1242:
  3725  0061  3001               	movlw	1
  3726  0062  00F8               	movwf	??___aldiv
  3727  0063                     u915:
  3728  0063  1003               	clrc
  3729  0064  0DA2               	rlf	___aldiv@quotient,f
  3730  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3731  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3732  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3733  0068  0BF8               	decfsz	??___aldiv,f
  3734  0069  2863               	goto	u915
  3735  006A                     l1244:
  3736  006A  0873               	movf	___aldiv@divisor+3,w
  3737  006B  0277               	subwf	___aldiv@dividend+3,w
  3738  006C  1D03               	skipz
  3739  006D  2878               	goto	u925
  3740  006E  0872               	movf	___aldiv@divisor+2,w
  3741  006F  0276               	subwf	___aldiv@dividend+2,w
  3742  0070  1D03               	skipz
  3743  0071  2878               	goto	u925
  3744  0072  0871               	movf	___aldiv@divisor+1,w
  3745  0073  0275               	subwf	___aldiv@dividend+1,w
  3746  0074  1D03               	skipz
  3747  0075  2878               	goto	u925
  3748  0076  0870               	movf	___aldiv@divisor,w
  3749  0077  0274               	subwf	___aldiv@dividend,w
  3750  0078                     u925:
  3751  0078  1C03               	skipc
  3752  0079  287B               	goto	u921
  3753  007A  287C               	goto	u920
  3754  007B                     u921:
  3755  007B  288B               	goto	l1250
  3756  007C                     u920:
  3757  007C                     l1246:
  3758  007C  0870               	movf	___aldiv@divisor,w
  3759  007D  02F4               	subwf	___aldiv@dividend,f
  3760  007E  0871               	movf	___aldiv@divisor+1,w
  3761  007F  1C03               	skipc
  3762  0080  0F71               	incfsz	___aldiv@divisor+1,w
  3763  0081  02F5               	subwf	___aldiv@dividend+1,f
  3764  0082  0872               	movf	___aldiv@divisor+2,w
  3765  0083  1C03               	skipc
  3766  0084  0F72               	incfsz	___aldiv@divisor+2,w
  3767  0085  02F6               	subwf	___aldiv@dividend+2,f
  3768  0086  0873               	movf	___aldiv@divisor+3,w
  3769  0087  1C03               	skipc
  3770  0088  0F73               	incfsz	___aldiv@divisor+3,w
  3771  0089  02F7               	subwf	___aldiv@dividend+3,f
  3772  008A                     l1248:
  3773  008A  1422               	bsf	___aldiv@quotient,0
  3774  008B                     l1250:
  3775  008B  3001               	movlw	1
  3776  008C                     u935:
  3777  008C  1003               	clrc
  3778  008D  0CF3               	rrf	___aldiv@divisor+3,f
  3779  008E  0CF2               	rrf	___aldiv@divisor+2,f
  3780  008F  0CF1               	rrf	___aldiv@divisor+1,f
  3781  0090  0CF0               	rrf	___aldiv@divisor,f
  3782  0091  3EFF               	addlw	-1
  3783  0092  1D03               	skipz
  3784  0093  288C               	goto	u935
  3785  0094                     l1252:
  3786  0094  3001               	movlw	1
  3787  0095  02A0               	subwf	___aldiv@counter,f
  3788  0096  1D03               	btfss	3,2
  3789  0097  2899               	goto	u941
  3790  0098  289A               	goto	u940
  3791  0099                     u941:
  3792  0099  2861               	goto	l1242
  3793  009A                     u940:
  3794  009A                     l1254:
  3795  009A  0821               	movf	___aldiv@sign,w
  3796  009B  1903               	btfsc	3,2
  3797  009C  289E               	goto	u951
  3798  009D  289F               	goto	u950
  3799  009E                     u951:
  3800  009E  28AA               	goto	l1258
  3801  009F                     u950:
  3802  009F                     l1256:
  3803  009F  09A2               	comf	___aldiv@quotient,f
  3804  00A0  09A3               	comf	___aldiv@quotient+1,f
  3805  00A1  09A4               	comf	___aldiv@quotient+2,f
  3806  00A2  09A5               	comf	___aldiv@quotient+3,f
  3807  00A3  0AA2               	incf	___aldiv@quotient,f
  3808  00A4  1903               	skipnz
  3809  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3810  00A6  1903               	skipnz
  3811  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3812  00A8  1903               	skipnz
  3813  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3814  00AA                     l1258:
  3815  00AA  0825               	movf	___aldiv@quotient+3,w
  3816  00AB  00F3               	movwf	?___aldiv+3
  3817  00AC  0824               	movf	___aldiv@quotient+2,w
  3818  00AD  00F2               	movwf	?___aldiv+2
  3819  00AE  0823               	movf	___aldiv@quotient+1,w
  3820  00AF  00F1               	movwf	?___aldiv+1
  3821  00B0  0822               	movf	___aldiv@quotient,w
  3822  00B1  00F0               	movwf	?___aldiv
  3823  00B2                     l371:
  3824  00B2  0008               	return
  3825  00B3                     __end_of___aldiv:
  3826                           
  3827                           	psect	text9
  3828  0F1A                     __ptext9:	
  3829 ;; *************** function _BMP280_begin *****************
  3830 ;; Defined at:
  3831 ;;		line 155 in file "BMP280.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  mode            1    wreg     enum E1307
  3834 ;;  T_sampling      1    3[BANK0 ] enum E1312
  3835 ;;  P_sampling      1    4[BANK0 ] enum E1312
  3836 ;;  filter          1    5[BANK0 ] enum E1320
  3837 ;;  standby         1    6[BANK0 ] enum E1327
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  mode            1   13[COMMON] enum E1307
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    3[BANK0 ] int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       4       0       0       0
  3850 ;;      Locals:         1       0       0       0       0
  3851 ;;      Temps:          0       4       0       0       0
  3852 ;;      Totals:         1       8       0       0       0
  3853 ;;Total ram usage:        9 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    4
  3856 ;; This function calls:
  3857 ;;		_BMP280_Configure
  3858 ;;		_BMP280_Read16
  3859 ;;		_BMP280_Read8
  3860 ;;		_BMP280_Write
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _BMP280_begin
  3868  0F1A                     _BMP280_begin:
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3872                           ;BMP280_begin@mode stored from wreg
  3873  0F1A  00FD               	movwf	BMP280_begin@mode
  3874  0F1B                     l1266:
  3875                           
  3876                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  3877  0F1B  30D0               	movlw	208
  3878  0F1C  120A  158A  24E5  120A  158A  	fcall	_BMP280_Read8
  3879  0F21  3A58               	xorlw	88
  3880  0F22  1903               	skipnz
  3881  0F23  2F25               	goto	u961
  3882  0F24  2F26               	goto	u960
  3883  0F25                     u961:
  3884  0F25  2F2B               	goto	l1272
  3885  0F26                     u960:
  3886  0F26                     l1268:
  3887                           
  3888                           ;BMP280.c: 162:     return 0;
  3889  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0F28  01A3               	clrf	?_BMP280_begin
  3892  0F29  01A4               	clrf	?_BMP280_begin+1
  3893  0F2A  2FFF               	goto	l144
  3894  0F2B                     l1272:
  3895                           
  3896                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  3897  0F2B  30B6               	movlw	182
  3898  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0F2E  00A7               	movwf	??_BMP280_begin
  3901  0F2F  0827               	movf	??_BMP280_begin,w
  3902  0F30  00F2               	movwf	BMP280_Write@_data
  3903  0F31  30E0               	movlw	224
  3904  0F32  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  3905  0F37                     l1274:
  3906                           
  3907                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3908  0F37  3002               	movlw	2
  3909  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0F3A  00A9               	movwf	??_BMP280_begin+2
  3912  0F3B  3004               	movlw	4
  3913  0F3C  00A8               	movwf	??_BMP280_begin+1
  3914  0F3D  30B9               	movlw	185
  3915  0F3E  00A7               	movwf	??_BMP280_begin
  3916  0F3F                     u1237:
  3917  0F3F  0BA7               	decfsz	??_BMP280_begin,f
  3918  0F40  2F3F               	goto	u1237
  3919  0F41  0BA8               	decfsz	??_BMP280_begin+1,f
  3920  0F42  2F3F               	goto	u1237
  3921  0F43  0BA9               	decfsz	??_BMP280_begin+2,f
  3922  0F44  2F3F               	goto	u1237
  3923  0F45  2F46               	nop2
  3924  0F46                     l1278:	
  3925                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3926                           
  3927                           
  3928                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3929  0F46  30F3               	movlw	243
  3930  0F47  120A  158A  24E5  120A  158A  	fcall	_BMP280_Read8
  3931  0F4C  3901               	andlw	1
  3932  0F4D  1D03               	btfss	3,2
  3933  0F4E  2F50               	goto	u971
  3934  0F4F  2F51               	goto	u970
  3935  0F50                     u971:
  3936  0F50  2F37               	goto	l1274
  3937  0F51                     u970:
  3938  0F51                     l1280:
  3939                           
  3940                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3941  0F51  3088               	movlw	136
  3942  0F52  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3943  0F57  0877               	movf	?_BMP280_Read16+1,w
  3944  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3946  0F5A  00B6               	movwf	(_BMP280_calib+1)^(0+128)
  3947  0F5B  0876               	movf	?_BMP280_Read16,w
  3948  0F5C  00B5               	movwf	_BMP280_calib^(0+128)
  3949                           
  3950                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3951  0F5D  308A               	movlw	138
  3952  0F5E  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3953  0F63  0877               	movf	?_BMP280_Read16+1,w
  3954  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3955  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3956  0F66  00B8               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3957  0F67  0876               	movf	?_BMP280_Read16,w
  3958  0F68  00B7               	movwf	(_BMP280_calib^(0+128)+2)
  3959                           
  3960                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3961  0F69  308C               	movlw	140
  3962  0F6A  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3963  0F6F  0877               	movf	?_BMP280_Read16+1,w
  3964  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0F72  00BA               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3967  0F73  0876               	movf	?_BMP280_Read16,w
  3968  0F74  00B9               	movwf	(_BMP280_calib^(0+128)+4)
  3969                           
  3970                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3971  0F75  308E               	movlw	142
  3972  0F76  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3973  0F7B  0877               	movf	?_BMP280_Read16+1,w
  3974  0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  3976  0F7E  00BC               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3977  0F7F  0876               	movf	?_BMP280_Read16,w
  3978  0F80  00BB               	movwf	(_BMP280_calib^(0+128)+6)
  3979                           
  3980                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3981  0F81  3090               	movlw	144
  3982  0F82  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3983  0F87  0877               	movf	?_BMP280_Read16+1,w
  3984  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  3986  0F8A  00BE               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3987  0F8B  0876               	movf	?_BMP280_Read16,w
  3988  0F8C  00BD               	movwf	(_BMP280_calib^(0+128)+8)
  3989                           
  3990                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3991  0F8D  3092               	movlw	146
  3992  0F8E  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3993  0F93  0877               	movf	?_BMP280_Read16+1,w
  3994  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  3995  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  3996  0F96  00C0               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3997  0F97  0876               	movf	?_BMP280_Read16,w
  3998  0F98  00BF               	movwf	(_BMP280_calib^(0+128)+10)
  3999                           
  4000                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  4001  0F99  3094               	movlw	148
  4002  0F9A  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4003  0F9F  0877               	movf	?_BMP280_Read16+1,w
  4004  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0FA2  00C2               	movwf	((_BMP280_calib+1)^(0+128)+12)
  4007  0FA3  0876               	movf	?_BMP280_Read16,w
  4008  0FA4  00C1               	movwf	(_BMP280_calib^(0+128)+12)
  4009                           
  4010                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  4011  0FA5  3096               	movlw	150
  4012  0FA6  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4013  0FAB  0877               	movf	?_BMP280_Read16+1,w
  4014  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  4015  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  4016  0FAE  00C4               	movwf	((_BMP280_calib+1)^(0+128)+14)
  4017  0FAF  0876               	movf	?_BMP280_Read16,w
  4018  0FB0  00C3               	movwf	(_BMP280_calib^(0+128)+14)
  4019                           
  4020                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  4021  0FB1  3098               	movlw	152
  4022  0FB2  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4023  0FB7  0877               	movf	?_BMP280_Read16+1,w
  4024  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  4025  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  4026  0FBA  00C6               	movwf	((_BMP280_calib+1)^(0+128)+16)
  4027  0FBB  0876               	movf	?_BMP280_Read16,w
  4028  0FBC  00C5               	movwf	(_BMP280_calib^(0+128)+16)
  4029                           
  4030                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  4031  0FBD  309A               	movlw	154
  4032  0FBE  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4033  0FC3  0877               	movf	?_BMP280_Read16+1,w
  4034  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  4035  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  4036  0FC6  00C8               	movwf	((_BMP280_calib+1)^(0+128)+18)
  4037  0FC7  0876               	movf	?_BMP280_Read16,w
  4038  0FC8  00C7               	movwf	(_BMP280_calib^(0+128)+18)
  4039                           
  4040                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  4041  0FC9  309C               	movlw	156
  4042  0FCA  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4043  0FCF  0877               	movf	?_BMP280_Read16+1,w
  4044  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  4045  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  4046  0FD2  00CA               	movwf	((_BMP280_calib+1)^(0+128)+20)
  4047  0FD3  0876               	movf	?_BMP280_Read16,w
  4048  0FD4  00C9               	movwf	(_BMP280_calib^(0+128)+20)
  4049                           
  4050                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  4051  0FD5  309E               	movlw	158
  4052  0FD6  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  4053  0FDB  0877               	movf	?_BMP280_Read16+1,w
  4054  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  4055  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  4056  0FDE  00CC               	movwf	((_BMP280_calib+1)^(0+128)+22)
  4057  0FDF  0876               	movf	?_BMP280_Read16,w
  4058  0FE0  00CB               	movwf	(_BMP280_calib^(0+128)+22)
  4059                           
  4060                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  4061  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0FE3  0823               	movf	BMP280_begin@T_sampling,w
  4064  0FE4  00A7               	movwf	??_BMP280_begin
  4065  0FE5  0827               	movf	??_BMP280_begin,w
  4066  0FE6  00F6               	movwf	BMP280_Configure@T_sampling
  4067  0FE7  0824               	movf	BMP280_begin@P_sampling,w
  4068  0FE8  00A8               	movwf	??_BMP280_begin+1
  4069  0FE9  0828               	movf	??_BMP280_begin+1,w
  4070  0FEA  00F7               	movwf	BMP280_Configure@P_sampling
  4071  0FEB  0825               	movf	BMP280_begin@filter,w
  4072  0FEC  00A9               	movwf	??_BMP280_begin+2
  4073  0FED  0829               	movf	??_BMP280_begin+2,w
  4074  0FEE  00F8               	movwf	BMP280_Configure@filter
  4075  0FEF  0826               	movf	BMP280_begin@standby,w
  4076  0FF0  00AA               	movwf	??_BMP280_begin+3
  4077  0FF1  082A               	movf	??_BMP280_begin+3,w
  4078  0FF2  00F9               	movwf	BMP280_Configure@standby
  4079  0FF3  087D               	movf	BMP280_begin@mode,w
  4080  0FF4  120A  158A  2521  120A  158A  	fcall	_BMP280_Configure
  4081  0FF9                     l1282:
  4082                           
  4083                           ;BMP280.c: 188:   return 1;
  4084  0FF9  3001               	movlw	1
  4085  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0FFC  00A3               	movwf	?_BMP280_begin
  4088  0FFD  3000               	movlw	0
  4089  0FFE  00A4               	movwf	?_BMP280_begin+1
  4090  0FFF                     l144:
  4091  0FFF  0008               	return
  4092  1000                     __end_of_BMP280_begin:
  4093                           
  4094                           	psect	text10
  4095  0CE5                     __ptext10:	
  4096 ;; *************** function _BMP280_Read8 *****************
  4097 ;; Defined at:
  4098 ;;		line 105 in file "BMP280.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  reg_addr        1    wreg     unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  reg_addr        1    8[COMMON] unsigned char 
  4103 ;;  ret             1    9[COMMON] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         2       0       0       0       0
  4115 ;;      Temps:          2       0       0       0       0
  4116 ;;      Totals:         4       0       0       0       0
  4117 ;;Total ram usage:        4 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		_I2C_Master_Read
  4122 ;;		_I2C_Master_Start
  4123 ;;		_I2C_Master_Stop
  4124 ;;		_I2C_Master_Write
  4125 ;; This function is called by:
  4126 ;;		_BMP280_begin
  4127 ;;		_BMP280_ForcedMeasurement
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _BMP280_Read8
  4133  0CE5                     _BMP280_Read8:
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  4137                           ;BMP280_Read8@reg_addr stored from wreg
  4138  0CE5  00F8               	movwf	BMP280_Read8@reg_addr
  4139  0CE6                     l1160:
  4140                           
  4141                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  4142  0CE6  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4143                           
  4144                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  4145  0CEB  30EE               	movlw	238
  4146  0CEC  00F0               	movwf	I2C_Master_Write@d
  4147  0CED  3000               	movlw	0
  4148  0CEE  00F1               	movwf	I2C_Master_Write@d+1
  4149  0CEF  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4150                           
  4151                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  4152  0CF4  0878               	movf	BMP280_Read8@reg_addr,w
  4153  0CF5  00F6               	movwf	??_BMP280_Read8
  4154  0CF6  01F7               	clrf	??_BMP280_Read8+1
  4155  0CF7  0876               	movf	??_BMP280_Read8,w
  4156  0CF8  00F0               	movwf	I2C_Master_Write@d
  4157  0CF9  0877               	movf	??_BMP280_Read8+1,w
  4158  0CFA  00F1               	movwf	I2C_Master_Write@d+1
  4159  0CFB  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4160                           
  4161                           ;BMP280.c: 112:   I2C_Master_Start();
  4162  0D00  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4163                           
  4164                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  4165  0D05  30EF               	movlw	239
  4166  0D06  00F0               	movwf	I2C_Master_Write@d
  4167  0D07  3000               	movlw	0
  4168  0D08  00F1               	movwf	I2C_Master_Write@d+1
  4169  0D09  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4170                           
  4171                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  4172  0D0E  3000               	movlw	0
  4173  0D0F  00F0               	movwf	I2C_Master_Read@a
  4174  0D10  00F1               	movwf	I2C_Master_Read@a+1
  4175  0D11  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4176  0D16  0870               	movf	?_I2C_Master_Read,w
  4177  0D17  00F6               	movwf	??_BMP280_Read8
  4178  0D18  0876               	movf	??_BMP280_Read8,w
  4179  0D19  00F9               	movwf	BMP280_Read8@ret
  4180                           
  4181                           ;BMP280.c: 115:   I2C_Master_Stop();
  4182  0D1A  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4183  0D1F                     l1162:
  4184                           
  4185                           ;BMP280.c: 117:   return ret;
  4186  0D1F  0879               	movf	BMP280_Read8@ret,w
  4187  0D20                     l134:
  4188  0D20  0008               	return
  4189  0D21                     __end_of_BMP280_Read8:
  4190                           
  4191                           	psect	text11
  4192  0DB1                     __ptext11:	
  4193 ;; *************** function _BMP280_Read16 *****************
  4194 ;; Defined at:
  4195 ;;		line 121 in file "BMP280.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  reg_addr        1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  reg_addr        1   10[COMMON] unsigned char 
  4200 ;;  ret             2   11[COMMON] struct .
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2    6[COMMON] unsigned int 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, pclath, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         2       0       0       0       0
  4211 ;;      Locals:         3       0       0       0       0
  4212 ;;      Temps:          2       0       0       0       0
  4213 ;;      Totals:         7       0       0       0       0
  4214 ;;Total ram usage:        7 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    2
  4217 ;; This function calls:
  4218 ;;		_I2C_Master_Read
  4219 ;;		_I2C_Master_Start
  4220 ;;		_I2C_Master_Stop
  4221 ;;		_I2C_Master_Write
  4222 ;; This function is called by:
  4223 ;;		_BMP280_begin
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _BMP280_Read16
  4229  0DB1                     _BMP280_Read16:
  4230                           
  4231                           ;incstack = 0
  4232                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  4233                           ;BMP280_Read16@reg_addr stored from wreg
  4234  0DB1  00FA               	movwf	BMP280_Read16@reg_addr
  4235  0DB2                     l1166:
  4236                           
  4237                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  4238  0DB2  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4239                           
  4240                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  4241  0DB7  30EE               	movlw	238
  4242  0DB8  00F0               	movwf	I2C_Master_Write@d
  4243  0DB9  3000               	movlw	0
  4244  0DBA  00F1               	movwf	I2C_Master_Write@d+1
  4245  0DBB  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4246                           
  4247                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  4248  0DC0  087A               	movf	BMP280_Read16@reg_addr,w
  4249  0DC1  00F8               	movwf	??_BMP280_Read16
  4250  0DC2  01F9               	clrf	??_BMP280_Read16+1
  4251  0DC3  0878               	movf	??_BMP280_Read16,w
  4252  0DC4  00F0               	movwf	I2C_Master_Write@d
  4253  0DC5  0879               	movf	??_BMP280_Read16+1,w
  4254  0DC6  00F1               	movwf	I2C_Master_Write@d+1
  4255  0DC7  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4256                           
  4257                           ;BMP280.c: 132:   I2C_Master_Start();
  4258  0DCC  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4259                           
  4260                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  4261  0DD1  30EF               	movlw	239
  4262  0DD2  00F0               	movwf	I2C_Master_Write@d
  4263  0DD3  3000               	movlw	0
  4264  0DD4  00F1               	movwf	I2C_Master_Write@d+1
  4265  0DD5  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4266                           
  4267                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  4268  0DDA  3001               	movlw	1
  4269  0DDB  00F0               	movwf	I2C_Master_Read@a
  4270  0DDC  3000               	movlw	0
  4271  0DDD  00F1               	movwf	I2C_Master_Read@a+1
  4272  0DDE  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4273  0DE3  0870               	movf	?_I2C_Master_Read,w
  4274  0DE4  00F8               	movwf	??_BMP280_Read16
  4275  0DE5  0878               	movf	??_BMP280_Read16,w
  4276  0DE6  00FB               	movwf	BMP280_Read16@ret
  4277                           
  4278                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  4279  0DE7  3000               	movlw	0
  4280  0DE8  00F0               	movwf	I2C_Master_Read@a
  4281  0DE9  00F1               	movwf	I2C_Master_Read@a+1
  4282  0DEA  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4283  0DEF  0870               	movf	?_I2C_Master_Read,w
  4284  0DF0  00F8               	movwf	??_BMP280_Read16
  4285  0DF1  0878               	movf	??_BMP280_Read16,w
  4286  0DF2  00FC               	movwf	BMP280_Read16@ret+1
  4287                           
  4288                           ;BMP280.c: 136:   I2C_Master_Stop();
  4289  0DF3  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4290  0DF8                     l1168:
  4291                           
  4292                           ;BMP280.c: 138:   return(ret.w);
  4293  0DF8  087C               	movf	BMP280_Read16@ret+1,w
  4294  0DF9  00F7               	movwf	?_BMP280_Read16+1
  4295  0DFA  087B               	movf	BMP280_Read16@ret,w
  4296  0DFB  00F6               	movwf	?_BMP280_Read16
  4297  0DFC                     l137:
  4298  0DFC  0008               	return
  4299  0DFD                     __end_of_BMP280_Read16:
  4300                           
  4301                           	psect	text12
  4302  0C7F                     __ptext12:	
  4303 ;; *************** function _I2C_Master_Read *****************
  4304 ;; Defined at:
  4305 ;;		line 74 in file "I2C.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  a               2    0[COMMON] unsigned short 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  temp            2    4[COMMON] unsigned short 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  2    0[COMMON] unsigned short 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         2       0       0       0       0
  4320 ;;      Locals:         2       0       0       0       0
  4321 ;;      Temps:          2       0       0       0       0
  4322 ;;      Totals:         6       0       0       0       0
  4323 ;;Total ram usage:        6 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    1
  4326 ;; This function calls:
  4327 ;;		_I2C_Master_Wait
  4328 ;; This function is called by:
  4329 ;;		_BMP280_Read8
  4330 ;;		_BMP280_Read16
  4331 ;;		_BMP280_Update
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _I2C_Master_Read
  4337  0C7F                     _I2C_Master_Read:
  4338  0C7F                     l1106:	
  4339                           ;incstack = 0
  4340                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4341                           
  4342                           
  4343                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4344  0C7F  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4345  0C84                     l1108:
  4346                           
  4347                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4348  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  4349  0C85  1303               	bcf	3,6	;RP1=0, select bank1
  4350  0C86  1591               	bsf	17,3	;volatile
  4351                           
  4352                           ;I2C.c: 79:     I2C_Master_Wait();
  4353  0C87  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4354  0C8C                     l1110:
  4355                           
  4356                           ;I2C.c: 80:     temp = SSPBUF;
  4357  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0C8E  0813               	movf	19,w	;volatile
  4360  0C8F  00F2               	movwf	??_I2C_Master_Read
  4361  0C90  01F3               	clrf	??_I2C_Master_Read+1
  4362  0C91  0872               	movf	??_I2C_Master_Read,w
  4363  0C92  00F4               	movwf	I2C_Master_Read@temp
  4364  0C93  0873               	movf	??_I2C_Master_Read+1,w
  4365  0C94  00F5               	movwf	I2C_Master_Read@temp+1
  4366  0C95                     l1112:
  4367                           
  4368                           ;I2C.c: 81:     I2C_Master_Wait();
  4369  0C95  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4370  0C9A                     l1114:
  4371                           
  4372                           ;I2C.c: 82:     if(a == 1){
  4373  0C9A  0370               	decf	I2C_Master_Read@a,w
  4374  0C9B  0471               	iorwf	I2C_Master_Read@a+1,w
  4375  0C9C  1D03               	btfss	3,2
  4376  0C9D  2C9F               	goto	u661
  4377  0C9E  2CA0               	goto	u660
  4378  0C9F                     u661:
  4379  0C9F  2CA4               	goto	l105
  4380  0CA0                     u660:
  4381  0CA0                     l1116:
  4382                           
  4383                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4384  0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  4385  0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  4386  0CA2  1291               	bcf	17,5	;volatile
  4387                           
  4388                           ;I2C.c: 84:     }else{
  4389  0CA3  2CA7               	goto	l106
  4390  0CA4                     l105:
  4391                           
  4392                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4393  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  4394  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  4395  0CA6  1691               	bsf	17,5	;volatile
  4396  0CA7                     l106:	
  4397                           ;I2C.c: 86:     }
  4398                           
  4399                           
  4400                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4401  0CA7  1611               	bsf	17,4	;volatile
  4402  0CA8                     l1118:
  4403                           
  4404                           ;I2C.c: 88:     return temp;
  4405  0CA8  0875               	movf	I2C_Master_Read@temp+1,w
  4406  0CA9  00F1               	movwf	?_I2C_Master_Read+1
  4407  0CAA  0874               	movf	I2C_Master_Read@temp,w
  4408  0CAB  00F0               	movwf	?_I2C_Master_Read
  4409  0CAC                     l107:
  4410  0CAC  0008               	return
  4411  0CAD                     __end_of_I2C_Master_Read:
  4412                           
  4413                           	psect	text13
  4414  0D21                     __ptext13:	
  4415 ;; *************** function _BMP280_Configure *****************
  4416 ;; Defined at:
  4417 ;;		line 142 in file "BMP280.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  mode            1    wreg     enum E1307
  4420 ;;  T_sampling      1    6[COMMON] enum E1312
  4421 ;;  P_sampling      1    7[COMMON] enum E1312
  4422 ;;  filter          1    8[COMMON] enum E1320
  4423 ;;  standby         1    9[COMMON] enum E1327
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  mode            1    0[BANK0 ] enum E1307
  4426 ;;  _config         1    2[BANK0 ] unsigned char 
  4427 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, pclath, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4437 ;;      Params:         4       0       0       0       0
  4438 ;;      Locals:         0       3       0       0       0
  4439 ;;      Temps:          3       0       0       0       0
  4440 ;;      Totals:         7       3       0       0       0
  4441 ;;Total ram usage:       10 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    3
  4444 ;; This function calls:
  4445 ;;		_BMP280_Write
  4446 ;; This function is called by:
  4447 ;;		_BMP280_begin
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _BMP280_Configure
  4453  0D21                     _BMP280_Configure:
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4457                           ;BMP280_Configure@mode stored from wreg
  4458  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0D23  00A0               	movwf	BMP280_Configure@mode
  4461  0D24                     l1172:
  4462                           
  4463                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4464  0D24  0878               	movf	BMP280_Configure@filter,w
  4465  0D25  00FA               	movwf	??_BMP280_Configure
  4466  0D26  3002               	movlw	2
  4467  0D27                     u755:
  4468  0D27  1003               	clrc
  4469  0D28  0DFA               	rlf	??_BMP280_Configure,f
  4470  0D29  3EFF               	addlw	-1
  4471  0D2A  1D03               	skipz
  4472  0D2B  2D27               	goto	u755
  4473  0D2C  0879               	movf	BMP280_Configure@standby,w
  4474  0D2D  00FB               	movwf	??_BMP280_Configure+1
  4475  0D2E  3004               	movlw	4
  4476  0D2F                     u765:
  4477  0D2F  1003               	clrc
  4478  0D30  0DFB               	rlf	??_BMP280_Configure+1,f
  4479  0D31  3EFF               	addlw	-1
  4480  0D32  1D03               	skipz
  4481  0D33  2D2F               	goto	u765
  4482  0D34  1003               	clrc
  4483  0D35  0D7B               	rlf	??_BMP280_Configure+1,w
  4484  0D36  047A               	iorwf	??_BMP280_Configure,w
  4485  0D37  39FC               	andlw	252
  4486  0D38  00FC               	movwf	??_BMP280_Configure+2
  4487  0D39  087C               	movf	??_BMP280_Configure+2,w
  4488  0D3A  00A2               	movwf	BMP280_Configure@_config
  4489                           
  4490                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4491  0D3B  0877               	movf	BMP280_Configure@P_sampling,w
  4492  0D3C  00FA               	movwf	??_BMP280_Configure
  4493  0D3D  3002               	movlw	2
  4494  0D3E                     u775:
  4495  0D3E  1003               	clrc
  4496  0D3F  0DFA               	rlf	??_BMP280_Configure,f
  4497  0D40  3EFF               	addlw	-1
  4498  0D41  1D03               	skipz
  4499  0D42  2D3E               	goto	u775
  4500  0D43  0876               	movf	BMP280_Configure@T_sampling,w
  4501  0D44  00FB               	movwf	??_BMP280_Configure+1
  4502  0D45  3004               	movlw	4
  4503  0D46                     u785:
  4504  0D46  1003               	clrc
  4505  0D47  0DFB               	rlf	??_BMP280_Configure+1,f
  4506  0D48  3EFF               	addlw	-1
  4507  0D49  1D03               	skipz
  4508  0D4A  2D46               	goto	u785
  4509  0D4B  1003               	clrc
  4510  0D4C  0D7B               	rlf	??_BMP280_Configure+1,w
  4511  0D4D  047A               	iorwf	??_BMP280_Configure,w
  4512  0D4E  0420               	iorwf	BMP280_Configure@mode,w
  4513  0D4F  00FC               	movwf	??_BMP280_Configure+2
  4514  0D50  087C               	movf	??_BMP280_Configure+2,w
  4515  0D51  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4516  0D52                     l1174:
  4517                           
  4518                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  4519  0D52  0822               	movf	BMP280_Configure@_config,w
  4520  0D53  00FA               	movwf	??_BMP280_Configure
  4521  0D54  087A               	movf	??_BMP280_Configure,w
  4522  0D55  00F2               	movwf	BMP280_Write@_data
  4523  0D56  30F5               	movlw	245
  4524  0D57  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  4525  0D5C                     l1176:
  4526                           
  4527                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  4528  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0D5E  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4531  0D5F  00FA               	movwf	??_BMP280_Configure
  4532  0D60  087A               	movf	??_BMP280_Configure,w
  4533  0D61  00F2               	movwf	BMP280_Write@_data
  4534  0D62  30F4               	movlw	244
  4535  0D63  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  4536  0D68                     l140:
  4537  0D68  0008               	return
  4538  0D69                     __end_of_BMP280_Configure:
  4539                           
  4540                           	psect	text14
  4541  0C25                     __ptext14:	
  4542 ;; *************** function _BMP280_Write *****************
  4543 ;; Defined at:
  4544 ;;		line 95 in file "BMP280.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  reg_addr        1    wreg     unsigned char 
  4547 ;;  _data           1    2[COMMON] unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  reg_addr        1    5[COMMON] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         1       0       0       0       0
  4560 ;;      Locals:         1       0       0       0       0
  4561 ;;      Temps:          2       0       0       0       0
  4562 ;;      Totals:         4       0       0       0       0
  4563 ;;Total ram usage:        4 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    2
  4566 ;; This function calls:
  4567 ;;		_I2C_Master_Start
  4568 ;;		_I2C_Master_Stop
  4569 ;;		_I2C_Master_Write
  4570 ;; This function is called by:
  4571 ;;		_BMP280_Configure
  4572 ;;		_BMP280_begin
  4573 ;;		_BMP280_ForcedMeasurement
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _BMP280_Write
  4579  0C25                     _BMP280_Write:
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4583                           ;BMP280_Write@reg_addr stored from wreg
  4584  0C25  00F5               	movwf	BMP280_Write@reg_addr
  4585  0C26                     l1122:
  4586                           
  4587                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  4588  0C26  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4589                           
  4590                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  4591  0C2B  30EE               	movlw	238
  4592  0C2C  00F0               	movwf	I2C_Master_Write@d
  4593  0C2D  3000               	movlw	0
  4594  0C2E  00F1               	movwf	I2C_Master_Write@d+1
  4595  0C2F  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4596                           
  4597                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  4598  0C34  0875               	movf	BMP280_Write@reg_addr,w
  4599  0C35  00F3               	movwf	??_BMP280_Write
  4600  0C36  01F4               	clrf	??_BMP280_Write+1
  4601  0C37  0873               	movf	??_BMP280_Write,w
  4602  0C38  00F0               	movwf	I2C_Master_Write@d
  4603  0C39  0874               	movf	??_BMP280_Write+1,w
  4604  0C3A  00F1               	movwf	I2C_Master_Write@d+1
  4605  0C3B  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4606                           
  4607                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  4608  0C40  0872               	movf	BMP280_Write@_data,w
  4609  0C41  00F3               	movwf	??_BMP280_Write
  4610  0C42  01F4               	clrf	??_BMP280_Write+1
  4611  0C43  0873               	movf	??_BMP280_Write,w
  4612  0C44  00F0               	movwf	I2C_Master_Write@d
  4613  0C45  0874               	movf	??_BMP280_Write+1,w
  4614  0C46  00F1               	movwf	I2C_Master_Write@d+1
  4615  0C47  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4616                           
  4617                           ;BMP280.c: 101:   I2C_Master_Stop();
  4618  0C4C  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4619  0C51                     l131:
  4620  0C51  0008               	return
  4621  0C52                     __end_of_BMP280_Write:
  4622                           
  4623                           	psect	text15
  4624  0BFF                     __ptext15:	
  4625 ;; *************** function _I2C_Master_Write *****************
  4626 ;; Defined at:
  4627 ;;		line 65 in file "I2C.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  d               2    0[COMMON] unsigned int 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, pclath, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         2       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0
  4644 ;;      Totals:         2       0       0       0       0
  4645 ;;Total ram usage:        2 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    1
  4648 ;; This function calls:
  4649 ;;		_I2C_Master_Wait
  4650 ;; This function is called by:
  4651 ;;		_BMP280_Write
  4652 ;;		_BMP280_Read8
  4653 ;;		_BMP280_Read16
  4654 ;;		_BMP280_Update
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _I2C_Master_Write
  4660  0BFF                     _I2C_Master_Write:
  4661  0BFF                     l1102:	
  4662                           ;incstack = 0
  4663                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4664                           
  4665                           
  4666                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4667  0BFF  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4668  0C04                     l1104:
  4669                           
  4670                           ;I2C.c: 68:     SSPBUF = d;
  4671  0C04  0870               	movf	I2C_Master_Write@d,w
  4672  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0C07  0093               	movwf	19	;volatile
  4675  0C08                     l102:
  4676  0C08  0008               	return
  4677  0C09                     __end_of_I2C_Master_Write:
  4678                           
  4679                           	psect	text16
  4680  0BF6                     __ptext16:	
  4681 ;; *************** function _I2C_Master_Stop *****************
  4682 ;; Defined at:
  4683 ;;		line 55 in file "I2C.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4697 ;;      Params:         0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    1
  4704 ;; This function calls:
  4705 ;;		_I2C_Master_Wait
  4706 ;; This function is called by:
  4707 ;;		_BMP280_Write
  4708 ;;		_BMP280_Read8
  4709 ;;		_BMP280_Read16
  4710 ;;		_BMP280_Update
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _I2C_Master_Stop
  4716  0BF6                     _I2C_Master_Stop:
  4717  0BF6                     l1098:	
  4718                           ;incstack = 0
  4719                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4720                           
  4721                           
  4722                           ;I2C.c: 57:     I2C_Master_Wait();
  4723  0BF6  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4724  0BFB                     l1100:
  4725                           
  4726                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4727  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  4728  0BFC  1303               	bcf	3,6	;RP1=0, select bank1
  4729  0BFD  1511               	bsf	17,2	;volatile
  4730  0BFE                     l99:
  4731  0BFE  0008               	return
  4732  0BFF                     __end_of_I2C_Master_Stop:
  4733                           
  4734                           	psect	text17
  4735  0BED                     __ptext17:	
  4736 ;; *************** function _I2C_Master_Start *****************
  4737 ;; Defined at:
  4738 ;;		line 39 in file "I2C.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		_I2C_Master_Wait
  4761 ;; This function is called by:
  4762 ;;		_BMP280_Write
  4763 ;;		_BMP280_Read8
  4764 ;;		_BMP280_Read16
  4765 ;;		_BMP280_Update
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _I2C_Master_Start
  4771  0BED                     _I2C_Master_Start:
  4772  0BED                     l1094:	
  4773                           ;incstack = 0
  4774                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4775                           
  4776                           
  4777                           ;I2C.c: 41:     I2C_Master_Wait();
  4778  0BED  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4779  0BF2                     l1096:
  4780                           
  4781                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4782  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  4783  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  4784  0BF4  1411               	bsf	17,0	;volatile
  4785  0BF5                     l93:
  4786  0BF5  0008               	return
  4787  0BF6                     __end_of_I2C_Master_Start:
  4788                           
  4789                           	psect	text18
  4790  0009                     __ptext18:	
  4791 ;; *************** function _I2C_Master_Wait *****************
  4792 ;; Defined at:
  4793 ;;		line 32 in file "I2C.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4807 ;;      Params:         0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_I2C_Master_Start
  4817 ;;		_I2C_Master_Stop
  4818 ;;		_I2C_Master_Write
  4819 ;;		_I2C_Master_Read
  4820 ;;		_I2C_Master_RepeatedStart
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           
  4825                           ;psect for function _I2C_Master_Wait
  4826  0009                     _I2C_Master_Wait:
  4827  0009                     l1090:	
  4828                           ;incstack = 0
  4829                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4830                           
  4831  0009                     l87:	
  4832                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4833                           
  4834  0009  1683               	bsf	3,5	;RP0=1, select bank1
  4835  000A  1303               	bcf	3,6	;RP1=0, select bank1
  4836  000B  1914               	btfsc	20,2	;volatile
  4837  000C  280E               	goto	u641
  4838  000D  280F               	goto	u640
  4839  000E                     u641:
  4840  000E  2809               	goto	l87
  4841  000F                     u640:
  4842  000F                     l1092:
  4843  000F  0811               	movf	17,w	;volatile
  4844  0010  391F               	andlw	31
  4845  0011  1D03               	btfss	3,2
  4846  0012  2814               	goto	u651
  4847  0013  2815               	goto	u650
  4848  0014                     u651:
  4849  0014  2809               	goto	l87
  4850  0015                     u650:
  4851  0015                     l90:
  4852  0015  0008               	return
  4853  0016                     __end_of_I2C_Master_Wait:
  4854  007E                     btemp	set	126	;btemp
  4855  007E                     wtemp0	set	126
  4856                           
  4857                           	psect	config
  4858                           
  4859                           ;Config register CONFIG1 @ 0x2007
  4860                           ;	Oscillator Selection bits
  4861                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4862                           ;	Watchdog Timer Enable bit
  4863                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4864                           ;	Power-up Timer Enable bit
  4865                           ;	PWRTE = OFF, PWRT disabled
  4866                           ;	RE3/MCLR pin function select bit
  4867                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4868                           ;	Code Protection bit
  4869                           ;	CP = OFF, Program memory code protection is disabled
  4870                           ;	Data Code Protection bit
  4871                           ;	CPD = OFF, Data memory code protection is disabled
  4872                           ;	Brown Out Reset Selection bits
  4873                           ;	BOREN = ON, BOR enabled
  4874                           ;	Internal External Switchover bit
  4875                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4876                           ;	Fail-Safe Clock Monitor Enabled bit
  4877                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4878                           ;	Low Voltage Programming Enable bit
  4879                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4880                           ;	In-Circuit Debugger Mode bit
  4881                           ;	DEBUG = 0x1, unprogrammed default
  4882  2007                     	org	8199
  4883  2007  23F4               	dw	9204
  4884                           
  4885                           ;Config register CONFIG2 @ 0x2008
  4886                           ;	Brown-out Reset Selection bit
  4887                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4888                           ;	Flash Program Memory Self Write Enable bits
  4889                           ;	WRT = OFF, Write protection off
  4890  2008                     	org	8200
  4891  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      78
    BANK1            80      0      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23235
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             14 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             14 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     5     5      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             13 COMMON     1     1      0
                                              3 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      89       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      89      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 21:44:21 2021

               _BMP280_Configure 0D21                               l46 0C6E                               l55 0C24  
                             l47 0C6E                               l90 0015                               l84 0CE4  
                             l93 0BF5                               l87 0009                               l99 0BFE  
                             fsr 0004                              l102 0C08                              l105 0CA4  
                            l106 0CA7                              l131 0C51                              l107 0CAC  
                            l140 0D68                              l134 0D20                              l310 0DB0  
                            l144 0FFF                              l160 02C4                              l137 0DFC  
                            l332 0E62                              l164 07EA                              l157 0F19  
                            l166 067C                              l361 002A                              l371 00B2  
                            _GIE 005F          BMP280_Configure@_config 0022                              u710 0E3C  
                            u711 0E3B                              u640 000F                              u800 0F08  
                            u641 000E                              u705 0E23                              u650 0015  
                            u730 0E5A                              u810 0D77                              u651 0014  
                            u731 0E59                              u715 0E38                              u811 0D76  
                            u660 0CA0                              u900 0061                              u740 0CC4  
                            u661 0C9F                              u901 0060                              u725 0E4C  
                            u821 0D80                              u805 0F03                              u670 0E0D  
                            u822 0D87                              u671 0E0C                              u823 0D8E  
                            u920 007C                              u921 007B                              u745 0CBF  
                            u690 0E21                              u850 0DA8                              u755 0D27  
                            u915 0063                              u691 0E20                              u851 0DA7  
                            u835 0D90                              u940 009A                              u860 001D  
                            u765 0D2F                              u941 0099                              u925 0078  
                            u861 001C                              u685 0E12                              u845 0D98  
                            u950 009F                              u870 002E                              u790 0EBE  
                            u775 0D3E                              u951 009E                              u935 008C  
                            u871 002D                              u960 0F26                              u880 004D  
                            u785 0D46                              u961 0F25                              u881 004C  
                            u970 0F51                              u971 0F50                              u795 0EB9  
                            u980 00CF                              u895 0052                              u991 00F8  
                            u992 00F9                              u993 00FE                              u985 00CA  
                            u994 00FF                              u995 0104                              u996 0105  
                            fsr0 0004                              indf 0000     __size_of_BMP280_readPressure 0526  
         BMP280_begin@P_sampling 0024                             l1100 0BFB                             l1102 0BFF  
                           l1110 0C8C                             l1104 0C04                             l1112 0C95  
                           l1200 0EDC                             l1122 0C26                             l1114 0C9A  
                           l1106 0C7F                             l1130 0E1D                             l1210 0D71  
                           l1202 0EE9                             l1116 0CA0                             l1108 0C84  
                           l1140 0E4B                             l1132 0E21                             l1124 0DFD  
                           l1212 0D77                             l1300 05A2                             l1204 0EF5  
                           l1118 0CA8                             l1230 0039                             l1222 0016  
                           l1142 0E54                             l1134 0E2A                             l1126 0E0D  
                           l1214 0D8E                             l1302 0623                             l1206 0EFA  
                           l1150 0CB1                             l1160 0CE6                             l1240 005D  
                           l1232 003D                             l1224 0019                             l1136 0E3C  
                           l1128 0E10                             l1144 0E5A                             l1216 0D97  
                           l1208 0D69                             l1304 0637                             l1152 0CB4  
                           l1312 0C52                             l1090 0009                             l1162 0D1F  
                           l1250 008B                             l1242 0061                             l1234 0045  
                           l1226 001D                             l1138 0E4A                             l1218 0DA8  
                           l1306 065A                             l1154 0CE1                             l1314 0C6D  
                           l1092 000F                             l1172 0D24                             l1252 0094  
                           l1244 006A                             l1236 004D                             l1228 002E  
                           l1308 07DC                             l1180 0E64                             l1156 0CE2  
                           l1148 0CAD                             l1316 0C6F                             l1094 0BED  
                           l1174 0D52                             l1166 0DB2                             l1246 007C  
                           l1238 0050                             l1254 009A                             l1190 0E89  
                           l1182 0E69                             l1158 0CE3                             l1262 0C09  
                           l1096 0BF2                             l1176 0D5C                             l1168 0DF8  
                           l1280 0F51                             l1272 0F2B                             l1256 009F  
                           l1248 008A                             l1192 0E96                             l1184 0E72  
                           l1264 0C17                             l1098 0BF6                             l1282 0FF9  
                           l1274 0F37                             l1266 0F1B                             l1258 00AA  
                           l1194 0EA3                             l1186 0E7B                             l1178 0E63  
                           l1290 026E                             l1268 0F26                             l1196 0EB0  
                           l1188 0E80                             l1278 0F46                             l1294 02C8  
                           l1198 0ECF                             l1286 00B6                             l1296 0599  
                           l1288 024B                             u1001 0180                             u1002 0181  
                           u1011 01C9                             u1003 0186                             u1100 05A1  
                           u1020 029C                             u1012 01CA                             u1004 0187  
                           u1101 05A0                             u1021 029D                             u1013 01CF  
                           u1005 018C                             u1030 02EE                             u1022 02A2  
                           u1014 01D0                             u1006 018D                             u1111 05E5  
                           u1031 02EF                             u1023 02A3                             u1015 01D5  
                           u1120 05F9                             u1112 05E6                             u1040 03C3  
                           u1032 02F4                             u1016 01D6                             u1200 0C6D  
                           u1121 05FA                             u1113 05EB                             u1033 02F5  
                           u1201 0C6C                             u1130 0637                             u1122 05FF  
                           u1114 05EC                             u1050 03CD                             u1131 0636  
                           u1123 0600                             u1115 05F1                             u1051 03CE  
                           u1140 068A                             u1116 05F2                             u1060 03F4  
                           u1052 03D3                             u1133 0633                             u1053 03D4  
                           u1045 03BE                             u1150 06A3                             u1070 0415  
                           u1071 0416                             u1160 06C3                             u1080 0511  
                           u1072 041B                             u1145 0685                             u1081 0512  
                           u1073 041C                             u1065 03EF                             u1170 0723  
                           u1090 055A                             u1082 0517                             u1155 069E  
                           u1091 055B                             u1083 0518                             u1180 078D  
                           u1092 0560                             u1237 0F3F                             u1181 078E  
                           u1165 06BE                             u1093 0561                             u1190 079F  
                           u1182 0793                             u1191 07A0                             u1183 0794  
                           u1175 071E                             u1192 07A5                             u1193 07A6  
                           _PEIE 005E                             _TXIF 0064          BMP280_Configure@standby 0079  
                           _main 0C52                             btemp 007E                             start 0000  
__size_of_BMP280_readTemperature 0212           BMP280_begin@T_sampling 0023            __size_of_BMP280_Read8 003C  
               ?_I2C_Master_Init 0020                 ?_I2C_Master_Read 0070                 ?_I2C_Master_Wait 0070  
          __size_of_BMP280_Write 002D                 ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00E6  
                __end_of___aldiv 00B3                            ?_main 0070                            _ANSEL 0188  
                __end_of___lldiv 0E63                            _RCREG 001A                  BMP280_Read8@ret 0079  
    _BMP280_readTemperature$1176 004B      _BMP280_readTemperature$1177 0046                            _SPBRG 0099  
                          _PORTB 0006                            _PORTD 0008                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _SSPIE 0463  
                          _TRISE 0089                            _SSPIF 0063                            _TXREG 0019  
            ___lmul@multiplicand 002A                            _adc_P 00B1                            _adc_T 005F  
                          _setup 0C09                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0CE5                     _BMP280_Write 0C25                     _BMP280_calib 00B5  
                   _BMP280_begin 0F1A                  __initialization 07EB                     __end_of_main 0C7F  
         __size_of_BMP280_Read16 004C                           ??_main 007E           __size_of_BMP280_Update 00B7  
         _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0070                ?_I2C_Master_Write 0070  
               BMP280_Read16@ret 007B               ??_I2C_Master_Start 0070               ??_I2C_Master_Write 0072  
                         ?_setup 0070                           _ANSELH 0189                           _SPBRGH 009A  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPCON 0014                           _SSPBUF 0013                           ___lmul 0D69  
                      ??___aldiv 0078                        ??___lldiv 0078                           _buffer 00A0  
                         _t_fine 005B       BMP280_Configure@P_sampling 0077         __end_of_BMP280_Configure 0D69  
                  _BMP280_Read16 0DB1          __end_of__initialization 07FC       BMP280_Configure@T_sampling 0076  
                  _BMP280_Update 0E63                   __pcstackCOMMON 0070              _BMP280_readPressure 02C5  
                  __end_of_setup 0C25                 BMP280_Update@ret 007A             ?_BMP280_readPressure 0070  
                        ??_setup 007E                       __pbssBANK0 005B                       __pbssBANK1 00A0  
                 ?_BMP280_Read16 0076                   ?_BMP280_Update 0070          BMP280_readPressure@var1 0057  
        BMP280_readPressure@var2 004F          BMP280_readPressure@pres 004A                       __pmaintext 0C52  
                        ?___lmul 0026                   ___lmul@product 007A                 BMP280_begin@mode 007D  
          ??_BMP280_readPressure 002E                          _SSPCON2 0091                          _SSPSTAT 0094  
     BMP280_Configure@_ctrl_meas 0021             BMP280_Write@reg_addr 0075                          ___aldiv 0016  
                __size_of___lmul 0048                          ___lldiv 0DFD          ?_BMP280_readTemperature 0070  
                        __ptext1 0C09                          __ptext2 0CAD                          __ptext3 00B3  
                        __ptext4 0E63                          __ptext5 02C5                          __ptext6 0D69  
                        __ptext7 0DFD                          __ptext8 0016                          __ptext9 0F1A  
               ___aldiv@dividend 0074         __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E  
       __size_of_I2C_Master_Wait 000D         __size_of_I2C_Master_Stop 0009                          _presmas 0065  
                        _presion 0063                  ??_BMP280_Read16 0078                          clrloop0 0BE6  
           end_of_initialization 07FC                  ??_BMP280_Update 0076            BMP280_Read16@reg_addr 007A  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D                        _RCSTAbits 0018  
               ___aldiv@quotient 0022                 I2C_Master_Init@c 0020                 I2C_Master_Read@a 0070  
 __end_of_BMP280_readTemperature 02C5                        _PORTBbits 0006                        _TRISCbits 0087  
              ?_BMP280_Configure 0076               ??_BMP280_Configure 007A           BMP280_Configure@filter 0078  
                      _TXSTAbits 0098                   __end_of___lmul 0DB1                      _BAUDCTLbits 0187  
            start_initialization 07EB                ??_I2C_Master_Init 0024                ??_I2C_Master_Read 0072  
              ??_I2C_Master_Wait 0070                ??_I2C_Master_Stop 0070                         ??___lmul 0079  
           BMP280_Configure@mode 0020                        ___latbits 0002                    __pcstackBANK0 0020  
                  ?_BMP280_Read8 0070                 _I2C_Master_Start 0BED                 _I2C_Master_Write 0BFF  
                  ?_BMP280_Write 0072                    ?_BMP280_begin 0023             BMP280_readPressure@p 0053  
              BMP280_Write@_data 0072                         ?___aldiv 0070                         ?___lldiv 0070  
    __end_of_BMP280_readPressure 07EB                   __size_of_setup 001C                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                   ??_BMP280_Read8 0076                        clear_ram0 0BE5  
                 ??_BMP280_Write 0073                         _PIE1bits 008C                   ??_BMP280_begin 0027  
                       _PIR1bits 000C         _BMP280_readPressure$1180 0042         _BMP280_readPressure$1181 0046  
       _BMP280_readPressure$1178 004B         _BMP280_readPressure$1179 003E              I2C_Master_Read@temp 0074  
              ___lmul@multiplier 0026            __end_of_BMP280_Read16 0DFD            __end_of_BMP280_Update 0F1A  
      __size_of_BMP280_Configure 0048                 __size_of___aldiv 009D                 __size_of___lldiv 0066  
                _I2C_Master_Init 0CAD                  _I2C_Master_Read 0C7F                  _I2C_Master_Wait 0009  
                _I2C_Master_Stop 0BF6                         __ptext10 0CE5                         __ptext11 0DB1  
                       __ptext12 0C7F                         __ptext13 0D21                         __ptext14 0C25  
                       __ptext15 0BFF                         __ptext16 0BF6                         __ptext17 0BED  
                       __ptext18 0009       BMP280_readTemperature@var1 003E       BMP280_readTemperature@var2 0042  
     BMP280_readTemperature@temp 004A                    __size_of_main 002D                         _pressure 0066  
           __end_of_BMP280_Read8 0D21         __end_of_I2C_Master_Start 0BF6         __end_of_I2C_Master_Write 0C09  
           __end_of_BMP280_Write 0C52             __end_of_BMP280_begin 1000             BMP280_Read8@reg_addr 0078  
               ___lldiv@dividend 0074              BMP280_begin@standby 0026         ??_BMP280_readTemperature 002E  
        __end_of_I2C_Master_Init 0CE5          __end_of_I2C_Master_Read 0CAD          __end_of_I2C_Master_Wait 0016  
        __end_of_I2C_Master_Stop 0BFF                      _temperature 006A                 ___lldiv@quotient 0079  
              I2C_Master_Write@d 0070                     ___aldiv@sign 0021                      _SSPCON2bits 0091  
