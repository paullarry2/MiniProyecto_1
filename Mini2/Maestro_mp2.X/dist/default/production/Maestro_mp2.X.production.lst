

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 11:18:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  0008                     _PORTD	set	8
   379  0006                     _PORTB	set	6
   380  0063                     _SSPIF	set	99
   381  005E                     _PEIE	set	94
   382  005F                     _GIE	set	95
   383  0091                     _SSPCON2bits	set	145
   384  0087                     _TRISCbits	set	135
   385  0094                     _SSPSTAT	set	148
   386  0093                     _SSPADD	set	147
   387  0091                     _SSPCON2	set	145
   388  0088                     _TRISD	set	136
   389  0089                     _TRISE	set	137
   390  0086                     _TRISB	set	134
   391  0087                     _TRISC	set	135
   392  0463                     _SSPIE	set	1123
   393  043C                     _TRISC4	set	1084
   394  043B                     _TRISC3	set	1083
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	cinit
   399  07EB                     start_initialization:	
   400                           ; #config settings
   401                           
   402  07EB                     __initialization:
   403                           
   404                           ; Clear objects allocated to BANK0
   405  07EB  1383               	bcf	3,7	;select IRP bank0
   406  07EC  305B               	movlw	low __pbssBANK0
   407  07ED  0084               	movwf	4
   408  07EE  3070               	movlw	low (__pbssBANK0+21)
   409  07EF  120A  118A  2003  120A  118A  	fcall	clear_ram0
   410                           
   411                           ; Clear objects allocated to BANK1
   412  07F4  30A0               	movlw	low __pbssBANK1
   413  07F5  0084               	movwf	4
   414  07F6  30C9               	movlw	low (__pbssBANK1+41)
   415  07F7  120A  118A  2003  120A  118A  	fcall	clear_ram0
   416  07FC                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  07FC                     __end_of__initialization:
   420  07FC  0183               	clrf	3
   421  07FD  120A  158A  2F14   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK0
   424  005B                     __pbssBANK0:
   425  005B                     _t_fine:
   426  005B                     	ds	4
   427  005F                     _adc_P:
   428  005F                     	ds	4
   429  0063                     _adc_T:
   430  0063                     	ds	4
   431  0067                     _temperature:
   432  0067                     	ds	4
   433  006B                     _presmas:
   434  006B                     	ds	1
   435  006C                     _pressure:
   436  006C                     	ds	4
   437                           
   438                           	psect	bssBANK1
   439  00A0                     __pbssBANK1:
   440  00A0                     _buffer:
   441  00A0                     	ds	17
   442  00B1                     _BMP280_calib:
   443  00B1                     	ds	24
   444                           
   445                           	psect	clrtext
   446  0003                     clear_ram0:	
   447                           ;	Called with FSR containing the base address, and
   448                           ;	W with the last address+1
   449                           
   450  0003  0064               	clrwdt	;clear the watchdog before getting into this loop
   451  0004                     clrloop0:
   452  0004  0180               	clrf	0	;clear RAM location pointed to by FSR
   453  0005  0A84               	incf	4,f	;increment pointer
   454  0006  0604               	xorwf	4,w	;XOR with final address
   455  0007  1903               	btfsc	3,2	;have we reached the end yet?
   456  0008  3400               	retlw	0	;all done for this memory range, return
   457  0009  0604               	xorwf	4,w	;XOR again to restore value
   458  000A  2804               	goto	clrloop0	;do the next byte
   459                           
   460                           	psect	cstackCOMMON
   461  0070                     __pcstackCOMMON:
   462  0070                     ?_setup:
   463  0070                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_I2C_Master_Wait:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_I2C_Master_Wait:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_I2C_Master_Start:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_I2C_Master_Start:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Master_Stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_I2C_Master_Stop:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_I2C_Master_Write:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_BMP280_Read8:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_BMP280_readPressure:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_I2C_Master_Read:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     ?___lldiv:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0070                     ?___aldiv:	
   500                           ; 4 bytes @ 0x0
   501                           
   502  0070                     I2C_Master_Write@d:	
   503                           ; 4 bytes @ 0x0
   504                           
   505  0070                     I2C_Master_Read@a:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0070                     ___lldiv@divisor:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0070                     ___aldiv@divisor:	
   512                           ; 4 bytes @ 0x0
   513                           
   514                           
   515                           ; 4 bytes @ 0x0
   516  0070                     	ds	2
   517  0072                     ??_I2C_Master_Write:
   518  0072                     ??_I2C_Master_Read:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     ?_BMP280_Write:	
   522                           ; 1 bytes @ 0x2
   523                           
   524  0072                     BMP280_Write@_data:	
   525                           ; 1 bytes @ 0x2
   526                           
   527                           
   528                           ; 1 bytes @ 0x2
   529  0072                     	ds	1
   530  0073                     ??_BMP280_Write:
   531                           
   532                           ; 1 bytes @ 0x3
   533  0073                     	ds	1
   534  0074                     I2C_Master_Read@temp:
   535  0074                     ___lldiv@dividend:	
   536                           ; 2 bytes @ 0x4
   537                           
   538  0074                     ___aldiv@dividend:	
   539                           ; 4 bytes @ 0x4
   540                           
   541                           
   542                           ; 4 bytes @ 0x4
   543  0074                     	ds	1
   544  0075                     BMP280_Write@reg_addr:
   545                           
   546                           ; 1 bytes @ 0x5
   547  0075                     	ds	1
   548  0076                     ??_BMP280_Read8:
   549  0076                     ?_BMP280_Configure:	
   550                           ; 1 bytes @ 0x6
   551                           
   552  0076                     ?_BMP280_Read16:	
   553                           ; 1 bytes @ 0x6
   554                           
   555  0076                     BMP280_Configure@T_sampling:	
   556                           ; 2 bytes @ 0x6
   557                           
   558                           
   559                           ; 1 bytes @ 0x6
   560  0076                     	ds	1
   561  0077                     BMP280_Configure@P_sampling:
   562                           
   563                           ; 1 bytes @ 0x7
   564  0077                     	ds	1
   565  0078                     ??_BMP280_Read16:
   566  0078                     ??___lldiv:	
   567                           ; 1 bytes @ 0x8
   568                           
   569  0078                     ??___aldiv:	
   570                           ; 1 bytes @ 0x8
   571                           
   572  0078                     BMP280_Read8@reg_addr:	
   573                           ; 1 bytes @ 0x8
   574                           
   575  0078                     BMP280_Configure@filter:	
   576                           ; 1 bytes @ 0x8
   577                           
   578                           
   579                           ; 1 bytes @ 0x8
   580  0078                     	ds	1
   581  0079                     ??___lmul:
   582  0079                     BMP280_Read8@ret:	
   583                           ; 1 bytes @ 0x9
   584                           
   585  0079                     BMP280_Configure@standby:	
   586                           ; 1 bytes @ 0x9
   587                           
   588  0079                     ___lldiv@quotient:	
   589                           ; 1 bytes @ 0x9
   590                           
   591                           
   592                           ; 4 bytes @ 0x9
   593  0079                     	ds	1
   594  007A                     ??_BMP280_Configure:
   595  007A                     BMP280_Read16@reg_addr:	
   596                           ; 1 bytes @ 0xA
   597                           
   598  007A                     ___lmul@product:	
   599                           ; 1 bytes @ 0xA
   600                           
   601                           
   602                           ; 4 bytes @ 0xA
   603  007A                     	ds	1
   604  007B                     BMP280_Read16@ret:
   605                           
   606                           ; 2 bytes @ 0xB
   607  007B                     	ds	2
   608  007D                     BMP280_begin@mode:
   609  007D                     ___lldiv@counter:	
   610                           ; 1 bytes @ 0xD
   611                           
   612                           
   613                           ; 1 bytes @ 0xD
   614  007D                     	ds	1
   615  007E                     ??_setup:
   616  007E                     ??_main:	
   617                           ; 1 bytes @ 0xE
   618                           
   619                           
   620                           	psect	cstackBANK0
   621  0020                     __pcstackBANK0:	
   622                           ; 1 bytes @ 0xE
   623                           
   624  0020                     ?_I2C_Master_Init:
   625  0020                     BMP280_Configure@mode:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ___aldiv@counter:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0020                     I2C_Master_Init@c:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 4 bytes @ 0x0
   636  0020                     	ds	1
   637  0021                     BMP280_Configure@_ctrl_meas:
   638  0021                     ___aldiv@sign:	
   639                           ; 1 bytes @ 0x1
   640                           
   641                           
   642                           ; 1 bytes @ 0x1
   643  0021                     	ds	1
   644  0022                     BMP280_Configure@_config:
   645  0022                     ___aldiv@quotient:	
   646                           ; 1 bytes @ 0x2
   647                           
   648                           
   649                           ; 4 bytes @ 0x2
   650  0022                     	ds	1
   651  0023                     ?_BMP280_begin:
   652  0023                     BMP280_begin@T_sampling:	
   653                           ; 2 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657  0023                     	ds	1
   658  0024                     ??_I2C_Master_Init:
   659  0024                     BMP280_begin@P_sampling:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 1 bytes @ 0x4
   664  0024                     	ds	1
   665  0025                     BMP280_begin@filter:
   666                           
   667                           ; 1 bytes @ 0x5
   668  0025                     	ds	1
   669  0026                     ?___lmul:
   670  0026                     BMP280_begin@standby:	
   671                           ; 4 bytes @ 0x6
   672                           
   673  0026                     ___lmul@multiplier:	
   674                           ; 1 bytes @ 0x6
   675                           
   676                           
   677                           ; 4 bytes @ 0x6
   678  0026                     	ds	1
   679  0027                     ??_BMP280_begin:
   680                           
   681                           ; 1 bytes @ 0x7
   682  0027                     	ds	3
   683  002A                     ___lmul@multiplicand:
   684                           
   685                           ; 4 bytes @ 0xA
   686  002A                     	ds	4
   687  002E                     ??_BMP280_readPressure:
   688                           
   689                           ; 1 bytes @ 0xE
   690  002E                     	ds	16
   691  003E                     _BMP280_readPressure$935:
   692                           
   693                           ; 4 bytes @ 0x1E
   694  003E                     	ds	4
   695  0042                     _BMP280_readPressure$936:
   696                           
   697                           ; 4 bytes @ 0x22
   698  0042                     	ds	4
   699  0046                     _BMP280_readPressure$937:
   700                           
   701                           ; 4 bytes @ 0x26
   702  0046                     	ds	4
   703  004A                     BMP280_readPressure@pres:
   704                           
   705                           ; 1 bytes @ 0x2A
   706  004A                     	ds	1
   707  004B                     _BMP280_readPressure$934:
   708                           
   709                           ; 4 bytes @ 0x2B
   710  004B                     	ds	4
   711  004F                     BMP280_readPressure@var2:
   712                           
   713                           ; 4 bytes @ 0x2F
   714  004F                     	ds	4
   715  0053                     BMP280_readPressure@p:
   716                           
   717                           ; 4 bytes @ 0x33
   718  0053                     	ds	4
   719  0057                     BMP280_readPressure@var1:
   720                           
   721                           ; 4 bytes @ 0x37
   722  0057                     	ds	4
   723                           
   724                           	psect	maintext
   725  0F14                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 121 in file "main_m.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : B00/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels required when called:    5
   751 ;; This function calls:
   752 ;;		_BMP280_begin
   753 ;;		_BMP280_readPressure
   754 ;;		_setup
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _main
   762  0F14                     _main:
   763  0F14                     l1210:	
   764                           ;incstack = 0
   765                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   766                           
   767                           
   768                           ;main_m.c: 122:     setup();
   769  0F14  120A  158A  26F8  120A  158A  	fcall	_setup
   770                           
   771                           ;main_m.c: 123:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAN
      +                          DBY_0_5);
   772  0F19  1283               	bcf	3,5	;RP0=0, select bank0
   773  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
   774  0F1B  01A3               	clrf	BMP280_begin@T_sampling
   775  0F1C  0AA3               	incf	BMP280_begin@T_sampling,f
   776  0F1D  01A4               	clrf	BMP280_begin@P_sampling
   777  0F1E  0AA4               	incf	BMP280_begin@P_sampling,f
   778  0F1F  01A5               	clrf	BMP280_begin@filter
   779  0F20  01A6               	clrf	BMP280_begin@standby
   780  0F21  3003               	movlw	3
   781  0F22  120A  118A  21F7  120A  158A  	fcall	_BMP280_begin
   782  0F27                     l1212:
   783                           
   784                           ;main_m.c: 126:         BMP280_readPressure(&pressure);
   785  0F27  306C               	movlw	(low (_pressure| 0))& (0+255)
   786  0F28  120A  118A  22D3  120A  158A  	fcall	_BMP280_readPressure
   787  0F2D  2F27               	goto	l1212
   788  0F2E  120A  118A  2800   	ljmp	start
   789  0F31                     __end_of_main:
   790                           
   791                           	psect	text1
   792  0EF8                     __ptext1:	
   793 ;; *************** function _setup *****************
   794 ;; Defined at:
   795 ;;		line 142 in file "main_m.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    2
   816 ;; This function calls:
   817 ;;		_I2C_Master_Init
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _setup
   825  0EF8                     _setup:
   826  0EF8                     l1142:	
   827                           ;incstack = 0
   828                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   829                           
   830                           
   831                           ;main_m.c: 143:     ANSEL = 0;
   832  0EF8  1683               	bsf	3,5	;RP0=1, select bank3
   833  0EF9  1703               	bsf	3,6	;RP1=1, select bank3
   834  0EFA  0188               	clrf	8	;volatile
   835                           
   836                           ;main_m.c: 144:     ANSELH = 0;
   837  0EFB  0189               	clrf	9	;volatile
   838                           
   839                           ;main_m.c: 145:     TRISC = 0;
   840  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
   841  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
   842  0EFE  0187               	clrf	7	;volatile
   843                           
   844                           ;main_m.c: 146:     TRISB = 0;
   845  0EFF  0186               	clrf	6	;volatile
   846                           
   847                           ;main_m.c: 147:     TRISE = 0;
   848  0F00  0189               	clrf	9	;volatile
   849                           
   850                           ;main_m.c: 148:     TRISD = 0;
   851  0F01  0188               	clrf	8	;volatile
   852                           
   853                           ;main_m.c: 149:     PORTB = 0;
   854  0F02  1283               	bcf	3,5	;RP0=0, select bank0
   855  0F03  1303               	bcf	3,6	;RP1=0, select bank0
   856  0F04  0186               	clrf	6	;volatile
   857                           
   858                           ;main_m.c: 150:     PORTD = 0;
   859  0F05  0188               	clrf	8	;volatile
   860  0F06                     l1144:
   861                           
   862                           ;main_m.c: 151:     I2C_Master_Init(100000);
   863  0F06  3000               	movlw	0
   864  0F07  00A3               	movwf	I2C_Master_Init@c+3
   865  0F08  3001               	movlw	1
   866  0F09  00A2               	movwf	I2C_Master_Init@c+2
   867  0F0A  3086               	movlw	134
   868  0F0B  00A1               	movwf	I2C_Master_Init@c+1
   869  0F0C  30A0               	movlw	160
   870  0F0D  00A0               	movwf	I2C_Master_Init@c
   871  0F0E  120A  158A  278C  120A  158A  	fcall	_I2C_Master_Init
   872  0F13                     l45:
   873  0F13  0008               	return
   874  0F14                     __end_of_setup:
   875                           
   876                           	psect	text2
   877  0F8C                     __ptext2:	
   878 ;; *************** function _I2C_Master_Init *****************
   879 ;; Defined at:
   880 ;;		line 16 in file "I2C.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  c               4    0[BANK0 ] const unsigned long 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       4       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       4       0       0       0
   897 ;;      Totals:         0       8       0       0       0
   898 ;;Total ram usage:        8 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    1
   901 ;; This function calls:
   902 ;;		___lldiv
   903 ;; This function is called by:
   904 ;;		_setup
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _I2C_Master_Init
   910  0F8C                     _I2C_Master_Init:
   911  0F8C                     l1058:	
   912                           ;incstack = 0
   913                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   914                           
   915                           
   916                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   917  0F8C  3028               	movlw	40
   918  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
   919  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
   920  0F8F  0094               	movwf	20	;volatile
   921  0F90                     l1060:
   922                           
   923                           ;I2C.c: 19:     SSPCON2 = 0;
   924  0F90  1683               	bsf	3,5	;RP0=1, select bank1
   925  0F91  1303               	bcf	3,6	;RP1=0, select bank1
   926  0F92  0191               	clrf	17	;volatile
   927  0F93                     l1062:
   928                           
   929                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   930  0F93  1283               	bcf	3,5	;RP0=0, select bank0
   931  0F94  1303               	bcf	3,6	;RP1=0, select bank0
   932  0F95  0820               	movf	I2C_Master_Init@c,w
   933  0F96  00A4               	movwf	??_I2C_Master_Init
   934  0F97  0821               	movf	I2C_Master_Init@c+1,w
   935  0F98  00A5               	movwf	??_I2C_Master_Init+1
   936  0F99  0822               	movf	I2C_Master_Init@c+2,w
   937  0F9A  00A6               	movwf	??_I2C_Master_Init+2
   938  0F9B  0823               	movf	I2C_Master_Init@c+3,w
   939  0F9C  00A7               	movwf	??_I2C_Master_Init+3
   940  0F9D  3002               	movlw	2
   941  0F9E                     u695:
   942  0F9E  1003               	clrc
   943  0F9F  0DA4               	rlf	??_I2C_Master_Init,f
   944  0FA0  0DA5               	rlf	??_I2C_Master_Init+1,f
   945  0FA1  0DA6               	rlf	??_I2C_Master_Init+2,f
   946  0FA2  0DA7               	rlf	??_I2C_Master_Init+3,f
   947  0FA3                     u690:
   948  0FA3  3EFF               	addlw	-1
   949  0FA4  1D03               	skipz
   950  0FA5  2F9E               	goto	u695
   951  0FA6  0827               	movf	??_I2C_Master_Init+3,w
   952  0FA7  00F3               	movwf	___lldiv@divisor+3
   953  0FA8  0826               	movf	??_I2C_Master_Init+2,w
   954  0FA9  00F2               	movwf	___lldiv@divisor+2
   955  0FAA  0825               	movf	??_I2C_Master_Init+1,w
   956  0FAB  00F1               	movwf	___lldiv@divisor+1
   957  0FAC  0824               	movf	??_I2C_Master_Init,w
   958  0FAD  00F0               	movwf	___lldiv@divisor
   959  0FAE  3000               	movlw	0
   960  0FAF  00F7               	movwf	___lldiv@dividend+3
   961  0FB0  307A               	movlw	122
   962  0FB1  00F6               	movwf	___lldiv@dividend+2
   963  0FB2  3012               	movlw	18
   964  0FB3  00F5               	movwf	___lldiv@dividend+1
   965  0FB4  3000               	movlw	0
   966  0FB5  00F4               	movwf	___lldiv@dividend
   967  0FB6  120A  118A  20F4  120A  158A  	fcall	___lldiv
   968  0FBB  0870               	movf	?___lldiv,w
   969  0FBC  3EFF               	addlw	255
   970  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
   971  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
   972  0FBF  0093               	movwf	19	;volatile
   973  0FC0                     l1064:
   974                           
   975                           ;I2C.c: 21:     SSPSTAT = 0;
   976  0FC0  0194               	clrf	20	;volatile
   977  0FC1                     l1066:
   978                           
   979                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
   980  0FC1  1587               	bsf	7,3	;volatile
   981  0FC2                     l1068:
   982                           
   983                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
   984  0FC2  1607               	bsf	7,4	;volatile
   985  0FC3                     l74:
   986  0FC3  0008               	return
   987  0FC4                     __end_of_I2C_Master_Init:
   988                           
   989                           	psect	text3
   990  02D3                     __ptext3:	
   991 ;; *************** function _BMP280_readPressure *****************
   992 ;; Defined at:
   993 ;;		line 265 in file "BMP280.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  pres            1    wreg     PTR unsigned long 
   996 ;;		 -> pressure(4), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  pres            1   42[BANK0 ] PTR unsigned long 
   999 ;;		 -> pressure(4), 
  1000 ;;  var1            4   55[BANK0 ] long 
  1001 ;;  p               4   51[BANK0 ] unsigned long 
  1002 ;;  var2            4   47[BANK0 ] long 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    6[None  ] int 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0      29       0       0       0
  1014 ;;      Temps:          0      16       0       0       0
  1015 ;;      Totals:         0      45       0       0       0
  1016 ;;Total ram usage:       45 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    1
  1019 ;; This function calls:
  1020 ;;		___aldiv
  1021 ;;		___lldiv
  1022 ;;		___lmul
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _BMP280_readPressure
  1030  02D3                     _BMP280_readPressure:
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1034                           ;BMP280_readPressure@pres stored from wreg
  1035  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1036  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1037  02D5  00CA               	movwf	BMP280_readPressure@pres
  1038  02D6                     l1162:
  1039                           
  1040                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1041  02D6  3000               	movlw	0
  1042  02D7  00AE               	movwf	??_BMP280_readPressure
  1043  02D8  3006               	movlw	6
  1044  02D9  00AF               	movwf	??_BMP280_readPressure+1
  1045  02DA  30FF               	movlw	255
  1046  02DB  00B0               	movwf	??_BMP280_readPressure+2
  1047  02DC  30FF               	movlw	255
  1048  02DD  00B1               	movwf	??_BMP280_readPressure+3
  1049  02DE  3000               	movlw	0
  1050  02DF  00F3               	movwf	___aldiv@divisor+3
  1051  02E0  3000               	movlw	0
  1052  02E1  00F2               	movwf	___aldiv@divisor+2
  1053  02E2  3000               	movlw	0
  1054  02E3  00F1               	movwf	___aldiv@divisor+1
  1055  02E4  3002               	movlw	2
  1056  02E5  00F0               	movwf	___aldiv@divisor
  1057  02E6  085E               	movf	_t_fine+3,w
  1058  02E7  00F7               	movwf	___aldiv@dividend+3
  1059  02E8  085D               	movf	_t_fine+2,w
  1060  02E9  00F6               	movwf	___aldiv@dividend+2
  1061  02EA  085C               	movf	_t_fine+1,w
  1062  02EB  00F5               	movwf	___aldiv@dividend+1
  1063  02EC  085B               	movf	_t_fine,w
  1064  02ED  00F4               	movwf	___aldiv@dividend
  1065  02EE  120A  118A  215A  120A  118A  	fcall	___aldiv
  1066  02F3  0870               	movf	?___aldiv,w
  1067  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1068  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1069  02F6  07AE               	addwf	??_BMP280_readPressure,f
  1070  02F7  0871               	movf	?___aldiv+1,w
  1071  02F8  1803               	skipnc
  1072  02F9  0F71               	incfsz	?___aldiv+1,w
  1073  02FA  2AFC               	goto	u910
  1074  02FB  2AFD               	goto	u911
  1075  02FC                     u910:
  1076  02FC  07AF               	addwf	??_BMP280_readPressure+1,f
  1077  02FD                     u911:
  1078  02FD  0872               	movf	?___aldiv+2,w
  1079  02FE  1803               	skipnc
  1080  02FF  0F72               	incfsz	?___aldiv+2,w
  1081  0300  2B02               	goto	u912
  1082  0301  2B03               	goto	u913
  1083  0302                     u912:
  1084  0302  07B0               	addwf	??_BMP280_readPressure+2,f
  1085  0303                     u913:
  1086  0303  0873               	movf	?___aldiv+3,w
  1087  0304  1803               	skipnc
  1088  0305  0A73               	incf	?___aldiv+3,w
  1089  0306  07B1               	addwf	??_BMP280_readPressure+3,f
  1090  0307  0831               	movf	??_BMP280_readPressure+3,w
  1091  0308  00DA               	movwf	BMP280_readPressure@var1+3
  1092  0309  0830               	movf	??_BMP280_readPressure+2,w
  1093  030A  00D9               	movwf	BMP280_readPressure@var1+2
  1094  030B  082F               	movf	??_BMP280_readPressure+1,w
  1095  030C  00D8               	movwf	BMP280_readPressure@var1+1
  1096  030D  082E               	movf	??_BMP280_readPressure,w
  1097  030E  00D7               	movwf	BMP280_readPressure@var1
  1098                           
  1099                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1100  030F  3000               	movlw	0
  1101  0310  00F3               	movwf	___aldiv@divisor+3
  1102  0311  3000               	movlw	0
  1103  0312  00F2               	movwf	___aldiv@divisor+2
  1104  0313  3000               	movlw	0
  1105  0314  00F1               	movwf	___aldiv@divisor+1
  1106  0315  3004               	movlw	4
  1107  0316  00F0               	movwf	___aldiv@divisor
  1108  0317  085A               	movf	BMP280_readPressure@var1+3,w
  1109  0318  00F7               	movwf	___aldiv@dividend+3
  1110  0319  0859               	movf	BMP280_readPressure@var1+2,w
  1111  031A  00F6               	movwf	___aldiv@dividend+2
  1112  031B  0858               	movf	BMP280_readPressure@var1+1,w
  1113  031C  00F5               	movwf	___aldiv@dividend+1
  1114  031D  0857               	movf	BMP280_readPressure@var1,w
  1115  031E  00F4               	movwf	___aldiv@dividend
  1116  031F  120A  118A  215A  120A  118A  	fcall	___aldiv
  1117  0324  0873               	movf	?___aldiv+3,w
  1118  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0327  00A9               	movwf	___lmul@multiplier+3
  1121  0328  0872               	movf	?___aldiv+2,w
  1122  0329  00A8               	movwf	___lmul@multiplier+2
  1123  032A  0871               	movf	?___aldiv+1,w
  1124  032B  00A7               	movwf	___lmul@multiplier+1
  1125  032C  0870               	movf	?___aldiv,w
  1126  032D  00A6               	movwf	___lmul@multiplier
  1127  032E  3000               	movlw	0
  1128  032F  00F3               	movwf	___aldiv@divisor+3
  1129  0330  3000               	movlw	0
  1130  0331  00F2               	movwf	___aldiv@divisor+2
  1131  0332  3000               	movlw	0
  1132  0333  00F1               	movwf	___aldiv@divisor+1
  1133  0334  3004               	movlw	4
  1134  0335  00F0               	movwf	___aldiv@divisor
  1135  0336  085A               	movf	BMP280_readPressure@var1+3,w
  1136  0337  00F7               	movwf	___aldiv@dividend+3
  1137  0338  0859               	movf	BMP280_readPressure@var1+2,w
  1138  0339  00F6               	movwf	___aldiv@dividend+2
  1139  033A  0858               	movf	BMP280_readPressure@var1+1,w
  1140  033B  00F5               	movwf	___aldiv@dividend+1
  1141  033C  0857               	movf	BMP280_readPressure@var1,w
  1142  033D  00F4               	movwf	___aldiv@dividend
  1143  033E  120A  118A  215A  120A  118A  	fcall	___aldiv
  1144  0343  0873               	movf	?___aldiv+3,w
  1145  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0346  00AD               	movwf	___lmul@multiplicand+3
  1148  0347  0872               	movf	?___aldiv+2,w
  1149  0348  00AC               	movwf	___lmul@multiplicand+2
  1150  0349  0871               	movf	?___aldiv+1,w
  1151  034A  00AB               	movwf	___lmul@multiplicand+1
  1152  034B  0870               	movf	?___aldiv,w
  1153  034C  00AA               	movwf	___lmul@multiplicand
  1154  034D  120A  118A  2060  120A  118A  	fcall	___lmul
  1155  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0354  0829               	movf	?___lmul+3,w
  1158  0355  00CE               	movwf	_BMP280_readPressure$934+3
  1159  0356  0828               	movf	?___lmul+2,w
  1160  0357  00CD               	movwf	_BMP280_readPressure$934+2
  1161  0358  0827               	movf	?___lmul+1,w
  1162  0359  00CC               	movwf	_BMP280_readPressure$934+1
  1163  035A  0826               	movf	?___lmul,w
  1164  035B  00CB               	movwf	_BMP280_readPressure$934
  1165                           
  1166                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1167  035C  3000               	movlw	0
  1168  035D  00F3               	movwf	___aldiv@divisor+3
  1169  035E  3000               	movlw	0
  1170  035F  00F2               	movwf	___aldiv@divisor+2
  1171  0360  3008               	movlw	8
  1172  0361  00F1               	movwf	___aldiv@divisor+1
  1173  0362  3000               	movlw	0
  1174  0363  00F0               	movwf	___aldiv@divisor
  1175  0364  084E               	movf	_BMP280_readPressure$934+3,w
  1176  0365  00F7               	movwf	___aldiv@dividend+3
  1177  0366  084D               	movf	_BMP280_readPressure$934+2,w
  1178  0367  00F6               	movwf	___aldiv@dividend+2
  1179  0368  084C               	movf	_BMP280_readPressure$934+1,w
  1180  0369  00F5               	movwf	___aldiv@dividend+1
  1181  036A  084B               	movf	_BMP280_readPressure$934,w
  1182  036B  00F4               	movwf	___aldiv@dividend
  1183  036C  120A  118A  215A  120A  118A  	fcall	___aldiv
  1184  0371  0873               	movf	?___aldiv+3,w
  1185  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0374  00A9               	movwf	___lmul@multiplier+3
  1188  0375  0872               	movf	?___aldiv+2,w
  1189  0376  00A8               	movwf	___lmul@multiplier+2
  1190  0377  0871               	movf	?___aldiv+1,w
  1191  0378  00A7               	movwf	___lmul@multiplier+1
  1192  0379  0870               	movf	?___aldiv,w
  1193  037A  00A6               	movwf	___lmul@multiplier
  1194  037B  1683               	bsf	3,5	;RP0=1, select bank1
  1195  037C  1303               	bcf	3,6	;RP1=0, select bank1
  1196  037D  0841               	movf	(_BMP280_calib^(0+128)+16),w
  1197  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1198  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0380  00AA               	movwf	___lmul@multiplicand
  1200  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0382  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0383  0842               	movf	((_BMP280_calib+1)^(0+128)+16),w
  1203  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0386  00AB               	movwf	___lmul@multiplicand+1
  1206  0387  3000               	movlw	0
  1207  0388  1BAB               	btfsc	___lmul@multiplicand+1,7
  1208  0389  30FF               	movlw	255
  1209  038A  00AC               	movwf	___lmul@multiplicand+2
  1210  038B  00AD               	movwf	___lmul@multiplicand+3
  1211  038C  120A  118A  2060  120A  118A  	fcall	___lmul
  1212  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0393  0829               	movf	?___lmul+3,w
  1215  0394  00D2               	movwf	BMP280_readPressure@var2+3
  1216  0395  0828               	movf	?___lmul+2,w
  1217  0396  00D1               	movwf	BMP280_readPressure@var2+2
  1218  0397  0827               	movf	?___lmul+1,w
  1219  0398  00D0               	movwf	BMP280_readPressure@var2+1
  1220  0399  0826               	movf	?___lmul,w
  1221  039A  00CF               	movwf	BMP280_readPressure@var2
  1222                           
  1223                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  1224  039B  084F               	movf	BMP280_readPressure@var2,w
  1225  039C  00AE               	movwf	??_BMP280_readPressure
  1226  039D  0850               	movf	BMP280_readPressure@var2+1,w
  1227  039E  00AF               	movwf	??_BMP280_readPressure+1
  1228  039F  0851               	movf	BMP280_readPressure@var2+2,w
  1229  03A0  00B0               	movwf	??_BMP280_readPressure+2
  1230  03A1  0852               	movf	BMP280_readPressure@var2+3,w
  1231  03A2  00B1               	movwf	??_BMP280_readPressure+3
  1232  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  1233  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  1234  03A5  083F               	movf	(_BMP280_calib^(0+128)+14),w
  1235  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1236  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1237  03A8  00A6               	movwf	___lmul@multiplier
  1238  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  1239  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  1240  03AB  0840               	movf	((_BMP280_calib+1)^(0+128)+14),w
  1241  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1242  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1243  03AE  00A7               	movwf	___lmul@multiplier+1
  1244  03AF  3000               	movlw	0
  1245  03B0  1BA7               	btfsc	___lmul@multiplier+1,7
  1246  03B1  30FF               	movlw	255
  1247  03B2  00A8               	movwf	___lmul@multiplier+2
  1248  03B3  00A9               	movwf	___lmul@multiplier+3
  1249  03B4  085A               	movf	BMP280_readPressure@var1+3,w
  1250  03B5  00AD               	movwf	___lmul@multiplicand+3
  1251  03B6  0859               	movf	BMP280_readPressure@var1+2,w
  1252  03B7  00AC               	movwf	___lmul@multiplicand+2
  1253  03B8  0858               	movf	BMP280_readPressure@var1+1,w
  1254  03B9  00AB               	movwf	___lmul@multiplicand+1
  1255  03BA  0857               	movf	BMP280_readPressure@var1,w
  1256  03BB  00AA               	movwf	___lmul@multiplicand
  1257  03BC  120A  118A  2060  120A  118A  	fcall	___lmul
  1258  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1259  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1260  03C3  0826               	movf	?___lmul,w
  1261  03C4  00B2               	movwf	??_BMP280_readPressure+4
  1262  03C5  0827               	movf	?___lmul+1,w
  1263  03C6  00B3               	movwf	??_BMP280_readPressure+5
  1264  03C7  0828               	movf	?___lmul+2,w
  1265  03C8  00B4               	movwf	??_BMP280_readPressure+6
  1266  03C9  0829               	movf	?___lmul+3,w
  1267  03CA  00B5               	movwf	??_BMP280_readPressure+7
  1268  03CB  3001               	movlw	1
  1269  03CC                     u925:
  1270  03CC  1003               	clrc
  1271  03CD  0DB2               	rlf	??_BMP280_readPressure+4,f
  1272  03CE  0DB3               	rlf	??_BMP280_readPressure+5,f
  1273  03CF  0DB4               	rlf	??_BMP280_readPressure+6,f
  1274  03D0  0DB5               	rlf	??_BMP280_readPressure+7,f
  1275  03D1                     u920:
  1276  03D1  3EFF               	addlw	-1
  1277  03D2  1D03               	skipz
  1278  03D3  2BCC               	goto	u925
  1279  03D4  0832               	movf	??_BMP280_readPressure+4,w
  1280  03D5  07AE               	addwf	??_BMP280_readPressure,f
  1281  03D6  0833               	movf	??_BMP280_readPressure+5,w
  1282  03D7  1803               	skipnc
  1283  03D8  0F33               	incfsz	??_BMP280_readPressure+5,w
  1284  03D9  2BDB               	goto	u930
  1285  03DA  2BDC               	goto	u931
  1286  03DB                     u930:
  1287  03DB  07AF               	addwf	??_BMP280_readPressure+1,f
  1288  03DC                     u931:
  1289  03DC  0834               	movf	??_BMP280_readPressure+6,w
  1290  03DD  1803               	skipnc
  1291  03DE  0F34               	incfsz	??_BMP280_readPressure+6,w
  1292  03DF  2BE1               	goto	u932
  1293  03E0  2BE2               	goto	u933
  1294  03E1                     u932:
  1295  03E1  07B0               	addwf	??_BMP280_readPressure+2,f
  1296  03E2                     u933:
  1297  03E2  0835               	movf	??_BMP280_readPressure+7,w
  1298  03E3  1803               	skipnc
  1299  03E4  0A35               	incf	??_BMP280_readPressure+7,w
  1300  03E5  07B1               	addwf	??_BMP280_readPressure+3,f
  1301  03E6  0831               	movf	??_BMP280_readPressure+3,w
  1302  03E7  00D2               	movwf	BMP280_readPressure@var2+3
  1303  03E8  0830               	movf	??_BMP280_readPressure+2,w
  1304  03E9  00D1               	movwf	BMP280_readPressure@var2+2
  1305  03EA  082F               	movf	??_BMP280_readPressure+1,w
  1306  03EB  00D0               	movwf	BMP280_readPressure@var2+1
  1307  03EC  082E               	movf	??_BMP280_readPressure,w
  1308  03ED  00CF               	movwf	BMP280_readPressure@var2
  1309                           
  1310                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  1311  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1312  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1313  03F0  083D               	movf	(_BMP280_calib^(0+128)+12),w
  1314  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1315  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1316  03F3  00AE               	movwf	??_BMP280_readPressure
  1317  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1318  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1319  03F6  083E               	movf	((_BMP280_calib+1)^(0+128)+12),w
  1320  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1321  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1322  03F9  00AF               	movwf	??_BMP280_readPressure+1
  1323  03FA  01B0               	clrf	??_BMP280_readPressure+2
  1324  03FB  01B1               	clrf	??_BMP280_readPressure+3
  1325  03FC  3010               	movlw	16
  1326  03FD                     u945:
  1327  03FD  1003               	clrc
  1328  03FE  0DAE               	rlf	??_BMP280_readPressure,f
  1329  03FF  0DAF               	rlf	??_BMP280_readPressure+1,f
  1330  0400  0DB0               	rlf	??_BMP280_readPressure+2,f
  1331  0401  0DB1               	rlf	??_BMP280_readPressure+3,f
  1332  0402                     u940:
  1333  0402  3EFF               	addlw	-1
  1334  0403  1D03               	skipz
  1335  0404  2BFD               	goto	u945
  1336  0405  3000               	movlw	0
  1337  0406  00F3               	movwf	___aldiv@divisor+3
  1338  0407  3000               	movlw	0
  1339  0408  00F2               	movwf	___aldiv@divisor+2
  1340  0409  3000               	movlw	0
  1341  040A  00F1               	movwf	___aldiv@divisor+1
  1342  040B  3004               	movlw	4
  1343  040C  00F0               	movwf	___aldiv@divisor
  1344  040D  0852               	movf	BMP280_readPressure@var2+3,w
  1345  040E  00F7               	movwf	___aldiv@dividend+3
  1346  040F  0851               	movf	BMP280_readPressure@var2+2,w
  1347  0410  00F6               	movwf	___aldiv@dividend+2
  1348  0411  0850               	movf	BMP280_readPressure@var2+1,w
  1349  0412  00F5               	movwf	___aldiv@dividend+1
  1350  0413  084F               	movf	BMP280_readPressure@var2,w
  1351  0414  00F4               	movwf	___aldiv@dividend
  1352  0415  120A  118A  215A  120A  118A  	fcall	___aldiv
  1353  041A  0870               	movf	?___aldiv,w
  1354  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1355  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1356  041D  07AE               	addwf	??_BMP280_readPressure,f
  1357  041E  0871               	movf	?___aldiv+1,w
  1358  041F  1803               	skipnc
  1359  0420  0F71               	incfsz	?___aldiv+1,w
  1360  0421  2C23               	goto	u950
  1361  0422  2C24               	goto	u951
  1362  0423                     u950:
  1363  0423  07AF               	addwf	??_BMP280_readPressure+1,f
  1364  0424                     u951:
  1365  0424  0872               	movf	?___aldiv+2,w
  1366  0425  1803               	skipnc
  1367  0426  0F72               	incfsz	?___aldiv+2,w
  1368  0427  2C29               	goto	u952
  1369  0428  2C2A               	goto	u953
  1370  0429                     u952:
  1371  0429  07B0               	addwf	??_BMP280_readPressure+2,f
  1372  042A                     u953:
  1373  042A  0873               	movf	?___aldiv+3,w
  1374  042B  1803               	skipnc
  1375  042C  0A73               	incf	?___aldiv+3,w
  1376  042D  07B1               	addwf	??_BMP280_readPressure+3,f
  1377  042E  0831               	movf	??_BMP280_readPressure+3,w
  1378  042F  00D2               	movwf	BMP280_readPressure@var2+3
  1379  0430  0830               	movf	??_BMP280_readPressure+2,w
  1380  0431  00D1               	movwf	BMP280_readPressure@var2+2
  1381  0432  082F               	movf	??_BMP280_readPressure+1,w
  1382  0433  00D0               	movwf	BMP280_readPressure@var2+1
  1383  0434  082E               	movf	??_BMP280_readPressure,w
  1384  0435  00CF               	movwf	BMP280_readPressure@var2
  1385                           
  1386                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1387  0436  3000               	movlw	0
  1388  0437  00F3               	movwf	___aldiv@divisor+3
  1389  0438  3000               	movlw	0
  1390  0439  00F2               	movwf	___aldiv@divisor+2
  1391  043A  3000               	movlw	0
  1392  043B  00F1               	movwf	___aldiv@divisor+1
  1393  043C  3004               	movlw	4
  1394  043D  00F0               	movwf	___aldiv@divisor
  1395  043E  085A               	movf	BMP280_readPressure@var1+3,w
  1396  043F  00F7               	movwf	___aldiv@dividend+3
  1397  0440  0859               	movf	BMP280_readPressure@var1+2,w
  1398  0441  00F6               	movwf	___aldiv@dividend+2
  1399  0442  0858               	movf	BMP280_readPressure@var1+1,w
  1400  0443  00F5               	movwf	___aldiv@dividend+1
  1401  0444  0857               	movf	BMP280_readPressure@var1,w
  1402  0445  00F4               	movwf	___aldiv@dividend
  1403  0446  120A  118A  215A  120A  118A  	fcall	___aldiv
  1404  044B  0873               	movf	?___aldiv+3,w
  1405  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1406  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1407  044E  00A9               	movwf	___lmul@multiplier+3
  1408  044F  0872               	movf	?___aldiv+2,w
  1409  0450  00A8               	movwf	___lmul@multiplier+2
  1410  0451  0871               	movf	?___aldiv+1,w
  1411  0452  00A7               	movwf	___lmul@multiplier+1
  1412  0453  0870               	movf	?___aldiv,w
  1413  0454  00A6               	movwf	___lmul@multiplier
  1414  0455  3000               	movlw	0
  1415  0456  00F3               	movwf	___aldiv@divisor+3
  1416  0457  3000               	movlw	0
  1417  0458  00F2               	movwf	___aldiv@divisor+2
  1418  0459  3000               	movlw	0
  1419  045A  00F1               	movwf	___aldiv@divisor+1
  1420  045B  3004               	movlw	4
  1421  045C  00F0               	movwf	___aldiv@divisor
  1422  045D  085A               	movf	BMP280_readPressure@var1+3,w
  1423  045E  00F7               	movwf	___aldiv@dividend+3
  1424  045F  0859               	movf	BMP280_readPressure@var1+2,w
  1425  0460  00F6               	movwf	___aldiv@dividend+2
  1426  0461  0858               	movf	BMP280_readPressure@var1+1,w
  1427  0462  00F5               	movwf	___aldiv@dividend+1
  1428  0463  0857               	movf	BMP280_readPressure@var1,w
  1429  0464  00F4               	movwf	___aldiv@dividend
  1430  0465  120A  118A  215A  120A  118A  	fcall	___aldiv
  1431  046A  0873               	movf	?___aldiv+3,w
  1432  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1433  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1434  046D  00AD               	movwf	___lmul@multiplicand+3
  1435  046E  0872               	movf	?___aldiv+2,w
  1436  046F  00AC               	movwf	___lmul@multiplicand+2
  1437  0470  0871               	movf	?___aldiv+1,w
  1438  0471  00AB               	movwf	___lmul@multiplicand+1
  1439  0472  0870               	movf	?___aldiv,w
  1440  0473  00AA               	movwf	___lmul@multiplicand
  1441  0474  120A  118A  2060  120A  118A  	fcall	___lmul
  1442  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1443  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1444  047B  0829               	movf	?___lmul+3,w
  1445  047C  00CE               	movwf	_BMP280_readPressure$934+3
  1446  047D  0828               	movf	?___lmul+2,w
  1447  047E  00CD               	movwf	_BMP280_readPressure$934+2
  1448  047F  0827               	movf	?___lmul+1,w
  1449  0480  00CC               	movwf	_BMP280_readPressure$934+1
  1450  0481  0826               	movf	?___lmul,w
  1451  0482  00CB               	movwf	_BMP280_readPressure$934
  1452                           
  1453                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1454  0483  1683               	bsf	3,5	;RP0=1, select bank1
  1455  0484  1303               	bcf	3,6	;RP1=0, select bank1
  1456  0485  083B               	movf	(_BMP280_calib^(0+128)+10),w
  1457  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0488  00A6               	movwf	___lmul@multiplier
  1460  0489  1683               	bsf	3,5	;RP0=1, select bank1
  1461  048A  1303               	bcf	3,6	;RP1=0, select bank1
  1462  048B  083C               	movf	((_BMP280_calib+1)^(0+128)+10),w
  1463  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1464  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1465  048E  00A7               	movwf	___lmul@multiplier+1
  1466  048F  3000               	movlw	0
  1467  0490  1BA7               	btfsc	___lmul@multiplier+1,7
  1468  0491  30FF               	movlw	255
  1469  0492  00A8               	movwf	___lmul@multiplier+2
  1470  0493  00A9               	movwf	___lmul@multiplier+3
  1471  0494  3000               	movlw	0
  1472  0495  00F3               	movwf	___aldiv@divisor+3
  1473  0496  3000               	movlw	0
  1474  0497  00F2               	movwf	___aldiv@divisor+2
  1475  0498  3020               	movlw	32
  1476  0499  00F1               	movwf	___aldiv@divisor+1
  1477  049A  3000               	movlw	0
  1478  049B  00F0               	movwf	___aldiv@divisor
  1479  049C  084E               	movf	_BMP280_readPressure$934+3,w
  1480  049D  00F7               	movwf	___aldiv@dividend+3
  1481  049E  084D               	movf	_BMP280_readPressure$934+2,w
  1482  049F  00F6               	movwf	___aldiv@dividend+2
  1483  04A0  084C               	movf	_BMP280_readPressure$934+1,w
  1484  04A1  00F5               	movwf	___aldiv@dividend+1
  1485  04A2  084B               	movf	_BMP280_readPressure$934,w
  1486  04A3  00F4               	movwf	___aldiv@dividend
  1487  04A4  120A  118A  215A  120A  118A  	fcall	___aldiv
  1488  04A9  0873               	movf	?___aldiv+3,w
  1489  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1490  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1491  04AC  00AD               	movwf	___lmul@multiplicand+3
  1492  04AD  0872               	movf	?___aldiv+2,w
  1493  04AE  00AC               	movwf	___lmul@multiplicand+2
  1494  04AF  0871               	movf	?___aldiv+1,w
  1495  04B0  00AB               	movwf	___lmul@multiplicand+1
  1496  04B1  0870               	movf	?___aldiv,w
  1497  04B2  00AA               	movwf	___lmul@multiplicand
  1498  04B3  120A  118A  2060  120A  118A  	fcall	___lmul
  1499  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1500  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1501  04BA  0829               	movf	?___lmul+3,w
  1502  04BB  00C1               	movwf	_BMP280_readPressure$935+3
  1503  04BC  0828               	movf	?___lmul+2,w
  1504  04BD  00C0               	movwf	_BMP280_readPressure$935+2
  1505  04BE  0827               	movf	?___lmul+1,w
  1506  04BF  00BF               	movwf	_BMP280_readPressure$935+1
  1507  04C0  0826               	movf	?___lmul,w
  1508  04C1  00BE               	movwf	_BMP280_readPressure$935
  1509                           
  1510                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1511  04C2  3000               	movlw	0
  1512  04C3  00F3               	movwf	___aldiv@divisor+3
  1513  04C4  3000               	movlw	0
  1514  04C5  00F2               	movwf	___aldiv@divisor+2
  1515  04C6  3000               	movlw	0
  1516  04C7  00F1               	movwf	___aldiv@divisor+1
  1517  04C8  3002               	movlw	2
  1518  04C9  00F0               	movwf	___aldiv@divisor
  1519  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1520  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1521  04CC  0839               	movf	(_BMP280_calib^(0+128)+8),w
  1522  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1523  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1524  04CF  00A6               	movwf	___lmul@multiplier
  1525  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1526  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1527  04D2  083A               	movf	((_BMP280_calib+1)^(0+128)+8),w
  1528  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1529  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1530  04D5  00A7               	movwf	___lmul@multiplier+1
  1531  04D6  3000               	movlw	0
  1532  04D7  1BA7               	btfsc	___lmul@multiplier+1,7
  1533  04D8  30FF               	movlw	255
  1534  04D9  00A8               	movwf	___lmul@multiplier+2
  1535  04DA  00A9               	movwf	___lmul@multiplier+3
  1536  04DB  085A               	movf	BMP280_readPressure@var1+3,w
  1537  04DC  00AD               	movwf	___lmul@multiplicand+3
  1538  04DD  0859               	movf	BMP280_readPressure@var1+2,w
  1539  04DE  00AC               	movwf	___lmul@multiplicand+2
  1540  04DF  0858               	movf	BMP280_readPressure@var1+1,w
  1541  04E0  00AB               	movwf	___lmul@multiplicand+1
  1542  04E1  0857               	movf	BMP280_readPressure@var1,w
  1543  04E2  00AA               	movwf	___lmul@multiplicand
  1544  04E3  120A  118A  2060  120A  118A  	fcall	___lmul
  1545  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1546  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1547  04EA  0829               	movf	?___lmul+3,w
  1548  04EB  00F7               	movwf	___aldiv@dividend+3
  1549  04EC  0828               	movf	?___lmul+2,w
  1550  04ED  00F6               	movwf	___aldiv@dividend+2
  1551  04EE  0827               	movf	?___lmul+1,w
  1552  04EF  00F5               	movwf	___aldiv@dividend+1
  1553  04F0  0826               	movf	?___lmul,w
  1554  04F1  00F4               	movwf	___aldiv@dividend
  1555  04F2  120A  118A  215A  120A  118A  	fcall	___aldiv
  1556  04F7  0870               	movf	?___aldiv,w
  1557  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1558  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1559  04FA  00AE               	movwf	??_BMP280_readPressure
  1560  04FB  0871               	movf	?___aldiv+1,w
  1561  04FC  00AF               	movwf	??_BMP280_readPressure+1
  1562  04FD  0872               	movf	?___aldiv+2,w
  1563  04FE  00B0               	movwf	??_BMP280_readPressure+2
  1564  04FF  0873               	movf	?___aldiv+3,w
  1565  0500  00B1               	movwf	??_BMP280_readPressure+3
  1566  0501  3000               	movlw	0
  1567  0502  00F3               	movwf	___aldiv@divisor+3
  1568  0503  3000               	movlw	0
  1569  0504  00F2               	movwf	___aldiv@divisor+2
  1570  0505  3000               	movlw	0
  1571  0506  00F1               	movwf	___aldiv@divisor+1
  1572  0507  3008               	movlw	8
  1573  0508  00F0               	movwf	___aldiv@divisor
  1574  0509  0841               	movf	_BMP280_readPressure$935+3,w
  1575  050A  00F7               	movwf	___aldiv@dividend+3
  1576  050B  0840               	movf	_BMP280_readPressure$935+2,w
  1577  050C  00F6               	movwf	___aldiv@dividend+2
  1578  050D  083F               	movf	_BMP280_readPressure$935+1,w
  1579  050E  00F5               	movwf	___aldiv@dividend+1
  1580  050F  083E               	movf	_BMP280_readPressure$935,w
  1581  0510  00F4               	movwf	___aldiv@dividend
  1582  0511  120A  118A  215A  120A  118A  	fcall	___aldiv
  1583  0516  0870               	movf	?___aldiv,w
  1584  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0519  07AE               	addwf	??_BMP280_readPressure,f
  1587  051A  0871               	movf	?___aldiv+1,w
  1588  051B  1803               	skipnc
  1589  051C  0F71               	incfsz	?___aldiv+1,w
  1590  051D  2D1F               	goto	u960
  1591  051E  2D20               	goto	u961
  1592  051F                     u960:
  1593  051F  07AF               	addwf	??_BMP280_readPressure+1,f
  1594  0520                     u961:
  1595  0520  0872               	movf	?___aldiv+2,w
  1596  0521  1803               	skipnc
  1597  0522  0F72               	incfsz	?___aldiv+2,w
  1598  0523  2D25               	goto	u962
  1599  0524  2D26               	goto	u963
  1600  0525                     u962:
  1601  0525  07B0               	addwf	??_BMP280_readPressure+2,f
  1602  0526                     u963:
  1603  0526  0873               	movf	?___aldiv+3,w
  1604  0527  1803               	skipnc
  1605  0528  0A73               	incf	?___aldiv+3,w
  1606  0529  07B1               	addwf	??_BMP280_readPressure+3,f
  1607  052A  0831               	movf	??_BMP280_readPressure+3,w
  1608  052B  00C5               	movwf	_BMP280_readPressure$936+3
  1609  052C  0830               	movf	??_BMP280_readPressure+2,w
  1610  052D  00C4               	movwf	_BMP280_readPressure$936+2
  1611  052E  082F               	movf	??_BMP280_readPressure+1,w
  1612  052F  00C3               	movwf	_BMP280_readPressure$936+1
  1613  0530  082E               	movf	??_BMP280_readPressure,w
  1614  0531  00C2               	movwf	_BMP280_readPressure$936
  1615                           
  1616                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1617  0532  3000               	movlw	0
  1618  0533  00F3               	movwf	___aldiv@divisor+3
  1619  0534  3004               	movlw	4
  1620  0535  00F2               	movwf	___aldiv@divisor+2
  1621  0536  3000               	movlw	0
  1622  0537  00F1               	movwf	___aldiv@divisor+1
  1623  0538  3000               	movlw	0
  1624  0539  00F0               	movwf	___aldiv@divisor
  1625  053A  0845               	movf	_BMP280_readPressure$936+3,w
  1626  053B  00F7               	movwf	___aldiv@dividend+3
  1627  053C  0844               	movf	_BMP280_readPressure$936+2,w
  1628  053D  00F6               	movwf	___aldiv@dividend+2
  1629  053E  0843               	movf	_BMP280_readPressure$936+1,w
  1630  053F  00F5               	movwf	___aldiv@dividend+1
  1631  0540  0842               	movf	_BMP280_readPressure$936,w
  1632  0541  00F4               	movwf	___aldiv@dividend
  1633  0542  120A  118A  215A  120A  118A  	fcall	___aldiv
  1634  0547  0873               	movf	?___aldiv+3,w
  1635  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1637  054A  00DA               	movwf	BMP280_readPressure@var1+3
  1638  054B  0872               	movf	?___aldiv+2,w
  1639  054C  00D9               	movwf	BMP280_readPressure@var1+2
  1640  054D  0871               	movf	?___aldiv+1,w
  1641  054E  00D8               	movwf	BMP280_readPressure@var1+1
  1642  054F  0870               	movf	?___aldiv,w
  1643  0550  00D7               	movwf	BMP280_readPressure@var1
  1644                           
  1645                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  1646  0551  3000               	movlw	0
  1647  0552  00F3               	movwf	___aldiv@divisor+3
  1648  0553  3000               	movlw	0
  1649  0554  00F2               	movwf	___aldiv@divisor+2
  1650  0555  3080               	movlw	128
  1651  0556  00F1               	movwf	___aldiv@divisor+1
  1652  0557  3000               	movlw	0
  1653  0558  00F0               	movwf	___aldiv@divisor
  1654  0559  3000               	movlw	0
  1655  055A  00AE               	movwf	??_BMP280_readPressure
  1656  055B  3080               	movlw	128
  1657  055C  00AF               	movwf	??_BMP280_readPressure+1
  1658  055D  3000               	movlw	0
  1659  055E  00B0               	movwf	??_BMP280_readPressure+2
  1660  055F  3000               	movlw	0
  1661  0560  00B1               	movwf	??_BMP280_readPressure+3
  1662  0561  0857               	movf	BMP280_readPressure@var1,w
  1663  0562  07AE               	addwf	??_BMP280_readPressure,f
  1664  0563  0858               	movf	BMP280_readPressure@var1+1,w
  1665  0564  1803               	skipnc
  1666  0565  0F58               	incfsz	BMP280_readPressure@var1+1,w
  1667  0566  2D68               	goto	u970
  1668  0567  2D69               	goto	u971
  1669  0568                     u970:
  1670  0568  07AF               	addwf	??_BMP280_readPressure+1,f
  1671  0569                     u971:
  1672  0569  0859               	movf	BMP280_readPressure@var1+2,w
  1673  056A  1803               	skipnc
  1674  056B  0F59               	incfsz	BMP280_readPressure@var1+2,w
  1675  056C  2D6E               	goto	u972
  1676  056D  2D6F               	goto	u973
  1677  056E                     u972:
  1678  056E  07B0               	addwf	??_BMP280_readPressure+2,f
  1679  056F                     u973:
  1680  056F  085A               	movf	BMP280_readPressure@var1+3,w
  1681  0570  1803               	skipnc
  1682  0571  0A5A               	incf	BMP280_readPressure@var1+3,w
  1683  0572  07B1               	addwf	??_BMP280_readPressure+3,f
  1684  0573  0831               	movf	??_BMP280_readPressure+3,w
  1685  0574  00A9               	movwf	___lmul@multiplier+3
  1686  0575  0830               	movf	??_BMP280_readPressure+2,w
  1687  0576  00A8               	movwf	___lmul@multiplier+2
  1688  0577  082F               	movf	??_BMP280_readPressure+1,w
  1689  0578  00A7               	movwf	___lmul@multiplier+1
  1690  0579  082E               	movf	??_BMP280_readPressure,w
  1691  057A  00A6               	movwf	___lmul@multiplier
  1692  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1693  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1694  057D  0837               	movf	(_BMP280_calib^(0+128)+6),w
  1695  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1696  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0580  00AA               	movwf	___lmul@multiplicand
  1698  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0583  0838               	movf	((_BMP280_calib+1)^(0+128)+6),w
  1701  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0586  00AB               	movwf	___lmul@multiplicand+1
  1704  0587  01AC               	clrf	___lmul@multiplicand+2
  1705  0588  01AD               	clrf	___lmul@multiplicand+3
  1706  0589  120A  118A  2060  120A  118A  	fcall	___lmul
  1707  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1708  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0590  0829               	movf	?___lmul+3,w
  1710  0591  00F7               	movwf	___aldiv@dividend+3
  1711  0592  0828               	movf	?___lmul+2,w
  1712  0593  00F6               	movwf	___aldiv@dividend+2
  1713  0594  0827               	movf	?___lmul+1,w
  1714  0595  00F5               	movwf	___aldiv@dividend+1
  1715  0596  0826               	movf	?___lmul,w
  1716  0597  00F4               	movwf	___aldiv@dividend
  1717  0598  120A  118A  215A  120A  118A  	fcall	___aldiv
  1718  059D  0873               	movf	?___aldiv+3,w
  1719  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1720  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1721  05A0  00DA               	movwf	BMP280_readPressure@var1+3
  1722  05A1  0872               	movf	?___aldiv+2,w
  1723  05A2  00D9               	movwf	BMP280_readPressure@var1+2
  1724  05A3  0871               	movf	?___aldiv+1,w
  1725  05A4  00D8               	movwf	BMP280_readPressure@var1+1
  1726  05A5  0870               	movf	?___aldiv,w
  1727  05A6  00D7               	movwf	BMP280_readPressure@var1
  1728  05A7                     l1164:
  1729                           
  1730                           ;BMP280.c: 282:   if (var1 == 0)
  1731  05A7  085A               	movf	BMP280_readPressure@var1+3,w
  1732  05A8  0459               	iorwf	BMP280_readPressure@var1+2,w
  1733  05A9  0458               	iorwf	BMP280_readPressure@var1+1,w
  1734  05AA  0457               	iorwf	BMP280_readPressure@var1,w
  1735  05AB  1D03               	skipz
  1736  05AC  2DAE               	goto	u981
  1737  05AD  2DAF               	goto	u980
  1738  05AE                     u981:
  1739  05AE  2DB0               	goto	l1168
  1740  05AF                     u980:
  1741  05AF  2FEA               	goto	l154
  1742  05B0                     l1168:
  1743                           
  1744                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  1745  05B0  3000               	movlw	0
  1746  05B1  00AE               	movwf	??_BMP280_readPressure
  1747  05B2  3000               	movlw	0
  1748  05B3  00AF               	movwf	??_BMP280_readPressure+1
  1749  05B4  3010               	movlw	16
  1750  05B5  00B0               	movwf	??_BMP280_readPressure+2
  1751  05B6  3000               	movlw	0
  1752  05B7  00B1               	movwf	??_BMP280_readPressure+3
  1753  05B8  3000               	movlw	0
  1754  05B9  00F3               	movwf	___aldiv@divisor+3
  1755  05BA  3000               	movlw	0
  1756  05BB  00F2               	movwf	___aldiv@divisor+2
  1757  05BC  3010               	movlw	16
  1758  05BD  00F1               	movwf	___aldiv@divisor+1
  1759  05BE  3000               	movlw	0
  1760  05BF  00F0               	movwf	___aldiv@divisor
  1761  05C0  0852               	movf	BMP280_readPressure@var2+3,w
  1762  05C1  00F7               	movwf	___aldiv@dividend+3
  1763  05C2  0851               	movf	BMP280_readPressure@var2+2,w
  1764  05C3  00F6               	movwf	___aldiv@dividend+2
  1765  05C4  0850               	movf	BMP280_readPressure@var2+1,w
  1766  05C5  00F5               	movwf	___aldiv@dividend+1
  1767  05C6  084F               	movf	BMP280_readPressure@var2,w
  1768  05C7  00F4               	movwf	___aldiv@dividend
  1769  05C8  120A  118A  215A  120A  118A  	fcall	___aldiv
  1770  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1771  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1772  05CF  095F               	comf	_adc_P,w
  1773  05D0  00B2               	movwf	??_BMP280_readPressure+4
  1774  05D1  0960               	comf	_adc_P+1,w
  1775  05D2  00B3               	movwf	??_BMP280_readPressure+5
  1776  05D3  0961               	comf	_adc_P+2,w
  1777  05D4  00B4               	movwf	??_BMP280_readPressure+6
  1778  05D5  0962               	comf	_adc_P+3,w
  1779  05D6  00B5               	movwf	??_BMP280_readPressure+7
  1780  05D7  0AB2               	incf	??_BMP280_readPressure+4,f
  1781  05D8  1903               	skipnz
  1782  05D9  0AB3               	incf	??_BMP280_readPressure+5,f
  1783  05DA  1903               	skipnz
  1784  05DB  0AB4               	incf	??_BMP280_readPressure+6,f
  1785  05DC  1903               	skipnz
  1786  05DD  0AB5               	incf	??_BMP280_readPressure+7,f
  1787  05DE  0870               	movf	?___aldiv,w
  1788  05DF  02B2               	subwf	??_BMP280_readPressure+4,f
  1789  05E0  0871               	movf	?___aldiv+1,w
  1790  05E1  1C03               	skipc
  1791  05E2  0F71               	incfsz	?___aldiv+1,w
  1792  05E3  2DE5               	goto	u991
  1793  05E4  2DE6               	goto	u992
  1794  05E5                     u991:
  1795  05E5  02B3               	subwf	??_BMP280_readPressure+5,f
  1796  05E6                     u992:
  1797  05E6  0872               	movf	?___aldiv+2,w
  1798  05E7  1C03               	skipc
  1799  05E8  0F72               	incfsz	?___aldiv+2,w
  1800  05E9  2DEB               	goto	u993
  1801  05EA  2DEC               	goto	u994
  1802  05EB                     u993:
  1803  05EB  02B4               	subwf	??_BMP280_readPressure+6,f
  1804  05EC                     u994:
  1805  05EC  0873               	movf	?___aldiv+3,w
  1806  05ED  1C03               	skipc
  1807  05EE  0F73               	incfsz	?___aldiv+3,w
  1808  05EF  2DF1               	goto	u995
  1809  05F0  2DF2               	goto	u996
  1810  05F1                     u995:
  1811  05F1  02B5               	subwf	??_BMP280_readPressure+7,f
  1812  05F2                     u996:
  1813  05F2  0832               	movf	??_BMP280_readPressure+4,w
  1814  05F3  07AE               	addwf	??_BMP280_readPressure,f
  1815  05F4  0833               	movf	??_BMP280_readPressure+5,w
  1816  05F5  1803               	skipnc
  1817  05F6  0F33               	incfsz	??_BMP280_readPressure+5,w
  1818  05F7  2DF9               	goto	u1000
  1819  05F8  2DFA               	goto	u1001
  1820  05F9                     u1000:
  1821  05F9  07AF               	addwf	??_BMP280_readPressure+1,f
  1822  05FA                     u1001:
  1823  05FA  0834               	movf	??_BMP280_readPressure+6,w
  1824  05FB  1803               	skipnc
  1825  05FC  0F34               	incfsz	??_BMP280_readPressure+6,w
  1826  05FD  2DFF               	goto	u1002
  1827  05FE  2E00               	goto	u1003
  1828  05FF                     u1002:
  1829  05FF  07B0               	addwf	??_BMP280_readPressure+2,f
  1830  0600                     u1003:
  1831  0600  0835               	movf	??_BMP280_readPressure+7,w
  1832  0601  1803               	skipnc
  1833  0602  0A35               	incf	??_BMP280_readPressure+7,w
  1834  0603  07B1               	addwf	??_BMP280_readPressure+3,f
  1835  0604  0831               	movf	??_BMP280_readPressure+3,w
  1836  0605  00A9               	movwf	___lmul@multiplier+3
  1837  0606  0830               	movf	??_BMP280_readPressure+2,w
  1838  0607  00A8               	movwf	___lmul@multiplier+2
  1839  0608  082F               	movf	??_BMP280_readPressure+1,w
  1840  0609  00A7               	movwf	___lmul@multiplier+1
  1841  060A  082E               	movf	??_BMP280_readPressure,w
  1842  060B  00A6               	movwf	___lmul@multiplier
  1843  060C  3000               	movlw	0
  1844  060D  00AD               	movwf	___lmul@multiplicand+3
  1845  060E  3000               	movlw	0
  1846  060F  00AC               	movwf	___lmul@multiplicand+2
  1847  0610  300C               	movlw	12
  1848  0611  00AB               	movwf	___lmul@multiplicand+1
  1849  0612  3035               	movlw	53
  1850  0613  00AA               	movwf	___lmul@multiplicand
  1851  0614  120A  118A  2060  120A  118A  	fcall	___lmul
  1852  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1853  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1854  061B  0829               	movf	?___lmul+3,w
  1855  061C  00D6               	movwf	BMP280_readPressure@p+3
  1856  061D  0828               	movf	?___lmul+2,w
  1857  061E  00D5               	movwf	BMP280_readPressure@p+2
  1858  061F  0827               	movf	?___lmul+1,w
  1859  0620  00D4               	movwf	BMP280_readPressure@p+1
  1860  0621  0826               	movf	?___lmul,w
  1861  0622  00D3               	movwf	BMP280_readPressure@p
  1862  0623                     l1170:
  1863                           
  1864                           ;BMP280.c: 287:   if (p < 0x80000000)
  1865  0623  3080               	movlw	128
  1866  0624  0256               	subwf	BMP280_readPressure@p+3,w
  1867  0625  1D03               	skipz
  1868  0626  2E33               	goto	u1013
  1869  0627  3000               	movlw	0
  1870  0628  0255               	subwf	BMP280_readPressure@p+2,w
  1871  0629  1D03               	skipz
  1872  062A  2E33               	goto	u1013
  1873  062B  3000               	movlw	0
  1874  062C  0254               	subwf	BMP280_readPressure@p+1,w
  1875  062D  1D03               	skipz
  1876  062E  2E33               	goto	u1013
  1877  062F  3000               	movlw	0
  1878  0630  0253               	subwf	BMP280_readPressure@p,w
  1879  0631  1D03               	skipz
  1880  0632  2E33               	goto	u1013
  1881  0633                     u1013:
  1882  0633  1803               	btfsc	3,0
  1883  0634  2E36               	goto	u1011
  1884  0635  2E37               	goto	u1010
  1885  0636                     u1011:
  1886  0636  2E5A               	goto	l1174
  1887  0637                     u1010:
  1888  0637                     l1172:
  1889                           
  1890                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  1891  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0639  085A               	movf	BMP280_readPressure@var1+3,w
  1894  063A  00F3               	movwf	___lldiv@divisor+3
  1895  063B  0859               	movf	BMP280_readPressure@var1+2,w
  1896  063C  00F2               	movwf	___lldiv@divisor+2
  1897  063D  0858               	movf	BMP280_readPressure@var1+1,w
  1898  063E  00F1               	movwf	___lldiv@divisor+1
  1899  063F  0857               	movf	BMP280_readPressure@var1,w
  1900  0640  00F0               	movwf	___lldiv@divisor
  1901  0641  1003               	clrc
  1902  0642  0D53               	rlf	BMP280_readPressure@p,w
  1903  0643  00F4               	movwf	___lldiv@dividend
  1904  0644  0D54               	rlf	BMP280_readPressure@p+1,w
  1905  0645  00F5               	movwf	___lldiv@dividend+1
  1906  0646  0D55               	rlf	BMP280_readPressure@p+2,w
  1907  0647  00F6               	movwf	___lldiv@dividend+2
  1908  0648  0D56               	rlf	BMP280_readPressure@p+3,w
  1909  0649  00F7               	movwf	___lldiv@dividend+3
  1910  064A  120A  118A  20F4  120A  118A  	fcall	___lldiv
  1911  064F  0873               	movf	?___lldiv+3,w
  1912  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0652  00D6               	movwf	BMP280_readPressure@p+3
  1915  0653  0872               	movf	?___lldiv+2,w
  1916  0654  00D5               	movwf	BMP280_readPressure@p+2
  1917  0655  0871               	movf	?___lldiv+1,w
  1918  0656  00D4               	movwf	BMP280_readPressure@p+1
  1919  0657  0870               	movf	?___lldiv,w
  1920  0658  00D3               	movwf	BMP280_readPressure@p
  1921  0659  2E7C               	goto	l156
  1922  065A                     l1174:
  1923                           
  1924                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  1925  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1926  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1927  065C  085A               	movf	BMP280_readPressure@var1+3,w
  1928  065D  00F3               	movwf	___lldiv@divisor+3
  1929  065E  0859               	movf	BMP280_readPressure@var1+2,w
  1930  065F  00F2               	movwf	___lldiv@divisor+2
  1931  0660  0858               	movf	BMP280_readPressure@var1+1,w
  1932  0661  00F1               	movwf	___lldiv@divisor+1
  1933  0662  0857               	movf	BMP280_readPressure@var1,w
  1934  0663  00F0               	movwf	___lldiv@divisor
  1935  0664  0856               	movf	BMP280_readPressure@p+3,w
  1936  0665  00F7               	movwf	___lldiv@dividend+3
  1937  0666  0855               	movf	BMP280_readPressure@p+2,w
  1938  0667  00F6               	movwf	___lldiv@dividend+2
  1939  0668  0854               	movf	BMP280_readPressure@p+1,w
  1940  0669  00F5               	movwf	___lldiv@dividend+1
  1941  066A  0853               	movf	BMP280_readPressure@p,w
  1942  066B  00F4               	movwf	___lldiv@dividend
  1943  066C  120A  118A  20F4  120A  118A  	fcall	___lldiv
  1944  0671  1003               	clrc
  1945  0672  0D70               	rlf	?___lldiv,w
  1946  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0675  00D3               	movwf	BMP280_readPressure@p
  1949  0676  0D71               	rlf	?___lldiv+1,w
  1950  0677  00D4               	movwf	BMP280_readPressure@p+1
  1951  0678  0D72               	rlf	?___lldiv+2,w
  1952  0679  00D5               	movwf	BMP280_readPressure@p+2
  1953  067A  0D73               	rlf	?___lldiv+3,w
  1954  067B  00D6               	movwf	BMP280_readPressure@p+3
  1955  067C                     l156:
  1956                           
  1957                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  1958  067C  0853               	movf	BMP280_readPressure@p,w
  1959  067D  00AE               	movwf	??_BMP280_readPressure
  1960  067E  0854               	movf	BMP280_readPressure@p+1,w
  1961  067F  00AF               	movwf	??_BMP280_readPressure+1
  1962  0680  0855               	movf	BMP280_readPressure@p+2,w
  1963  0681  00B0               	movwf	??_BMP280_readPressure+2
  1964  0682  0856               	movf	BMP280_readPressure@p+3,w
  1965  0683  00B1               	movwf	??_BMP280_readPressure+3
  1966  0684  3003               	movlw	3
  1967  0685                     u1025:
  1968  0685  1003               	clrc
  1969  0686  0CB1               	rrf	??_BMP280_readPressure+3,f
  1970  0687  0CB0               	rrf	??_BMP280_readPressure+2,f
  1971  0688  0CAF               	rrf	??_BMP280_readPressure+1,f
  1972  0689  0CAE               	rrf	??_BMP280_readPressure,f
  1973  068A                     u1020:
  1974  068A  3EFF               	addlw	-1
  1975  068B  1D03               	skipz
  1976  068C  2E85               	goto	u1025
  1977  068D  0831               	movf	??_BMP280_readPressure+3,w
  1978  068E  00AD               	movwf	___lmul@multiplicand+3
  1979  068F  0830               	movf	??_BMP280_readPressure+2,w
  1980  0690  00AC               	movwf	___lmul@multiplicand+2
  1981  0691  082F               	movf	??_BMP280_readPressure+1,w
  1982  0692  00AB               	movwf	___lmul@multiplicand+1
  1983  0693  082E               	movf	??_BMP280_readPressure,w
  1984  0694  00AA               	movwf	___lmul@multiplicand
  1985  0695  0853               	movf	BMP280_readPressure@p,w
  1986  0696  00B2               	movwf	??_BMP280_readPressure+4
  1987  0697  0854               	movf	BMP280_readPressure@p+1,w
  1988  0698  00B3               	movwf	??_BMP280_readPressure+5
  1989  0699  0855               	movf	BMP280_readPressure@p+2,w
  1990  069A  00B4               	movwf	??_BMP280_readPressure+6
  1991  069B  0856               	movf	BMP280_readPressure@p+3,w
  1992  069C  00B5               	movwf	??_BMP280_readPressure+7
  1993  069D  3003               	movlw	3
  1994  069E                     u1035:
  1995  069E  1003               	clrc
  1996  069F  0CB5               	rrf	??_BMP280_readPressure+7,f
  1997  06A0  0CB4               	rrf	??_BMP280_readPressure+6,f
  1998  06A1  0CB3               	rrf	??_BMP280_readPressure+5,f
  1999  06A2  0CB2               	rrf	??_BMP280_readPressure+4,f
  2000  06A3                     u1030:
  2001  06A3  3EFF               	addlw	-1
  2002  06A4  1D03               	skipz
  2003  06A5  2E9E               	goto	u1035
  2004  06A6  0835               	movf	??_BMP280_readPressure+7,w
  2005  06A7  00A9               	movwf	___lmul@multiplier+3
  2006  06A8  0834               	movf	??_BMP280_readPressure+6,w
  2007  06A9  00A8               	movwf	___lmul@multiplier+2
  2008  06AA  0833               	movf	??_BMP280_readPressure+5,w
  2009  06AB  00A7               	movwf	___lmul@multiplier+1
  2010  06AC  0832               	movf	??_BMP280_readPressure+4,w
  2011  06AD  00A6               	movwf	___lmul@multiplier
  2012  06AE  120A  118A  2060  120A  118A  	fcall	___lmul
  2013  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2014  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2015  06B5  0826               	movf	?___lmul,w
  2016  06B6  00B6               	movwf	??_BMP280_readPressure+8
  2017  06B7  0827               	movf	?___lmul+1,w
  2018  06B8  00B7               	movwf	??_BMP280_readPressure+9
  2019  06B9  0828               	movf	?___lmul+2,w
  2020  06BA  00B8               	movwf	??_BMP280_readPressure+10
  2021  06BB  0829               	movf	?___lmul+3,w
  2022  06BC  00B9               	movwf	??_BMP280_readPressure+11
  2023  06BD  300D               	movlw	13
  2024  06BE                     u1045:
  2025  06BE  1003               	clrc
  2026  06BF  0CB9               	rrf	??_BMP280_readPressure+11,f
  2027  06C0  0CB8               	rrf	??_BMP280_readPressure+10,f
  2028  06C1  0CB7               	rrf	??_BMP280_readPressure+9,f
  2029  06C2  0CB6               	rrf	??_BMP280_readPressure+8,f
  2030  06C3                     u1040:
  2031  06C3  3EFF               	addlw	-1
  2032  06C4  1D03               	skipz
  2033  06C5  2EBE               	goto	u1045
  2034  06C6  0839               	movf	??_BMP280_readPressure+11,w
  2035  06C7  00C9               	movwf	_BMP280_readPressure$937+3
  2036  06C8  0838               	movf	??_BMP280_readPressure+10,w
  2037  06C9  00C8               	movwf	_BMP280_readPressure$937+2
  2038  06CA  0837               	movf	??_BMP280_readPressure+9,w
  2039  06CB  00C7               	movwf	_BMP280_readPressure$937+1
  2040  06CC  0836               	movf	??_BMP280_readPressure+8,w
  2041  06CD  00C6               	movwf	_BMP280_readPressure$937
  2042                           
  2043                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2044  06CE  3000               	movlw	0
  2045  06CF  00F3               	movwf	___aldiv@divisor+3
  2046  06D0  3000               	movlw	0
  2047  06D1  00F2               	movwf	___aldiv@divisor+2
  2048  06D2  3010               	movlw	16
  2049  06D3  00F1               	movwf	___aldiv@divisor+1
  2050  06D4  3000               	movlw	0
  2051  06D5  00F0               	movwf	___aldiv@divisor
  2052  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2053  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2054  06D8  0847               	movf	(_BMP280_calib^(0+128)+22),w
  2055  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2056  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2057  06DB  00A6               	movwf	___lmul@multiplier
  2058  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2059  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2060  06DE  0848               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2061  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2062  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2063  06E1  00A7               	movwf	___lmul@multiplier+1
  2064  06E2  3000               	movlw	0
  2065  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2066  06E4  30FF               	movlw	255
  2067  06E5  00A8               	movwf	___lmul@multiplier+2
  2068  06E6  00A9               	movwf	___lmul@multiplier+3
  2069  06E7  0849               	movf	_BMP280_readPressure$937+3,w
  2070  06E8  00AD               	movwf	___lmul@multiplicand+3
  2071  06E9  0848               	movf	_BMP280_readPressure$937+2,w
  2072  06EA  00AC               	movwf	___lmul@multiplicand+2
  2073  06EB  0847               	movf	_BMP280_readPressure$937+1,w
  2074  06EC  00AB               	movwf	___lmul@multiplicand+1
  2075  06ED  0846               	movf	_BMP280_readPressure$937,w
  2076  06EE  00AA               	movwf	___lmul@multiplicand
  2077  06EF  120A  118A  2060  120A  118A  	fcall	___lmul
  2078  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2079  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2080  06F6  0829               	movf	?___lmul+3,w
  2081  06F7  00F7               	movwf	___aldiv@dividend+3
  2082  06F8  0828               	movf	?___lmul+2,w
  2083  06F9  00F6               	movwf	___aldiv@dividend+2
  2084  06FA  0827               	movf	?___lmul+1,w
  2085  06FB  00F5               	movwf	___aldiv@dividend+1
  2086  06FC  0826               	movf	?___lmul,w
  2087  06FD  00F4               	movwf	___aldiv@dividend
  2088  06FE  120A  118A  215A  120A  118A  	fcall	___aldiv
  2089  0703  0873               	movf	?___aldiv+3,w
  2090  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0706  00DA               	movwf	BMP280_readPressure@var1+3
  2093  0707  0872               	movf	?___aldiv+2,w
  2094  0708  00D9               	movwf	BMP280_readPressure@var1+2
  2095  0709  0871               	movf	?___aldiv+1,w
  2096  070A  00D8               	movwf	BMP280_readPressure@var1+1
  2097  070B  0870               	movf	?___aldiv,w
  2098  070C  00D7               	movwf	BMP280_readPressure@var1
  2099                           
  2100                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2101  070D  3000               	movlw	0
  2102  070E  00F3               	movwf	___aldiv@divisor+3
  2103  070F  3000               	movlw	0
  2104  0710  00F2               	movwf	___aldiv@divisor+2
  2105  0711  3020               	movlw	32
  2106  0712  00F1               	movwf	___aldiv@divisor+1
  2107  0713  3000               	movlw	0
  2108  0714  00F0               	movwf	___aldiv@divisor
  2109  0715  0853               	movf	BMP280_readPressure@p,w
  2110  0716  00AE               	movwf	??_BMP280_readPressure
  2111  0717  0854               	movf	BMP280_readPressure@p+1,w
  2112  0718  00AF               	movwf	??_BMP280_readPressure+1
  2113  0719  0855               	movf	BMP280_readPressure@p+2,w
  2114  071A  00B0               	movwf	??_BMP280_readPressure+2
  2115  071B  0856               	movf	BMP280_readPressure@p+3,w
  2116  071C  00B1               	movwf	??_BMP280_readPressure+3
  2117  071D  3002               	movlw	2
  2118  071E                     u1055:
  2119  071E  1003               	clrc
  2120  071F  0CB1               	rrf	??_BMP280_readPressure+3,f
  2121  0720  0CB0               	rrf	??_BMP280_readPressure+2,f
  2122  0721  0CAF               	rrf	??_BMP280_readPressure+1,f
  2123  0722  0CAE               	rrf	??_BMP280_readPressure,f
  2124  0723                     u1050:
  2125  0723  3EFF               	addlw	-1
  2126  0724  1D03               	skipz
  2127  0725  2F1E               	goto	u1055
  2128  0726  0831               	movf	??_BMP280_readPressure+3,w
  2129  0727  00A9               	movwf	___lmul@multiplier+3
  2130  0728  0830               	movf	??_BMP280_readPressure+2,w
  2131  0729  00A8               	movwf	___lmul@multiplier+2
  2132  072A  082F               	movf	??_BMP280_readPressure+1,w
  2133  072B  00A7               	movwf	___lmul@multiplier+1
  2134  072C  082E               	movf	??_BMP280_readPressure,w
  2135  072D  00A6               	movwf	___lmul@multiplier
  2136  072E  1683               	bsf	3,5	;RP0=1, select bank1
  2137  072F  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0730  0845               	movf	(_BMP280_calib^(0+128)+20),w
  2139  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0733  00AA               	movwf	___lmul@multiplicand
  2142  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0736  0846               	movf	((_BMP280_calib+1)^(0+128)+20),w
  2145  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0739  00AB               	movwf	___lmul@multiplicand+1
  2148  073A  3000               	movlw	0
  2149  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  2150  073C  30FF               	movlw	255
  2151  073D  00AC               	movwf	___lmul@multiplicand+2
  2152  073E  00AD               	movwf	___lmul@multiplicand+3
  2153  073F  120A  118A  2060  120A  118A  	fcall	___lmul
  2154  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0746  0829               	movf	?___lmul+3,w
  2157  0747  00F7               	movwf	___aldiv@dividend+3
  2158  0748  0828               	movf	?___lmul+2,w
  2159  0749  00F6               	movwf	___aldiv@dividend+2
  2160  074A  0827               	movf	?___lmul+1,w
  2161  074B  00F5               	movwf	___aldiv@dividend+1
  2162  074C  0826               	movf	?___lmul,w
  2163  074D  00F4               	movwf	___aldiv@dividend
  2164  074E  120A  118A  215A  120A  118A  	fcall	___aldiv
  2165  0753  0873               	movf	?___aldiv+3,w
  2166  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0756  00D2               	movwf	BMP280_readPressure@var2+3
  2169  0757  0872               	movf	?___aldiv+2,w
  2170  0758  00D1               	movwf	BMP280_readPressure@var2+2
  2171  0759  0871               	movf	?___aldiv+1,w
  2172  075A  00D0               	movwf	BMP280_readPressure@var2+1
  2173  075B  0870               	movf	?___aldiv,w
  2174  075C  00CF               	movwf	BMP280_readPressure@var2
  2175                           
  2176                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  2177  075D  3000               	movlw	0
  2178  075E  00F3               	movwf	___aldiv@divisor+3
  2179  075F  3000               	movlw	0
  2180  0760  00F2               	movwf	___aldiv@divisor+2
  2181  0761  3000               	movlw	0
  2182  0762  00F1               	movwf	___aldiv@divisor+1
  2183  0763  3010               	movlw	16
  2184  0764  00F0               	movwf	___aldiv@divisor
  2185  0765  084F               	movf	BMP280_readPressure@var2,w
  2186  0766  00AE               	movwf	??_BMP280_readPressure
  2187  0767  0850               	movf	BMP280_readPressure@var2+1,w
  2188  0768  00AF               	movwf	??_BMP280_readPressure+1
  2189  0769  0851               	movf	BMP280_readPressure@var2+2,w
  2190  076A  00B0               	movwf	??_BMP280_readPressure+2
  2191  076B  0852               	movf	BMP280_readPressure@var2+3,w
  2192  076C  00B1               	movwf	??_BMP280_readPressure+3
  2193  076D  0857               	movf	BMP280_readPressure@var1,w
  2194  076E  00B2               	movwf	??_BMP280_readPressure+4
  2195  076F  0858               	movf	BMP280_readPressure@var1+1,w
  2196  0770  00B3               	movwf	??_BMP280_readPressure+5
  2197  0771  0859               	movf	BMP280_readPressure@var1+2,w
  2198  0772  00B4               	movwf	??_BMP280_readPressure+6
  2199  0773  085A               	movf	BMP280_readPressure@var1+3,w
  2200  0774  00B5               	movwf	??_BMP280_readPressure+7
  2201  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0776  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0777  0843               	movf	(_BMP280_calib^(0+128)+18),w
  2204  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2206  077A  00B6               	movwf	??_BMP280_readPressure+8
  2207  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2208  077C  1303               	bcf	3,6	;RP1=0, select bank1
  2209  077D  0844               	movf	((_BMP280_calib+1)^(0+128)+18),w
  2210  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2211  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0780  00B7               	movwf	??_BMP280_readPressure+9
  2213  0781  3000               	movlw	0
  2214  0782  1BB7               	btfsc	??_BMP280_readPressure+9,7
  2215  0783  30FF               	movlw	255
  2216  0784  00B8               	movwf	??_BMP280_readPressure+10
  2217  0785  00B9               	movwf	??_BMP280_readPressure+11
  2218  0786  0836               	movf	??_BMP280_readPressure+8,w
  2219  0787  07B2               	addwf	??_BMP280_readPressure+4,f
  2220  0788  0837               	movf	??_BMP280_readPressure+9,w
  2221  0789  1803               	skipnc
  2222  078A  0F37               	incfsz	??_BMP280_readPressure+9,w
  2223  078B  2F8D               	goto	u1060
  2224  078C  2F8E               	goto	u1061
  2225  078D                     u1060:
  2226  078D  07B3               	addwf	??_BMP280_readPressure+5,f
  2227  078E                     u1061:
  2228  078E  0838               	movf	??_BMP280_readPressure+10,w
  2229  078F  1803               	skipnc
  2230  0790  0F38               	incfsz	??_BMP280_readPressure+10,w
  2231  0791  2F93               	goto	u1062
  2232  0792  2F94               	goto	u1063
  2233  0793                     u1062:
  2234  0793  07B4               	addwf	??_BMP280_readPressure+6,f
  2235  0794                     u1063:
  2236  0794  0839               	movf	??_BMP280_readPressure+11,w
  2237  0795  1803               	skipnc
  2238  0796  0A39               	incf	??_BMP280_readPressure+11,w
  2239  0797  07B5               	addwf	??_BMP280_readPressure+7,f
  2240  0798  0832               	movf	??_BMP280_readPressure+4,w
  2241  0799  07AE               	addwf	??_BMP280_readPressure,f
  2242  079A  0833               	movf	??_BMP280_readPressure+5,w
  2243  079B  1803               	skipnc
  2244  079C  0F33               	incfsz	??_BMP280_readPressure+5,w
  2245  079D  2F9F               	goto	u1070
  2246  079E  2FA0               	goto	u1071
  2247  079F                     u1070:
  2248  079F  07AF               	addwf	??_BMP280_readPressure+1,f
  2249  07A0                     u1071:
  2250  07A0  0834               	movf	??_BMP280_readPressure+6,w
  2251  07A1  1803               	skipnc
  2252  07A2  0F34               	incfsz	??_BMP280_readPressure+6,w
  2253  07A3  2FA5               	goto	u1072
  2254  07A4  2FA6               	goto	u1073
  2255  07A5                     u1072:
  2256  07A5  07B0               	addwf	??_BMP280_readPressure+2,f
  2257  07A6                     u1073:
  2258  07A6  0835               	movf	??_BMP280_readPressure+7,w
  2259  07A7  1803               	skipnc
  2260  07A8  0A35               	incf	??_BMP280_readPressure+7,w
  2261  07A9  07B1               	addwf	??_BMP280_readPressure+3,f
  2262  07AA  0831               	movf	??_BMP280_readPressure+3,w
  2263  07AB  00F7               	movwf	___aldiv@dividend+3
  2264  07AC  0830               	movf	??_BMP280_readPressure+2,w
  2265  07AD  00F6               	movwf	___aldiv@dividend+2
  2266  07AE  082F               	movf	??_BMP280_readPressure+1,w
  2267  07AF  00F5               	movwf	___aldiv@dividend+1
  2268  07B0  082E               	movf	??_BMP280_readPressure,w
  2269  07B1  00F4               	movwf	___aldiv@dividend
  2270  07B2  120A  118A  215A  120A  118A  	fcall	___aldiv
  2271  07B7  0870               	movf	?___aldiv,w
  2272  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2273  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2274  07BA  0753               	addwf	BMP280_readPressure@p,w
  2275  07BB  00BA               	movwf	??_BMP280_readPressure+12
  2276  07BC  3000               	movlw	0
  2277  07BD  1803               	skipnc
  2278  07BE  3001               	movlw	1
  2279  07BF  0771               	addwf	?___aldiv+1,w
  2280  07C0  01BC               	clrf	??_BMP280_readPressure+14
  2281  07C1  1803               	skipnc
  2282  07C2  0ABC               	incf	??_BMP280_readPressure+14,f
  2283  07C3  0754               	addwf	BMP280_readPressure@p+1,w
  2284  07C4  00BB               	movwf	??_BMP280_readPressure+13
  2285  07C5  1803               	skipnc
  2286  07C6  0ABC               	incf	??_BMP280_readPressure+14,f
  2287  07C7  0872               	movf	?___aldiv+2,w
  2288  07C8  073C               	addwf	??_BMP280_readPressure+14,w
  2289  07C9  01BD               	clrf	??_BMP280_readPressure+15
  2290  07CA  1803               	skipnc
  2291  07CB  0ABD               	incf	??_BMP280_readPressure+15,f
  2292  07CC  0755               	addwf	BMP280_readPressure@p+2,w
  2293  07CD  00BC               	movwf	??_BMP280_readPressure+14
  2294  07CE  1803               	skipnc
  2295  07CF  0ABD               	incf	??_BMP280_readPressure+15,f
  2296  07D0  0873               	movf	?___aldiv+3,w
  2297  07D1  073D               	addwf	??_BMP280_readPressure+15,w
  2298  07D2  0756               	addwf	BMP280_readPressure@p+3,w
  2299  07D3  00BD               	movwf	??_BMP280_readPressure+15
  2300  07D4  083D               	movf	??_BMP280_readPressure+15,w
  2301  07D5  00D6               	movwf	BMP280_readPressure@p+3
  2302  07D6  083C               	movf	??_BMP280_readPressure+14,w
  2303  07D7  00D5               	movwf	BMP280_readPressure@p+2
  2304  07D8  083B               	movf	??_BMP280_readPressure+13,w
  2305  07D9  00D4               	movwf	BMP280_readPressure@p+1
  2306  07DA  083A               	movf	??_BMP280_readPressure+12,w
  2307  07DB  00D3               	movwf	BMP280_readPressure@p
  2308  07DC                     l1176:
  2309                           
  2310                           ;BMP280.c: 298:   *pres = p;
  2311  07DC  084A               	movf	BMP280_readPressure@pres,w
  2312  07DD  0084               	movwf	4
  2313  07DE  0853               	movf	BMP280_readPressure@p,w
  2314  07DF  1383               	bcf	3,7	;select IRP bank0
  2315  07E0  0080               	movwf	0
  2316  07E1  0A84               	incf	4,f
  2317  07E2  0854               	movf	BMP280_readPressure@p+1,w
  2318  07E3  0080               	movwf	0
  2319  07E4  0A84               	incf	4,f
  2320  07E5  0855               	movf	BMP280_readPressure@p+2,w
  2321  07E6  0080               	movwf	0
  2322  07E7  0A84               	incf	4,f
  2323  07E8  0856               	movf	BMP280_readPressure@p+3,w
  2324  07E9  0080               	movwf	0
  2325  07EA                     l154:
  2326  07EA  0008               	return
  2327  07EB                     __end_of_BMP280_readPressure:
  2328                           
  2329                           	psect	text4
  2330  0060                     __ptext4:	
  2331 ;; *************** function ___lmul *****************
  2332 ;; Defined at:
  2333 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  multiplier      4    6[BANK0 ] unsigned long 
  2336 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  product         4   10[COMMON] unsigned long 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  4    6[BANK0 ] unsigned long 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       8       0       0       0
  2349 ;;      Locals:         4       0       0       0       0
  2350 ;;      Temps:          1       0       0       0       0
  2351 ;;      Totals:         5       8       0       0       0
  2352 ;;Total ram usage:       13 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_BMP280_readPressure
  2358 ;;		_BMP280_readTemperature
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function ___lmul
  2364  0060                     ___lmul:
  2365  0060                     l1088:	
  2366                           ;incstack = 0
  2367                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2368                           
  2369  0060  3000               	movlw	0
  2370  0061  00FD               	movwf	___lmul@product+3
  2371  0062  3000               	movlw	0
  2372  0063  00FC               	movwf	___lmul@product+2
  2373  0064  3000               	movlw	0
  2374  0065  00FB               	movwf	___lmul@product+1
  2375  0066  3000               	movlw	0
  2376  0067  00FA               	movwf	___lmul@product
  2377  0068                     l1090:
  2378  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2380  006A  1C26               	btfss	___lmul@multiplier,0
  2381  006B  286D               	goto	u741
  2382  006C  286E               	goto	u740
  2383  006D                     u741:
  2384  006D  2885               	goto	l1094
  2385  006E                     u740:
  2386  006E                     l1092:
  2387  006E  082A               	movf	___lmul@multiplicand,w
  2388  006F  07FA               	addwf	___lmul@product,f
  2389  0070  082B               	movf	___lmul@multiplicand+1,w
  2390  0071  1103               	clrz
  2391  0072  1803               	skipnc
  2392  0073  3E01               	addlw	1
  2393  0074  1903               	skipnz
  2394  0075  2877               	goto	u751
  2395  0076  07FB               	addwf	___lmul@product+1,f
  2396  0077                     u751:
  2397  0077  082C               	movf	___lmul@multiplicand+2,w
  2398  0078  1103               	clrz
  2399  0079  1803               	skipnc
  2400  007A  3E01               	addlw	1
  2401  007B  1903               	skipnz
  2402  007C  287E               	goto	u752
  2403  007D  07FC               	addwf	___lmul@product+2,f
  2404  007E                     u752:
  2405  007E  082D               	movf	___lmul@multiplicand+3,w
  2406  007F  1103               	clrz
  2407  0080  1803               	skipnc
  2408  0081  3E01               	addlw	1
  2409  0082  1903               	skipnz
  2410  0083  2885               	goto	u753
  2411  0084  07FD               	addwf	___lmul@product+3,f
  2412  0085                     u753:
  2413  0085                     l1094:
  2414  0085  3001               	movlw	1
  2415  0086  00F9               	movwf	??___lmul
  2416  0087                     u765:
  2417  0087  1003               	clrc
  2418  0088  0DAA               	rlf	___lmul@multiplicand,f
  2419  0089  0DAB               	rlf	___lmul@multiplicand+1,f
  2420  008A  0DAC               	rlf	___lmul@multiplicand+2,f
  2421  008B  0DAD               	rlf	___lmul@multiplicand+3,f
  2422  008C  0BF9               	decfsz	??___lmul,f
  2423  008D  2887               	goto	u765
  2424  008E                     l1096:
  2425  008E  3001               	movlw	1
  2426  008F                     u775:
  2427  008F  1003               	clrc
  2428  0090  0CA9               	rrf	___lmul@multiplier+3,f
  2429  0091  0CA8               	rrf	___lmul@multiplier+2,f
  2430  0092  0CA7               	rrf	___lmul@multiplier+1,f
  2431  0093  0CA6               	rrf	___lmul@multiplier,f
  2432  0094  3EFF               	addlw	-1
  2433  0095  1D03               	skipz
  2434  0096  288F               	goto	u775
  2435  0097  0829               	movf	___lmul@multiplier+3,w
  2436  0098  0428               	iorwf	___lmul@multiplier+2,w
  2437  0099  0427               	iorwf	___lmul@multiplier+1,w
  2438  009A  0426               	iorwf	___lmul@multiplier,w
  2439  009B  1D03               	skipz
  2440  009C  289E               	goto	u781
  2441  009D  289F               	goto	u780
  2442  009E                     u781:
  2443  009E  2868               	goto	l1090
  2444  009F                     u780:
  2445  009F                     l1098:
  2446  009F  087D               	movf	___lmul@product+3,w
  2447  00A0  00A9               	movwf	?___lmul+3
  2448  00A1  087C               	movf	___lmul@product+2,w
  2449  00A2  00A8               	movwf	?___lmul+2
  2450  00A3  087B               	movf	___lmul@product+1,w
  2451  00A4  00A7               	movwf	?___lmul+1
  2452  00A5  087A               	movf	___lmul@product,w
  2453  00A6  00A6               	movwf	?___lmul
  2454  00A7                     l256:
  2455  00A7  0008               	return
  2456  00A8                     __end_of___lmul:
  2457                           
  2458                           	psect	text5
  2459  00F4                     __ptext5:	
  2460 ;; *************** function ___lldiv *****************
  2461 ;; Defined at:
  2462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  divisor         4    0[COMMON] unsigned long 
  2465 ;;  dividend        4    4[COMMON] unsigned long 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  quotient        4    9[COMMON] unsigned long 
  2468 ;;  counter         1   13[COMMON] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  4    0[COMMON] unsigned long 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         8       0       0       0       0
  2479 ;;      Locals:         5       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0
  2481 ;;      Totals:        14       0       0       0       0
  2482 ;;Total ram usage:       14 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_I2C_Master_Init
  2488 ;;		_BMP280_readPressure
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function ___lldiv
  2494  00F4                     ___lldiv:
  2495  00F4                     l1034:	
  2496                           ;incstack = 0
  2497                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2498                           
  2499  00F4  3000               	movlw	0
  2500  00F5  00FC               	movwf	___lldiv@quotient+3
  2501  00F6  3000               	movlw	0
  2502  00F7  00FB               	movwf	___lldiv@quotient+2
  2503  00F8  3000               	movlw	0
  2504  00F9  00FA               	movwf	___lldiv@quotient+1
  2505  00FA  3000               	movlw	0
  2506  00FB  00F9               	movwf	___lldiv@quotient
  2507  00FC  0873               	movf	___lldiv@divisor+3,w
  2508  00FD  0472               	iorwf	___lldiv@divisor+2,w
  2509  00FE  0471               	iorwf	___lldiv@divisor+1,w
  2510  00FF  0470               	iorwf	___lldiv@divisor,w
  2511  0100  1903               	skipnz
  2512  0101  2903               	goto	u621
  2513  0102  2904               	goto	u620
  2514  0103                     u621:
  2515  0103  2951               	goto	l1054
  2516  0104                     u620:
  2517  0104                     l1036:
  2518  0104  01FD               	clrf	___lldiv@counter
  2519  0105  0AFD               	incf	___lldiv@counter,f
  2520  0106  2914               	goto	l1040
  2521  0107                     l1038:
  2522  0107  3001               	movlw	1
  2523  0108  00F8               	movwf	??___lldiv
  2524  0109                     u635:
  2525  0109  1003               	clrc
  2526  010A  0DF0               	rlf	___lldiv@divisor,f
  2527  010B  0DF1               	rlf	___lldiv@divisor+1,f
  2528  010C  0DF2               	rlf	___lldiv@divisor+2,f
  2529  010D  0DF3               	rlf	___lldiv@divisor+3,f
  2530  010E  0BF8               	decfsz	??___lldiv,f
  2531  010F  2909               	goto	u635
  2532  0110  3001               	movlw	1
  2533  0111  00F8               	movwf	??___lldiv
  2534  0112  0878               	movf	??___lldiv,w
  2535  0113  07FD               	addwf	___lldiv@counter,f
  2536  0114                     l1040:
  2537  0114  1FF3               	btfss	___lldiv@divisor+3,7
  2538  0115  2917               	goto	u641
  2539  0116  2918               	goto	u640
  2540  0117                     u641:
  2541  0117  2907               	goto	l1038
  2542  0118                     u640:
  2543  0118                     l1042:
  2544  0118  3001               	movlw	1
  2545  0119  00F8               	movwf	??___lldiv
  2546  011A                     u655:
  2547  011A  1003               	clrc
  2548  011B  0DF9               	rlf	___lldiv@quotient,f
  2549  011C  0DFA               	rlf	___lldiv@quotient+1,f
  2550  011D  0DFB               	rlf	___lldiv@quotient+2,f
  2551  011E  0DFC               	rlf	___lldiv@quotient+3,f
  2552  011F  0BF8               	decfsz	??___lldiv,f
  2553  0120  291A               	goto	u655
  2554  0121                     l1044:
  2555  0121  0873               	movf	___lldiv@divisor+3,w
  2556  0122  0277               	subwf	___lldiv@dividend+3,w
  2557  0123  1D03               	skipz
  2558  0124  292F               	goto	u665
  2559  0125  0872               	movf	___lldiv@divisor+2,w
  2560  0126  0276               	subwf	___lldiv@dividend+2,w
  2561  0127  1D03               	skipz
  2562  0128  292F               	goto	u665
  2563  0129  0871               	movf	___lldiv@divisor+1,w
  2564  012A  0275               	subwf	___lldiv@dividend+1,w
  2565  012B  1D03               	skipz
  2566  012C  292F               	goto	u665
  2567  012D  0870               	movf	___lldiv@divisor,w
  2568  012E  0274               	subwf	___lldiv@dividend,w
  2569  012F                     u665:
  2570  012F  1C03               	skipc
  2571  0130  2932               	goto	u661
  2572  0131  2933               	goto	u660
  2573  0132                     u661:
  2574  0132  2942               	goto	l1050
  2575  0133                     u660:
  2576  0133                     l1046:
  2577  0133  0870               	movf	___lldiv@divisor,w
  2578  0134  02F4               	subwf	___lldiv@dividend,f
  2579  0135  0871               	movf	___lldiv@divisor+1,w
  2580  0136  1C03               	skipc
  2581  0137  0F71               	incfsz	___lldiv@divisor+1,w
  2582  0138  02F5               	subwf	___lldiv@dividend+1,f
  2583  0139  0872               	movf	___lldiv@divisor+2,w
  2584  013A  1C03               	skipc
  2585  013B  0F72               	incfsz	___lldiv@divisor+2,w
  2586  013C  02F6               	subwf	___lldiv@dividend+2,f
  2587  013D  0873               	movf	___lldiv@divisor+3,w
  2588  013E  1C03               	skipc
  2589  013F  0F73               	incfsz	___lldiv@divisor+3,w
  2590  0140  02F7               	subwf	___lldiv@dividend+3,f
  2591  0141                     l1048:
  2592  0141  1479               	bsf	___lldiv@quotient,0
  2593  0142                     l1050:
  2594  0142  3001               	movlw	1
  2595  0143                     u675:
  2596  0143  1003               	clrc
  2597  0144  0CF3               	rrf	___lldiv@divisor+3,f
  2598  0145  0CF2               	rrf	___lldiv@divisor+2,f
  2599  0146  0CF1               	rrf	___lldiv@divisor+1,f
  2600  0147  0CF0               	rrf	___lldiv@divisor,f
  2601  0148  3EFF               	addlw	-1
  2602  0149  1D03               	skipz
  2603  014A  2943               	goto	u675
  2604  014B                     l1052:
  2605  014B  3001               	movlw	1
  2606  014C  02FD               	subwf	___lldiv@counter,f
  2607  014D  1D03               	btfss	3,2
  2608  014E  2950               	goto	u681
  2609  014F  2951               	goto	u680
  2610  0150                     u681:
  2611  0150  2918               	goto	l1042
  2612  0151                     u680:
  2613  0151                     l1054:
  2614  0151  087C               	movf	___lldiv@quotient+3,w
  2615  0152  00F3               	movwf	?___lldiv+3
  2616  0153  087B               	movf	___lldiv@quotient+2,w
  2617  0154  00F2               	movwf	?___lldiv+2
  2618  0155  087A               	movf	___lldiv@quotient+1,w
  2619  0156  00F1               	movwf	?___lldiv+1
  2620  0157  0879               	movf	___lldiv@quotient,w
  2621  0158  00F0               	movwf	?___lldiv
  2622  0159                     l278:
  2623  0159  0008               	return
  2624  015A                     __end_of___lldiv:
  2625                           
  2626                           	psect	text6
  2627  015A                     __ptext6:	
  2628 ;; *************** function ___aldiv *****************
  2629 ;; Defined at:
  2630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  divisor         4    0[COMMON] long 
  2633 ;;  dividend        4    4[COMMON] long 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  quotient        4    2[BANK0 ] long 
  2636 ;;  sign            1    1[BANK0 ] unsigned char 
  2637 ;;  counter         1    0[BANK0 ] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  4    0[COMMON] long 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         8       0       0       0       0
  2648 ;;      Locals:         0       6       0       0       0
  2649 ;;      Temps:          1       0       0       0       0
  2650 ;;      Totals:         9       6       0       0       0
  2651 ;;Total ram usage:       15 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_BMP280_readPressure
  2657 ;;		_BMP280_readTemperature
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function ___aldiv
  2663  015A                     ___aldiv:
  2664  015A                     l1102:	
  2665                           ;incstack = 0
  2666                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2667                           
  2668  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2669  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2670  015C  01A1               	clrf	___aldiv@sign
  2671  015D                     l1104:
  2672  015D  1FF3               	btfss	___aldiv@divisor+3,7
  2673  015E  2960               	goto	u791
  2674  015F  2961               	goto	u790
  2675  0160                     u791:
  2676  0160  296E               	goto	l307
  2677  0161                     u790:
  2678  0161                     l1106:
  2679  0161  09F0               	comf	___aldiv@divisor,f
  2680  0162  09F1               	comf	___aldiv@divisor+1,f
  2681  0163  09F2               	comf	___aldiv@divisor+2,f
  2682  0164  09F3               	comf	___aldiv@divisor+3,f
  2683  0165  0AF0               	incf	___aldiv@divisor,f
  2684  0166  1903               	skipnz
  2685  0167  0AF1               	incf	___aldiv@divisor+1,f
  2686  0168  1903               	skipnz
  2687  0169  0AF2               	incf	___aldiv@divisor+2,f
  2688  016A  1903               	skipnz
  2689  016B  0AF3               	incf	___aldiv@divisor+3,f
  2690  016C  01A1               	clrf	___aldiv@sign
  2691  016D  0AA1               	incf	___aldiv@sign,f
  2692  016E                     l307:
  2693  016E  1FF7               	btfss	___aldiv@dividend+3,7
  2694  016F  2971               	goto	u801
  2695  0170  2972               	goto	u800
  2696  0171                     u801:
  2697  0171  2981               	goto	l1112
  2698  0172                     u800:
  2699  0172                     l1108:
  2700  0172  09F4               	comf	___aldiv@dividend,f
  2701  0173  09F5               	comf	___aldiv@dividend+1,f
  2702  0174  09F6               	comf	___aldiv@dividend+2,f
  2703  0175  09F7               	comf	___aldiv@dividend+3,f
  2704  0176  0AF4               	incf	___aldiv@dividend,f
  2705  0177  1903               	skipnz
  2706  0178  0AF5               	incf	___aldiv@dividend+1,f
  2707  0179  1903               	skipnz
  2708  017A  0AF6               	incf	___aldiv@dividend+2,f
  2709  017B  1903               	skipnz
  2710  017C  0AF7               	incf	___aldiv@dividend+3,f
  2711  017D                     l1110:
  2712  017D  3001               	movlw	1
  2713  017E  00F8               	movwf	??___aldiv
  2714  017F  0878               	movf	??___aldiv,w
  2715  0180  06A1               	xorwf	___aldiv@sign,f
  2716  0181                     l1112:
  2717  0181  3000               	movlw	0
  2718  0182  00A5               	movwf	___aldiv@quotient+3
  2719  0183  3000               	movlw	0
  2720  0184  00A4               	movwf	___aldiv@quotient+2
  2721  0185  3000               	movlw	0
  2722  0186  00A3               	movwf	___aldiv@quotient+1
  2723  0187  3000               	movlw	0
  2724  0188  00A2               	movwf	___aldiv@quotient
  2725  0189                     l1114:
  2726  0189  0873               	movf	___aldiv@divisor+3,w
  2727  018A  0472               	iorwf	___aldiv@divisor+2,w
  2728  018B  0471               	iorwf	___aldiv@divisor+1,w
  2729  018C  0470               	iorwf	___aldiv@divisor,w
  2730  018D  1903               	skipnz
  2731  018E  2990               	goto	u811
  2732  018F  2991               	goto	u810
  2733  0190                     u811:
  2734  0190  29DE               	goto	l1134
  2735  0191                     u810:
  2736  0191                     l1116:
  2737  0191  01A0               	clrf	___aldiv@counter
  2738  0192  0AA0               	incf	___aldiv@counter,f
  2739  0193  29A1               	goto	l1120
  2740  0194                     l1118:
  2741  0194  3001               	movlw	1
  2742  0195  00F8               	movwf	??___aldiv
  2743  0196                     u825:
  2744  0196  1003               	clrc
  2745  0197  0DF0               	rlf	___aldiv@divisor,f
  2746  0198  0DF1               	rlf	___aldiv@divisor+1,f
  2747  0199  0DF2               	rlf	___aldiv@divisor+2,f
  2748  019A  0DF3               	rlf	___aldiv@divisor+3,f
  2749  019B  0BF8               	decfsz	??___aldiv,f
  2750  019C  2996               	goto	u825
  2751  019D  3001               	movlw	1
  2752  019E  00F8               	movwf	??___aldiv
  2753  019F  0878               	movf	??___aldiv,w
  2754  01A0  07A0               	addwf	___aldiv@counter,f
  2755  01A1                     l1120:
  2756  01A1  1FF3               	btfss	___aldiv@divisor+3,7
  2757  01A2  29A4               	goto	u831
  2758  01A3  29A5               	goto	u830
  2759  01A4                     u831:
  2760  01A4  2994               	goto	l1118
  2761  01A5                     u830:
  2762  01A5                     l1122:
  2763  01A5  3001               	movlw	1
  2764  01A6  00F8               	movwf	??___aldiv
  2765  01A7                     u845:
  2766  01A7  1003               	clrc
  2767  01A8  0DA2               	rlf	___aldiv@quotient,f
  2768  01A9  0DA3               	rlf	___aldiv@quotient+1,f
  2769  01AA  0DA4               	rlf	___aldiv@quotient+2,f
  2770  01AB  0DA5               	rlf	___aldiv@quotient+3,f
  2771  01AC  0BF8               	decfsz	??___aldiv,f
  2772  01AD  29A7               	goto	u845
  2773  01AE                     l1124:
  2774  01AE  0873               	movf	___aldiv@divisor+3,w
  2775  01AF  0277               	subwf	___aldiv@dividend+3,w
  2776  01B0  1D03               	skipz
  2777  01B1  29BC               	goto	u855
  2778  01B2  0872               	movf	___aldiv@divisor+2,w
  2779  01B3  0276               	subwf	___aldiv@dividend+2,w
  2780  01B4  1D03               	skipz
  2781  01B5  29BC               	goto	u855
  2782  01B6  0871               	movf	___aldiv@divisor+1,w
  2783  01B7  0275               	subwf	___aldiv@dividend+1,w
  2784  01B8  1D03               	skipz
  2785  01B9  29BC               	goto	u855
  2786  01BA  0870               	movf	___aldiv@divisor,w
  2787  01BB  0274               	subwf	___aldiv@dividend,w
  2788  01BC                     u855:
  2789  01BC  1C03               	skipc
  2790  01BD  29BF               	goto	u851
  2791  01BE  29C0               	goto	u850
  2792  01BF                     u851:
  2793  01BF  29CF               	goto	l1130
  2794  01C0                     u850:
  2795  01C0                     l1126:
  2796  01C0  0870               	movf	___aldiv@divisor,w
  2797  01C1  02F4               	subwf	___aldiv@dividend,f
  2798  01C2  0871               	movf	___aldiv@divisor+1,w
  2799  01C3  1C03               	skipc
  2800  01C4  0F71               	incfsz	___aldiv@divisor+1,w
  2801  01C5  02F5               	subwf	___aldiv@dividend+1,f
  2802  01C6  0872               	movf	___aldiv@divisor+2,w
  2803  01C7  1C03               	skipc
  2804  01C8  0F72               	incfsz	___aldiv@divisor+2,w
  2805  01C9  02F6               	subwf	___aldiv@dividend+2,f
  2806  01CA  0873               	movf	___aldiv@divisor+3,w
  2807  01CB  1C03               	skipc
  2808  01CC  0F73               	incfsz	___aldiv@divisor+3,w
  2809  01CD  02F7               	subwf	___aldiv@dividend+3,f
  2810  01CE                     l1128:
  2811  01CE  1422               	bsf	___aldiv@quotient,0
  2812  01CF                     l1130:
  2813  01CF  3001               	movlw	1
  2814  01D0                     u865:
  2815  01D0  1003               	clrc
  2816  01D1  0CF3               	rrf	___aldiv@divisor+3,f
  2817  01D2  0CF2               	rrf	___aldiv@divisor+2,f
  2818  01D3  0CF1               	rrf	___aldiv@divisor+1,f
  2819  01D4  0CF0               	rrf	___aldiv@divisor,f
  2820  01D5  3EFF               	addlw	-1
  2821  01D6  1D03               	skipz
  2822  01D7  29D0               	goto	u865
  2823  01D8                     l1132:
  2824  01D8  3001               	movlw	1
  2825  01D9  02A0               	subwf	___aldiv@counter,f
  2826  01DA  1D03               	btfss	3,2
  2827  01DB  29DD               	goto	u871
  2828  01DC  29DE               	goto	u870
  2829  01DD                     u871:
  2830  01DD  29A5               	goto	l1122
  2831  01DE                     u870:
  2832  01DE                     l1134:
  2833  01DE  0821               	movf	___aldiv@sign,w
  2834  01DF  1903               	btfsc	3,2
  2835  01E0  29E2               	goto	u881
  2836  01E1  29E3               	goto	u880
  2837  01E2                     u881:
  2838  01E2  29EE               	goto	l1138
  2839  01E3                     u880:
  2840  01E3                     l1136:
  2841  01E3  09A2               	comf	___aldiv@quotient,f
  2842  01E4  09A3               	comf	___aldiv@quotient+1,f
  2843  01E5  09A4               	comf	___aldiv@quotient+2,f
  2844  01E6  09A5               	comf	___aldiv@quotient+3,f
  2845  01E7  0AA2               	incf	___aldiv@quotient,f
  2846  01E8  1903               	skipnz
  2847  01E9  0AA3               	incf	___aldiv@quotient+1,f
  2848  01EA  1903               	skipnz
  2849  01EB  0AA4               	incf	___aldiv@quotient+2,f
  2850  01EC  1903               	skipnz
  2851  01ED  0AA5               	incf	___aldiv@quotient+3,f
  2852  01EE                     l1138:
  2853  01EE  0825               	movf	___aldiv@quotient+3,w
  2854  01EF  00F3               	movwf	?___aldiv+3
  2855  01F0  0824               	movf	___aldiv@quotient+2,w
  2856  01F1  00F2               	movwf	?___aldiv+2
  2857  01F2  0823               	movf	___aldiv@quotient+1,w
  2858  01F3  00F1               	movwf	?___aldiv+1
  2859  01F4  0822               	movf	___aldiv@quotient,w
  2860  01F5  00F0               	movwf	?___aldiv
  2861  01F6                     l317:
  2862  01F6  0008               	return
  2863  01F7                     __end_of___aldiv:
  2864                           
  2865                           	psect	text7
  2866  01F7                     __ptext7:	
  2867 ;; *************** function _BMP280_begin *****************
  2868 ;; Defined at:
  2869 ;;		line 155 in file "BMP280.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  mode            1    wreg     enum E1307
  2872 ;;  T_sampling      1    3[BANK0 ] enum E1312
  2873 ;;  P_sampling      1    4[BANK0 ] enum E1312
  2874 ;;  filter          1    5[BANK0 ] enum E1320
  2875 ;;  standby         1    6[BANK0 ] enum E1327
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  mode            1   13[COMMON] enum E1307
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    3[BANK0 ] int 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       4       0       0       0
  2888 ;;      Locals:         1       0       0       0       0
  2889 ;;      Temps:          0       4       0       0       0
  2890 ;;      Totals:         1       8       0       0       0
  2891 ;;Total ram usage:        9 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    4
  2894 ;; This function calls:
  2895 ;;		_BMP280_Configure
  2896 ;;		_BMP280_Read16
  2897 ;;		_BMP280_Read8
  2898 ;;		_BMP280_Write
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _BMP280_begin
  2906  01F7                     _BMP280_begin:
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  2910                           ;BMP280_begin@mode stored from wreg
  2911  01F7  00FD               	movwf	BMP280_begin@mode
  2912  01F8                     l1146:
  2913                           
  2914                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  2915  01F8  30D0               	movlw	208
  2916  01F9  120A  158A  27C4  120A  118A  	fcall	_BMP280_Read8
  2917  01FE  3A58               	xorlw	88
  2918  01FF  1903               	skipnz
  2919  0200  2A02               	goto	u891
  2920  0201  2A03               	goto	u890
  2921  0202                     u891:
  2922  0202  2A04               	goto	l1150
  2923  0203                     u890:
  2924  0203  2AD2               	goto	l134
  2925  0204                     l1150:
  2926                           
  2927                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  2928  0204  30B6               	movlw	182
  2929  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0207  00A7               	movwf	??_BMP280_begin
  2932  0208  0827               	movf	??_BMP280_begin,w
  2933  0209  00F2               	movwf	BMP280_Write@_data
  2934  020A  30E0               	movlw	224
  2935  020B  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  2936  0210                     l1152:
  2937                           
  2938                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2939  0210  3002               	movlw	2
  2940  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0213  00A9               	movwf	??_BMP280_begin+2
  2943  0214  3004               	movlw	4
  2944  0215  00A8               	movwf	??_BMP280_begin+1
  2945  0216  30B9               	movlw	185
  2946  0217  00A7               	movwf	??_BMP280_begin
  2947  0218                     u1177:
  2948  0218  0BA7               	decfsz	??_BMP280_begin,f
  2949  0219  2A18               	goto	u1177
  2950  021A  0BA8               	decfsz	??_BMP280_begin+1,f
  2951  021B  2A18               	goto	u1177
  2952  021C  0BA9               	decfsz	??_BMP280_begin+2,f
  2953  021D  2A18               	goto	u1177
  2954  021E  2A1F               	nop2
  2955  021F                     l1156:	
  2956                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  2957                           
  2958                           
  2959                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  2960  021F  30F3               	movlw	243
  2961  0220  120A  158A  27C4  120A  118A  	fcall	_BMP280_Read8
  2962  0225  3901               	andlw	1
  2963  0226  1D03               	btfss	3,2
  2964  0227  2A29               	goto	u901
  2965  0228  2A2A               	goto	u900
  2966  0229                     u901:
  2967  0229  2A10               	goto	l1152
  2968  022A                     u900:
  2969  022A                     l1158:
  2970                           
  2971                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  2972  022A  3088               	movlw	136
  2973  022B  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  2974  0230  0877               	movf	?_BMP280_Read16+1,w
  2975  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2977  0233  00B2               	movwf	(_BMP280_calib+1)^(0+128)
  2978  0234  0876               	movf	?_BMP280_Read16,w
  2979  0235  00B1               	movwf	_BMP280_calib^(0+128)
  2980                           
  2981                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  2982  0236  308A               	movlw	138
  2983  0237  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  2984  023C  0877               	movf	?_BMP280_Read16+1,w
  2985  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2986  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2987  023F  00B4               	movwf	((_BMP280_calib+1)^(0+128)+2)
  2988  0240  0876               	movf	?_BMP280_Read16,w
  2989  0241  00B3               	movwf	(_BMP280_calib^(0+128)+2)
  2990                           
  2991                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  2992  0242  308C               	movlw	140
  2993  0243  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  2994  0248  0877               	movf	?_BMP280_Read16+1,w
  2995  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2996  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2997  024B  00B6               	movwf	((_BMP280_calib+1)^(0+128)+4)
  2998  024C  0876               	movf	?_BMP280_Read16,w
  2999  024D  00B5               	movwf	(_BMP280_calib^(0+128)+4)
  3000                           
  3001                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3002  024E  308E               	movlw	142
  3003  024F  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3004  0254  0877               	movf	?_BMP280_Read16+1,w
  3005  0255  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0256  1303               	bcf	3,6	;RP1=0, select bank1
  3007  0257  00B8               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3008  0258  0876               	movf	?_BMP280_Read16,w
  3009  0259  00B7               	movwf	(_BMP280_calib^(0+128)+6)
  3010                           
  3011                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3012  025A  3090               	movlw	144
  3013  025B  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3014  0260  0877               	movf	?_BMP280_Read16+1,w
  3015  0261  1683               	bsf	3,5	;RP0=1, select bank1
  3016  0262  1303               	bcf	3,6	;RP1=0, select bank1
  3017  0263  00BA               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3018  0264  0876               	movf	?_BMP280_Read16,w
  3019  0265  00B9               	movwf	(_BMP280_calib^(0+128)+8)
  3020                           
  3021                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3022  0266  3092               	movlw	146
  3023  0267  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3024  026C  0877               	movf	?_BMP280_Read16+1,w
  3025  026D  1683               	bsf	3,5	;RP0=1, select bank1
  3026  026E  1303               	bcf	3,6	;RP1=0, select bank1
  3027  026F  00BC               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3028  0270  0876               	movf	?_BMP280_Read16,w
  3029  0271  00BB               	movwf	(_BMP280_calib^(0+128)+10)
  3030                           
  3031                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3032  0272  3094               	movlw	148
  3033  0273  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3034  0278  0877               	movf	?_BMP280_Read16+1,w
  3035  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3036  027A  1303               	bcf	3,6	;RP1=0, select bank1
  3037  027B  00BE               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3038  027C  0876               	movf	?_BMP280_Read16,w
  3039  027D  00BD               	movwf	(_BMP280_calib^(0+128)+12)
  3040                           
  3041                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3042  027E  3096               	movlw	150
  3043  027F  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3044  0284  0877               	movf	?_BMP280_Read16+1,w
  3045  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3047  0287  00C0               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3048  0288  0876               	movf	?_BMP280_Read16,w
  3049  0289  00BF               	movwf	(_BMP280_calib^(0+128)+14)
  3050                           
  3051                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3052  028A  3098               	movlw	152
  3053  028B  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3054  0290  0877               	movf	?_BMP280_Read16+1,w
  3055  0291  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0292  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0293  00C2               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3058  0294  0876               	movf	?_BMP280_Read16,w
  3059  0295  00C1               	movwf	(_BMP280_calib^(0+128)+16)
  3060                           
  3061                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3062  0296  309A               	movlw	154
  3063  0297  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3064  029C  0877               	movf	?_BMP280_Read16+1,w
  3065  029D  1683               	bsf	3,5	;RP0=1, select bank1
  3066  029E  1303               	bcf	3,6	;RP1=0, select bank1
  3067  029F  00C4               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3068  02A0  0876               	movf	?_BMP280_Read16,w
  3069  02A1  00C3               	movwf	(_BMP280_calib^(0+128)+18)
  3070                           
  3071                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3072  02A2  309C               	movlw	156
  3073  02A3  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3074  02A8  0877               	movf	?_BMP280_Read16+1,w
  3075  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  3076  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  3077  02AB  00C6               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3078  02AC  0876               	movf	?_BMP280_Read16,w
  3079  02AD  00C5               	movwf	(_BMP280_calib^(0+128)+20)
  3080                           
  3081                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3082  02AE  309E               	movlw	158
  3083  02AF  120A  118A  20A8  120A  118A  	fcall	_BMP280_Read16
  3084  02B4  0877               	movf	?_BMP280_Read16+1,w
  3085  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  3086  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  3087  02B7  00C8               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3088  02B8  0876               	movf	?_BMP280_Read16,w
  3089  02B9  00C7               	movwf	(_BMP280_calib^(0+128)+22)
  3090                           
  3091                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3092  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3093  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3094  02BC  0823               	movf	BMP280_begin@T_sampling,w
  3095  02BD  00A7               	movwf	??_BMP280_begin
  3096  02BE  0827               	movf	??_BMP280_begin,w
  3097  02BF  00F6               	movwf	BMP280_Configure@T_sampling
  3098  02C0  0824               	movf	BMP280_begin@P_sampling,w
  3099  02C1  00A8               	movwf	??_BMP280_begin+1
  3100  02C2  0828               	movf	??_BMP280_begin+1,w
  3101  02C3  00F7               	movwf	BMP280_Configure@P_sampling
  3102  02C4  0825               	movf	BMP280_begin@filter,w
  3103  02C5  00A9               	movwf	??_BMP280_begin+2
  3104  02C6  0829               	movf	??_BMP280_begin+2,w
  3105  02C7  00F8               	movwf	BMP280_Configure@filter
  3106  02C8  0826               	movf	BMP280_begin@standby,w
  3107  02C9  00AA               	movwf	??_BMP280_begin+3
  3108  02CA  082A               	movf	??_BMP280_begin+3,w
  3109  02CB  00F9               	movwf	BMP280_Configure@standby
  3110  02CC  087D               	movf	BMP280_begin@mode,w
  3111  02CD  120A  118A  2018  120A  118A  	fcall	_BMP280_Configure
  3112  02D2                     l134:
  3113  02D2  0008               	return
  3114  02D3                     __end_of_BMP280_begin:
  3115                           
  3116                           	psect	text8
  3117  0FC4                     __ptext8:	
  3118 ;; *************** function _BMP280_Read8 *****************
  3119 ;; Defined at:
  3120 ;;		line 105 in file "BMP280.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  reg_addr        1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  reg_addr        1    8[COMMON] unsigned char 
  3125 ;;  ret             1    9[COMMON] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      unsigned char 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       0       0       0       0
  3136 ;;      Locals:         2       0       0       0       0
  3137 ;;      Temps:          2       0       0       0       0
  3138 ;;      Totals:         4       0       0       0       0
  3139 ;;Total ram usage:        4 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    2
  3142 ;; This function calls:
  3143 ;;		_I2C_Master_Read
  3144 ;;		_I2C_Master_Start
  3145 ;;		_I2C_Master_Stop
  3146 ;;		_I2C_Master_Write
  3147 ;; This function is called by:
  3148 ;;		_BMP280_begin
  3149 ;;		_BMP280_ForcedMeasurement
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _BMP280_Read8
  3155  0FC4                     _BMP280_Read8:
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  3159                           ;BMP280_Read8@reg_addr stored from wreg
  3160  0FC4  00F8               	movwf	BMP280_Read8@reg_addr
  3161  0FC5                     l1070:
  3162                           
  3163                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  3164  0FC5  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3165                           
  3166                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  3167  0FCA  30EE               	movlw	238
  3168  0FCB  00F0               	movwf	I2C_Master_Write@d
  3169  0FCC  3000               	movlw	0
  3170  0FCD  00F1               	movwf	I2C_Master_Write@d+1
  3171  0FCE  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3172                           
  3173                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  3174  0FD3  0878               	movf	BMP280_Read8@reg_addr,w
  3175  0FD4  00F6               	movwf	??_BMP280_Read8
  3176  0FD5  01F7               	clrf	??_BMP280_Read8+1
  3177  0FD6  0876               	movf	??_BMP280_Read8,w
  3178  0FD7  00F0               	movwf	I2C_Master_Write@d
  3179  0FD8  0877               	movf	??_BMP280_Read8+1,w
  3180  0FD9  00F1               	movwf	I2C_Master_Write@d+1
  3181  0FDA  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3182                           
  3183                           ;BMP280.c: 112:   I2C_Master_Start();
  3184  0FDF  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3185                           
  3186                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  3187  0FE4  30EF               	movlw	239
  3188  0FE5  00F0               	movwf	I2C_Master_Write@d
  3189  0FE6  3000               	movlw	0
  3190  0FE7  00F1               	movwf	I2C_Master_Write@d+1
  3191  0FE8  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3192                           
  3193                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  3194  0FED  3000               	movlw	0
  3195  0FEE  00F0               	movwf	I2C_Master_Read@a
  3196  0FEF  00F1               	movwf	I2C_Master_Read@a+1
  3197  0FF0  120A  158A  275E  120A  158A  	fcall	_I2C_Master_Read
  3198  0FF5  0870               	movf	?_I2C_Master_Read,w
  3199  0FF6  00F6               	movwf	??_BMP280_Read8
  3200  0FF7  0876               	movf	??_BMP280_Read8,w
  3201  0FF8  00F9               	movwf	BMP280_Read8@ret
  3202                           
  3203                           ;BMP280.c: 115:   I2C_Master_Stop();
  3204  0FF9  120A  158A  26E5  120A  158A  	fcall	_I2C_Master_Stop
  3205  0FFE                     l1072:
  3206                           
  3207                           ;BMP280.c: 117:   return ret;
  3208  0FFE  0879               	movf	BMP280_Read8@ret,w
  3209  0FFF                     l124:
  3210  0FFF  0008               	return
  3211  1000                     __end_of_BMP280_Read8:
  3212                           
  3213                           	psect	text9
  3214  00A8                     __ptext9:	
  3215 ;; *************** function _BMP280_Read16 *****************
  3216 ;; Defined at:
  3217 ;;		line 121 in file "BMP280.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  reg_addr        1    wreg     unsigned char 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  reg_addr        1   10[COMMON] unsigned char 
  3222 ;;  ret             2   11[COMMON] struct .
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2    6[COMMON] unsigned int 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         2       0       0       0       0
  3233 ;;      Locals:         3       0       0       0       0
  3234 ;;      Temps:          2       0       0       0       0
  3235 ;;      Totals:         7       0       0       0       0
  3236 ;;Total ram usage:        7 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		_I2C_Master_Read
  3241 ;;		_I2C_Master_Start
  3242 ;;		_I2C_Master_Stop
  3243 ;;		_I2C_Master_Write
  3244 ;; This function is called by:
  3245 ;;		_BMP280_begin
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _BMP280_Read16
  3251  00A8                     _BMP280_Read16:
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  3255                           ;BMP280_Read16@reg_addr stored from wreg
  3256  00A8  00FA               	movwf	BMP280_Read16@reg_addr
  3257  00A9                     l1076:
  3258                           
  3259                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  3260  00A9  120A  158A  26DC  120A  118A  	fcall	_I2C_Master_Start
  3261                           
  3262                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  3263  00AE  30EE               	movlw	238
  3264  00AF  00F0               	movwf	I2C_Master_Write@d
  3265  00B0  3000               	movlw	0
  3266  00B1  00F1               	movwf	I2C_Master_Write@d+1
  3267  00B2  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3268                           
  3269                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  3270  00B7  087A               	movf	BMP280_Read16@reg_addr,w
  3271  00B8  00F8               	movwf	??_BMP280_Read16
  3272  00B9  01F9               	clrf	??_BMP280_Read16+1
  3273  00BA  0878               	movf	??_BMP280_Read16,w
  3274  00BB  00F0               	movwf	I2C_Master_Write@d
  3275  00BC  0879               	movf	??_BMP280_Read16+1,w
  3276  00BD  00F1               	movwf	I2C_Master_Write@d+1
  3277  00BE  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3278                           
  3279                           ;BMP280.c: 132:   I2C_Master_Start();
  3280  00C3  120A  158A  26DC  120A  118A  	fcall	_I2C_Master_Start
  3281                           
  3282                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  3283  00C8  30EF               	movlw	239
  3284  00C9  00F0               	movwf	I2C_Master_Write@d
  3285  00CA  3000               	movlw	0
  3286  00CB  00F1               	movwf	I2C_Master_Write@d+1
  3287  00CC  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3288                           
  3289                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  3290  00D1  3001               	movlw	1
  3291  00D2  00F0               	movwf	I2C_Master_Read@a
  3292  00D3  3000               	movlw	0
  3293  00D4  00F1               	movwf	I2C_Master_Read@a+1
  3294  00D5  120A  158A  275E  120A  118A  	fcall	_I2C_Master_Read
  3295  00DA  0870               	movf	?_I2C_Master_Read,w
  3296  00DB  00F8               	movwf	??_BMP280_Read16
  3297  00DC  0878               	movf	??_BMP280_Read16,w
  3298  00DD  00FB               	movwf	BMP280_Read16@ret
  3299                           
  3300                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  3301  00DE  3000               	movlw	0
  3302  00DF  00F0               	movwf	I2C_Master_Read@a
  3303  00E0  00F1               	movwf	I2C_Master_Read@a+1
  3304  00E1  120A  158A  275E  120A  118A  	fcall	_I2C_Master_Read
  3305  00E6  0870               	movf	?_I2C_Master_Read,w
  3306  00E7  00F8               	movwf	??_BMP280_Read16
  3307  00E8  0878               	movf	??_BMP280_Read16,w
  3308  00E9  00FC               	movwf	BMP280_Read16@ret+1
  3309                           
  3310                           ;BMP280.c: 136:   I2C_Master_Stop();
  3311  00EA  120A  158A  26E5  120A  118A  	fcall	_I2C_Master_Stop
  3312  00EF                     l1078:
  3313                           
  3314                           ;BMP280.c: 138:   return(ret.w);
  3315  00EF  087C               	movf	BMP280_Read16@ret+1,w
  3316  00F0  00F7               	movwf	?_BMP280_Read16+1
  3317  00F1  087B               	movf	BMP280_Read16@ret,w
  3318  00F2  00F6               	movwf	?_BMP280_Read16
  3319  00F3                     l127:
  3320  00F3  0008               	return
  3321  00F4                     __end_of_BMP280_Read16:
  3322                           
  3323                           	psect	text10
  3324  0F5E                     __ptext10:	
  3325 ;; *************** function _I2C_Master_Read *****************
  3326 ;; Defined at:
  3327 ;;		line 74 in file "I2C.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  a               2    0[COMMON] unsigned short 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  temp            2    4[COMMON] unsigned short 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    0[COMMON] unsigned short 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         2       0       0       0       0
  3342 ;;      Locals:         2       0       0       0       0
  3343 ;;      Temps:          2       0       0       0       0
  3344 ;;      Totals:         6       0       0       0       0
  3345 ;;Total ram usage:        6 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		_I2C_Master_Wait
  3350 ;; This function is called by:
  3351 ;;		_BMP280_Read8
  3352 ;;		_BMP280_Read16
  3353 ;;		_BMP280_Update
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _I2C_Master_Read
  3359  0F5E                     _I2C_Master_Read:
  3360  0F5E                     l1016:	
  3361                           ;incstack = 0
  3362                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3363                           
  3364                           
  3365                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3366  0F5E  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3367  0F63                     l1018:
  3368                           
  3369                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3370  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  3371  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  3372  0F65  1591               	bsf	17,3	;volatile
  3373                           
  3374                           ;I2C.c: 79:     I2C_Master_Wait();
  3375  0F66  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3376  0F6B                     l1020:
  3377                           
  3378                           ;I2C.c: 80:     temp = SSPBUF;
  3379  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0F6D  0813               	movf	19,w	;volatile
  3382  0F6E  00F2               	movwf	??_I2C_Master_Read
  3383  0F6F  01F3               	clrf	??_I2C_Master_Read+1
  3384  0F70  0872               	movf	??_I2C_Master_Read,w
  3385  0F71  00F4               	movwf	I2C_Master_Read@temp
  3386  0F72  0873               	movf	??_I2C_Master_Read+1,w
  3387  0F73  00F5               	movwf	I2C_Master_Read@temp+1
  3388  0F74                     l1022:
  3389                           
  3390                           ;I2C.c: 81:     I2C_Master_Wait();
  3391  0F74  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3392  0F79                     l1024:
  3393                           
  3394                           ;I2C.c: 82:     if(a == 1){
  3395  0F79  0370               	decf	I2C_Master_Read@a,w
  3396  0F7A  0471               	iorwf	I2C_Master_Read@a+1,w
  3397  0F7B  1D03               	btfss	3,2
  3398  0F7C  2F7E               	goto	u611
  3399  0F7D  2F7F               	goto	u610
  3400  0F7E                     u611:
  3401  0F7E  2F83               	goto	l95
  3402  0F7F                     u610:
  3403  0F7F                     l1026:
  3404                           
  3405                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3406  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  3408  0F81  1291               	bcf	17,5	;volatile
  3409                           
  3410                           ;I2C.c: 84:     }else{
  3411  0F82  2F86               	goto	l96
  3412  0F83                     l95:
  3413                           
  3414                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3415  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0F85  1691               	bsf	17,5	;volatile
  3418  0F86                     l96:	
  3419                           ;I2C.c: 86:     }
  3420                           
  3421                           
  3422                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3423  0F86  1611               	bsf	17,4	;volatile
  3424  0F87                     l1028:
  3425                           
  3426                           ;I2C.c: 88:     return temp;
  3427  0F87  0875               	movf	I2C_Master_Read@temp+1,w
  3428  0F88  00F1               	movwf	?_I2C_Master_Read+1
  3429  0F89  0874               	movf	I2C_Master_Read@temp,w
  3430  0F8A  00F0               	movwf	?_I2C_Master_Read
  3431  0F8B                     l97:
  3432  0F8B  0008               	return
  3433  0F8C                     __end_of_I2C_Master_Read:
  3434                           
  3435                           	psect	text11
  3436  0018                     __ptext11:	
  3437 ;; *************** function _BMP280_Configure *****************
  3438 ;; Defined at:
  3439 ;;		line 142 in file "BMP280.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  mode            1    wreg     enum E1307
  3442 ;;  T_sampling      1    6[COMMON] enum E1312
  3443 ;;  P_sampling      1    7[COMMON] enum E1312
  3444 ;;  filter          1    8[COMMON] enum E1320
  3445 ;;  standby         1    9[COMMON] enum E1327
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  mode            1    0[BANK0 ] enum E1307
  3448 ;;  _config         1    2[BANK0 ] unsigned char 
  3449 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         4       0       0       0       0
  3460 ;;      Locals:         0       3       0       0       0
  3461 ;;      Temps:          3       0       0       0       0
  3462 ;;      Totals:         7       3       0       0       0
  3463 ;;Total ram usage:       10 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    3
  3466 ;; This function calls:
  3467 ;;		_BMP280_Write
  3468 ;; This function is called by:
  3469 ;;		_BMP280_begin
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _BMP280_Configure
  3475  0018                     _BMP280_Configure:
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  3479                           ;BMP280_Configure@mode stored from wreg
  3480  0018  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0019  1303               	bcf	3,6	;RP1=0, select bank0
  3482  001A  00A0               	movwf	BMP280_Configure@mode
  3483  001B                     l1082:
  3484                           
  3485                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  3486  001B  0878               	movf	BMP280_Configure@filter,w
  3487  001C  00FA               	movwf	??_BMP280_Configure
  3488  001D  3002               	movlw	2
  3489  001E                     u705:
  3490  001E  1003               	clrc
  3491  001F  0DFA               	rlf	??_BMP280_Configure,f
  3492  0020  3EFF               	addlw	-1
  3493  0021  1D03               	skipz
  3494  0022  281E               	goto	u705
  3495  0023  0879               	movf	BMP280_Configure@standby,w
  3496  0024  00FB               	movwf	??_BMP280_Configure+1
  3497  0025  3004               	movlw	4
  3498  0026                     u715:
  3499  0026  1003               	clrc
  3500  0027  0DFB               	rlf	??_BMP280_Configure+1,f
  3501  0028  3EFF               	addlw	-1
  3502  0029  1D03               	skipz
  3503  002A  2826               	goto	u715
  3504  002B  1003               	clrc
  3505  002C  0D7B               	rlf	??_BMP280_Configure+1,w
  3506  002D  047A               	iorwf	??_BMP280_Configure,w
  3507  002E  39FC               	andlw	252
  3508  002F  00FC               	movwf	??_BMP280_Configure+2
  3509  0030  087C               	movf	??_BMP280_Configure+2,w
  3510  0031  00A2               	movwf	BMP280_Configure@_config
  3511                           
  3512                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  3513  0032  0877               	movf	BMP280_Configure@P_sampling,w
  3514  0033  00FA               	movwf	??_BMP280_Configure
  3515  0034  3002               	movlw	2
  3516  0035                     u725:
  3517  0035  1003               	clrc
  3518  0036  0DFA               	rlf	??_BMP280_Configure,f
  3519  0037  3EFF               	addlw	-1
  3520  0038  1D03               	skipz
  3521  0039  2835               	goto	u725
  3522  003A  0876               	movf	BMP280_Configure@T_sampling,w
  3523  003B  00FB               	movwf	??_BMP280_Configure+1
  3524  003C  3004               	movlw	4
  3525  003D                     u735:
  3526  003D  1003               	clrc
  3527  003E  0DFB               	rlf	??_BMP280_Configure+1,f
  3528  003F  3EFF               	addlw	-1
  3529  0040  1D03               	skipz
  3530  0041  283D               	goto	u735
  3531  0042  1003               	clrc
  3532  0043  0D7B               	rlf	??_BMP280_Configure+1,w
  3533  0044  047A               	iorwf	??_BMP280_Configure,w
  3534  0045  0420               	iorwf	BMP280_Configure@mode,w
  3535  0046  00FC               	movwf	??_BMP280_Configure+2
  3536  0047  087C               	movf	??_BMP280_Configure+2,w
  3537  0048  00A1               	movwf	BMP280_Configure@_ctrl_meas
  3538  0049                     l1084:
  3539                           
  3540                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  3541  0049  0822               	movf	BMP280_Configure@_config,w
  3542  004A  00FA               	movwf	??_BMP280_Configure
  3543  004B  087A               	movf	??_BMP280_Configure,w
  3544  004C  00F2               	movwf	BMP280_Write@_data
  3545  004D  30F5               	movlw	245
  3546  004E  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  3547  0053                     l1086:
  3548                           
  3549                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  3550  0053  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0054  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0055  0821               	movf	BMP280_Configure@_ctrl_meas,w
  3553  0056  00FA               	movwf	??_BMP280_Configure
  3554  0057  087A               	movf	??_BMP280_Configure,w
  3555  0058  00F2               	movwf	BMP280_Write@_data
  3556  0059  30F4               	movlw	244
  3557  005A  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  3558  005F                     l130:
  3559  005F  0008               	return
  3560  0060                     __end_of_BMP280_Configure:
  3561                           
  3562                           	psect	text12
  3563  0F31                     __ptext12:	
  3564 ;; *************** function _BMP280_Write *****************
  3565 ;; Defined at:
  3566 ;;		line 95 in file "BMP280.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  reg_addr        1    wreg     unsigned char 
  3569 ;;  _data           1    2[COMMON] unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  reg_addr        1    5[COMMON] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, pclath, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3581 ;;      Params:         1       0       0       0       0
  3582 ;;      Locals:         1       0       0       0       0
  3583 ;;      Temps:          2       0       0       0       0
  3584 ;;      Totals:         4       0       0       0       0
  3585 ;;Total ram usage:        4 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    2
  3588 ;; This function calls:
  3589 ;;		_I2C_Master_Start
  3590 ;;		_I2C_Master_Stop
  3591 ;;		_I2C_Master_Write
  3592 ;; This function is called by:
  3593 ;;		_BMP280_Configure
  3594 ;;		_BMP280_begin
  3595 ;;		_BMP280_ForcedMeasurement
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _BMP280_Write
  3601  0F31                     _BMP280_Write:
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  3605                           ;BMP280_Write@reg_addr stored from wreg
  3606  0F31  00F5               	movwf	BMP280_Write@reg_addr
  3607  0F32                     l1032:
  3608                           
  3609                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  3610  0F32  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3611                           
  3612                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  3613  0F37  30EE               	movlw	238
  3614  0F38  00F0               	movwf	I2C_Master_Write@d
  3615  0F39  3000               	movlw	0
  3616  0F3A  00F1               	movwf	I2C_Master_Write@d+1
  3617  0F3B  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3618                           
  3619                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  3620  0F40  0875               	movf	BMP280_Write@reg_addr,w
  3621  0F41  00F3               	movwf	??_BMP280_Write
  3622  0F42  01F4               	clrf	??_BMP280_Write+1
  3623  0F43  0873               	movf	??_BMP280_Write,w
  3624  0F44  00F0               	movwf	I2C_Master_Write@d
  3625  0F45  0874               	movf	??_BMP280_Write+1,w
  3626  0F46  00F1               	movwf	I2C_Master_Write@d+1
  3627  0F47  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3628                           
  3629                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  3630  0F4C  0872               	movf	BMP280_Write@_data,w
  3631  0F4D  00F3               	movwf	??_BMP280_Write
  3632  0F4E  01F4               	clrf	??_BMP280_Write+1
  3633  0F4F  0873               	movf	??_BMP280_Write,w
  3634  0F50  00F0               	movwf	I2C_Master_Write@d
  3635  0F51  0874               	movf	??_BMP280_Write+1,w
  3636  0F52  00F1               	movwf	I2C_Master_Write@d+1
  3637  0F53  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3638                           
  3639                           ;BMP280.c: 101:   I2C_Master_Stop();
  3640  0F58  120A  158A  26E5  120A  158A  	fcall	_I2C_Master_Stop
  3641  0F5D                     l121:
  3642  0F5D  0008               	return
  3643  0F5E                     __end_of_BMP280_Write:
  3644                           
  3645                           	psect	text13
  3646  0EEE                     __ptext13:	
  3647 ;; *************** function _I2C_Master_Write *****************
  3648 ;; Defined at:
  3649 ;;		line 65 in file "I2C.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  d               2    0[COMMON] unsigned int 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0, pclath, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         2       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0
  3666 ;;      Totals:         2       0       0       0       0
  3667 ;;Total ram usage:        2 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		_I2C_Master_Wait
  3672 ;; This function is called by:
  3673 ;;		_BMP280_Write
  3674 ;;		_BMP280_Read8
  3675 ;;		_BMP280_Read16
  3676 ;;		_BMP280_Update
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _I2C_Master_Write
  3682  0EEE                     _I2C_Master_Write:
  3683  0EEE                     l1012:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3686                           
  3687                           
  3688                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3689  0EEE  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3690  0EF3                     l1014:
  3691                           
  3692                           ;I2C.c: 68:     SSPBUF = d;
  3693  0EF3  0870               	movf	I2C_Master_Write@d,w
  3694  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0EF6  0093               	movwf	19	;volatile
  3697  0EF7                     l92:
  3698  0EF7  0008               	return
  3699  0EF8                     __end_of_I2C_Master_Write:
  3700                           
  3701                           	psect	text14
  3702  0EE5                     __ptext14:	
  3703 ;; *************** function _I2C_Master_Stop *****************
  3704 ;; Defined at:
  3705 ;;		line 55 in file "I2C.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0, pclath, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    1
  3726 ;; This function calls:
  3727 ;;		_I2C_Master_Wait
  3728 ;; This function is called by:
  3729 ;;		_BMP280_Write
  3730 ;;		_BMP280_Read8
  3731 ;;		_BMP280_Read16
  3732 ;;		_BMP280_Update
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _I2C_Master_Stop
  3738  0EE5                     _I2C_Master_Stop:
  3739  0EE5                     l1008:	
  3740                           ;incstack = 0
  3741                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3742                           
  3743                           
  3744                           ;I2C.c: 57:     I2C_Master_Wait();
  3745  0EE5  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3746  0EEA                     l1010:
  3747                           
  3748                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3749  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3750  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3751  0EEC  1511               	bsf	17,2	;volatile
  3752  0EED                     l89:
  3753  0EED  0008               	return
  3754  0EEE                     __end_of_I2C_Master_Stop:
  3755                           
  3756                           	psect	text15
  3757  0EDC                     __ptext15:	
  3758 ;; *************** function _I2C_Master_Start *****************
  3759 ;; Defined at:
  3760 ;;		line 39 in file "I2C.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    1
  3781 ;; This function calls:
  3782 ;;		_I2C_Master_Wait
  3783 ;; This function is called by:
  3784 ;;		_BMP280_Write
  3785 ;;		_BMP280_Read8
  3786 ;;		_BMP280_Read16
  3787 ;;		_BMP280_Update
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           
  3792                           ;psect for function _I2C_Master_Start
  3793  0EDC                     _I2C_Master_Start:
  3794  0EDC                     l1004:	
  3795                           ;incstack = 0
  3796                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3797                           
  3798                           
  3799                           ;I2C.c: 41:     I2C_Master_Wait();
  3800  0EDC  120A  118A  200B  120A  158A  	fcall	_I2C_Master_Wait
  3801  0EE1                     l1006:
  3802                           
  3803                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3804  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0EE3  1411               	bsf	17,0	;volatile
  3807  0EE4                     l83:
  3808  0EE4  0008               	return
  3809  0EE5                     __end_of_I2C_Master_Start:
  3810                           
  3811                           	psect	text16
  3812  000B                     __ptext16:	
  3813 ;; *************** function _I2C_Master_Wait *****************
  3814 ;; Defined at:
  3815 ;;		line 32 in file "I2C.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_I2C_Master_Start
  3839 ;;		_I2C_Master_Stop
  3840 ;;		_I2C_Master_Write
  3841 ;;		_I2C_Master_Read
  3842 ;;		_I2C_Master_RepeatedStart
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _I2C_Master_Wait
  3848  000B                     _I2C_Master_Wait:
  3849  000B                     l1000:	
  3850                           ;incstack = 0
  3851                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3852                           
  3853  000B                     l77:	
  3854                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3855                           
  3856  000B  1683               	bsf	3,5	;RP0=1, select bank1
  3857  000C  1303               	bcf	3,6	;RP1=0, select bank1
  3858  000D  1914               	btfsc	20,2	;volatile
  3859  000E  2810               	goto	u591
  3860  000F  2811               	goto	u590
  3861  0010                     u591:
  3862  0010  280B               	goto	l77
  3863  0011                     u590:
  3864  0011                     l1002:
  3865  0011  0811               	movf	17,w	;volatile
  3866  0012  391F               	andlw	31
  3867  0013  1D03               	btfss	3,2
  3868  0014  2816               	goto	u601
  3869  0015  2817               	goto	u600
  3870  0016                     u601:
  3871  0016  280B               	goto	l77
  3872  0017                     u600:
  3873  0017                     l80:
  3874  0017  0008               	return
  3875  0018                     __end_of_I2C_Master_Wait:
  3876  007E                     btemp	set	126	;btemp
  3877  007E                     wtemp0	set	126
  3878                           
  3879                           	psect	config
  3880                           
  3881                           ;Config register CONFIG1 @ 0x2007
  3882                           ;	Oscillator Selection bits
  3883                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3884                           ;	Watchdog Timer Enable bit
  3885                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3886                           ;	Power-up Timer Enable bit
  3887                           ;	PWRTE = OFF, PWRT disabled
  3888                           ;	RE3/MCLR pin function select bit
  3889                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3890                           ;	Code Protection bit
  3891                           ;	CP = OFF, Program memory code protection is disabled
  3892                           ;	Data Code Protection bit
  3893                           ;	CPD = OFF, Data memory code protection is disabled
  3894                           ;	Brown Out Reset Selection bits
  3895                           ;	BOREN = ON, BOR enabled
  3896                           ;	Internal External Switchover bit
  3897                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3898                           ;	Fail-Safe Clock Monitor Enabled bit
  3899                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3900                           ;	Low Voltage Programming Enable bit
  3901                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3902                           ;	In-Circuit Debugger Mode bit
  3903                           ;	DEBUG = 0x1, unprogrammed default
  3904  2007                     	org	8199
  3905  2007  23F4               	dw	9204
  3906                           
  3907                           ;Config register CONFIG2 @ 0x2008
  3908                           ;	Brown-out Reset Selection bit
  3909                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3910                           ;	Flash Program Memory Self Write Enable bits
  3911                           ;	WRT = OFF, Write protection off
  3912  2008                     	org	8200
  3913  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      80
    BANK1            80      0      41
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _BMP280_readPressure->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15068
                       _BMP280_begin
                _BMP280_readPressure
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             14 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     5     5      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             13 COMMON     1     1      0
                                              3 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      87       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      29       7       51.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      87      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 11:18:07 2021

            _BMP280_Configure 0018                            l45 0F13                            l80 0017  
                          l74 0FC3                            l83 0EE4                            l92 0EF7  
                          l77 000B                            l95 0F83                            l96 0F86  
                          l89 0EED                            l97 0F8B                            fsr 0004  
                         l121 0F5D                           l130 005F                           l124 0FFF  
                         l134 02D2                           l127 00F3                           l154 07EA  
                         l307 016E                           l156 067C                           l317 01F6  
                         l256 00A7                           l278 0159                           _GIE 005F  
     BMP280_Configure@_config 0022                           u600 0017                           u601 0016  
                         u610 0F7F                           u611 0F7E                           u620 0104  
                         u621 0103                           u800 0172                           u640 0118  
                         u705 001E                           u801 0171                           u641 0117  
                         u810 0191                           u715 0026                           u811 0190  
                         u635 0109                           u900 022A                           u660 0133  
                         u740 006E                           u725 0035                           u901 0229  
                         u661 0132                           u741 006D                           u590 0011  
                         u830 01A5                           u910 02FC                           u591 0010  
                         u735 003D                           u831 01A4                           u655 011A  
                         u751 0077                           u911 02FD                           u680 0151  
                         u752 007E                           u920 03D1                           u912 0302  
                         u825 0196                           u681 0150                           u665 012F  
                         u753 0085                           u913 0303                           u850 01C0  
                         u930 03DB                           u690 0FA3                           u851 01BF  
                         u675 0143                           u931 03DC                           u780 009F  
                         u940 0402                           u932 03E1                           u845 01A7  
                         u781 009E                           u765 0087                           u933 03E2  
                         u925 03CC                           u870 01DE                           u790 0161  
                         u950 0423                           u871 01DD                           u855 01BC  
                         u791 0160                           u775 008F                           u951 0424  
                         u695 0F9E                           u880 01E3                           u960 051F  
                         u952 0429                           u881 01E2                           u865 01D0  
                         u961 0520                           u953 042A                           u945 03FD  
                         u890 0203                           u970 0568                           u962 0525  
                         u891 0202                           u971 0569                           u963 0526  
                         u980 05AF                           u972 056E                           u981 05AE  
                         u973 056F                           u991 05E5                           u992 05E6  
                         u993 05EB                           u994 05EC                           u995 05F1  
                         u996 05F2                           fsr0 0004                           indf 0000  
__size_of_BMP280_readPressure 0518        BMP280_begin@P_sampling 0024                          l1000 000B  
                        l1002 0011                          l1010 0EEA                          l1004 0EDC  
                        l1012 0EEE                          l1020 0F6B                          l1006 0EE1  
                        l1014 0EF3                          l1022 0F74                          l1110 017D  
                        l1102 015A                          l1008 0EE5                          l1032 0F32  
                        l1024 0F79                          l1016 0F5E                          l1120 01A1  
                        l1112 0181                          l1104 015D                          l1040 0114  
                        l1026 0F7F                          l1018 0F63                          l1130 01CF  
                        l1122 01A5                          l1114 0189                          l1106 0161  
                        l1050 0142                          l1042 0118                          l1034 00F4  
                        l1210 0F14                          l1028 0F87                          l1132 01D8  
                        l1124 01AE                          l1116 0191                          l1108 0172  
                        l1052 014B                          l1044 0121                          l1036 0104  
                        l1060 0F90                          l1212 0F27                          l1070 0FC5  
                        l1150 0204                          l1126 01C0                          l1118 0194  
                        l1134 01DE                          l1046 0133                          l1038 0107  
                        l1054 0151                          l1062 0F93                          l1142 0EF8  
                        l1072 0FFE                          l1152 0210                          l1136 01E3  
                        l1128 01CE                          l1048 0141                          l1064 0FC0  
                        l1144 0F06                          l1082 001B                          l1146 01F8  
                        l1138 01EE                          l1090 0068                          l1170 0623  
                        l1162 02D6                          l1066 0FC1                          l1058 0F8C  
                        l1084 0049                          l1076 00A9                          l1156 021F  
                        l1092 006E                          l1172 0637                          l1164 05A7  
                        l1068 0FC2                          l1086 0053                          l1078 00EF  
                        l1158 022A                          l1094 0085                          l1174 065A  
                        l1096 008E                          l1088 0060                          l1176 07DC  
                        l1168 05B0                          l1098 009F                          u1000 05F9  
                        u1001 05FA                          u1010 0637                          u1002 05FF  
                        u1011 0636                          u1003 0600                          u1020 068A  
                        u1013 0633                          u1030 06A3                          u1040 06C3  
                        u1025 0685                          u1050 0723                          u1035 069E  
                        u1060 078D                          u1061 078E                          u1045 06BE  
                        u1070 079F                          u1062 0793                          u1071 07A0  
                        u1063 0794                          u1055 071E                          u1072 07A5  
                        u1073 07A6                          u1177 0218                          _PEIE 005E  
     BMP280_Configure@standby 0079                          _main 0F14                          btemp 007E  
                        start 0000        BMP280_begin@T_sampling 0023         __size_of_BMP280_Read8 003C  
            ?_I2C_Master_Init 0020              ?_I2C_Master_Read 0070              ?_I2C_Master_Wait 0070  
       __size_of_BMP280_Write 002D              ?_I2C_Master_Stop 0070         __size_of_BMP280_begin 00DC  
             __end_of___aldiv 01F7                         ?_main 0070                         _ANSEL 0188  
             __end_of___lldiv 015A               BMP280_Read8@ret 0079                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _SSPIE 0463                         _TRISE 0089  
                       _SSPIF 0063           ___lmul@multiplicand 002A                         _adc_P 005F  
                       _adc_T 0063                         _setup 0EF8                         status 0003  
                       wtemp0 007E                  _BMP280_Read8 0FC4                  _BMP280_Write 0F31  
                _BMP280_calib 00B1                  _BMP280_begin 01F7               __initialization 07EB  
                __end_of_main 0F31        __size_of_BMP280_Read16 004C                        ??_main 007E  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070              BMP280_Read16@ret 007B  
          ??_I2C_Master_Start 0070            ??_I2C_Master_Write 0072                        ?_setup 0070  
                      _ANSELH 0189                        _SSPADD 0093                        _TRISC3 043B  
                      _TRISC4 043C                        _SSPCON 0014                        _SSPBUF 0013  
                      ___lmul 0060                     ??___aldiv 0078                     ??___lldiv 0078  
                      _buffer 00A0                        _t_fine 005B    BMP280_Configure@P_sampling 0077  
    __end_of_BMP280_Configure 0060                 _BMP280_Read16 00A8       __end_of__initialization 07FC  
  BMP280_Configure@T_sampling 0076                __pcstackCOMMON 0070           _BMP280_readPressure 02D3  
               __end_of_setup 0F14          ?_BMP280_readPressure 0070                       ??_setup 007E  
                  __pbssBANK0 005B                    __pbssBANK1 00A0                ?_BMP280_Read16 0076  
     BMP280_readPressure@var1 0057       BMP280_readPressure@var2 004F       BMP280_readPressure@pres 004A  
                  __pmaintext 0F14                       ?___lmul 0026                ___lmul@product 007A  
            BMP280_begin@mode 007D         ??_BMP280_readPressure 002E                       _SSPCON2 0091  
     _BMP280_readPressure$934 004B       _BMP280_readPressure$935 003E       _BMP280_readPressure$936 0042  
     _BMP280_readPressure$937 0046                       _SSPSTAT 0094    BMP280_Configure@_ctrl_meas 0021  
        BMP280_Write@reg_addr 0075                       ___aldiv 015A               __size_of___lmul 0048  
                     ___lldiv 00F4                       __ptext1 0EF8                       __ptext2 0F8C  
                     __ptext3 02D3                       __ptext4 0060                       __ptext5 00F4  
                     __ptext6 015A                       __ptext7 01F7                       __ptext8 0FC4  
                     __ptext9 00A8              ___aldiv@dividend 0074      __size_of_I2C_Master_Init 0038  
    __size_of_I2C_Master_Read 002E      __size_of_I2C_Master_Wait 000D      __size_of_I2C_Master_Stop 0009  
                     _presmas 006B               ??_BMP280_Read16 0078                       clrloop0 0004  
        end_of_initialization 07FC         BMP280_Read16@reg_addr 007A            BMP280_begin@filter 0025  
   __size_of_I2C_Master_Start 0009     __size_of_I2C_Master_Write 000A               ___lldiv@divisor 0070  
             ___lldiv@counter 007D              ___aldiv@quotient 0022              I2C_Master_Init@c 0020  
            I2C_Master_Read@a 0070                     _TRISCbits 0087             ?_BMP280_Configure 0076  
          ??_BMP280_Configure 007A        BMP280_Configure@filter 0078                __end_of___lmul 00A8  
         start_initialization 07EB             ??_I2C_Master_Init 0024             ??_I2C_Master_Read 0072  
           ??_I2C_Master_Wait 0070             ??_I2C_Master_Stop 0070                      ??___lmul 0079  
        BMP280_Configure@mode 0020                     ___latbits 0002                 __pcstackBANK0 0020  
               ?_BMP280_Read8 0070              _I2C_Master_Start 0EDC              _I2C_Master_Write 0EEE  
               ?_BMP280_Write 0072                 ?_BMP280_begin 0023          BMP280_readPressure@p 0053  
           BMP280_Write@_data 0072                      ?___aldiv 0070                      ?___lldiv 0070  
 __end_of_BMP280_readPressure 07EB                __size_of_setup 001C               ___aldiv@divisor 0070  
             ___aldiv@counter 0020                ??_BMP280_Read8 0076                     clear_ram0 0003  
              ??_BMP280_Write 0073                ??_BMP280_begin 0027           I2C_Master_Read@temp 0074  
           ___lmul@multiplier 0026         __end_of_BMP280_Read16 00F4     __size_of_BMP280_Configure 0048  
            __size_of___aldiv 009D              __size_of___lldiv 0066               _I2C_Master_Init 0F8C  
             _I2C_Master_Read 0F5E               _I2C_Master_Wait 000B               _I2C_Master_Stop 0EE5  
                    __ptext10 0F5E                      __ptext11 0018                      __ptext12 0F31  
                    __ptext13 0EEE                      __ptext14 0EE5                      __ptext15 0EDC  
                    __ptext16 000B                 __size_of_main 001D                      _pressure 006C  
        __end_of_BMP280_Read8 1000      __end_of_I2C_Master_Start 0EE5      __end_of_I2C_Master_Write 0EF8  
        __end_of_BMP280_Write 0F5E          __end_of_BMP280_begin 02D3          BMP280_Read8@reg_addr 0078  
            ___lldiv@dividend 0074           BMP280_begin@standby 0026       __end_of_I2C_Master_Init 0FC4  
     __end_of_I2C_Master_Read 0F8C       __end_of_I2C_Master_Wait 0018       __end_of_I2C_Master_Stop 0EEE  
                 _temperature 0067              ___lldiv@quotient 0079             I2C_Master_Write@d 0070  
                ___aldiv@sign 0021                   _SSPCON2bits 0091  
