

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 14:42:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0006                     _PORTBbits	set	6
   383  0063                     _SSPIF	set	99
   384  005E                     _PEIE	set	94
   385  005F                     _GIE	set	95
   386  0091                     _SSPCON2bits	set	145
   387  0087                     _TRISCbits	set	135
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0091                     _SSPCON2	set	145
   391  0088                     _TRISD	set	136
   392  0089                     _TRISE	set	137
   393  0086                     _TRISB	set	134
   394  0087                     _TRISC	set	135
   395  0463                     _SSPIE	set	1123
   396  043C                     _TRISC4	set	1084
   397  043B                     _TRISC3	set	1083
   398  0189                     _ANSELH	set	393
   399  0188                     _ANSEL	set	392
   400                           
   401                           	psect	cinit
   402  07EB                     start_initialization:	
   403                           ; #config settings
   404                           
   405  07EB                     __initialization:
   406                           
   407                           ; Clear objects allocated to BANK0
   408  07EB  1383               	bcf	3,7	;select IRP bank0
   409  07EC  305B               	movlw	low __pbssBANK0
   410  07ED  0084               	movwf	4
   411  07EE  306E               	movlw	low (__pbssBANK0+19)
   412  07EF  120A  158A  23E5  120A  118A  	fcall	clear_ram0
   413                           
   414                           ; Clear objects allocated to BANK1
   415  07F4  30A0               	movlw	low __pbssBANK1
   416  07F5  0084               	movwf	4
   417  07F6  30CD               	movlw	low (__pbssBANK1+45)
   418  07F7  120A  158A  23E5  120A  118A  	fcall	clear_ram0
   419  07FC                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422  07FC                     __end_of__initialization:
   423  07FC  0183               	clrf	3
   424  07FD  120A  158A  2C52   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	bssBANK0
   427  005B                     __pbssBANK0:
   428  005B                     _t_fine:
   429  005B                     	ds	4
   430  005F                     _adc_T:
   431  005F                     	ds	4
   432  0063                     _presion:
   433  0063                     	ds	2
   434  0065                     _presmas:
   435  0065                     	ds	1
   436  0066                     _pressure:
   437  0066                     	ds	4
   438  006A                     _temperature:
   439  006A                     	ds	4
   440                           
   441                           	psect	bssBANK1
   442  00A0                     __pbssBANK1:
   443  00A0                     _buffer:
   444  00A0                     	ds	17
   445  00B1                     _adc_P:
   446  00B1                     	ds	4
   447  00B5                     _BMP280_calib:
   448  00B5                     	ds	24
   449                           
   450                           	psect	clrtext
   451  0BE5                     clear_ram0:	
   452                           ;	Called with FSR containing the base address, and
   453                           ;	W with the last address+1
   454                           
   455  0BE5  0064               	clrwdt	;clear the watchdog before getting into this loop
   456  0BE6                     clrloop0:
   457  0BE6  0180               	clrf	0	;clear RAM location pointed to by FSR
   458  0BE7  0A84               	incf	4,f	;increment pointer
   459  0BE8  0604               	xorwf	4,w	;XOR with final address
   460  0BE9  1903               	btfsc	3,2	;have we reached the end yet?
   461  0BEA  3400               	retlw	0	;all done for this memory range, return
   462  0BEB  0604               	xorwf	4,w	;XOR again to restore value
   463  0BEC  2BE6               	goto	clrloop0	;do the next byte
   464                           
   465                           	psect	cstackCOMMON
   466  0070                     __pcstackCOMMON:
   467  0070                     ?_setup:
   468  0070                     ?_main:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_I2C_Master_Wait:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ??_I2C_Master_Wait:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_I2C_Master_Start:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ??_I2C_Master_Start:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_I2C_Master_Stop:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_I2C_Master_Stop:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_I2C_Master_Write:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_BMP280_Read8:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_BMP280_Update:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_BMP280_readTemperature:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_BMP280_readPressure:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0070                     ?_I2C_Master_Read:	
   505                           ; 2 bytes @ 0x0
   506                           
   507  0070                     ?___lldiv:	
   508                           ; 2 bytes @ 0x0
   509                           
   510  0070                     ?___aldiv:	
   511                           ; 4 bytes @ 0x0
   512                           
   513  0070                     I2C_Master_Write@d:	
   514                           ; 4 bytes @ 0x0
   515                           
   516  0070                     I2C_Master_Read@a:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0070                     ___lldiv@divisor:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0070                     ___aldiv@divisor:	
   523                           ; 4 bytes @ 0x0
   524                           
   525                           
   526                           ; 4 bytes @ 0x0
   527  0070                     	ds	2
   528  0072                     ??_I2C_Master_Write:
   529  0072                     ??_I2C_Master_Read:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     ?_BMP280_Write:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0072                     BMP280_Write@_data:	
   536                           ; 1 bytes @ 0x2
   537                           
   538                           
   539                           ; 1 bytes @ 0x2
   540  0072                     	ds	1
   541  0073                     ??_BMP280_Write:
   542                           
   543                           ; 1 bytes @ 0x3
   544  0073                     	ds	1
   545  0074                     I2C_Master_Read@temp:
   546  0074                     ___lldiv@dividend:	
   547                           ; 2 bytes @ 0x4
   548                           
   549  0074                     ___aldiv@dividend:	
   550                           ; 4 bytes @ 0x4
   551                           
   552                           
   553                           ; 4 bytes @ 0x4
   554  0074                     	ds	1
   555  0075                     BMP280_Write@reg_addr:
   556                           
   557                           ; 1 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     ??_BMP280_Read8:
   560  0076                     ?_BMP280_Configure:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     ??_BMP280_Update:	
   564                           ; 1 bytes @ 0x6
   565                           
   566  0076                     ?_BMP280_Read16:	
   567                           ; 1 bytes @ 0x6
   568                           
   569  0076                     BMP280_Configure@T_sampling:	
   570                           ; 2 bytes @ 0x6
   571                           
   572                           
   573                           ; 1 bytes @ 0x6
   574  0076                     	ds	1
   575  0077                     BMP280_Configure@P_sampling:
   576                           
   577                           ; 1 bytes @ 0x7
   578  0077                     	ds	1
   579  0078                     ??_BMP280_Read16:
   580  0078                     ??___lldiv:	
   581                           ; 1 bytes @ 0x8
   582                           
   583  0078                     ??___aldiv:	
   584                           ; 1 bytes @ 0x8
   585                           
   586  0078                     BMP280_Read8@reg_addr:	
   587                           ; 1 bytes @ 0x8
   588                           
   589  0078                     BMP280_Configure@filter:	
   590                           ; 1 bytes @ 0x8
   591                           
   592                           
   593                           ; 1 bytes @ 0x8
   594  0078                     	ds	1
   595  0079                     ??___lmul:
   596  0079                     BMP280_Read8@ret:	
   597                           ; 1 bytes @ 0x9
   598                           
   599  0079                     BMP280_Configure@standby:	
   600                           ; 1 bytes @ 0x9
   601                           
   602  0079                     ___lldiv@quotient:	
   603                           ; 1 bytes @ 0x9
   604                           
   605                           
   606                           ; 4 bytes @ 0x9
   607  0079                     	ds	1
   608  007A                     ??_BMP280_Configure:
   609  007A                     BMP280_Read16@reg_addr:	
   610                           ; 1 bytes @ 0xA
   611                           
   612  007A                     BMP280_Update@ret:	
   613                           ; 1 bytes @ 0xA
   614                           
   615  007A                     ___lmul@product:	
   616                           ; 4 bytes @ 0xA
   617                           
   618                           
   619                           ; 4 bytes @ 0xA
   620  007A                     	ds	1
   621  007B                     BMP280_Read16@ret:
   622                           
   623                           ; 2 bytes @ 0xB
   624  007B                     	ds	2
   625  007D                     BMP280_begin@mode:
   626  007D                     ___lldiv@counter:	
   627                           ; 1 bytes @ 0xD
   628                           
   629                           
   630                           ; 1 bytes @ 0xD
   631  007D                     	ds	1
   632  007E                     ??_setup:
   633  007E                     ??_main:	
   634                           ; 1 bytes @ 0xE
   635                           
   636                           
   637                           	psect	cstackBANK0
   638  0020                     __pcstackBANK0:	
   639                           ; 1 bytes @ 0xE
   640                           
   641  0020                     ?_I2C_Master_Init:
   642  0020                     BMP280_Configure@mode:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0020                     ___aldiv@counter:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0020                     I2C_Master_Init@c:	
   649                           ; 1 bytes @ 0x0
   650                           
   651                           
   652                           ; 4 bytes @ 0x0
   653  0020                     	ds	1
   654  0021                     BMP280_Configure@_ctrl_meas:
   655  0021                     ___aldiv@sign:	
   656                           ; 1 bytes @ 0x1
   657                           
   658                           
   659                           ; 1 bytes @ 0x1
   660  0021                     	ds	1
   661  0022                     BMP280_Configure@_config:
   662  0022                     ___aldiv@quotient:	
   663                           ; 1 bytes @ 0x2
   664                           
   665                           
   666                           ; 4 bytes @ 0x2
   667  0022                     	ds	1
   668  0023                     ?_BMP280_begin:
   669  0023                     BMP280_begin@T_sampling:	
   670                           ; 2 bytes @ 0x3
   671                           
   672                           
   673                           ; 1 bytes @ 0x3
   674  0023                     	ds	1
   675  0024                     ??_I2C_Master_Init:
   676  0024                     BMP280_begin@P_sampling:	
   677                           ; 1 bytes @ 0x4
   678                           
   679                           
   680                           ; 1 bytes @ 0x4
   681  0024                     	ds	1
   682  0025                     BMP280_begin@filter:
   683                           
   684                           ; 1 bytes @ 0x5
   685  0025                     	ds	1
   686  0026                     ?___lmul:
   687  0026                     BMP280_begin@standby:	
   688                           ; 4 bytes @ 0x6
   689                           
   690  0026                     ___lmul@multiplier:	
   691                           ; 1 bytes @ 0x6
   692                           
   693                           
   694                           ; 4 bytes @ 0x6
   695  0026                     	ds	1
   696  0027                     ??_BMP280_begin:
   697                           
   698                           ; 1 bytes @ 0x7
   699  0027                     	ds	3
   700  002A                     ___lmul@multiplicand:
   701                           
   702                           ; 4 bytes @ 0xA
   703  002A                     	ds	4
   704  002E                     ??_BMP280_readTemperature:
   705  002E                     ??_BMP280_readPressure:	
   706                           ; 1 bytes @ 0xE
   707                           
   708                           
   709                           ; 1 bytes @ 0xE
   710  002E                     	ds	16
   711  003E                     BMP280_readTemperature@var1:
   712  003E                     _BMP280_readPressure$966:	
   713                           ; 4 bytes @ 0x1E
   714                           
   715                           
   716                           ; 4 bytes @ 0x1E
   717  003E                     	ds	4
   718  0042                     BMP280_readTemperature@var2:
   719  0042                     _BMP280_readPressure$967:	
   720                           ; 4 bytes @ 0x22
   721                           
   722                           
   723                           ; 4 bytes @ 0x22
   724  0042                     	ds	4
   725  0046                     _BMP280_readTemperature$964:
   726  0046                     _BMP280_readPressure$968:	
   727                           ; 4 bytes @ 0x26
   728                           
   729                           
   730                           ; 4 bytes @ 0x26
   731  0046                     	ds	4
   732  004A                     BMP280_readTemperature@temp:
   733  004A                     BMP280_readPressure@pres:	
   734                           ; 1 bytes @ 0x2A
   735                           
   736                           
   737                           ; 1 bytes @ 0x2A
   738  004A                     	ds	1
   739  004B                     _BMP280_readTemperature$963:
   740  004B                     _BMP280_readPressure$965:	
   741                           ; 4 bytes @ 0x2B
   742                           
   743                           
   744                           ; 4 bytes @ 0x2B
   745  004B                     	ds	4
   746  004F                     BMP280_readPressure@var2:
   747                           
   748                           ; 4 bytes @ 0x2F
   749  004F                     	ds	4
   750  0053                     BMP280_readPressure@p:
   751                           
   752                           ; 4 bytes @ 0x33
   753  0053                     	ds	4
   754  0057                     BMP280_readPressure@var1:
   755                           
   756                           ; 4 bytes @ 0x37
   757  0057                     	ds	4
   758                           
   759                           	psect	maintext
   760  0C52                     __pmaintext:	
   761 ;;
   762 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   763 ;;
   764 ;; *************** function _main *****************
   765 ;; Defined at:
   766 ;;		line 145 in file "main_m.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : B00/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels required when called:    5
   786 ;; This function calls:
   787 ;;		_BMP280_begin
   788 ;;		_BMP280_readPressure
   789 ;;		_BMP280_readTemperature
   790 ;;		_setup
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _main
   798  0C52                     _main:
   799  0C52                     l1238:	
   800                           ;incstack = 0
   801                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802                           
   803                           
   804                           ;main_m.c: 146:     setup();
   805  0C52  120A  158A  2409  120A  158A  	fcall	_setup
   806                           
   807                           ;main_m.c: 147:     if(BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, S
      +                          TANDBY_0_5) == 0)
   808  0C57  1283               	bcf	3,5	;RP0=0, select bank0
   809  0C58  1303               	bcf	3,6	;RP1=0, select bank0
   810  0C59  01A3               	clrf	BMP280_begin@T_sampling
   811  0C5A  0AA3               	incf	BMP280_begin@T_sampling,f
   812  0C5B  01A4               	clrf	BMP280_begin@P_sampling
   813  0C5C  0AA4               	incf	BMP280_begin@P_sampling,f
   814  0C5D  01A5               	clrf	BMP280_begin@filter
   815  0C5E  01A6               	clrf	BMP280_begin@standby
   816  0C5F  3003               	movlw	3
   817  0C60  120A  158A  271A  120A  158A  	fcall	_BMP280_begin
   818  0C65  1283               	bcf	3,5	;RP0=0, select bank0
   819  0C66  1303               	bcf	3,6	;RP1=0, select bank0
   820  0C67  0823               	movf	?_BMP280_begin,w
   821  0C68  0424               	iorwf	?_BMP280_begin+1,w
   822  0C69  1D03               	btfss	3,2
   823  0C6A  2C6C               	goto	u1161
   824  0C6B  2C6D               	goto	u1160
   825  0C6C                     u1161:
   826  0C6C  2C6F               	goto	l1242
   827  0C6D                     u1160:
   828  0C6D                     l1240:
   829                           
   830                           ;main_m.c: 148: {;main_m.c: 149:         PORTBbits.RB2 = 1;
   831  0C6D  1506               	bsf	6,2	;volatile
   832  0C6E                     l46:	
   833                           ;main_m.c: 150:     while (1) {}}
   834                           
   835  0C6E                     l47:
   836  0C6E  2C6E               	goto	l46
   837  0C6F                     l1242:
   838                           
   839                           ;main_m.c: 152:     BMP280_readTemperature(&temperature);
   840  0C6F  306A               	movlw	(low (_temperature| 0))& (0+255)
   841  0C70  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   842                           
   843                           ;main_m.c: 153:     BMP280_readPressure(&pressure);
   844  0C75  3066               	movlw	(low (_pressure| 0))& (0+255)
   845  0C76  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   846  0C7B  2C6F               	goto	l1242
   847  0C7C  120A  118A  2800   	ljmp	start
   848  0C7F                     __end_of_main:
   849                           
   850                           	psect	text1
   851  0C09                     __ptext1:	
   852 ;; *************** function _setup *****************
   853 ;; Defined at:
   854 ;;		line 173 in file "main_m.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    2
   875 ;; This function calls:
   876 ;;		_I2C_Master_Init
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _setup
   884  0C09                     _setup:
   885  0C09                     l1188:	
   886                           ;incstack = 0
   887                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   888                           
   889                           
   890                           ;main_m.c: 174:     ANSEL = 0;
   891  0C09  1683               	bsf	3,5	;RP0=1, select bank3
   892  0C0A  1703               	bsf	3,6	;RP1=1, select bank3
   893  0C0B  0188               	clrf	8	;volatile
   894                           
   895                           ;main_m.c: 175:     ANSELH = 0;
   896  0C0C  0189               	clrf	9	;volatile
   897                           
   898                           ;main_m.c: 176:     TRISC = 0;
   899  0C0D  1683               	bsf	3,5	;RP0=1, select bank1
   900  0C0E  1303               	bcf	3,6	;RP1=0, select bank1
   901  0C0F  0187               	clrf	7	;volatile
   902                           
   903                           ;main_m.c: 177:     TRISB = 0;
   904  0C10  0186               	clrf	6	;volatile
   905                           
   906                           ;main_m.c: 178:     TRISE = 0;
   907  0C11  0189               	clrf	9	;volatile
   908                           
   909                           ;main_m.c: 179:     TRISD = 0;
   910  0C12  0188               	clrf	8	;volatile
   911                           
   912                           ;main_m.c: 180:     PORTB = 0;
   913  0C13  1283               	bcf	3,5	;RP0=0, select bank0
   914  0C14  1303               	bcf	3,6	;RP1=0, select bank0
   915  0C15  0186               	clrf	6	;volatile
   916                           
   917                           ;main_m.c: 181:     PORTD = 0;
   918  0C16  0188               	clrf	8	;volatile
   919  0C17                     l1190:
   920                           
   921                           ;main_m.c: 182:     I2C_Master_Init(100000);
   922  0C17  3000               	movlw	0
   923  0C18  00A3               	movwf	I2C_Master_Init@c+3
   924  0C19  3001               	movlw	1
   925  0C1A  00A2               	movwf	I2C_Master_Init@c+2
   926  0C1B  3086               	movlw	134
   927  0C1C  00A1               	movwf	I2C_Master_Init@c+1
   928  0C1D  30A0               	movlw	160
   929  0C1E  00A0               	movwf	I2C_Master_Init@c
   930  0C1F  120A  158A  24AD  120A  158A  	fcall	_I2C_Master_Init
   931  0C24                     l55:
   932  0C24  0008               	return
   933  0C25                     __end_of_setup:
   934                           
   935                           	psect	text2
   936  0CAD                     __ptext2:	
   937 ;; *************** function _I2C_Master_Init *****************
   938 ;; Defined at:
   939 ;;		line 16 in file "I2C.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  c               4    0[BANK0 ] const unsigned long 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       4       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          0       4       0       0       0
   956 ;;      Totals:         0       8       0       0       0
   957 ;;Total ram usage:        8 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		___lldiv
   962 ;; This function is called by:
   963 ;;		_setup
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _I2C_Master_Init
   969  0CAD                     _I2C_Master_Init:
   970  0CAD                     l1074:	
   971                           ;incstack = 0
   972                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   973                           
   974                           
   975                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   976  0CAD  3028               	movlw	40
   977  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
   978  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
   979  0CB0  0094               	movwf	20	;volatile
   980  0CB1                     l1076:
   981                           
   982                           ;I2C.c: 19:     SSPCON2 = 0;
   983  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
   984  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
   985  0CB3  0191               	clrf	17	;volatile
   986  0CB4                     l1078:
   987                           
   988                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   989  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
   990  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
   991  0CB6  0820               	movf	I2C_Master_Init@c,w
   992  0CB7  00A4               	movwf	??_I2C_Master_Init
   993  0CB8  0821               	movf	I2C_Master_Init@c+1,w
   994  0CB9  00A5               	movwf	??_I2C_Master_Init+1
   995  0CBA  0822               	movf	I2C_Master_Init@c+2,w
   996  0CBB  00A6               	movwf	??_I2C_Master_Init+2
   997  0CBC  0823               	movf	I2C_Master_Init@c+3,w
   998  0CBD  00A7               	movwf	??_I2C_Master_Init+3
   999  0CBE  3002               	movlw	2
  1000  0CBF                     u705:
  1001  0CBF  1003               	clrc
  1002  0CC0  0DA4               	rlf	??_I2C_Master_Init,f
  1003  0CC1  0DA5               	rlf	??_I2C_Master_Init+1,f
  1004  0CC2  0DA6               	rlf	??_I2C_Master_Init+2,f
  1005  0CC3  0DA7               	rlf	??_I2C_Master_Init+3,f
  1006  0CC4                     u700:
  1007  0CC4  3EFF               	addlw	-1
  1008  0CC5  1D03               	skipz
  1009  0CC6  2CBF               	goto	u705
  1010  0CC7  0827               	movf	??_I2C_Master_Init+3,w
  1011  0CC8  00F3               	movwf	___lldiv@divisor+3
  1012  0CC9  0826               	movf	??_I2C_Master_Init+2,w
  1013  0CCA  00F2               	movwf	___lldiv@divisor+2
  1014  0CCB  0825               	movf	??_I2C_Master_Init+1,w
  1015  0CCC  00F1               	movwf	___lldiv@divisor+1
  1016  0CCD  0824               	movf	??_I2C_Master_Init,w
  1017  0CCE  00F0               	movwf	___lldiv@divisor
  1018  0CCF  3000               	movlw	0
  1019  0CD0  00F7               	movwf	___lldiv@dividend+3
  1020  0CD1  307A               	movlw	122
  1021  0CD2  00F6               	movwf	___lldiv@dividend+2
  1022  0CD3  3012               	movlw	18
  1023  0CD4  00F5               	movwf	___lldiv@dividend+1
  1024  0CD5  3000               	movlw	0
  1025  0CD6  00F4               	movwf	___lldiv@dividend
  1026  0CD7  120A  158A  25FD  120A  158A  	fcall	___lldiv
  1027  0CDC  0870               	movf	?___lldiv,w
  1028  0CDD  3EFF               	addlw	255
  1029  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0CE0  0093               	movwf	19	;volatile
  1032  0CE1                     l1080:
  1033                           
  1034                           ;I2C.c: 21:     SSPSTAT = 0;
  1035  0CE1  0194               	clrf	20	;volatile
  1036  0CE2                     l1082:
  1037                           
  1038                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1039  0CE2  1587               	bsf	7,3	;volatile
  1040  0CE3                     l1084:
  1041                           
  1042                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1043  0CE3  1607               	bsf	7,4	;volatile
  1044  0CE4                     l84:
  1045  0CE4  0008               	return
  1046  0CE5                     __end_of_I2C_Master_Init:
  1047                           
  1048                           	psect	text3
  1049  00B3                     __ptext3:	
  1050 ;; *************** function _BMP280_readTemperature *****************
  1051 ;; Defined at:
  1052 ;;		line 241 in file "BMP280.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  temp            1    wreg     PTR long 
  1055 ;;		 -> temperature(4), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  temp            1   42[BANK0 ] PTR long 
  1058 ;;		 -> temperature(4), 
  1059 ;;  var2            4   34[BANK0 ] long 
  1060 ;;  var1            4   30[BANK0 ] long 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2    8[None  ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         0      17       0       0       0
  1072 ;;      Temps:          0      16       0       0       0
  1073 ;;      Totals:         0      33       0       0       0
  1074 ;;Total ram usage:       33 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    3
  1077 ;; This function calls:
  1078 ;;		_BMP280_Update
  1079 ;;		___aldiv
  1080 ;;		___lmul
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           
  1087                           ;psect for function _BMP280_readTemperature
  1088  00B3                     _BMP280_readTemperature:
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1092                           ;BMP280_readTemperature@temp stored from wreg
  1093  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1094  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1095  00B5  00CA               	movwf	BMP280_readTemperature@temp
  1096  00B6                     l1212:
  1097                           
  1098                           ;BMP280.c: 241: int BMP280_readTemperature(int32_t *temp);BMP280.c: 242: {;BMP280.c: 243
      +                          :   int32_t var1, var2;;BMP280.c: 245:   BMP280_Update();
  1099  00B6  120A  158A  2663  120A  118A  	fcall	_BMP280_Update
  1100                           
  1101                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1102  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1103  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1104  00BD  0835               	movf	_BMP280_calib^(0+128),w
  1105  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00C0  00AE               	movwf	??_BMP280_readTemperature
  1108  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1109  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1110  00C3  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1111  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00C6  00AF               	movwf	??_BMP280_readTemperature+1
  1114  00C7  01B0               	clrf	??_BMP280_readTemperature+2
  1115  00C8  01B1               	clrf	??_BMP280_readTemperature+3
  1116  00C9  3001               	movlw	1
  1117  00CA                     u945:
  1118  00CA  1003               	clrc
  1119  00CB  0DAE               	rlf	??_BMP280_readTemperature,f
  1120  00CC  0DAF               	rlf	??_BMP280_readTemperature+1,f
  1121  00CD  0DB0               	rlf	??_BMP280_readTemperature+2,f
  1122  00CE  0DB1               	rlf	??_BMP280_readTemperature+3,f
  1123  00CF                     u940:
  1124  00CF  3EFF               	addlw	-1
  1125  00D0  1D03               	skipz
  1126  00D1  28CA               	goto	u945
  1127  00D2  3000               	movlw	0
  1128  00D3  00F3               	movwf	___aldiv@divisor+3
  1129  00D4  3000               	movlw	0
  1130  00D5  00F2               	movwf	___aldiv@divisor+2
  1131  00D6  3000               	movlw	0
  1132  00D7  00F1               	movwf	___aldiv@divisor+1
  1133  00D8  3008               	movlw	8
  1134  00D9  00F0               	movwf	___aldiv@divisor
  1135  00DA  0862               	movf	_adc_T+3,w
  1136  00DB  00F7               	movwf	___aldiv@dividend+3
  1137  00DC  0861               	movf	_adc_T+2,w
  1138  00DD  00F6               	movwf	___aldiv@dividend+2
  1139  00DE  0860               	movf	_adc_T+1,w
  1140  00DF  00F5               	movwf	___aldiv@dividend+1
  1141  00E0  085F               	movf	_adc_T,w
  1142  00E1  00F4               	movwf	___aldiv@dividend
  1143  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1144  00E7  0870               	movf	?___aldiv,w
  1145  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1146  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1147  00EA  00B2               	movwf	??_BMP280_readTemperature+4
  1148  00EB  0871               	movf	?___aldiv+1,w
  1149  00EC  00B3               	movwf	??_BMP280_readTemperature+5
  1150  00ED  0872               	movf	?___aldiv+2,w
  1151  00EE  00B4               	movwf	??_BMP280_readTemperature+6
  1152  00EF  0873               	movf	?___aldiv+3,w
  1153  00F0  00B5               	movwf	??_BMP280_readTemperature+7
  1154  00F1  082E               	movf	??_BMP280_readTemperature,w
  1155  00F2  02B2               	subwf	??_BMP280_readTemperature+4,f
  1156  00F3  082F               	movf	??_BMP280_readTemperature+1,w
  1157  00F4  1C03               	skipc
  1158  00F5  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1159  00F6  28F8               	goto	u951
  1160  00F7  28F9               	goto	u952
  1161  00F8                     u951:
  1162  00F8  02B3               	subwf	??_BMP280_readTemperature+5,f
  1163  00F9                     u952:
  1164  00F9  0830               	movf	??_BMP280_readTemperature+2,w
  1165  00FA  1C03               	skipc
  1166  00FB  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1167  00FC  28FE               	goto	u953
  1168  00FD  28FF               	goto	u954
  1169  00FE                     u953:
  1170  00FE  02B4               	subwf	??_BMP280_readTemperature+6,f
  1171  00FF                     u954:
  1172  00FF  0831               	movf	??_BMP280_readTemperature+3,w
  1173  0100  1C03               	skipc
  1174  0101  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1175  0102  2904               	goto	u955
  1176  0103  2905               	goto	u956
  1177  0104                     u955:
  1178  0104  02B5               	subwf	??_BMP280_readTemperature+7,f
  1179  0105                     u956:
  1180  0105  0835               	movf	??_BMP280_readTemperature+7,w
  1181  0106  00A9               	movwf	___lmul@multiplier+3
  1182  0107  0834               	movf	??_BMP280_readTemperature+6,w
  1183  0108  00A8               	movwf	___lmul@multiplier+2
  1184  0109  0833               	movf	??_BMP280_readTemperature+5,w
  1185  010A  00A7               	movwf	___lmul@multiplier+1
  1186  010B  0832               	movf	??_BMP280_readTemperature+4,w
  1187  010C  00A6               	movwf	___lmul@multiplier
  1188  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1189  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1190  010F  0837               	movf	(_BMP280_calib^(0+128)+2),w
  1191  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0112  00AA               	movwf	___lmul@multiplicand
  1194  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0115  0838               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1197  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0118  00AB               	movwf	___lmul@multiplicand+1
  1200  0119  3000               	movlw	0
  1201  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1202  011B  30FF               	movlw	255
  1203  011C  00AC               	movwf	___lmul@multiplicand+2
  1204  011D  00AD               	movwf	___lmul@multiplicand+3
  1205  011E  120A  158A  2569  120A  118A  	fcall	___lmul
  1206  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0125  0829               	movf	?___lmul+3,w
  1209  0126  00CE               	movwf	_BMP280_readTemperature$963+3
  1210  0127  0828               	movf	?___lmul+2,w
  1211  0128  00CD               	movwf	_BMP280_readTemperature$963+2
  1212  0129  0827               	movf	?___lmul+1,w
  1213  012A  00CC               	movwf	_BMP280_readTemperature$963+1
  1214  012B  0826               	movf	?___lmul,w
  1215  012C  00CB               	movwf	_BMP280_readTemperature$963
  1216                           
  1217                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1218  012D  3000               	movlw	0
  1219  012E  00F3               	movwf	___aldiv@divisor+3
  1220  012F  3000               	movlw	0
  1221  0130  00F2               	movwf	___aldiv@divisor+2
  1222  0131  3008               	movlw	8
  1223  0132  00F1               	movwf	___aldiv@divisor+1
  1224  0133  3000               	movlw	0
  1225  0134  00F0               	movwf	___aldiv@divisor
  1226  0135  084E               	movf	_BMP280_readTemperature$963+3,w
  1227  0136  00F7               	movwf	___aldiv@dividend+3
  1228  0137  084D               	movf	_BMP280_readTemperature$963+2,w
  1229  0138  00F6               	movwf	___aldiv@dividend+2
  1230  0139  084C               	movf	_BMP280_readTemperature$963+1,w
  1231  013A  00F5               	movwf	___aldiv@dividend+1
  1232  013B  084B               	movf	_BMP280_readTemperature$963,w
  1233  013C  00F4               	movwf	___aldiv@dividend
  1234  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1235  0142  0873               	movf	?___aldiv+3,w
  1236  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0145  00C1               	movwf	BMP280_readTemperature@var1+3
  1239  0146  0872               	movf	?___aldiv+2,w
  1240  0147  00C0               	movwf	BMP280_readTemperature@var1+2
  1241  0148  0871               	movf	?___aldiv+1,w
  1242  0149  00BF               	movwf	BMP280_readTemperature@var1+1
  1243  014A  0870               	movf	?___aldiv,w
  1244  014B  00BE               	movwf	BMP280_readTemperature@var1
  1245                           
  1246                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1247  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1248  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1249  014E  0835               	movf	_BMP280_calib^(0+128),w
  1250  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0151  00AE               	movwf	??_BMP280_readTemperature
  1253  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0154  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1256  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0157  00AF               	movwf	??_BMP280_readTemperature+1
  1259  0158  01B0               	clrf	??_BMP280_readTemperature+2
  1260  0159  01B1               	clrf	??_BMP280_readTemperature+3
  1261  015A  3000               	movlw	0
  1262  015B  00F3               	movwf	___aldiv@divisor+3
  1263  015C  3000               	movlw	0
  1264  015D  00F2               	movwf	___aldiv@divisor+2
  1265  015E  3000               	movlw	0
  1266  015F  00F1               	movwf	___aldiv@divisor+1
  1267  0160  3010               	movlw	16
  1268  0161  00F0               	movwf	___aldiv@divisor
  1269  0162  0862               	movf	_adc_T+3,w
  1270  0163  00F7               	movwf	___aldiv@dividend+3
  1271  0164  0861               	movf	_adc_T+2,w
  1272  0165  00F6               	movwf	___aldiv@dividend+2
  1273  0166  0860               	movf	_adc_T+1,w
  1274  0167  00F5               	movwf	___aldiv@dividend+1
  1275  0168  085F               	movf	_adc_T,w
  1276  0169  00F4               	movwf	___aldiv@dividend
  1277  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1278  016F  0870               	movf	?___aldiv,w
  1279  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0172  00B2               	movwf	??_BMP280_readTemperature+4
  1282  0173  0871               	movf	?___aldiv+1,w
  1283  0174  00B3               	movwf	??_BMP280_readTemperature+5
  1284  0175  0872               	movf	?___aldiv+2,w
  1285  0176  00B4               	movwf	??_BMP280_readTemperature+6
  1286  0177  0873               	movf	?___aldiv+3,w
  1287  0178  00B5               	movwf	??_BMP280_readTemperature+7
  1288  0179  082E               	movf	??_BMP280_readTemperature,w
  1289  017A  02B2               	subwf	??_BMP280_readTemperature+4,f
  1290  017B  082F               	movf	??_BMP280_readTemperature+1,w
  1291  017C  1C03               	skipc
  1292  017D  0F2F               	incfsz	??_BMP280_readTemperature+1,w
  1293  017E  2980               	goto	u961
  1294  017F  2981               	goto	u962
  1295  0180                     u961:
  1296  0180  02B3               	subwf	??_BMP280_readTemperature+5,f
  1297  0181                     u962:
  1298  0181  0830               	movf	??_BMP280_readTemperature+2,w
  1299  0182  1C03               	skipc
  1300  0183  0F30               	incfsz	??_BMP280_readTemperature+2,w
  1301  0184  2986               	goto	u963
  1302  0185  2987               	goto	u964
  1303  0186                     u963:
  1304  0186  02B4               	subwf	??_BMP280_readTemperature+6,f
  1305  0187                     u964:
  1306  0187  0831               	movf	??_BMP280_readTemperature+3,w
  1307  0188  1C03               	skipc
  1308  0189  0F31               	incfsz	??_BMP280_readTemperature+3,w
  1309  018A  298C               	goto	u965
  1310  018B  298D               	goto	u966
  1311  018C                     u965:
  1312  018C  02B5               	subwf	??_BMP280_readTemperature+7,f
  1313  018D                     u966:
  1314  018D  0835               	movf	??_BMP280_readTemperature+7,w
  1315  018E  00A9               	movwf	___lmul@multiplier+3
  1316  018F  0834               	movf	??_BMP280_readTemperature+6,w
  1317  0190  00A8               	movwf	___lmul@multiplier+2
  1318  0191  0833               	movf	??_BMP280_readTemperature+5,w
  1319  0192  00A7               	movwf	___lmul@multiplier+1
  1320  0193  0832               	movf	??_BMP280_readTemperature+4,w
  1321  0194  00A6               	movwf	___lmul@multiplier
  1322  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0197  0835               	movf	_BMP280_calib^(0+128),w
  1325  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1327  019A  00B6               	movwf	??_BMP280_readTemperature+8
  1328  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1329  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1330  019D  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1331  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1332  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1333  01A0  00B7               	movwf	??_BMP280_readTemperature+9
  1334  01A1  01B8               	clrf	??_BMP280_readTemperature+10
  1335  01A2  01B9               	clrf	??_BMP280_readTemperature+11
  1336  01A3  3000               	movlw	0
  1337  01A4  00F3               	movwf	___aldiv@divisor+3
  1338  01A5  3000               	movlw	0
  1339  01A6  00F2               	movwf	___aldiv@divisor+2
  1340  01A7  3000               	movlw	0
  1341  01A8  00F1               	movwf	___aldiv@divisor+1
  1342  01A9  3010               	movlw	16
  1343  01AA  00F0               	movwf	___aldiv@divisor
  1344  01AB  0862               	movf	_adc_T+3,w
  1345  01AC  00F7               	movwf	___aldiv@dividend+3
  1346  01AD  0861               	movf	_adc_T+2,w
  1347  01AE  00F6               	movwf	___aldiv@dividend+2
  1348  01AF  0860               	movf	_adc_T+1,w
  1349  01B0  00F5               	movwf	___aldiv@dividend+1
  1350  01B1  085F               	movf	_adc_T,w
  1351  01B2  00F4               	movwf	___aldiv@dividend
  1352  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1353  01B8  0870               	movf	?___aldiv,w
  1354  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1355  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1356  01BB  00BA               	movwf	??_BMP280_readTemperature+12
  1357  01BC  0871               	movf	?___aldiv+1,w
  1358  01BD  00BB               	movwf	??_BMP280_readTemperature+13
  1359  01BE  0872               	movf	?___aldiv+2,w
  1360  01BF  00BC               	movwf	??_BMP280_readTemperature+14
  1361  01C0  0873               	movf	?___aldiv+3,w
  1362  01C1  00BD               	movwf	??_BMP280_readTemperature+15
  1363  01C2  0836               	movf	??_BMP280_readTemperature+8,w
  1364  01C3  02BA               	subwf	??_BMP280_readTemperature+12,f
  1365  01C4  0837               	movf	??_BMP280_readTemperature+9,w
  1366  01C5  1C03               	skipc
  1367  01C6  0F37               	incfsz	??_BMP280_readTemperature+9,w
  1368  01C7  29C9               	goto	u971
  1369  01C8  29CA               	goto	u972
  1370  01C9                     u971:
  1371  01C9  02BB               	subwf	??_BMP280_readTemperature+13,f
  1372  01CA                     u972:
  1373  01CA  0838               	movf	??_BMP280_readTemperature+10,w
  1374  01CB  1C03               	skipc
  1375  01CC  0F38               	incfsz	??_BMP280_readTemperature+10,w
  1376  01CD  29CF               	goto	u973
  1377  01CE  29D0               	goto	u974
  1378  01CF                     u973:
  1379  01CF  02BC               	subwf	??_BMP280_readTemperature+14,f
  1380  01D0                     u974:
  1381  01D0  0839               	movf	??_BMP280_readTemperature+11,w
  1382  01D1  1C03               	skipc
  1383  01D2  0F39               	incfsz	??_BMP280_readTemperature+11,w
  1384  01D3  29D5               	goto	u975
  1385  01D4  29D6               	goto	u976
  1386  01D5                     u975:
  1387  01D5  02BD               	subwf	??_BMP280_readTemperature+15,f
  1388  01D6                     u976:
  1389  01D6  083D               	movf	??_BMP280_readTemperature+15,w
  1390  01D7  00AD               	movwf	___lmul@multiplicand+3
  1391  01D8  083C               	movf	??_BMP280_readTemperature+14,w
  1392  01D9  00AC               	movwf	___lmul@multiplicand+2
  1393  01DA  083B               	movf	??_BMP280_readTemperature+13,w
  1394  01DB  00AB               	movwf	___lmul@multiplicand+1
  1395  01DC  083A               	movf	??_BMP280_readTemperature+12,w
  1396  01DD  00AA               	movwf	___lmul@multiplicand
  1397  01DE  120A  158A  2569  120A  118A  	fcall	___lmul
  1398  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1399  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1400  01E5  0829               	movf	?___lmul+3,w
  1401  01E6  00CE               	movwf	_BMP280_readTemperature$963+3
  1402  01E7  0828               	movf	?___lmul+2,w
  1403  01E8  00CD               	movwf	_BMP280_readTemperature$963+2
  1404  01E9  0827               	movf	?___lmul+1,w
  1405  01EA  00CC               	movwf	_BMP280_readTemperature$963+1
  1406  01EB  0826               	movf	?___lmul,w
  1407  01EC  00CB               	movwf	_BMP280_readTemperature$963
  1408                           
  1409                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1410  01ED  3000               	movlw	0
  1411  01EE  00F3               	movwf	___aldiv@divisor+3
  1412  01EF  3000               	movlw	0
  1413  01F0  00F2               	movwf	___aldiv@divisor+2
  1414  01F1  3010               	movlw	16
  1415  01F2  00F1               	movwf	___aldiv@divisor+1
  1416  01F3  3000               	movlw	0
  1417  01F4  00F0               	movwf	___aldiv@divisor
  1418  01F5  084E               	movf	_BMP280_readTemperature$963+3,w
  1419  01F6  00F7               	movwf	___aldiv@dividend+3
  1420  01F7  084D               	movf	_BMP280_readTemperature$963+2,w
  1421  01F8  00F6               	movwf	___aldiv@dividend+2
  1422  01F9  084C               	movf	_BMP280_readTemperature$963+1,w
  1423  01FA  00F5               	movwf	___aldiv@dividend+1
  1424  01FB  084B               	movf	_BMP280_readTemperature$963,w
  1425  01FC  00F4               	movwf	___aldiv@dividend
  1426  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1427  0202  0873               	movf	?___aldiv+3,w
  1428  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0205  00A9               	movwf	___lmul@multiplier+3
  1431  0206  0872               	movf	?___aldiv+2,w
  1432  0207  00A8               	movwf	___lmul@multiplier+2
  1433  0208  0871               	movf	?___aldiv+1,w
  1434  0209  00A7               	movwf	___lmul@multiplier+1
  1435  020A  0870               	movf	?___aldiv,w
  1436  020B  00A6               	movwf	___lmul@multiplier
  1437  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1438  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1439  020E  0839               	movf	(_BMP280_calib^(0+128)+4),w
  1440  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0211  00AA               	movwf	___lmul@multiplicand
  1443  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0214  083A               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1446  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0217  00AB               	movwf	___lmul@multiplicand+1
  1449  0218  3000               	movlw	0
  1450  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1451  021A  30FF               	movlw	255
  1452  021B  00AC               	movwf	___lmul@multiplicand+2
  1453  021C  00AD               	movwf	___lmul@multiplicand+3
  1454  021D  120A  158A  2569  120A  118A  	fcall	___lmul
  1455  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0224  0829               	movf	?___lmul+3,w
  1458  0225  00C9               	movwf	_BMP280_readTemperature$964+3
  1459  0226  0828               	movf	?___lmul+2,w
  1460  0227  00C8               	movwf	_BMP280_readTemperature$964+2
  1461  0228  0827               	movf	?___lmul+1,w
  1462  0229  00C7               	movwf	_BMP280_readTemperature$964+1
  1463  022A  0826               	movf	?___lmul,w
  1464  022B  00C6               	movwf	_BMP280_readTemperature$964
  1465                           
  1466                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1467  022C  3000               	movlw	0
  1468  022D  00F3               	movwf	___aldiv@divisor+3
  1469  022E  3000               	movlw	0
  1470  022F  00F2               	movwf	___aldiv@divisor+2
  1471  0230  3040               	movlw	64
  1472  0231  00F1               	movwf	___aldiv@divisor+1
  1473  0232  3000               	movlw	0
  1474  0233  00F0               	movwf	___aldiv@divisor
  1475  0234  0849               	movf	_BMP280_readTemperature$964+3,w
  1476  0235  00F7               	movwf	___aldiv@dividend+3
  1477  0236  0848               	movf	_BMP280_readTemperature$964+2,w
  1478  0237  00F6               	movwf	___aldiv@dividend+2
  1479  0238  0847               	movf	_BMP280_readTemperature$964+1,w
  1480  0239  00F5               	movwf	___aldiv@dividend+1
  1481  023A  0846               	movf	_BMP280_readTemperature$964,w
  1482  023B  00F4               	movwf	___aldiv@dividend
  1483  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1484  0241  0873               	movf	?___aldiv+3,w
  1485  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0244  00C5               	movwf	BMP280_readTemperature@var2+3
  1488  0245  0872               	movf	?___aldiv+2,w
  1489  0246  00C4               	movwf	BMP280_readTemperature@var2+2
  1490  0247  0871               	movf	?___aldiv+1,w
  1491  0248  00C3               	movwf	BMP280_readTemperature@var2+1
  1492  0249  0870               	movf	?___aldiv,w
  1493  024A  00C2               	movwf	BMP280_readTemperature@var2
  1494  024B                     l1214:
  1495                           
  1496                           ;BMP280.c: 255:   t_fine = var1 + var2;
  1497  024B  083E               	movf	BMP280_readTemperature@var1,w
  1498  024C  0742               	addwf	BMP280_readTemperature@var2,w
  1499  024D  00AE               	movwf	??_BMP280_readTemperature
  1500  024E  3000               	movlw	0
  1501  024F  1803               	skipnc
  1502  0250  3001               	movlw	1
  1503  0251  073F               	addwf	BMP280_readTemperature@var1+1,w
  1504  0252  01B0               	clrf	??_BMP280_readTemperature+2
  1505  0253  1803               	skipnc
  1506  0254  0AB0               	incf	??_BMP280_readTemperature+2,f
  1507  0255  0743               	addwf	BMP280_readTemperature@var2+1,w
  1508  0256  00AF               	movwf	??_BMP280_readTemperature+1
  1509  0257  1803               	skipnc
  1510  0258  0AB0               	incf	??_BMP280_readTemperature+2,f
  1511  0259  0840               	movf	BMP280_readTemperature@var1+2,w
  1512  025A  0730               	addwf	??_BMP280_readTemperature+2,w
  1513  025B  01B1               	clrf	??_BMP280_readTemperature+3
  1514  025C  1803               	skipnc
  1515  025D  0AB1               	incf	??_BMP280_readTemperature+3,f
  1516  025E  0744               	addwf	BMP280_readTemperature@var2+2,w
  1517  025F  00B0               	movwf	??_BMP280_readTemperature+2
  1518  0260  1803               	skipnc
  1519  0261  0AB1               	incf	??_BMP280_readTemperature+3,f
  1520  0262  0841               	movf	BMP280_readTemperature@var1+3,w
  1521  0263  0731               	addwf	??_BMP280_readTemperature+3,w
  1522  0264  0745               	addwf	BMP280_readTemperature@var2+3,w
  1523  0265  00B1               	movwf	??_BMP280_readTemperature+3
  1524  0266  0831               	movf	??_BMP280_readTemperature+3,w
  1525  0267  00DE               	movwf	_t_fine+3
  1526  0268  0830               	movf	??_BMP280_readTemperature+2,w
  1527  0269  00DD               	movwf	_t_fine+2
  1528  026A  082F               	movf	??_BMP280_readTemperature+1,w
  1529  026B  00DC               	movwf	_t_fine+1
  1530  026C  082E               	movf	??_BMP280_readTemperature,w
  1531  026D  00DB               	movwf	_t_fine
  1532  026E                     l1216:
  1533                           
  1534                           ;BMP280.c: 257:   *temp = (t_fine * 5 + 128) / 256;
  1535  026E  3000               	movlw	0
  1536  026F  00F3               	movwf	___aldiv@divisor+3
  1537  0270  3000               	movlw	0
  1538  0271  00F2               	movwf	___aldiv@divisor+2
  1539  0272  3001               	movlw	1
  1540  0273  00F1               	movwf	___aldiv@divisor+1
  1541  0274  3000               	movlw	0
  1542  0275  00F0               	movwf	___aldiv@divisor
  1543  0276  3080               	movlw	128
  1544  0277  00AE               	movwf	??_BMP280_readTemperature
  1545  0278  3000               	movlw	0
  1546  0279  00AF               	movwf	??_BMP280_readTemperature+1
  1547  027A  3000               	movlw	0
  1548  027B  00B0               	movwf	??_BMP280_readTemperature+2
  1549  027C  3000               	movlw	0
  1550  027D  00B1               	movwf	??_BMP280_readTemperature+3
  1551  027E  085E               	movf	_t_fine+3,w
  1552  027F  00A9               	movwf	___lmul@multiplier+3
  1553  0280  085D               	movf	_t_fine+2,w
  1554  0281  00A8               	movwf	___lmul@multiplier+2
  1555  0282  085C               	movf	_t_fine+1,w
  1556  0283  00A7               	movwf	___lmul@multiplier+1
  1557  0284  085B               	movf	_t_fine,w
  1558  0285  00A6               	movwf	___lmul@multiplier
  1559  0286  3000               	movlw	0
  1560  0287  00AD               	movwf	___lmul@multiplicand+3
  1561  0288  3000               	movlw	0
  1562  0289  00AC               	movwf	___lmul@multiplicand+2
  1563  028A  3000               	movlw	0
  1564  028B  00AB               	movwf	___lmul@multiplicand+1
  1565  028C  3005               	movlw	5
  1566  028D  00AA               	movwf	___lmul@multiplicand
  1567  028E  120A  158A  2569  120A  118A  	fcall	___lmul
  1568  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0295  0826               	movf	?___lmul,w
  1571  0296  07AE               	addwf	??_BMP280_readTemperature,f
  1572  0297  0827               	movf	?___lmul+1,w
  1573  0298  1803               	skipnc
  1574  0299  0F27               	incfsz	?___lmul+1,w
  1575  029A  2A9C               	goto	u980
  1576  029B  2A9D               	goto	u981
  1577  029C                     u980:
  1578  029C  07AF               	addwf	??_BMP280_readTemperature+1,f
  1579  029D                     u981:
  1580  029D  0828               	movf	?___lmul+2,w
  1581  029E  1803               	skipnc
  1582  029F  0F28               	incfsz	?___lmul+2,w
  1583  02A0  2AA2               	goto	u982
  1584  02A1  2AA3               	goto	u983
  1585  02A2                     u982:
  1586  02A2  07B0               	addwf	??_BMP280_readTemperature+2,f
  1587  02A3                     u983:
  1588  02A3  0829               	movf	?___lmul+3,w
  1589  02A4  1803               	skipnc
  1590  02A5  0A29               	incf	?___lmul+3,w
  1591  02A6  07B1               	addwf	??_BMP280_readTemperature+3,f
  1592  02A7  0831               	movf	??_BMP280_readTemperature+3,w
  1593  02A8  00F7               	movwf	___aldiv@dividend+3
  1594  02A9  0830               	movf	??_BMP280_readTemperature+2,w
  1595  02AA  00F6               	movwf	___aldiv@dividend+2
  1596  02AB  082F               	movf	??_BMP280_readTemperature+1,w
  1597  02AC  00F5               	movwf	___aldiv@dividend+1
  1598  02AD  082E               	movf	??_BMP280_readTemperature,w
  1599  02AE  00F4               	movwf	___aldiv@dividend
  1600  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1601  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1602  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1603  02B6  084A               	movf	BMP280_readTemperature@temp,w
  1604  02B7  0084               	movwf	4
  1605  02B8  0870               	movf	?___aldiv,w
  1606  02B9  1383               	bcf	3,7	;select IRP bank0
  1607  02BA  0080               	movwf	0
  1608  02BB  0A84               	incf	4,f
  1609  02BC  0871               	movf	?___aldiv+1,w
  1610  02BD  0080               	movwf	0
  1611  02BE  0A84               	incf	4,f
  1612  02BF  0872               	movf	?___aldiv+2,w
  1613  02C0  0080               	movwf	0
  1614  02C1  0A84               	incf	4,f
  1615  02C2  0873               	movf	?___aldiv+3,w
  1616  02C3  0080               	movwf	0
  1617  02C4                     l160:
  1618  02C4  0008               	return
  1619  02C5                     __end_of_BMP280_readTemperature:
  1620                           
  1621                           	psect	text4
  1622  0E63                     __ptext4:	
  1623 ;; *************** function _BMP280_Update *****************
  1624 ;; Defined at:
  1625 ;;		line 210 in file "BMP280.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  ret             4   10[COMMON] struct .
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         4       0       0       0       0
  1641 ;;      Temps:          4       0       0       0       0
  1642 ;;      Totals:         8       0       0       0       0
  1643 ;;Total ram usage:        8 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    2
  1646 ;; This function calls:
  1647 ;;		_I2C_Master_Read
  1648 ;;		_I2C_Master_Start
  1649 ;;		_I2C_Master_Stop
  1650 ;;		_I2C_Master_Write
  1651 ;; This function is called by:
  1652 ;;		_BMP280_readTemperature
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _BMP280_Update
  1658  0E63                     _BMP280_Update:
  1659  0E63                     l1104:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1662                           
  1663                           
  1664                           ;BMP280.c: 216:   } ret;;BMP280.c: 217:   ret.b[3] = 0x00;
  1665  0E63  01FD               	clrf	BMP280_Update@ret+3
  1666  0E64                     l1106:
  1667                           
  1668                           ;BMP280.c: 219:   I2C_Master_Start();
  1669  0E64  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  1670  0E69                     l1108:
  1671                           
  1672                           ;BMP280.c: 220:   I2C_Master_Write( 0xEE);
  1673  0E69  30EE               	movlw	238
  1674  0E6A  00F0               	movwf	I2C_Master_Write@d
  1675  0E6B  3000               	movlw	0
  1676  0E6C  00F1               	movwf	I2C_Master_Write@d+1
  1677  0E6D  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1678  0E72                     l1110:
  1679                           
  1680                           ;BMP280.c: 221:   I2C_Master_Write( 0xF7);
  1681  0E72  30F7               	movlw	247
  1682  0E73  00F0               	movwf	I2C_Master_Write@d
  1683  0E74  3000               	movlw	0
  1684  0E75  00F1               	movwf	I2C_Master_Write@d+1
  1685  0E76  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1686  0E7B                     l1112:
  1687                           
  1688                           ;BMP280.c: 222:   I2C_Master_Start();
  1689  0E7B  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  1690  0E80                     l1114:
  1691                           
  1692                           ;BMP280.c: 223:   I2C_Master_Write( 0xEE | 1);
  1693  0E80  30EF               	movlw	239
  1694  0E81  00F0               	movwf	I2C_Master_Write@d
  1695  0E82  3000               	movlw	0
  1696  0E83  00F1               	movwf	I2C_Master_Write@d+1
  1697  0E84  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  1698  0E89                     l1116:
  1699                           
  1700                           ;BMP280.c: 224:   ret.b[2] = I2C_Master_Read( 1);
  1701  0E89  3001               	movlw	1
  1702  0E8A  00F0               	movwf	I2C_Master_Read@a
  1703  0E8B  3000               	movlw	0
  1704  0E8C  00F1               	movwf	I2C_Master_Read@a+1
  1705  0E8D  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1706  0E92  0870               	movf	?_I2C_Master_Read,w
  1707  0E93  00F6               	movwf	??_BMP280_Update
  1708  0E94  0876               	movf	??_BMP280_Update,w
  1709  0E95  00FC               	movwf	BMP280_Update@ret+2
  1710  0E96                     l1118:
  1711                           
  1712                           ;BMP280.c: 225:   ret.b[1] = I2C_Master_Read( 1);
  1713  0E96  3001               	movlw	1
  1714  0E97  00F0               	movwf	I2C_Master_Read@a
  1715  0E98  3000               	movlw	0
  1716  0E99  00F1               	movwf	I2C_Master_Read@a+1
  1717  0E9A  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1718  0E9F  0870               	movf	?_I2C_Master_Read,w
  1719  0EA0  00F6               	movwf	??_BMP280_Update
  1720  0EA1  0876               	movf	??_BMP280_Update,w
  1721  0EA2  00FB               	movwf	BMP280_Update@ret+1
  1722  0EA3                     l1120:
  1723                           
  1724                           ;BMP280.c: 226:   ret.b[0] = I2C_Master_Read( 1);
  1725  0EA3  3001               	movlw	1
  1726  0EA4  00F0               	movwf	I2C_Master_Read@a
  1727  0EA5  3000               	movlw	0
  1728  0EA6  00F1               	movwf	I2C_Master_Read@a+1
  1729  0EA7  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1730  0EAC  0870               	movf	?_I2C_Master_Read,w
  1731  0EAD  00F6               	movwf	??_BMP280_Update
  1732  0EAE  0876               	movf	??_BMP280_Update,w
  1733  0EAF  00FA               	movwf	BMP280_Update@ret
  1734  0EB0                     l1122:
  1735                           
  1736                           ;BMP280.c: 228:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1737  0EB0  087A               	movf	BMP280_Update@ret,w
  1738  0EB1  00F6               	movwf	??_BMP280_Update
  1739  0EB2  087B               	movf	BMP280_Update@ret+1,w
  1740  0EB3  00F7               	movwf	??_BMP280_Update+1
  1741  0EB4  087C               	movf	BMP280_Update@ret+2,w
  1742  0EB5  00F8               	movwf	??_BMP280_Update+2
  1743  0EB6  087D               	movf	BMP280_Update@ret+3,w
  1744  0EB7  00F9               	movwf	??_BMP280_Update+3
  1745  0EB8  3004               	movlw	4
  1746  0EB9                     u755:
  1747  0EB9  1003               	clrc
  1748  0EBA  0CF9               	rrf	??_BMP280_Update+3,f
  1749  0EBB  0CF8               	rrf	??_BMP280_Update+2,f
  1750  0EBC  0CF7               	rrf	??_BMP280_Update+1,f
  1751  0EBD  0CF6               	rrf	??_BMP280_Update,f
  1752  0EBE                     u750:
  1753  0EBE  3EFF               	addlw	-1
  1754  0EBF  1D03               	skipz
  1755  0EC0  2EB9               	goto	u755
  1756  0EC1  30FF               	movlw	255
  1757  0EC2  0576               	andwf	??_BMP280_Update,w
  1758  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0EC5  00B1               	movwf	_adc_P^(0+128)
  1761  0EC6  30FF               	movlw	255
  1762  0EC7  0577               	andwf	??_BMP280_Update+1,w
  1763  0EC8  00B2               	movwf	(_adc_P+1)^(0+128)
  1764  0EC9  300F               	movlw	15
  1765  0ECA  0578               	andwf	??_BMP280_Update+2,w
  1766  0ECB  00B3               	movwf	(_adc_P+2)^(0+128)
  1767  0ECC  3000               	movlw	0
  1768  0ECD  0579               	andwf	??_BMP280_Update+3,w
  1769  0ECE  00B4               	movwf	(_adc_P+3)^(0+128)
  1770  0ECF                     l1124:
  1771                           
  1772                           ;BMP280.c: 230:   ret.b[2] = I2C_Master_Read(1);
  1773  0ECF  3001               	movlw	1
  1774  0ED0  00F0               	movwf	I2C_Master_Read@a
  1775  0ED1  3000               	movlw	0
  1776  0ED2  00F1               	movwf	I2C_Master_Read@a+1
  1777  0ED3  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1778  0ED8  0870               	movf	?_I2C_Master_Read,w
  1779  0ED9  00F6               	movwf	??_BMP280_Update
  1780  0EDA  0876               	movf	??_BMP280_Update,w
  1781  0EDB  00FC               	movwf	BMP280_Update@ret+2
  1782  0EDC                     l1126:
  1783                           
  1784                           ;BMP280.c: 231:   ret.b[1] = I2C_Master_Read(1);
  1785  0EDC  3001               	movlw	1
  1786  0EDD  00F0               	movwf	I2C_Master_Read@a
  1787  0EDE  3000               	movlw	0
  1788  0EDF  00F1               	movwf	I2C_Master_Read@a+1
  1789  0EE0  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1790  0EE5  0870               	movf	?_I2C_Master_Read,w
  1791  0EE6  00F6               	movwf	??_BMP280_Update
  1792  0EE7  0876               	movf	??_BMP280_Update,w
  1793  0EE8  00FB               	movwf	BMP280_Update@ret+1
  1794  0EE9                     l1128:
  1795                           
  1796                           ;BMP280.c: 232:   ret.b[0] = I2C_Master_Read(0);
  1797  0EE9  3000               	movlw	0
  1798  0EEA  00F0               	movwf	I2C_Master_Read@a
  1799  0EEB  00F1               	movwf	I2C_Master_Read@a+1
  1800  0EEC  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  1801  0EF1  0870               	movf	?_I2C_Master_Read,w
  1802  0EF2  00F6               	movwf	??_BMP280_Update
  1803  0EF3  0876               	movf	??_BMP280_Update,w
  1804  0EF4  00FA               	movwf	BMP280_Update@ret
  1805  0EF5                     l1130:
  1806                           
  1807                           ;BMP280.c: 233:   I2C_Master_Stop();
  1808  0EF5  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  1809  0EFA                     l1132:
  1810                           
  1811                           ;BMP280.c: 235:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1812  0EFA  087A               	movf	BMP280_Update@ret,w
  1813  0EFB  00F6               	movwf	??_BMP280_Update
  1814  0EFC  087B               	movf	BMP280_Update@ret+1,w
  1815  0EFD  00F7               	movwf	??_BMP280_Update+1
  1816  0EFE  087C               	movf	BMP280_Update@ret+2,w
  1817  0EFF  00F8               	movwf	??_BMP280_Update+2
  1818  0F00  087D               	movf	BMP280_Update@ret+3,w
  1819  0F01  00F9               	movwf	??_BMP280_Update+3
  1820  0F02  3004               	movlw	4
  1821  0F03                     u765:
  1822  0F03  1003               	clrc
  1823  0F04  0CF9               	rrf	??_BMP280_Update+3,f
  1824  0F05  0CF8               	rrf	??_BMP280_Update+2,f
  1825  0F06  0CF7               	rrf	??_BMP280_Update+1,f
  1826  0F07  0CF6               	rrf	??_BMP280_Update,f
  1827  0F08                     u760:
  1828  0F08  3EFF               	addlw	-1
  1829  0F09  1D03               	skipz
  1830  0F0A  2F03               	goto	u765
  1831  0F0B  30FF               	movlw	255
  1832  0F0C  0576               	andwf	??_BMP280_Update,w
  1833  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0F0F  00DF               	movwf	_adc_T
  1836  0F10  30FF               	movlw	255
  1837  0F11  0577               	andwf	??_BMP280_Update+1,w
  1838  0F12  00E0               	movwf	_adc_T+1
  1839  0F13  300F               	movlw	15
  1840  0F14  0578               	andwf	??_BMP280_Update+2,w
  1841  0F15  00E1               	movwf	_adc_T+2
  1842  0F16  3000               	movlw	0
  1843  0F17  0579               	andwf	??_BMP280_Update+3,w
  1844  0F18  00E2               	movwf	_adc_T+3
  1845  0F19                     l157:
  1846  0F19  0008               	return
  1847  0F1A                     __end_of_BMP280_Update:
  1848                           
  1849                           	psect	text5
  1850  02C5                     __ptext5:	
  1851 ;; *************** function _BMP280_readPressure *****************
  1852 ;; Defined at:
  1853 ;;		line 265 in file "BMP280.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  pres            1    wreg     PTR unsigned long 
  1856 ;;		 -> pressure(4), 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  pres            1   42[BANK0 ] PTR unsigned long 
  1859 ;;		 -> pressure(4), 
  1860 ;;  var1            4   55[BANK0 ] long 
  1861 ;;  p               4   51[BANK0 ] unsigned long 
  1862 ;;  var2            4   47[BANK0 ] long 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   10[None  ] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       0       0       0       0
  1873 ;;      Locals:         0      29       0       0       0
  1874 ;;      Temps:          0      16       0       0       0
  1875 ;;      Totals:         0      45       0       0       0
  1876 ;;Total ram usage:       45 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		___aldiv
  1881 ;;		___lldiv
  1882 ;;		___lmul
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _BMP280_readPressure
  1890  02C5                     _BMP280_readPressure:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1894                           ;BMP280_readPressure@pres stored from wreg
  1895  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1896  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1897  02C7  00CA               	movwf	BMP280_readPressure@pres
  1898  02C8                     l1220:
  1899                           
  1900                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1901  02C8  3000               	movlw	0
  1902  02C9  00AE               	movwf	??_BMP280_readPressure
  1903  02CA  3006               	movlw	6
  1904  02CB  00AF               	movwf	??_BMP280_readPressure+1
  1905  02CC  30FF               	movlw	255
  1906  02CD  00B0               	movwf	??_BMP280_readPressure+2
  1907  02CE  30FF               	movlw	255
  1908  02CF  00B1               	movwf	??_BMP280_readPressure+3
  1909  02D0  3000               	movlw	0
  1910  02D1  00F3               	movwf	___aldiv@divisor+3
  1911  02D2  3000               	movlw	0
  1912  02D3  00F2               	movwf	___aldiv@divisor+2
  1913  02D4  3000               	movlw	0
  1914  02D5  00F1               	movwf	___aldiv@divisor+1
  1915  02D6  3002               	movlw	2
  1916  02D7  00F0               	movwf	___aldiv@divisor
  1917  02D8  085E               	movf	_t_fine+3,w
  1918  02D9  00F7               	movwf	___aldiv@dividend+3
  1919  02DA  085D               	movf	_t_fine+2,w
  1920  02DB  00F6               	movwf	___aldiv@dividend+2
  1921  02DC  085C               	movf	_t_fine+1,w
  1922  02DD  00F5               	movwf	___aldiv@dividend+1
  1923  02DE  085B               	movf	_t_fine,w
  1924  02DF  00F4               	movwf	___aldiv@dividend
  1925  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  1926  02E5  0870               	movf	?___aldiv,w
  1927  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1928  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1929  02E8  07AE               	addwf	??_BMP280_readPressure,f
  1930  02E9  0871               	movf	?___aldiv+1,w
  1931  02EA  1803               	skipnc
  1932  02EB  0F71               	incfsz	?___aldiv+1,w
  1933  02EC  2AEE               	goto	u990
  1934  02ED  2AEF               	goto	u991
  1935  02EE                     u990:
  1936  02EE  07AF               	addwf	??_BMP280_readPressure+1,f
  1937  02EF                     u991:
  1938  02EF  0872               	movf	?___aldiv+2,w
  1939  02F0  1803               	skipnc
  1940  02F1  0F72               	incfsz	?___aldiv+2,w
  1941  02F2  2AF4               	goto	u992
  1942  02F3  2AF5               	goto	u993
  1943  02F4                     u992:
  1944  02F4  07B0               	addwf	??_BMP280_readPressure+2,f
  1945  02F5                     u993:
  1946  02F5  0873               	movf	?___aldiv+3,w
  1947  02F6  1803               	skipnc
  1948  02F7  0A73               	incf	?___aldiv+3,w
  1949  02F8  07B1               	addwf	??_BMP280_readPressure+3,f
  1950  02F9  0831               	movf	??_BMP280_readPressure+3,w
  1951  02FA  00DA               	movwf	BMP280_readPressure@var1+3
  1952  02FB  0830               	movf	??_BMP280_readPressure+2,w
  1953  02FC  00D9               	movwf	BMP280_readPressure@var1+2
  1954  02FD  082F               	movf	??_BMP280_readPressure+1,w
  1955  02FE  00D8               	movwf	BMP280_readPressure@var1+1
  1956  02FF  082E               	movf	??_BMP280_readPressure,w
  1957  0300  00D7               	movwf	BMP280_readPressure@var1
  1958                           
  1959                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1960  0301  3000               	movlw	0
  1961  0302  00F3               	movwf	___aldiv@divisor+3
  1962  0303  3000               	movlw	0
  1963  0304  00F2               	movwf	___aldiv@divisor+2
  1964  0305  3000               	movlw	0
  1965  0306  00F1               	movwf	___aldiv@divisor+1
  1966  0307  3004               	movlw	4
  1967  0308  00F0               	movwf	___aldiv@divisor
  1968  0309  085A               	movf	BMP280_readPressure@var1+3,w
  1969  030A  00F7               	movwf	___aldiv@dividend+3
  1970  030B  0859               	movf	BMP280_readPressure@var1+2,w
  1971  030C  00F6               	movwf	___aldiv@dividend+2
  1972  030D  0858               	movf	BMP280_readPressure@var1+1,w
  1973  030E  00F5               	movwf	___aldiv@dividend+1
  1974  030F  0857               	movf	BMP280_readPressure@var1,w
  1975  0310  00F4               	movwf	___aldiv@dividend
  1976  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  1977  0316  0873               	movf	?___aldiv+3,w
  1978  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0319  00A9               	movwf	___lmul@multiplier+3
  1981  031A  0872               	movf	?___aldiv+2,w
  1982  031B  00A8               	movwf	___lmul@multiplier+2
  1983  031C  0871               	movf	?___aldiv+1,w
  1984  031D  00A7               	movwf	___lmul@multiplier+1
  1985  031E  0870               	movf	?___aldiv,w
  1986  031F  00A6               	movwf	___lmul@multiplier
  1987  0320  3000               	movlw	0
  1988  0321  00F3               	movwf	___aldiv@divisor+3
  1989  0322  3000               	movlw	0
  1990  0323  00F2               	movwf	___aldiv@divisor+2
  1991  0324  3000               	movlw	0
  1992  0325  00F1               	movwf	___aldiv@divisor+1
  1993  0326  3004               	movlw	4
  1994  0327  00F0               	movwf	___aldiv@divisor
  1995  0328  085A               	movf	BMP280_readPressure@var1+3,w
  1996  0329  00F7               	movwf	___aldiv@dividend+3
  1997  032A  0859               	movf	BMP280_readPressure@var1+2,w
  1998  032B  00F6               	movwf	___aldiv@dividend+2
  1999  032C  0858               	movf	BMP280_readPressure@var1+1,w
  2000  032D  00F5               	movwf	___aldiv@dividend+1
  2001  032E  0857               	movf	BMP280_readPressure@var1,w
  2002  032F  00F4               	movwf	___aldiv@dividend
  2003  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  2004  0335  0873               	movf	?___aldiv+3,w
  2005  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0338  00AD               	movwf	___lmul@multiplicand+3
  2008  0339  0872               	movf	?___aldiv+2,w
  2009  033A  00AC               	movwf	___lmul@multiplicand+2
  2010  033B  0871               	movf	?___aldiv+1,w
  2011  033C  00AB               	movwf	___lmul@multiplicand+1
  2012  033D  0870               	movf	?___aldiv,w
  2013  033E  00AA               	movwf	___lmul@multiplicand
  2014  033F  120A  158A  2569  120A  118A  	fcall	___lmul
  2015  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0346  0829               	movf	?___lmul+3,w
  2018  0347  00CE               	movwf	_BMP280_readPressure$965+3
  2019  0348  0828               	movf	?___lmul+2,w
  2020  0349  00CD               	movwf	_BMP280_readPressure$965+2
  2021  034A  0827               	movf	?___lmul+1,w
  2022  034B  00CC               	movwf	_BMP280_readPressure$965+1
  2023  034C  0826               	movf	?___lmul,w
  2024  034D  00CB               	movwf	_BMP280_readPressure$965
  2025                           
  2026                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2027  034E  3000               	movlw	0
  2028  034F  00F3               	movwf	___aldiv@divisor+3
  2029  0350  3000               	movlw	0
  2030  0351  00F2               	movwf	___aldiv@divisor+2
  2031  0352  3008               	movlw	8
  2032  0353  00F1               	movwf	___aldiv@divisor+1
  2033  0354  3000               	movlw	0
  2034  0355  00F0               	movwf	___aldiv@divisor
  2035  0356  084E               	movf	_BMP280_readPressure$965+3,w
  2036  0357  00F7               	movwf	___aldiv@dividend+3
  2037  0358  084D               	movf	_BMP280_readPressure$965+2,w
  2038  0359  00F6               	movwf	___aldiv@dividend+2
  2039  035A  084C               	movf	_BMP280_readPressure$965+1,w
  2040  035B  00F5               	movwf	___aldiv@dividend+1
  2041  035C  084B               	movf	_BMP280_readPressure$965,w
  2042  035D  00F4               	movwf	___aldiv@dividend
  2043  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2044  0363  0873               	movf	?___aldiv+3,w
  2045  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0366  00A9               	movwf	___lmul@multiplier+3
  2048  0367  0872               	movf	?___aldiv+2,w
  2049  0368  00A8               	movwf	___lmul@multiplier+2
  2050  0369  0871               	movf	?___aldiv+1,w
  2051  036A  00A7               	movwf	___lmul@multiplier+1
  2052  036B  0870               	movf	?___aldiv,w
  2053  036C  00A6               	movwf	___lmul@multiplier
  2054  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2055  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2056  036F  0845               	movf	(_BMP280_calib^(0+128)+16),w
  2057  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0372  00AA               	movwf	___lmul@multiplicand
  2060  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0375  0846               	movf	((_BMP280_calib+1)^(0+128)+16),w
  2063  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0378  00AB               	movwf	___lmul@multiplicand+1
  2066  0379  3000               	movlw	0
  2067  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  2068  037B  30FF               	movlw	255
  2069  037C  00AC               	movwf	___lmul@multiplicand+2
  2070  037D  00AD               	movwf	___lmul@multiplicand+3
  2071  037E  120A  158A  2569  120A  118A  	fcall	___lmul
  2072  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0385  0829               	movf	?___lmul+3,w
  2075  0386  00D2               	movwf	BMP280_readPressure@var2+3
  2076  0387  0828               	movf	?___lmul+2,w
  2077  0388  00D1               	movwf	BMP280_readPressure@var2+2
  2078  0389  0827               	movf	?___lmul+1,w
  2079  038A  00D0               	movwf	BMP280_readPressure@var2+1
  2080  038B  0826               	movf	?___lmul,w
  2081  038C  00CF               	movwf	BMP280_readPressure@var2
  2082                           
  2083                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  2084  038D  084F               	movf	BMP280_readPressure@var2,w
  2085  038E  00AE               	movwf	??_BMP280_readPressure
  2086  038F  0850               	movf	BMP280_readPressure@var2+1,w
  2087  0390  00AF               	movwf	??_BMP280_readPressure+1
  2088  0391  0851               	movf	BMP280_readPressure@var2+2,w
  2089  0392  00B0               	movwf	??_BMP280_readPressure+2
  2090  0393  0852               	movf	BMP280_readPressure@var2+3,w
  2091  0394  00B1               	movwf	??_BMP280_readPressure+3
  2092  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0397  0843               	movf	(_BMP280_calib^(0+128)+14),w
  2095  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2097  039A  00A6               	movwf	___lmul@multiplier
  2098  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2099  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2100  039D  0844               	movf	((_BMP280_calib+1)^(0+128)+14),w
  2101  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2102  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2103  03A0  00A7               	movwf	___lmul@multiplier+1
  2104  03A1  3000               	movlw	0
  2105  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  2106  03A3  30FF               	movlw	255
  2107  03A4  00A8               	movwf	___lmul@multiplier+2
  2108  03A5  00A9               	movwf	___lmul@multiplier+3
  2109  03A6  085A               	movf	BMP280_readPressure@var1+3,w
  2110  03A7  00AD               	movwf	___lmul@multiplicand+3
  2111  03A8  0859               	movf	BMP280_readPressure@var1+2,w
  2112  03A9  00AC               	movwf	___lmul@multiplicand+2
  2113  03AA  0858               	movf	BMP280_readPressure@var1+1,w
  2114  03AB  00AB               	movwf	___lmul@multiplicand+1
  2115  03AC  0857               	movf	BMP280_readPressure@var1,w
  2116  03AD  00AA               	movwf	___lmul@multiplicand
  2117  03AE  120A  158A  2569  120A  118A  	fcall	___lmul
  2118  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2119  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2120  03B5  0826               	movf	?___lmul,w
  2121  03B6  00B2               	movwf	??_BMP280_readPressure+4
  2122  03B7  0827               	movf	?___lmul+1,w
  2123  03B8  00B3               	movwf	??_BMP280_readPressure+5
  2124  03B9  0828               	movf	?___lmul+2,w
  2125  03BA  00B4               	movwf	??_BMP280_readPressure+6
  2126  03BB  0829               	movf	?___lmul+3,w
  2127  03BC  00B5               	movwf	??_BMP280_readPressure+7
  2128  03BD  3001               	movlw	1
  2129  03BE                     u1005:
  2130  03BE  1003               	clrc
  2131  03BF  0DB2               	rlf	??_BMP280_readPressure+4,f
  2132  03C0  0DB3               	rlf	??_BMP280_readPressure+5,f
  2133  03C1  0DB4               	rlf	??_BMP280_readPressure+6,f
  2134  03C2  0DB5               	rlf	??_BMP280_readPressure+7,f
  2135  03C3                     u1000:
  2136  03C3  3EFF               	addlw	-1
  2137  03C4  1D03               	skipz
  2138  03C5  2BBE               	goto	u1005
  2139  03C6  0832               	movf	??_BMP280_readPressure+4,w
  2140  03C7  07AE               	addwf	??_BMP280_readPressure,f
  2141  03C8  0833               	movf	??_BMP280_readPressure+5,w
  2142  03C9  1803               	skipnc
  2143  03CA  0F33               	incfsz	??_BMP280_readPressure+5,w
  2144  03CB  2BCD               	goto	u1010
  2145  03CC  2BCE               	goto	u1011
  2146  03CD                     u1010:
  2147  03CD  07AF               	addwf	??_BMP280_readPressure+1,f
  2148  03CE                     u1011:
  2149  03CE  0834               	movf	??_BMP280_readPressure+6,w
  2150  03CF  1803               	skipnc
  2151  03D0  0F34               	incfsz	??_BMP280_readPressure+6,w
  2152  03D1  2BD3               	goto	u1012
  2153  03D2  2BD4               	goto	u1013
  2154  03D3                     u1012:
  2155  03D3  07B0               	addwf	??_BMP280_readPressure+2,f
  2156  03D4                     u1013:
  2157  03D4  0835               	movf	??_BMP280_readPressure+7,w
  2158  03D5  1803               	skipnc
  2159  03D6  0A35               	incf	??_BMP280_readPressure+7,w
  2160  03D7  07B1               	addwf	??_BMP280_readPressure+3,f
  2161  03D8  0831               	movf	??_BMP280_readPressure+3,w
  2162  03D9  00D2               	movwf	BMP280_readPressure@var2+3
  2163  03DA  0830               	movf	??_BMP280_readPressure+2,w
  2164  03DB  00D1               	movwf	BMP280_readPressure@var2+2
  2165  03DC  082F               	movf	??_BMP280_readPressure+1,w
  2166  03DD  00D0               	movwf	BMP280_readPressure@var2+1
  2167  03DE  082E               	movf	??_BMP280_readPressure,w
  2168  03DF  00CF               	movwf	BMP280_readPressure@var2
  2169                           
  2170                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2171  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2172  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2173  03E2  0841               	movf	(_BMP280_calib^(0+128)+12),w
  2174  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2175  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2176  03E5  00AE               	movwf	??_BMP280_readPressure
  2177  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2178  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2179  03E8  0842               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2180  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2181  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2182  03EB  00AF               	movwf	??_BMP280_readPressure+1
  2183  03EC  01B0               	clrf	??_BMP280_readPressure+2
  2184  03ED  01B1               	clrf	??_BMP280_readPressure+3
  2185  03EE  3010               	movlw	16
  2186  03EF                     u1025:
  2187  03EF  1003               	clrc
  2188  03F0  0DAE               	rlf	??_BMP280_readPressure,f
  2189  03F1  0DAF               	rlf	??_BMP280_readPressure+1,f
  2190  03F2  0DB0               	rlf	??_BMP280_readPressure+2,f
  2191  03F3  0DB1               	rlf	??_BMP280_readPressure+3,f
  2192  03F4                     u1020:
  2193  03F4  3EFF               	addlw	-1
  2194  03F5  1D03               	skipz
  2195  03F6  2BEF               	goto	u1025
  2196  03F7  3000               	movlw	0
  2197  03F8  00F3               	movwf	___aldiv@divisor+3
  2198  03F9  3000               	movlw	0
  2199  03FA  00F2               	movwf	___aldiv@divisor+2
  2200  03FB  3000               	movlw	0
  2201  03FC  00F1               	movwf	___aldiv@divisor+1
  2202  03FD  3004               	movlw	4
  2203  03FE  00F0               	movwf	___aldiv@divisor
  2204  03FF  0852               	movf	BMP280_readPressure@var2+3,w
  2205  0400  00F7               	movwf	___aldiv@dividend+3
  2206  0401  0851               	movf	BMP280_readPressure@var2+2,w
  2207  0402  00F6               	movwf	___aldiv@dividend+2
  2208  0403  0850               	movf	BMP280_readPressure@var2+1,w
  2209  0404  00F5               	movwf	___aldiv@dividend+1
  2210  0405  084F               	movf	BMP280_readPressure@var2,w
  2211  0406  00F4               	movwf	___aldiv@dividend
  2212  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2213  040C  0870               	movf	?___aldiv,w
  2214  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2215  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2216  040F  07AE               	addwf	??_BMP280_readPressure,f
  2217  0410  0871               	movf	?___aldiv+1,w
  2218  0411  1803               	skipnc
  2219  0412  0F71               	incfsz	?___aldiv+1,w
  2220  0413  2C15               	goto	u1030
  2221  0414  2C16               	goto	u1031
  2222  0415                     u1030:
  2223  0415  07AF               	addwf	??_BMP280_readPressure+1,f
  2224  0416                     u1031:
  2225  0416  0872               	movf	?___aldiv+2,w
  2226  0417  1803               	skipnc
  2227  0418  0F72               	incfsz	?___aldiv+2,w
  2228  0419  2C1B               	goto	u1032
  2229  041A  2C1C               	goto	u1033
  2230  041B                     u1032:
  2231  041B  07B0               	addwf	??_BMP280_readPressure+2,f
  2232  041C                     u1033:
  2233  041C  0873               	movf	?___aldiv+3,w
  2234  041D  1803               	skipnc
  2235  041E  0A73               	incf	?___aldiv+3,w
  2236  041F  07B1               	addwf	??_BMP280_readPressure+3,f
  2237  0420  0831               	movf	??_BMP280_readPressure+3,w
  2238  0421  00D2               	movwf	BMP280_readPressure@var2+3
  2239  0422  0830               	movf	??_BMP280_readPressure+2,w
  2240  0423  00D1               	movwf	BMP280_readPressure@var2+2
  2241  0424  082F               	movf	??_BMP280_readPressure+1,w
  2242  0425  00D0               	movwf	BMP280_readPressure@var2+1
  2243  0426  082E               	movf	??_BMP280_readPressure,w
  2244  0427  00CF               	movwf	BMP280_readPressure@var2
  2245                           
  2246                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2247  0428  3000               	movlw	0
  2248  0429  00F3               	movwf	___aldiv@divisor+3
  2249  042A  3000               	movlw	0
  2250  042B  00F2               	movwf	___aldiv@divisor+2
  2251  042C  3000               	movlw	0
  2252  042D  00F1               	movwf	___aldiv@divisor+1
  2253  042E  3004               	movlw	4
  2254  042F  00F0               	movwf	___aldiv@divisor
  2255  0430  085A               	movf	BMP280_readPressure@var1+3,w
  2256  0431  00F7               	movwf	___aldiv@dividend+3
  2257  0432  0859               	movf	BMP280_readPressure@var1+2,w
  2258  0433  00F6               	movwf	___aldiv@dividend+2
  2259  0434  0858               	movf	BMP280_readPressure@var1+1,w
  2260  0435  00F5               	movwf	___aldiv@dividend+1
  2261  0436  0857               	movf	BMP280_readPressure@var1,w
  2262  0437  00F4               	movwf	___aldiv@dividend
  2263  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2264  043D  0873               	movf	?___aldiv+3,w
  2265  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2266  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0440  00A9               	movwf	___lmul@multiplier+3
  2268  0441  0872               	movf	?___aldiv+2,w
  2269  0442  00A8               	movwf	___lmul@multiplier+2
  2270  0443  0871               	movf	?___aldiv+1,w
  2271  0444  00A7               	movwf	___lmul@multiplier+1
  2272  0445  0870               	movf	?___aldiv,w
  2273  0446  00A6               	movwf	___lmul@multiplier
  2274  0447  3000               	movlw	0
  2275  0448  00F3               	movwf	___aldiv@divisor+3
  2276  0449  3000               	movlw	0
  2277  044A  00F2               	movwf	___aldiv@divisor+2
  2278  044B  3000               	movlw	0
  2279  044C  00F1               	movwf	___aldiv@divisor+1
  2280  044D  3004               	movlw	4
  2281  044E  00F0               	movwf	___aldiv@divisor
  2282  044F  085A               	movf	BMP280_readPressure@var1+3,w
  2283  0450  00F7               	movwf	___aldiv@dividend+3
  2284  0451  0859               	movf	BMP280_readPressure@var1+2,w
  2285  0452  00F6               	movwf	___aldiv@dividend+2
  2286  0453  0858               	movf	BMP280_readPressure@var1+1,w
  2287  0454  00F5               	movwf	___aldiv@dividend+1
  2288  0455  0857               	movf	BMP280_readPressure@var1,w
  2289  0456  00F4               	movwf	___aldiv@dividend
  2290  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2291  045C  0873               	movf	?___aldiv+3,w
  2292  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2293  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2294  045F  00AD               	movwf	___lmul@multiplicand+3
  2295  0460  0872               	movf	?___aldiv+2,w
  2296  0461  00AC               	movwf	___lmul@multiplicand+2
  2297  0462  0871               	movf	?___aldiv+1,w
  2298  0463  00AB               	movwf	___lmul@multiplicand+1
  2299  0464  0870               	movf	?___aldiv,w
  2300  0465  00AA               	movwf	___lmul@multiplicand
  2301  0466  120A  158A  2569  120A  118A  	fcall	___lmul
  2302  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2303  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2304  046D  0829               	movf	?___lmul+3,w
  2305  046E  00CE               	movwf	_BMP280_readPressure$965+3
  2306  046F  0828               	movf	?___lmul+2,w
  2307  0470  00CD               	movwf	_BMP280_readPressure$965+2
  2308  0471  0827               	movf	?___lmul+1,w
  2309  0472  00CC               	movwf	_BMP280_readPressure$965+1
  2310  0473  0826               	movf	?___lmul,w
  2311  0474  00CB               	movwf	_BMP280_readPressure$965
  2312                           
  2313                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2314  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0477  083F               	movf	(_BMP280_calib^(0+128)+10),w
  2317  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2319  047A  00A6               	movwf	___lmul@multiplier
  2320  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2321  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2322  047D  0840               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2323  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2324  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0480  00A7               	movwf	___lmul@multiplier+1
  2326  0481  3000               	movlw	0
  2327  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2328  0483  30FF               	movlw	255
  2329  0484  00A8               	movwf	___lmul@multiplier+2
  2330  0485  00A9               	movwf	___lmul@multiplier+3
  2331  0486  3000               	movlw	0
  2332  0487  00F3               	movwf	___aldiv@divisor+3
  2333  0488  3000               	movlw	0
  2334  0489  00F2               	movwf	___aldiv@divisor+2
  2335  048A  3020               	movlw	32
  2336  048B  00F1               	movwf	___aldiv@divisor+1
  2337  048C  3000               	movlw	0
  2338  048D  00F0               	movwf	___aldiv@divisor
  2339  048E  084E               	movf	_BMP280_readPressure$965+3,w
  2340  048F  00F7               	movwf	___aldiv@dividend+3
  2341  0490  084D               	movf	_BMP280_readPressure$965+2,w
  2342  0491  00F6               	movwf	___aldiv@dividend+2
  2343  0492  084C               	movf	_BMP280_readPressure$965+1,w
  2344  0493  00F5               	movwf	___aldiv@dividend+1
  2345  0494  084B               	movf	_BMP280_readPressure$965,w
  2346  0495  00F4               	movwf	___aldiv@dividend
  2347  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2348  049B  0873               	movf	?___aldiv+3,w
  2349  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2350  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2351  049E  00AD               	movwf	___lmul@multiplicand+3
  2352  049F  0872               	movf	?___aldiv+2,w
  2353  04A0  00AC               	movwf	___lmul@multiplicand+2
  2354  04A1  0871               	movf	?___aldiv+1,w
  2355  04A2  00AB               	movwf	___lmul@multiplicand+1
  2356  04A3  0870               	movf	?___aldiv,w
  2357  04A4  00AA               	movwf	___lmul@multiplicand
  2358  04A5  120A  158A  2569  120A  118A  	fcall	___lmul
  2359  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2360  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2361  04AC  0829               	movf	?___lmul+3,w
  2362  04AD  00C1               	movwf	_BMP280_readPressure$966+3
  2363  04AE  0828               	movf	?___lmul+2,w
  2364  04AF  00C0               	movwf	_BMP280_readPressure$966+2
  2365  04B0  0827               	movf	?___lmul+1,w
  2366  04B1  00BF               	movwf	_BMP280_readPressure$966+1
  2367  04B2  0826               	movf	?___lmul,w
  2368  04B3  00BE               	movwf	_BMP280_readPressure$966
  2369                           
  2370                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2371  04B4  3000               	movlw	0
  2372  04B5  00F3               	movwf	___aldiv@divisor+3
  2373  04B6  3000               	movlw	0
  2374  04B7  00F2               	movwf	___aldiv@divisor+2
  2375  04B8  3000               	movlw	0
  2376  04B9  00F1               	movwf	___aldiv@divisor+1
  2377  04BA  3002               	movlw	2
  2378  04BB  00F0               	movwf	___aldiv@divisor
  2379  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2380  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2381  04BE  083D               	movf	(_BMP280_calib^(0+128)+8),w
  2382  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2383  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2384  04C1  00A6               	movwf	___lmul@multiplier
  2385  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2386  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2387  04C4  083E               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2388  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2389  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2390  04C7  00A7               	movwf	___lmul@multiplier+1
  2391  04C8  3000               	movlw	0
  2392  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2393  04CA  30FF               	movlw	255
  2394  04CB  00A8               	movwf	___lmul@multiplier+2
  2395  04CC  00A9               	movwf	___lmul@multiplier+3
  2396  04CD  085A               	movf	BMP280_readPressure@var1+3,w
  2397  04CE  00AD               	movwf	___lmul@multiplicand+3
  2398  04CF  0859               	movf	BMP280_readPressure@var1+2,w
  2399  04D0  00AC               	movwf	___lmul@multiplicand+2
  2400  04D1  0858               	movf	BMP280_readPressure@var1+1,w
  2401  04D2  00AB               	movwf	___lmul@multiplicand+1
  2402  04D3  0857               	movf	BMP280_readPressure@var1,w
  2403  04D4  00AA               	movwf	___lmul@multiplicand
  2404  04D5  120A  158A  2569  120A  118A  	fcall	___lmul
  2405  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2406  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2407  04DC  0829               	movf	?___lmul+3,w
  2408  04DD  00F7               	movwf	___aldiv@dividend+3
  2409  04DE  0828               	movf	?___lmul+2,w
  2410  04DF  00F6               	movwf	___aldiv@dividend+2
  2411  04E0  0827               	movf	?___lmul+1,w
  2412  04E1  00F5               	movwf	___aldiv@dividend+1
  2413  04E2  0826               	movf	?___lmul,w
  2414  04E3  00F4               	movwf	___aldiv@dividend
  2415  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2416  04E9  0870               	movf	?___aldiv,w
  2417  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2418  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2419  04EC  00AE               	movwf	??_BMP280_readPressure
  2420  04ED  0871               	movf	?___aldiv+1,w
  2421  04EE  00AF               	movwf	??_BMP280_readPressure+1
  2422  04EF  0872               	movf	?___aldiv+2,w
  2423  04F0  00B0               	movwf	??_BMP280_readPressure+2
  2424  04F1  0873               	movf	?___aldiv+3,w
  2425  04F2  00B1               	movwf	??_BMP280_readPressure+3
  2426  04F3  3000               	movlw	0
  2427  04F4  00F3               	movwf	___aldiv@divisor+3
  2428  04F5  3000               	movlw	0
  2429  04F6  00F2               	movwf	___aldiv@divisor+2
  2430  04F7  3000               	movlw	0
  2431  04F8  00F1               	movwf	___aldiv@divisor+1
  2432  04F9  3008               	movlw	8
  2433  04FA  00F0               	movwf	___aldiv@divisor
  2434  04FB  0841               	movf	_BMP280_readPressure$966+3,w
  2435  04FC  00F7               	movwf	___aldiv@dividend+3
  2436  04FD  0840               	movf	_BMP280_readPressure$966+2,w
  2437  04FE  00F6               	movwf	___aldiv@dividend+2
  2438  04FF  083F               	movf	_BMP280_readPressure$966+1,w
  2439  0500  00F5               	movwf	___aldiv@dividend+1
  2440  0501  083E               	movf	_BMP280_readPressure$966,w
  2441  0502  00F4               	movwf	___aldiv@dividend
  2442  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2443  0508  0870               	movf	?___aldiv,w
  2444  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2445  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2446  050B  07AE               	addwf	??_BMP280_readPressure,f
  2447  050C  0871               	movf	?___aldiv+1,w
  2448  050D  1803               	skipnc
  2449  050E  0F71               	incfsz	?___aldiv+1,w
  2450  050F  2D11               	goto	u1040
  2451  0510  2D12               	goto	u1041
  2452  0511                     u1040:
  2453  0511  07AF               	addwf	??_BMP280_readPressure+1,f
  2454  0512                     u1041:
  2455  0512  0872               	movf	?___aldiv+2,w
  2456  0513  1803               	skipnc
  2457  0514  0F72               	incfsz	?___aldiv+2,w
  2458  0515  2D17               	goto	u1042
  2459  0516  2D18               	goto	u1043
  2460  0517                     u1042:
  2461  0517  07B0               	addwf	??_BMP280_readPressure+2,f
  2462  0518                     u1043:
  2463  0518  0873               	movf	?___aldiv+3,w
  2464  0519  1803               	skipnc
  2465  051A  0A73               	incf	?___aldiv+3,w
  2466  051B  07B1               	addwf	??_BMP280_readPressure+3,f
  2467  051C  0831               	movf	??_BMP280_readPressure+3,w
  2468  051D  00C5               	movwf	_BMP280_readPressure$967+3
  2469  051E  0830               	movf	??_BMP280_readPressure+2,w
  2470  051F  00C4               	movwf	_BMP280_readPressure$967+2
  2471  0520  082F               	movf	??_BMP280_readPressure+1,w
  2472  0521  00C3               	movwf	_BMP280_readPressure$967+1
  2473  0522  082E               	movf	??_BMP280_readPressure,w
  2474  0523  00C2               	movwf	_BMP280_readPressure$967
  2475                           
  2476                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2477  0524  3000               	movlw	0
  2478  0525  00F3               	movwf	___aldiv@divisor+3
  2479  0526  3004               	movlw	4
  2480  0527  00F2               	movwf	___aldiv@divisor+2
  2481  0528  3000               	movlw	0
  2482  0529  00F1               	movwf	___aldiv@divisor+1
  2483  052A  3000               	movlw	0
  2484  052B  00F0               	movwf	___aldiv@divisor
  2485  052C  0845               	movf	_BMP280_readPressure$967+3,w
  2486  052D  00F7               	movwf	___aldiv@dividend+3
  2487  052E  0844               	movf	_BMP280_readPressure$967+2,w
  2488  052F  00F6               	movwf	___aldiv@dividend+2
  2489  0530  0843               	movf	_BMP280_readPressure$967+1,w
  2490  0531  00F5               	movwf	___aldiv@dividend+1
  2491  0532  0842               	movf	_BMP280_readPressure$967,w
  2492  0533  00F4               	movwf	___aldiv@dividend
  2493  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2494  0539  0873               	movf	?___aldiv+3,w
  2495  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2496  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2497  053C  00DA               	movwf	BMP280_readPressure@var1+3
  2498  053D  0872               	movf	?___aldiv+2,w
  2499  053E  00D9               	movwf	BMP280_readPressure@var1+2
  2500  053F  0871               	movf	?___aldiv+1,w
  2501  0540  00D8               	movwf	BMP280_readPressure@var1+1
  2502  0541  0870               	movf	?___aldiv,w
  2503  0542  00D7               	movwf	BMP280_readPressure@var1
  2504                           
  2505                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2506  0543  3000               	movlw	0
  2507  0544  00F3               	movwf	___aldiv@divisor+3
  2508  0545  3000               	movlw	0
  2509  0546  00F2               	movwf	___aldiv@divisor+2
  2510  0547  3080               	movlw	128
  2511  0548  00F1               	movwf	___aldiv@divisor+1
  2512  0549  3000               	movlw	0
  2513  054A  00F0               	movwf	___aldiv@divisor
  2514  054B  3000               	movlw	0
  2515  054C  00AE               	movwf	??_BMP280_readPressure
  2516  054D  3080               	movlw	128
  2517  054E  00AF               	movwf	??_BMP280_readPressure+1
  2518  054F  3000               	movlw	0
  2519  0550  00B0               	movwf	??_BMP280_readPressure+2
  2520  0551  3000               	movlw	0
  2521  0552  00B1               	movwf	??_BMP280_readPressure+3
  2522  0553  0857               	movf	BMP280_readPressure@var1,w
  2523  0554  07AE               	addwf	??_BMP280_readPressure,f
  2524  0555  0858               	movf	BMP280_readPressure@var1+1,w
  2525  0556  1803               	skipnc
  2526  0557  0F58               	incfsz	BMP280_readPressure@var1+1,w
  2527  0558  2D5A               	goto	u1050
  2528  0559  2D5B               	goto	u1051
  2529  055A                     u1050:
  2530  055A  07AF               	addwf	??_BMP280_readPressure+1,f
  2531  055B                     u1051:
  2532  055B  0859               	movf	BMP280_readPressure@var1+2,w
  2533  055C  1803               	skipnc
  2534  055D  0F59               	incfsz	BMP280_readPressure@var1+2,w
  2535  055E  2D60               	goto	u1052
  2536  055F  2D61               	goto	u1053
  2537  0560                     u1052:
  2538  0560  07B0               	addwf	??_BMP280_readPressure+2,f
  2539  0561                     u1053:
  2540  0561  085A               	movf	BMP280_readPressure@var1+3,w
  2541  0562  1803               	skipnc
  2542  0563  0A5A               	incf	BMP280_readPressure@var1+3,w
  2543  0564  07B1               	addwf	??_BMP280_readPressure+3,f
  2544  0565  0831               	movf	??_BMP280_readPressure+3,w
  2545  0566  00A9               	movwf	___lmul@multiplier+3
  2546  0567  0830               	movf	??_BMP280_readPressure+2,w
  2547  0568  00A8               	movwf	___lmul@multiplier+2
  2548  0569  082F               	movf	??_BMP280_readPressure+1,w
  2549  056A  00A7               	movwf	___lmul@multiplier+1
  2550  056B  082E               	movf	??_BMP280_readPressure,w
  2551  056C  00A6               	movwf	___lmul@multiplier
  2552  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2553  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2554  056F  083B               	movf	(_BMP280_calib^(0+128)+6),w
  2555  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0572  00AA               	movwf	___lmul@multiplicand
  2558  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0575  083C               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2561  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0578  00AB               	movwf	___lmul@multiplicand+1
  2564  0579  01AC               	clrf	___lmul@multiplicand+2
  2565  057A  01AD               	clrf	___lmul@multiplicand+3
  2566  057B  120A  158A  2569  120A  118A  	fcall	___lmul
  2567  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0582  0829               	movf	?___lmul+3,w
  2570  0583  00F7               	movwf	___aldiv@dividend+3
  2571  0584  0828               	movf	?___lmul+2,w
  2572  0585  00F6               	movwf	___aldiv@dividend+2
  2573  0586  0827               	movf	?___lmul+1,w
  2574  0587  00F5               	movwf	___aldiv@dividend+1
  2575  0588  0826               	movf	?___lmul,w
  2576  0589  00F4               	movwf	___aldiv@dividend
  2577  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2578  058F  0873               	movf	?___aldiv+3,w
  2579  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0592  00DA               	movwf	BMP280_readPressure@var1+3
  2582  0593  0872               	movf	?___aldiv+2,w
  2583  0594  00D9               	movwf	BMP280_readPressure@var1+2
  2584  0595  0871               	movf	?___aldiv+1,w
  2585  0596  00D8               	movwf	BMP280_readPressure@var1+1
  2586  0597  0870               	movf	?___aldiv,w
  2587  0598  00D7               	movwf	BMP280_readPressure@var1
  2588  0599                     l1222:
  2589                           
  2590                           ;BMP280.c: 282:   if (var1 == 0)
  2591  0599  085A               	movf	BMP280_readPressure@var1+3,w
  2592  059A  0459               	iorwf	BMP280_readPressure@var1+2,w
  2593  059B  0458               	iorwf	BMP280_readPressure@var1+1,w
  2594  059C  0457               	iorwf	BMP280_readPressure@var1,w
  2595  059D  1D03               	skipz
  2596  059E  2DA0               	goto	u1061
  2597  059F  2DA1               	goto	u1060
  2598  05A0                     u1061:
  2599  05A0  2DA2               	goto	l1226
  2600  05A1                     u1060:
  2601  05A1  2FEA               	goto	l164
  2602  05A2                     l1226:
  2603                           
  2604                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2605  05A2  3000               	movlw	0
  2606  05A3  00AE               	movwf	??_BMP280_readPressure
  2607  05A4  3000               	movlw	0
  2608  05A5  00AF               	movwf	??_BMP280_readPressure+1
  2609  05A6  3010               	movlw	16
  2610  05A7  00B0               	movwf	??_BMP280_readPressure+2
  2611  05A8  3000               	movlw	0
  2612  05A9  00B1               	movwf	??_BMP280_readPressure+3
  2613  05AA  3000               	movlw	0
  2614  05AB  00F3               	movwf	___aldiv@divisor+3
  2615  05AC  3000               	movlw	0
  2616  05AD  00F2               	movwf	___aldiv@divisor+2
  2617  05AE  3010               	movlw	16
  2618  05AF  00F1               	movwf	___aldiv@divisor+1
  2619  05B0  3000               	movlw	0
  2620  05B1  00F0               	movwf	___aldiv@divisor
  2621  05B2  0852               	movf	BMP280_readPressure@var2+3,w
  2622  05B3  00F7               	movwf	___aldiv@dividend+3
  2623  05B4  0851               	movf	BMP280_readPressure@var2+2,w
  2624  05B5  00F6               	movwf	___aldiv@dividend+2
  2625  05B6  0850               	movf	BMP280_readPressure@var2+1,w
  2626  05B7  00F5               	movwf	___aldiv@dividend+1
  2627  05B8  084F               	movf	BMP280_readPressure@var2,w
  2628  05B9  00F4               	movwf	___aldiv@dividend
  2629  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2630  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2631  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2632  05C1  0931               	comf	_adc_P^(0+128),w
  2633  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2634  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2635  05C4  00B2               	movwf	??_BMP280_readPressure+4
  2636  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2637  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2638  05C7  0932               	comf	(_adc_P+1)^(0+128),w
  2639  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2640  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2641  05CA  00B3               	movwf	??_BMP280_readPressure+5
  2642  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2643  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2644  05CD  0933               	comf	(_adc_P+2)^(0+128),w
  2645  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2646  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2647  05D0  00B4               	movwf	??_BMP280_readPressure+6
  2648  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2649  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2650  05D3  0934               	comf	(_adc_P+3)^(0+128),w
  2651  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2652  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2653  05D6  00B5               	movwf	??_BMP280_readPressure+7
  2654  05D7  0AB2               	incf	??_BMP280_readPressure+4,f
  2655  05D8  1903               	skipnz
  2656  05D9  0AB3               	incf	??_BMP280_readPressure+5,f
  2657  05DA  1903               	skipnz
  2658  05DB  0AB4               	incf	??_BMP280_readPressure+6,f
  2659  05DC  1903               	skipnz
  2660  05DD  0AB5               	incf	??_BMP280_readPressure+7,f
  2661  05DE  0870               	movf	?___aldiv,w
  2662  05DF  02B2               	subwf	??_BMP280_readPressure+4,f
  2663  05E0  0871               	movf	?___aldiv+1,w
  2664  05E1  1C03               	skipc
  2665  05E2  0F71               	incfsz	?___aldiv+1,w
  2666  05E3  2DE5               	goto	u1071
  2667  05E4  2DE6               	goto	u1072
  2668  05E5                     u1071:
  2669  05E5  02B3               	subwf	??_BMP280_readPressure+5,f
  2670  05E6                     u1072:
  2671  05E6  0872               	movf	?___aldiv+2,w
  2672  05E7  1C03               	skipc
  2673  05E8  0F72               	incfsz	?___aldiv+2,w
  2674  05E9  2DEB               	goto	u1073
  2675  05EA  2DEC               	goto	u1074
  2676  05EB                     u1073:
  2677  05EB  02B4               	subwf	??_BMP280_readPressure+6,f
  2678  05EC                     u1074:
  2679  05EC  0873               	movf	?___aldiv+3,w
  2680  05ED  1C03               	skipc
  2681  05EE  0F73               	incfsz	?___aldiv+3,w
  2682  05EF  2DF1               	goto	u1075
  2683  05F0  2DF2               	goto	u1076
  2684  05F1                     u1075:
  2685  05F1  02B5               	subwf	??_BMP280_readPressure+7,f
  2686  05F2                     u1076:
  2687  05F2  0832               	movf	??_BMP280_readPressure+4,w
  2688  05F3  07AE               	addwf	??_BMP280_readPressure,f
  2689  05F4  0833               	movf	??_BMP280_readPressure+5,w
  2690  05F5  1803               	skipnc
  2691  05F6  0F33               	incfsz	??_BMP280_readPressure+5,w
  2692  05F7  2DF9               	goto	u1080
  2693  05F8  2DFA               	goto	u1081
  2694  05F9                     u1080:
  2695  05F9  07AF               	addwf	??_BMP280_readPressure+1,f
  2696  05FA                     u1081:
  2697  05FA  0834               	movf	??_BMP280_readPressure+6,w
  2698  05FB  1803               	skipnc
  2699  05FC  0F34               	incfsz	??_BMP280_readPressure+6,w
  2700  05FD  2DFF               	goto	u1082
  2701  05FE  2E00               	goto	u1083
  2702  05FF                     u1082:
  2703  05FF  07B0               	addwf	??_BMP280_readPressure+2,f
  2704  0600                     u1083:
  2705  0600  0835               	movf	??_BMP280_readPressure+7,w
  2706  0601  1803               	skipnc
  2707  0602  0A35               	incf	??_BMP280_readPressure+7,w
  2708  0603  07B1               	addwf	??_BMP280_readPressure+3,f
  2709  0604  0831               	movf	??_BMP280_readPressure+3,w
  2710  0605  00A9               	movwf	___lmul@multiplier+3
  2711  0606  0830               	movf	??_BMP280_readPressure+2,w
  2712  0607  00A8               	movwf	___lmul@multiplier+2
  2713  0608  082F               	movf	??_BMP280_readPressure+1,w
  2714  0609  00A7               	movwf	___lmul@multiplier+1
  2715  060A  082E               	movf	??_BMP280_readPressure,w
  2716  060B  00A6               	movwf	___lmul@multiplier
  2717  060C  3000               	movlw	0
  2718  060D  00AD               	movwf	___lmul@multiplicand+3
  2719  060E  3000               	movlw	0
  2720  060F  00AC               	movwf	___lmul@multiplicand+2
  2721  0610  300C               	movlw	12
  2722  0611  00AB               	movwf	___lmul@multiplicand+1
  2723  0612  3035               	movlw	53
  2724  0613  00AA               	movwf	___lmul@multiplicand
  2725  0614  120A  158A  2569  120A  118A  	fcall	___lmul
  2726  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2727  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2728  061B  0829               	movf	?___lmul+3,w
  2729  061C  00D6               	movwf	BMP280_readPressure@p+3
  2730  061D  0828               	movf	?___lmul+2,w
  2731  061E  00D5               	movwf	BMP280_readPressure@p+2
  2732  061F  0827               	movf	?___lmul+1,w
  2733  0620  00D4               	movwf	BMP280_readPressure@p+1
  2734  0621  0826               	movf	?___lmul,w
  2735  0622  00D3               	movwf	BMP280_readPressure@p
  2736  0623                     l1228:
  2737                           
  2738                           ;BMP280.c: 287:   if (p < 0x80000000)
  2739  0623  3080               	movlw	128
  2740  0624  0256               	subwf	BMP280_readPressure@p+3,w
  2741  0625  1D03               	skipz
  2742  0626  2E33               	goto	u1093
  2743  0627  3000               	movlw	0
  2744  0628  0255               	subwf	BMP280_readPressure@p+2,w
  2745  0629  1D03               	skipz
  2746  062A  2E33               	goto	u1093
  2747  062B  3000               	movlw	0
  2748  062C  0254               	subwf	BMP280_readPressure@p+1,w
  2749  062D  1D03               	skipz
  2750  062E  2E33               	goto	u1093
  2751  062F  3000               	movlw	0
  2752  0630  0253               	subwf	BMP280_readPressure@p,w
  2753  0631  1D03               	skipz
  2754  0632  2E33               	goto	u1093
  2755  0633                     u1093:
  2756  0633  1803               	btfsc	3,0
  2757  0634  2E36               	goto	u1091
  2758  0635  2E37               	goto	u1090
  2759  0636                     u1091:
  2760  0636  2E5A               	goto	l1232
  2761  0637                     u1090:
  2762  0637                     l1230:
  2763                           
  2764                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  2765  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0639  085A               	movf	BMP280_readPressure@var1+3,w
  2768  063A  00F3               	movwf	___lldiv@divisor+3
  2769  063B  0859               	movf	BMP280_readPressure@var1+2,w
  2770  063C  00F2               	movwf	___lldiv@divisor+2
  2771  063D  0858               	movf	BMP280_readPressure@var1+1,w
  2772  063E  00F1               	movwf	___lldiv@divisor+1
  2773  063F  0857               	movf	BMP280_readPressure@var1,w
  2774  0640  00F0               	movwf	___lldiv@divisor
  2775  0641  1003               	clrc
  2776  0642  0D53               	rlf	BMP280_readPressure@p,w
  2777  0643  00F4               	movwf	___lldiv@dividend
  2778  0644  0D54               	rlf	BMP280_readPressure@p+1,w
  2779  0645  00F5               	movwf	___lldiv@dividend+1
  2780  0646  0D55               	rlf	BMP280_readPressure@p+2,w
  2781  0647  00F6               	movwf	___lldiv@dividend+2
  2782  0648  0D56               	rlf	BMP280_readPressure@p+3,w
  2783  0649  00F7               	movwf	___lldiv@dividend+3
  2784  064A  120A  158A  25FD  120A  118A  	fcall	___lldiv
  2785  064F  0873               	movf	?___lldiv+3,w
  2786  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0652  00D6               	movwf	BMP280_readPressure@p+3
  2789  0653  0872               	movf	?___lldiv+2,w
  2790  0654  00D5               	movwf	BMP280_readPressure@p+2
  2791  0655  0871               	movf	?___lldiv+1,w
  2792  0656  00D4               	movwf	BMP280_readPressure@p+1
  2793  0657  0870               	movf	?___lldiv,w
  2794  0658  00D3               	movwf	BMP280_readPressure@p
  2795  0659  2E7C               	goto	l166
  2796  065A                     l1232:
  2797                           
  2798                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  2799  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2800  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2801  065C  085A               	movf	BMP280_readPressure@var1+3,w
  2802  065D  00F3               	movwf	___lldiv@divisor+3
  2803  065E  0859               	movf	BMP280_readPressure@var1+2,w
  2804  065F  00F2               	movwf	___lldiv@divisor+2
  2805  0660  0858               	movf	BMP280_readPressure@var1+1,w
  2806  0661  00F1               	movwf	___lldiv@divisor+1
  2807  0662  0857               	movf	BMP280_readPressure@var1,w
  2808  0663  00F0               	movwf	___lldiv@divisor
  2809  0664  0856               	movf	BMP280_readPressure@p+3,w
  2810  0665  00F7               	movwf	___lldiv@dividend+3
  2811  0666  0855               	movf	BMP280_readPressure@p+2,w
  2812  0667  00F6               	movwf	___lldiv@dividend+2
  2813  0668  0854               	movf	BMP280_readPressure@p+1,w
  2814  0669  00F5               	movwf	___lldiv@dividend+1
  2815  066A  0853               	movf	BMP280_readPressure@p,w
  2816  066B  00F4               	movwf	___lldiv@dividend
  2817  066C  120A  158A  25FD  120A  118A  	fcall	___lldiv
  2818  0671  1003               	clrc
  2819  0672  0D70               	rlf	?___lldiv,w
  2820  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0675  00D3               	movwf	BMP280_readPressure@p
  2823  0676  0D71               	rlf	?___lldiv+1,w
  2824  0677  00D4               	movwf	BMP280_readPressure@p+1
  2825  0678  0D72               	rlf	?___lldiv+2,w
  2826  0679  00D5               	movwf	BMP280_readPressure@p+2
  2827  067A  0D73               	rlf	?___lldiv+3,w
  2828  067B  00D6               	movwf	BMP280_readPressure@p+3
  2829  067C                     l166:
  2830                           
  2831                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2832  067C  0853               	movf	BMP280_readPressure@p,w
  2833  067D  00AE               	movwf	??_BMP280_readPressure
  2834  067E  0854               	movf	BMP280_readPressure@p+1,w
  2835  067F  00AF               	movwf	??_BMP280_readPressure+1
  2836  0680  0855               	movf	BMP280_readPressure@p+2,w
  2837  0681  00B0               	movwf	??_BMP280_readPressure+2
  2838  0682  0856               	movf	BMP280_readPressure@p+3,w
  2839  0683  00B1               	movwf	??_BMP280_readPressure+3
  2840  0684  3003               	movlw	3
  2841  0685                     u1105:
  2842  0685  1003               	clrc
  2843  0686  0CB1               	rrf	??_BMP280_readPressure+3,f
  2844  0687  0CB0               	rrf	??_BMP280_readPressure+2,f
  2845  0688  0CAF               	rrf	??_BMP280_readPressure+1,f
  2846  0689  0CAE               	rrf	??_BMP280_readPressure,f
  2847  068A                     u1100:
  2848  068A  3EFF               	addlw	-1
  2849  068B  1D03               	skipz
  2850  068C  2E85               	goto	u1105
  2851  068D  0831               	movf	??_BMP280_readPressure+3,w
  2852  068E  00AD               	movwf	___lmul@multiplicand+3
  2853  068F  0830               	movf	??_BMP280_readPressure+2,w
  2854  0690  00AC               	movwf	___lmul@multiplicand+2
  2855  0691  082F               	movf	??_BMP280_readPressure+1,w
  2856  0692  00AB               	movwf	___lmul@multiplicand+1
  2857  0693  082E               	movf	??_BMP280_readPressure,w
  2858  0694  00AA               	movwf	___lmul@multiplicand
  2859  0695  0853               	movf	BMP280_readPressure@p,w
  2860  0696  00B2               	movwf	??_BMP280_readPressure+4
  2861  0697  0854               	movf	BMP280_readPressure@p+1,w
  2862  0698  00B3               	movwf	??_BMP280_readPressure+5
  2863  0699  0855               	movf	BMP280_readPressure@p+2,w
  2864  069A  00B4               	movwf	??_BMP280_readPressure+6
  2865  069B  0856               	movf	BMP280_readPressure@p+3,w
  2866  069C  00B5               	movwf	??_BMP280_readPressure+7
  2867  069D  3003               	movlw	3
  2868  069E                     u1115:
  2869  069E  1003               	clrc
  2870  069F  0CB5               	rrf	??_BMP280_readPressure+7,f
  2871  06A0  0CB4               	rrf	??_BMP280_readPressure+6,f
  2872  06A1  0CB3               	rrf	??_BMP280_readPressure+5,f
  2873  06A2  0CB2               	rrf	??_BMP280_readPressure+4,f
  2874  06A3                     u1110:
  2875  06A3  3EFF               	addlw	-1
  2876  06A4  1D03               	skipz
  2877  06A5  2E9E               	goto	u1115
  2878  06A6  0835               	movf	??_BMP280_readPressure+7,w
  2879  06A7  00A9               	movwf	___lmul@multiplier+3
  2880  06A8  0834               	movf	??_BMP280_readPressure+6,w
  2881  06A9  00A8               	movwf	___lmul@multiplier+2
  2882  06AA  0833               	movf	??_BMP280_readPressure+5,w
  2883  06AB  00A7               	movwf	___lmul@multiplier+1
  2884  06AC  0832               	movf	??_BMP280_readPressure+4,w
  2885  06AD  00A6               	movwf	___lmul@multiplier
  2886  06AE  120A  158A  2569  120A  118A  	fcall	___lmul
  2887  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2888  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2889  06B5  0826               	movf	?___lmul,w
  2890  06B6  00B6               	movwf	??_BMP280_readPressure+8
  2891  06B7  0827               	movf	?___lmul+1,w
  2892  06B8  00B7               	movwf	??_BMP280_readPressure+9
  2893  06B9  0828               	movf	?___lmul+2,w
  2894  06BA  00B8               	movwf	??_BMP280_readPressure+10
  2895  06BB  0829               	movf	?___lmul+3,w
  2896  06BC  00B9               	movwf	??_BMP280_readPressure+11
  2897  06BD  300D               	movlw	13
  2898  06BE                     u1125:
  2899  06BE  1003               	clrc
  2900  06BF  0CB9               	rrf	??_BMP280_readPressure+11,f
  2901  06C0  0CB8               	rrf	??_BMP280_readPressure+10,f
  2902  06C1  0CB7               	rrf	??_BMP280_readPressure+9,f
  2903  06C2  0CB6               	rrf	??_BMP280_readPressure+8,f
  2904  06C3                     u1120:
  2905  06C3  3EFF               	addlw	-1
  2906  06C4  1D03               	skipz
  2907  06C5  2EBE               	goto	u1125
  2908  06C6  0839               	movf	??_BMP280_readPressure+11,w
  2909  06C7  00C9               	movwf	_BMP280_readPressure$968+3
  2910  06C8  0838               	movf	??_BMP280_readPressure+10,w
  2911  06C9  00C8               	movwf	_BMP280_readPressure$968+2
  2912  06CA  0837               	movf	??_BMP280_readPressure+9,w
  2913  06CB  00C7               	movwf	_BMP280_readPressure$968+1
  2914  06CC  0836               	movf	??_BMP280_readPressure+8,w
  2915  06CD  00C6               	movwf	_BMP280_readPressure$968
  2916                           
  2917                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2918  06CE  3000               	movlw	0
  2919  06CF  00F3               	movwf	___aldiv@divisor+3
  2920  06D0  3000               	movlw	0
  2921  06D1  00F2               	movwf	___aldiv@divisor+2
  2922  06D2  3010               	movlw	16
  2923  06D3  00F1               	movwf	___aldiv@divisor+1
  2924  06D4  3000               	movlw	0
  2925  06D5  00F0               	movwf	___aldiv@divisor
  2926  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2927  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2928  06D8  084B               	movf	(_BMP280_calib^(0+128)+22),w
  2929  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2930  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2931  06DB  00A6               	movwf	___lmul@multiplier
  2932  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2933  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2934  06DE  084C               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2935  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2936  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2937  06E1  00A7               	movwf	___lmul@multiplier+1
  2938  06E2  3000               	movlw	0
  2939  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2940  06E4  30FF               	movlw	255
  2941  06E5  00A8               	movwf	___lmul@multiplier+2
  2942  06E6  00A9               	movwf	___lmul@multiplier+3
  2943  06E7  0849               	movf	_BMP280_readPressure$968+3,w
  2944  06E8  00AD               	movwf	___lmul@multiplicand+3
  2945  06E9  0848               	movf	_BMP280_readPressure$968+2,w
  2946  06EA  00AC               	movwf	___lmul@multiplicand+2
  2947  06EB  0847               	movf	_BMP280_readPressure$968+1,w
  2948  06EC  00AB               	movwf	___lmul@multiplicand+1
  2949  06ED  0846               	movf	_BMP280_readPressure$968,w
  2950  06EE  00AA               	movwf	___lmul@multiplicand
  2951  06EF  120A  158A  2569  120A  118A  	fcall	___lmul
  2952  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2953  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2954  06F6  0829               	movf	?___lmul+3,w
  2955  06F7  00F7               	movwf	___aldiv@dividend+3
  2956  06F8  0828               	movf	?___lmul+2,w
  2957  06F9  00F6               	movwf	___aldiv@dividend+2
  2958  06FA  0827               	movf	?___lmul+1,w
  2959  06FB  00F5               	movwf	___aldiv@dividend+1
  2960  06FC  0826               	movf	?___lmul,w
  2961  06FD  00F4               	movwf	___aldiv@dividend
  2962  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  2963  0703  0873               	movf	?___aldiv+3,w
  2964  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0706  00DA               	movwf	BMP280_readPressure@var1+3
  2967  0707  0872               	movf	?___aldiv+2,w
  2968  0708  00D9               	movwf	BMP280_readPressure@var1+2
  2969  0709  0871               	movf	?___aldiv+1,w
  2970  070A  00D8               	movwf	BMP280_readPressure@var1+1
  2971  070B  0870               	movf	?___aldiv,w
  2972  070C  00D7               	movwf	BMP280_readPressure@var1
  2973                           
  2974                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2975  070D  3000               	movlw	0
  2976  070E  00F3               	movwf	___aldiv@divisor+3
  2977  070F  3000               	movlw	0
  2978  0710  00F2               	movwf	___aldiv@divisor+2
  2979  0711  3020               	movlw	32
  2980  0712  00F1               	movwf	___aldiv@divisor+1
  2981  0713  3000               	movlw	0
  2982  0714  00F0               	movwf	___aldiv@divisor
  2983  0715  0853               	movf	BMP280_readPressure@p,w
  2984  0716  00AE               	movwf	??_BMP280_readPressure
  2985  0717  0854               	movf	BMP280_readPressure@p+1,w
  2986  0718  00AF               	movwf	??_BMP280_readPressure+1
  2987  0719  0855               	movf	BMP280_readPressure@p+2,w
  2988  071A  00B0               	movwf	??_BMP280_readPressure+2
  2989  071B  0856               	movf	BMP280_readPressure@p+3,w
  2990  071C  00B1               	movwf	??_BMP280_readPressure+3
  2991  071D  3002               	movlw	2
  2992  071E                     u1135:
  2993  071E  1003               	clrc
  2994  071F  0CB1               	rrf	??_BMP280_readPressure+3,f
  2995  0720  0CB0               	rrf	??_BMP280_readPressure+2,f
  2996  0721  0CAF               	rrf	??_BMP280_readPressure+1,f
  2997  0722  0CAE               	rrf	??_BMP280_readPressure,f
  2998  0723                     u1130:
  2999  0723  3EFF               	addlw	-1
  3000  0724  1D03               	skipz
  3001  0725  2F1E               	goto	u1135
  3002  0726  0831               	movf	??_BMP280_readPressure+3,w
  3003  0727  00A9               	movwf	___lmul@multiplier+3
  3004  0728  0830               	movf	??_BMP280_readPressure+2,w
  3005  0729  00A8               	movwf	___lmul@multiplier+2
  3006  072A  082F               	movf	??_BMP280_readPressure+1,w
  3007  072B  00A7               	movwf	___lmul@multiplier+1
  3008  072C  082E               	movf	??_BMP280_readPressure,w
  3009  072D  00A6               	movwf	___lmul@multiplier
  3010  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3011  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3012  0730  0849               	movf	(_BMP280_calib^(0+128)+20),w
  3013  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0733  00AA               	movwf	___lmul@multiplicand
  3016  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0736  084A               	movf	((_BMP280_calib+1)^(0+128)+20),w
  3019  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0739  00AB               	movwf	___lmul@multiplicand+1
  3022  073A  3000               	movlw	0
  3023  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  3024  073C  30FF               	movlw	255
  3025  073D  00AC               	movwf	___lmul@multiplicand+2
  3026  073E  00AD               	movwf	___lmul@multiplicand+3
  3027  073F  120A  158A  2569  120A  118A  	fcall	___lmul
  3028  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0746  0829               	movf	?___lmul+3,w
  3031  0747  00F7               	movwf	___aldiv@dividend+3
  3032  0748  0828               	movf	?___lmul+2,w
  3033  0749  00F6               	movwf	___aldiv@dividend+2
  3034  074A  0827               	movf	?___lmul+1,w
  3035  074B  00F5               	movwf	___aldiv@dividend+1
  3036  074C  0826               	movf	?___lmul,w
  3037  074D  00F4               	movwf	___aldiv@dividend
  3038  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  3039  0753  0873               	movf	?___aldiv+3,w
  3040  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0756  00D2               	movwf	BMP280_readPressure@var2+3
  3043  0757  0872               	movf	?___aldiv+2,w
  3044  0758  00D1               	movwf	BMP280_readPressure@var2+2
  3045  0759  0871               	movf	?___aldiv+1,w
  3046  075A  00D0               	movwf	BMP280_readPressure@var2+1
  3047  075B  0870               	movf	?___aldiv,w
  3048  075C  00CF               	movwf	BMP280_readPressure@var2
  3049                           
  3050                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  3051  075D  3000               	movlw	0
  3052  075E  00F3               	movwf	___aldiv@divisor+3
  3053  075F  3000               	movlw	0
  3054  0760  00F2               	movwf	___aldiv@divisor+2
  3055  0761  3000               	movlw	0
  3056  0762  00F1               	movwf	___aldiv@divisor+1
  3057  0763  3010               	movlw	16
  3058  0764  00F0               	movwf	___aldiv@divisor
  3059  0765  084F               	movf	BMP280_readPressure@var2,w
  3060  0766  00AE               	movwf	??_BMP280_readPressure
  3061  0767  0850               	movf	BMP280_readPressure@var2+1,w
  3062  0768  00AF               	movwf	??_BMP280_readPressure+1
  3063  0769  0851               	movf	BMP280_readPressure@var2+2,w
  3064  076A  00B0               	movwf	??_BMP280_readPressure+2
  3065  076B  0852               	movf	BMP280_readPressure@var2+3,w
  3066  076C  00B1               	movwf	??_BMP280_readPressure+3
  3067  076D  0857               	movf	BMP280_readPressure@var1,w
  3068  076E  00B2               	movwf	??_BMP280_readPressure+4
  3069  076F  0858               	movf	BMP280_readPressure@var1+1,w
  3070  0770  00B3               	movwf	??_BMP280_readPressure+5
  3071  0771  0859               	movf	BMP280_readPressure@var1+2,w
  3072  0772  00B4               	movwf	??_BMP280_readPressure+6
  3073  0773  085A               	movf	BMP280_readPressure@var1+3,w
  3074  0774  00B5               	movwf	??_BMP280_readPressure+7
  3075  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0777  0847               	movf	(_BMP280_calib^(0+128)+18),w
  3078  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3080  077A  00B6               	movwf	??_BMP280_readPressure+8
  3081  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3082  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3083  077D  0848               	movf	((_BMP280_calib+1)^(0+128)+18),w
  3084  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3085  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0780  00B7               	movwf	??_BMP280_readPressure+9
  3087  0781  3000               	movlw	0
  3088  0782  1BB7               	btfsc	??_BMP280_readPressure+9,7
  3089  0783  30FF               	movlw	255
  3090  0784  00B8               	movwf	??_BMP280_readPressure+10
  3091  0785  00B9               	movwf	??_BMP280_readPressure+11
  3092  0786  0836               	movf	??_BMP280_readPressure+8,w
  3093  0787  07B2               	addwf	??_BMP280_readPressure+4,f
  3094  0788  0837               	movf	??_BMP280_readPressure+9,w
  3095  0789  1803               	skipnc
  3096  078A  0F37               	incfsz	??_BMP280_readPressure+9,w
  3097  078B  2F8D               	goto	u1140
  3098  078C  2F8E               	goto	u1141
  3099  078D                     u1140:
  3100  078D  07B3               	addwf	??_BMP280_readPressure+5,f
  3101  078E                     u1141:
  3102  078E  0838               	movf	??_BMP280_readPressure+10,w
  3103  078F  1803               	skipnc
  3104  0790  0F38               	incfsz	??_BMP280_readPressure+10,w
  3105  0791  2F93               	goto	u1142
  3106  0792  2F94               	goto	u1143
  3107  0793                     u1142:
  3108  0793  07B4               	addwf	??_BMP280_readPressure+6,f
  3109  0794                     u1143:
  3110  0794  0839               	movf	??_BMP280_readPressure+11,w
  3111  0795  1803               	skipnc
  3112  0796  0A39               	incf	??_BMP280_readPressure+11,w
  3113  0797  07B5               	addwf	??_BMP280_readPressure+7,f
  3114  0798  0832               	movf	??_BMP280_readPressure+4,w
  3115  0799  07AE               	addwf	??_BMP280_readPressure,f
  3116  079A  0833               	movf	??_BMP280_readPressure+5,w
  3117  079B  1803               	skipnc
  3118  079C  0F33               	incfsz	??_BMP280_readPressure+5,w
  3119  079D  2F9F               	goto	u1150
  3120  079E  2FA0               	goto	u1151
  3121  079F                     u1150:
  3122  079F  07AF               	addwf	??_BMP280_readPressure+1,f
  3123  07A0                     u1151:
  3124  07A0  0834               	movf	??_BMP280_readPressure+6,w
  3125  07A1  1803               	skipnc
  3126  07A2  0F34               	incfsz	??_BMP280_readPressure+6,w
  3127  07A3  2FA5               	goto	u1152
  3128  07A4  2FA6               	goto	u1153
  3129  07A5                     u1152:
  3130  07A5  07B0               	addwf	??_BMP280_readPressure+2,f
  3131  07A6                     u1153:
  3132  07A6  0835               	movf	??_BMP280_readPressure+7,w
  3133  07A7  1803               	skipnc
  3134  07A8  0A35               	incf	??_BMP280_readPressure+7,w
  3135  07A9  07B1               	addwf	??_BMP280_readPressure+3,f
  3136  07AA  0831               	movf	??_BMP280_readPressure+3,w
  3137  07AB  00F7               	movwf	___aldiv@dividend+3
  3138  07AC  0830               	movf	??_BMP280_readPressure+2,w
  3139  07AD  00F6               	movwf	___aldiv@dividend+2
  3140  07AE  082F               	movf	??_BMP280_readPressure+1,w
  3141  07AF  00F5               	movwf	___aldiv@dividend+1
  3142  07B0  082E               	movf	??_BMP280_readPressure,w
  3143  07B1  00F4               	movwf	___aldiv@dividend
  3144  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3145  07B7  0870               	movf	?___aldiv,w
  3146  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3147  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3148  07BA  0753               	addwf	BMP280_readPressure@p,w
  3149  07BB  00BA               	movwf	??_BMP280_readPressure+12
  3150  07BC  3000               	movlw	0
  3151  07BD  1803               	skipnc
  3152  07BE  3001               	movlw	1
  3153  07BF  0771               	addwf	?___aldiv+1,w
  3154  07C0  01BC               	clrf	??_BMP280_readPressure+14
  3155  07C1  1803               	skipnc
  3156  07C2  0ABC               	incf	??_BMP280_readPressure+14,f
  3157  07C3  0754               	addwf	BMP280_readPressure@p+1,w
  3158  07C4  00BB               	movwf	??_BMP280_readPressure+13
  3159  07C5  1803               	skipnc
  3160  07C6  0ABC               	incf	??_BMP280_readPressure+14,f
  3161  07C7  0872               	movf	?___aldiv+2,w
  3162  07C8  073C               	addwf	??_BMP280_readPressure+14,w
  3163  07C9  01BD               	clrf	??_BMP280_readPressure+15
  3164  07CA  1803               	skipnc
  3165  07CB  0ABD               	incf	??_BMP280_readPressure+15,f
  3166  07CC  0755               	addwf	BMP280_readPressure@p+2,w
  3167  07CD  00BC               	movwf	??_BMP280_readPressure+14
  3168  07CE  1803               	skipnc
  3169  07CF  0ABD               	incf	??_BMP280_readPressure+15,f
  3170  07D0  0873               	movf	?___aldiv+3,w
  3171  07D1  073D               	addwf	??_BMP280_readPressure+15,w
  3172  07D2  0756               	addwf	BMP280_readPressure@p+3,w
  3173  07D3  00BD               	movwf	??_BMP280_readPressure+15
  3174  07D4  083D               	movf	??_BMP280_readPressure+15,w
  3175  07D5  00D6               	movwf	BMP280_readPressure@p+3
  3176  07D6  083C               	movf	??_BMP280_readPressure+14,w
  3177  07D7  00D5               	movwf	BMP280_readPressure@p+2
  3178  07D8  083B               	movf	??_BMP280_readPressure+13,w
  3179  07D9  00D4               	movwf	BMP280_readPressure@p+1
  3180  07DA  083A               	movf	??_BMP280_readPressure+12,w
  3181  07DB  00D3               	movwf	BMP280_readPressure@p
  3182  07DC                     l1234:
  3183                           
  3184                           ;BMP280.c: 298:   *pres = p;
  3185  07DC  084A               	movf	BMP280_readPressure@pres,w
  3186  07DD  0084               	movwf	4
  3187  07DE  0853               	movf	BMP280_readPressure@p,w
  3188  07DF  1383               	bcf	3,7	;select IRP bank0
  3189  07E0  0080               	movwf	0
  3190  07E1  0A84               	incf	4,f
  3191  07E2  0854               	movf	BMP280_readPressure@p+1,w
  3192  07E3  0080               	movwf	0
  3193  07E4  0A84               	incf	4,f
  3194  07E5  0855               	movf	BMP280_readPressure@p+2,w
  3195  07E6  0080               	movwf	0
  3196  07E7  0A84               	incf	4,f
  3197  07E8  0856               	movf	BMP280_readPressure@p+3,w
  3198  07E9  0080               	movwf	0
  3199  07EA                     l164:
  3200  07EA  0008               	return
  3201  07EB                     __end_of_BMP280_readPressure:
  3202                           
  3203                           	psect	text6
  3204  0D69                     __ptext6:	
  3205 ;; *************** function ___lmul *****************
  3206 ;; Defined at:
  3207 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3210 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  product         4   10[COMMON] unsigned long 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  4    6[BANK0 ] unsigned long 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       8       0       0       0
  3223 ;;      Locals:         4       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0
  3225 ;;      Totals:         5       8       0       0       0
  3226 ;;Total ram usage:       13 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_BMP280_readTemperature
  3232 ;;		_BMP280_readPressure
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function ___lmul
  3238  0D69                     ___lmul:
  3239  0D69                     l1134:	
  3240                           ;incstack = 0
  3241                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3242                           
  3243  0D69  3000               	movlw	0
  3244  0D6A  00FD               	movwf	___lmul@product+3
  3245  0D6B  3000               	movlw	0
  3246  0D6C  00FC               	movwf	___lmul@product+2
  3247  0D6D  3000               	movlw	0
  3248  0D6E  00FB               	movwf	___lmul@product+1
  3249  0D6F  3000               	movlw	0
  3250  0D70  00FA               	movwf	___lmul@product
  3251  0D71                     l1136:
  3252  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0D73  1C26               	btfss	___lmul@multiplier,0
  3255  0D74  2D76               	goto	u771
  3256  0D75  2D77               	goto	u770
  3257  0D76                     u771:
  3258  0D76  2D8E               	goto	l1140
  3259  0D77                     u770:
  3260  0D77                     l1138:
  3261  0D77  082A               	movf	___lmul@multiplicand,w
  3262  0D78  07FA               	addwf	___lmul@product,f
  3263  0D79  082B               	movf	___lmul@multiplicand+1,w
  3264  0D7A  1103               	clrz
  3265  0D7B  1803               	skipnc
  3266  0D7C  3E01               	addlw	1
  3267  0D7D  1903               	skipnz
  3268  0D7E  2D80               	goto	u781
  3269  0D7F  07FB               	addwf	___lmul@product+1,f
  3270  0D80                     u781:
  3271  0D80  082C               	movf	___lmul@multiplicand+2,w
  3272  0D81  1103               	clrz
  3273  0D82  1803               	skipnc
  3274  0D83  3E01               	addlw	1
  3275  0D84  1903               	skipnz
  3276  0D85  2D87               	goto	u782
  3277  0D86  07FC               	addwf	___lmul@product+2,f
  3278  0D87                     u782:
  3279  0D87  082D               	movf	___lmul@multiplicand+3,w
  3280  0D88  1103               	clrz
  3281  0D89  1803               	skipnc
  3282  0D8A  3E01               	addlw	1
  3283  0D8B  1903               	skipnz
  3284  0D8C  2D8E               	goto	u783
  3285  0D8D  07FD               	addwf	___lmul@product+3,f
  3286  0D8E                     u783:
  3287  0D8E                     l1140:
  3288  0D8E  3001               	movlw	1
  3289  0D8F  00F9               	movwf	??___lmul
  3290  0D90                     u795:
  3291  0D90  1003               	clrc
  3292  0D91  0DAA               	rlf	___lmul@multiplicand,f
  3293  0D92  0DAB               	rlf	___lmul@multiplicand+1,f
  3294  0D93  0DAC               	rlf	___lmul@multiplicand+2,f
  3295  0D94  0DAD               	rlf	___lmul@multiplicand+3,f
  3296  0D95  0BF9               	decfsz	??___lmul,f
  3297  0D96  2D90               	goto	u795
  3298  0D97                     l1142:
  3299  0D97  3001               	movlw	1
  3300  0D98                     u805:
  3301  0D98  1003               	clrc
  3302  0D99  0CA9               	rrf	___lmul@multiplier+3,f
  3303  0D9A  0CA8               	rrf	___lmul@multiplier+2,f
  3304  0D9B  0CA7               	rrf	___lmul@multiplier+1,f
  3305  0D9C  0CA6               	rrf	___lmul@multiplier,f
  3306  0D9D  3EFF               	addlw	-1
  3307  0D9E  1D03               	skipz
  3308  0D9F  2D98               	goto	u805
  3309  0DA0  0829               	movf	___lmul@multiplier+3,w
  3310  0DA1  0428               	iorwf	___lmul@multiplier+2,w
  3311  0DA2  0427               	iorwf	___lmul@multiplier+1,w
  3312  0DA3  0426               	iorwf	___lmul@multiplier,w
  3313  0DA4  1D03               	skipz
  3314  0DA5  2DA7               	goto	u811
  3315  0DA6  2DA8               	goto	u810
  3316  0DA7                     u811:
  3317  0DA7  2D71               	goto	l1136
  3318  0DA8                     u810:
  3319  0DA8                     l1144:
  3320  0DA8  087D               	movf	___lmul@product+3,w
  3321  0DA9  00A9               	movwf	?___lmul+3
  3322  0DAA  087C               	movf	___lmul@product+2,w
  3323  0DAB  00A8               	movwf	?___lmul+2
  3324  0DAC  087B               	movf	___lmul@product+1,w
  3325  0DAD  00A7               	movwf	?___lmul+1
  3326  0DAE  087A               	movf	___lmul@product,w
  3327  0DAF  00A6               	movwf	?___lmul
  3328  0DB0                     l266:
  3329  0DB0  0008               	return
  3330  0DB1                     __end_of___lmul:
  3331                           
  3332                           	psect	text7
  3333  0DFD                     __ptext7:	
  3334 ;; *************** function ___lldiv *****************
  3335 ;; Defined at:
  3336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  divisor         4    0[COMMON] unsigned long 
  3339 ;;  dividend        4    4[COMMON] unsigned long 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  quotient        4    9[COMMON] unsigned long 
  3342 ;;  counter         1   13[COMMON] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  4    0[COMMON] unsigned long 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         8       0       0       0       0
  3353 ;;      Locals:         5       0       0       0       0
  3354 ;;      Temps:          1       0       0       0       0
  3355 ;;      Totals:        14       0       0       0       0
  3356 ;;Total ram usage:       14 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_I2C_Master_Init
  3362 ;;		_BMP280_readPressure
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function ___lldiv
  3368  0DFD                     ___lldiv:
  3369  0DFD                     l1050:	
  3370                           ;incstack = 0
  3371                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3372                           
  3373  0DFD  3000               	movlw	0
  3374  0DFE  00FC               	movwf	___lldiv@quotient+3
  3375  0DFF  3000               	movlw	0
  3376  0E00  00FB               	movwf	___lldiv@quotient+2
  3377  0E01  3000               	movlw	0
  3378  0E02  00FA               	movwf	___lldiv@quotient+1
  3379  0E03  3000               	movlw	0
  3380  0E04  00F9               	movwf	___lldiv@quotient
  3381  0E05  0873               	movf	___lldiv@divisor+3,w
  3382  0E06  0472               	iorwf	___lldiv@divisor+2,w
  3383  0E07  0471               	iorwf	___lldiv@divisor+1,w
  3384  0E08  0470               	iorwf	___lldiv@divisor,w
  3385  0E09  1903               	skipnz
  3386  0E0A  2E0C               	goto	u631
  3387  0E0B  2E0D               	goto	u630
  3388  0E0C                     u631:
  3389  0E0C  2E5A               	goto	l1070
  3390  0E0D                     u630:
  3391  0E0D                     l1052:
  3392  0E0D  01FD               	clrf	___lldiv@counter
  3393  0E0E  0AFD               	incf	___lldiv@counter,f
  3394  0E0F  2E1D               	goto	l1056
  3395  0E10                     l1054:
  3396  0E10  3001               	movlw	1
  3397  0E11  00F8               	movwf	??___lldiv
  3398  0E12                     u645:
  3399  0E12  1003               	clrc
  3400  0E13  0DF0               	rlf	___lldiv@divisor,f
  3401  0E14  0DF1               	rlf	___lldiv@divisor+1,f
  3402  0E15  0DF2               	rlf	___lldiv@divisor+2,f
  3403  0E16  0DF3               	rlf	___lldiv@divisor+3,f
  3404  0E17  0BF8               	decfsz	??___lldiv,f
  3405  0E18  2E12               	goto	u645
  3406  0E19  3001               	movlw	1
  3407  0E1A  00F8               	movwf	??___lldiv
  3408  0E1B  0878               	movf	??___lldiv,w
  3409  0E1C  07FD               	addwf	___lldiv@counter,f
  3410  0E1D                     l1056:
  3411  0E1D  1FF3               	btfss	___lldiv@divisor+3,7
  3412  0E1E  2E20               	goto	u651
  3413  0E1F  2E21               	goto	u650
  3414  0E20                     u651:
  3415  0E20  2E10               	goto	l1054
  3416  0E21                     u650:
  3417  0E21                     l1058:
  3418  0E21  3001               	movlw	1
  3419  0E22  00F8               	movwf	??___lldiv
  3420  0E23                     u665:
  3421  0E23  1003               	clrc
  3422  0E24  0DF9               	rlf	___lldiv@quotient,f
  3423  0E25  0DFA               	rlf	___lldiv@quotient+1,f
  3424  0E26  0DFB               	rlf	___lldiv@quotient+2,f
  3425  0E27  0DFC               	rlf	___lldiv@quotient+3,f
  3426  0E28  0BF8               	decfsz	??___lldiv,f
  3427  0E29  2E23               	goto	u665
  3428  0E2A                     l1060:
  3429  0E2A  0873               	movf	___lldiv@divisor+3,w
  3430  0E2B  0277               	subwf	___lldiv@dividend+3,w
  3431  0E2C  1D03               	skipz
  3432  0E2D  2E38               	goto	u675
  3433  0E2E  0872               	movf	___lldiv@divisor+2,w
  3434  0E2F  0276               	subwf	___lldiv@dividend+2,w
  3435  0E30  1D03               	skipz
  3436  0E31  2E38               	goto	u675
  3437  0E32  0871               	movf	___lldiv@divisor+1,w
  3438  0E33  0275               	subwf	___lldiv@dividend+1,w
  3439  0E34  1D03               	skipz
  3440  0E35  2E38               	goto	u675
  3441  0E36  0870               	movf	___lldiv@divisor,w
  3442  0E37  0274               	subwf	___lldiv@dividend,w
  3443  0E38                     u675:
  3444  0E38  1C03               	skipc
  3445  0E39  2E3B               	goto	u671
  3446  0E3A  2E3C               	goto	u670
  3447  0E3B                     u671:
  3448  0E3B  2E4B               	goto	l1066
  3449  0E3C                     u670:
  3450  0E3C                     l1062:
  3451  0E3C  0870               	movf	___lldiv@divisor,w
  3452  0E3D  02F4               	subwf	___lldiv@dividend,f
  3453  0E3E  0871               	movf	___lldiv@divisor+1,w
  3454  0E3F  1C03               	skipc
  3455  0E40  0F71               	incfsz	___lldiv@divisor+1,w
  3456  0E41  02F5               	subwf	___lldiv@dividend+1,f
  3457  0E42  0872               	movf	___lldiv@divisor+2,w
  3458  0E43  1C03               	skipc
  3459  0E44  0F72               	incfsz	___lldiv@divisor+2,w
  3460  0E45  02F6               	subwf	___lldiv@dividend+2,f
  3461  0E46  0873               	movf	___lldiv@divisor+3,w
  3462  0E47  1C03               	skipc
  3463  0E48  0F73               	incfsz	___lldiv@divisor+3,w
  3464  0E49  02F7               	subwf	___lldiv@dividend+3,f
  3465  0E4A                     l1064:
  3466  0E4A  1479               	bsf	___lldiv@quotient,0
  3467  0E4B                     l1066:
  3468  0E4B  3001               	movlw	1
  3469  0E4C                     u685:
  3470  0E4C  1003               	clrc
  3471  0E4D  0CF3               	rrf	___lldiv@divisor+3,f
  3472  0E4E  0CF2               	rrf	___lldiv@divisor+2,f
  3473  0E4F  0CF1               	rrf	___lldiv@divisor+1,f
  3474  0E50  0CF0               	rrf	___lldiv@divisor,f
  3475  0E51  3EFF               	addlw	-1
  3476  0E52  1D03               	skipz
  3477  0E53  2E4C               	goto	u685
  3478  0E54                     l1068:
  3479  0E54  3001               	movlw	1
  3480  0E55  02FD               	subwf	___lldiv@counter,f
  3481  0E56  1D03               	btfss	3,2
  3482  0E57  2E59               	goto	u691
  3483  0E58  2E5A               	goto	u690
  3484  0E59                     u691:
  3485  0E59  2E21               	goto	l1058
  3486  0E5A                     u690:
  3487  0E5A                     l1070:
  3488  0E5A  087C               	movf	___lldiv@quotient+3,w
  3489  0E5B  00F3               	movwf	?___lldiv+3
  3490  0E5C  087B               	movf	___lldiv@quotient+2,w
  3491  0E5D  00F2               	movwf	?___lldiv+2
  3492  0E5E  087A               	movf	___lldiv@quotient+1,w
  3493  0E5F  00F1               	movwf	?___lldiv+1
  3494  0E60  0879               	movf	___lldiv@quotient,w
  3495  0E61  00F0               	movwf	?___lldiv
  3496  0E62                     l288:
  3497  0E62  0008               	return
  3498  0E63                     __end_of___lldiv:
  3499                           
  3500                           	psect	text8
  3501  0016                     __ptext8:	
  3502 ;; *************** function ___aldiv *****************
  3503 ;; Defined at:
  3504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  divisor         4    0[COMMON] long 
  3507 ;;  dividend        4    4[COMMON] long 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  quotient        4    2[BANK0 ] long 
  3510 ;;  sign            1    1[BANK0 ] unsigned char 
  3511 ;;  counter         1    0[BANK0 ] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  4    0[COMMON] long 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         8       0       0       0       0
  3522 ;;      Locals:         0       6       0       0       0
  3523 ;;      Temps:          1       0       0       0       0
  3524 ;;      Totals:         9       6       0       0       0
  3525 ;;Total ram usage:       15 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_BMP280_readTemperature
  3531 ;;		_BMP280_readPressure
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function ___aldiv
  3537  0016                     ___aldiv:
  3538  0016                     l1148:	
  3539                           ;incstack = 0
  3540                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3541                           
  3542  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0018  01A1               	clrf	___aldiv@sign
  3545  0019                     l1150:
  3546  0019  1FF3               	btfss	___aldiv@divisor+3,7
  3547  001A  281C               	goto	u821
  3548  001B  281D               	goto	u820
  3549  001C                     u821:
  3550  001C  282A               	goto	l317
  3551  001D                     u820:
  3552  001D                     l1152:
  3553  001D  09F0               	comf	___aldiv@divisor,f
  3554  001E  09F1               	comf	___aldiv@divisor+1,f
  3555  001F  09F2               	comf	___aldiv@divisor+2,f
  3556  0020  09F3               	comf	___aldiv@divisor+3,f
  3557  0021  0AF0               	incf	___aldiv@divisor,f
  3558  0022  1903               	skipnz
  3559  0023  0AF1               	incf	___aldiv@divisor+1,f
  3560  0024  1903               	skipnz
  3561  0025  0AF2               	incf	___aldiv@divisor+2,f
  3562  0026  1903               	skipnz
  3563  0027  0AF3               	incf	___aldiv@divisor+3,f
  3564  0028  01A1               	clrf	___aldiv@sign
  3565  0029  0AA1               	incf	___aldiv@sign,f
  3566  002A                     l317:
  3567  002A  1FF7               	btfss	___aldiv@dividend+3,7
  3568  002B  282D               	goto	u831
  3569  002C  282E               	goto	u830
  3570  002D                     u831:
  3571  002D  283D               	goto	l1158
  3572  002E                     u830:
  3573  002E                     l1154:
  3574  002E  09F4               	comf	___aldiv@dividend,f
  3575  002F  09F5               	comf	___aldiv@dividend+1,f
  3576  0030  09F6               	comf	___aldiv@dividend+2,f
  3577  0031  09F7               	comf	___aldiv@dividend+3,f
  3578  0032  0AF4               	incf	___aldiv@dividend,f
  3579  0033  1903               	skipnz
  3580  0034  0AF5               	incf	___aldiv@dividend+1,f
  3581  0035  1903               	skipnz
  3582  0036  0AF6               	incf	___aldiv@dividend+2,f
  3583  0037  1903               	skipnz
  3584  0038  0AF7               	incf	___aldiv@dividend+3,f
  3585  0039                     l1156:
  3586  0039  3001               	movlw	1
  3587  003A  00F8               	movwf	??___aldiv
  3588  003B  0878               	movf	??___aldiv,w
  3589  003C  06A1               	xorwf	___aldiv@sign,f
  3590  003D                     l1158:
  3591  003D  3000               	movlw	0
  3592  003E  00A5               	movwf	___aldiv@quotient+3
  3593  003F  3000               	movlw	0
  3594  0040  00A4               	movwf	___aldiv@quotient+2
  3595  0041  3000               	movlw	0
  3596  0042  00A3               	movwf	___aldiv@quotient+1
  3597  0043  3000               	movlw	0
  3598  0044  00A2               	movwf	___aldiv@quotient
  3599  0045                     l1160:
  3600  0045  0873               	movf	___aldiv@divisor+3,w
  3601  0046  0472               	iorwf	___aldiv@divisor+2,w
  3602  0047  0471               	iorwf	___aldiv@divisor+1,w
  3603  0048  0470               	iorwf	___aldiv@divisor,w
  3604  0049  1903               	skipnz
  3605  004A  284C               	goto	u841
  3606  004B  284D               	goto	u840
  3607  004C                     u841:
  3608  004C  289A               	goto	l1180
  3609  004D                     u840:
  3610  004D                     l1162:
  3611  004D  01A0               	clrf	___aldiv@counter
  3612  004E  0AA0               	incf	___aldiv@counter,f
  3613  004F  285D               	goto	l1166
  3614  0050                     l1164:
  3615  0050  3001               	movlw	1
  3616  0051  00F8               	movwf	??___aldiv
  3617  0052                     u855:
  3618  0052  1003               	clrc
  3619  0053  0DF0               	rlf	___aldiv@divisor,f
  3620  0054  0DF1               	rlf	___aldiv@divisor+1,f
  3621  0055  0DF2               	rlf	___aldiv@divisor+2,f
  3622  0056  0DF3               	rlf	___aldiv@divisor+3,f
  3623  0057  0BF8               	decfsz	??___aldiv,f
  3624  0058  2852               	goto	u855
  3625  0059  3001               	movlw	1
  3626  005A  00F8               	movwf	??___aldiv
  3627  005B  0878               	movf	??___aldiv,w
  3628  005C  07A0               	addwf	___aldiv@counter,f
  3629  005D                     l1166:
  3630  005D  1FF3               	btfss	___aldiv@divisor+3,7
  3631  005E  2860               	goto	u861
  3632  005F  2861               	goto	u860
  3633  0060                     u861:
  3634  0060  2850               	goto	l1164
  3635  0061                     u860:
  3636  0061                     l1168:
  3637  0061  3001               	movlw	1
  3638  0062  00F8               	movwf	??___aldiv
  3639  0063                     u875:
  3640  0063  1003               	clrc
  3641  0064  0DA2               	rlf	___aldiv@quotient,f
  3642  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3643  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3644  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3645  0068  0BF8               	decfsz	??___aldiv,f
  3646  0069  2863               	goto	u875
  3647  006A                     l1170:
  3648  006A  0873               	movf	___aldiv@divisor+3,w
  3649  006B  0277               	subwf	___aldiv@dividend+3,w
  3650  006C  1D03               	skipz
  3651  006D  2878               	goto	u885
  3652  006E  0872               	movf	___aldiv@divisor+2,w
  3653  006F  0276               	subwf	___aldiv@dividend+2,w
  3654  0070  1D03               	skipz
  3655  0071  2878               	goto	u885
  3656  0072  0871               	movf	___aldiv@divisor+1,w
  3657  0073  0275               	subwf	___aldiv@dividend+1,w
  3658  0074  1D03               	skipz
  3659  0075  2878               	goto	u885
  3660  0076  0870               	movf	___aldiv@divisor,w
  3661  0077  0274               	subwf	___aldiv@dividend,w
  3662  0078                     u885:
  3663  0078  1C03               	skipc
  3664  0079  287B               	goto	u881
  3665  007A  287C               	goto	u880
  3666  007B                     u881:
  3667  007B  288B               	goto	l1176
  3668  007C                     u880:
  3669  007C                     l1172:
  3670  007C  0870               	movf	___aldiv@divisor,w
  3671  007D  02F4               	subwf	___aldiv@dividend,f
  3672  007E  0871               	movf	___aldiv@divisor+1,w
  3673  007F  1C03               	skipc
  3674  0080  0F71               	incfsz	___aldiv@divisor+1,w
  3675  0081  02F5               	subwf	___aldiv@dividend+1,f
  3676  0082  0872               	movf	___aldiv@divisor+2,w
  3677  0083  1C03               	skipc
  3678  0084  0F72               	incfsz	___aldiv@divisor+2,w
  3679  0085  02F6               	subwf	___aldiv@dividend+2,f
  3680  0086  0873               	movf	___aldiv@divisor+3,w
  3681  0087  1C03               	skipc
  3682  0088  0F73               	incfsz	___aldiv@divisor+3,w
  3683  0089  02F7               	subwf	___aldiv@dividend+3,f
  3684  008A                     l1174:
  3685  008A  1422               	bsf	___aldiv@quotient,0
  3686  008B                     l1176:
  3687  008B  3001               	movlw	1
  3688  008C                     u895:
  3689  008C  1003               	clrc
  3690  008D  0CF3               	rrf	___aldiv@divisor+3,f
  3691  008E  0CF2               	rrf	___aldiv@divisor+2,f
  3692  008F  0CF1               	rrf	___aldiv@divisor+1,f
  3693  0090  0CF0               	rrf	___aldiv@divisor,f
  3694  0091  3EFF               	addlw	-1
  3695  0092  1D03               	skipz
  3696  0093  288C               	goto	u895
  3697  0094                     l1178:
  3698  0094  3001               	movlw	1
  3699  0095  02A0               	subwf	___aldiv@counter,f
  3700  0096  1D03               	btfss	3,2
  3701  0097  2899               	goto	u901
  3702  0098  289A               	goto	u900
  3703  0099                     u901:
  3704  0099  2861               	goto	l1168
  3705  009A                     u900:
  3706  009A                     l1180:
  3707  009A  0821               	movf	___aldiv@sign,w
  3708  009B  1903               	btfsc	3,2
  3709  009C  289E               	goto	u911
  3710  009D  289F               	goto	u910
  3711  009E                     u911:
  3712  009E  28AA               	goto	l1184
  3713  009F                     u910:
  3714  009F                     l1182:
  3715  009F  09A2               	comf	___aldiv@quotient,f
  3716  00A0  09A3               	comf	___aldiv@quotient+1,f
  3717  00A1  09A4               	comf	___aldiv@quotient+2,f
  3718  00A2  09A5               	comf	___aldiv@quotient+3,f
  3719  00A3  0AA2               	incf	___aldiv@quotient,f
  3720  00A4  1903               	skipnz
  3721  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3722  00A6  1903               	skipnz
  3723  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3724  00A8  1903               	skipnz
  3725  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3726  00AA                     l1184:
  3727  00AA  0825               	movf	___aldiv@quotient+3,w
  3728  00AB  00F3               	movwf	?___aldiv+3
  3729  00AC  0824               	movf	___aldiv@quotient+2,w
  3730  00AD  00F2               	movwf	?___aldiv+2
  3731  00AE  0823               	movf	___aldiv@quotient+1,w
  3732  00AF  00F1               	movwf	?___aldiv+1
  3733  00B0  0822               	movf	___aldiv@quotient,w
  3734  00B1  00F0               	movwf	?___aldiv
  3735  00B2                     l327:
  3736  00B2  0008               	return
  3737  00B3                     __end_of___aldiv:
  3738                           
  3739                           	psect	text9
  3740  0F1A                     __ptext9:	
  3741 ;; *************** function _BMP280_begin *****************
  3742 ;; Defined at:
  3743 ;;		line 155 in file "BMP280.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  mode            1    wreg     enum E1307
  3746 ;;  T_sampling      1    3[BANK0 ] enum E1312
  3747 ;;  P_sampling      1    4[BANK0 ] enum E1312
  3748 ;;  filter          1    5[BANK0 ] enum E1320
  3749 ;;  standby         1    6[BANK0 ] enum E1327
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  mode            1   13[COMMON] enum E1307
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2    3[BANK0 ] int 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       4       0       0       0
  3762 ;;      Locals:         1       0       0       0       0
  3763 ;;      Temps:          0       4       0       0       0
  3764 ;;      Totals:         1       8       0       0       0
  3765 ;;Total ram usage:        9 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    4
  3768 ;; This function calls:
  3769 ;;		_BMP280_Configure
  3770 ;;		_BMP280_Read16
  3771 ;;		_BMP280_Read8
  3772 ;;		_BMP280_Write
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function _BMP280_begin
  3780  0F1A                     _BMP280_begin:
  3781                           
  3782                           ;incstack = 0
  3783                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3784                           ;BMP280_begin@mode stored from wreg
  3785  0F1A  00FD               	movwf	BMP280_begin@mode
  3786  0F1B                     l1192:
  3787                           
  3788                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  3789  0F1B  30D0               	movlw	208
  3790  0F1C  120A  158A  24E5  120A  158A  	fcall	_BMP280_Read8
  3791  0F21  3A58               	xorlw	88
  3792  0F22  1903               	skipnz
  3793  0F23  2F25               	goto	u921
  3794  0F24  2F26               	goto	u920
  3795  0F25                     u921:
  3796  0F25  2F2B               	goto	l1198
  3797  0F26                     u920:
  3798  0F26                     l1194:
  3799                           
  3800                           ;BMP280.c: 162:     return 0;
  3801  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0F28  01A3               	clrf	?_BMP280_begin
  3804  0F29  01A4               	clrf	?_BMP280_begin+1
  3805  0F2A  2FFF               	goto	l144
  3806  0F2B                     l1198:
  3807                           
  3808                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  3809  0F2B  30B6               	movlw	182
  3810  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0F2E  00A7               	movwf	??_BMP280_begin
  3813  0F2F  0827               	movf	??_BMP280_begin,w
  3814  0F30  00F2               	movwf	BMP280_Write@_data
  3815  0F31  30E0               	movlw	224
  3816  0F32  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  3817  0F37                     l1200:
  3818                           
  3819                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3820  0F37  3002               	movlw	2
  3821  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3822  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3823  0F3A  00A9               	movwf	??_BMP280_begin+2
  3824  0F3B  3004               	movlw	4
  3825  0F3C  00A8               	movwf	??_BMP280_begin+1
  3826  0F3D  30B9               	movlw	185
  3827  0F3E  00A7               	movwf	??_BMP280_begin
  3828  0F3F                     u1197:
  3829  0F3F  0BA7               	decfsz	??_BMP280_begin,f
  3830  0F40  2F3F               	goto	u1197
  3831  0F41  0BA8               	decfsz	??_BMP280_begin+1,f
  3832  0F42  2F3F               	goto	u1197
  3833  0F43  0BA9               	decfsz	??_BMP280_begin+2,f
  3834  0F44  2F3F               	goto	u1197
  3835  0F45  2F46               	nop2
  3836  0F46                     l1204:	
  3837                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3838                           
  3839                           
  3840                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3841  0F46  30F3               	movlw	243
  3842  0F47  120A  158A  24E5  120A  158A  	fcall	_BMP280_Read8
  3843  0F4C  3901               	andlw	1
  3844  0F4D  1D03               	btfss	3,2
  3845  0F4E  2F50               	goto	u931
  3846  0F4F  2F51               	goto	u930
  3847  0F50                     u931:
  3848  0F50  2F37               	goto	l1200
  3849  0F51                     u930:
  3850  0F51                     l1206:
  3851                           
  3852                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3853  0F51  3088               	movlw	136
  3854  0F52  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3855  0F57  0877               	movf	?_BMP280_Read16+1,w
  3856  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3857  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3858  0F5A  00B6               	movwf	(_BMP280_calib+1)^(0+128)
  3859  0F5B  0876               	movf	?_BMP280_Read16,w
  3860  0F5C  00B5               	movwf	_BMP280_calib^(0+128)
  3861                           
  3862                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3863  0F5D  308A               	movlw	138
  3864  0F5E  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3865  0F63  0877               	movf	?_BMP280_Read16+1,w
  3866  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3868  0F66  00B8               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3869  0F67  0876               	movf	?_BMP280_Read16,w
  3870  0F68  00B7               	movwf	(_BMP280_calib^(0+128)+2)
  3871                           
  3872                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3873  0F69  308C               	movlw	140
  3874  0F6A  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3875  0F6F  0877               	movf	?_BMP280_Read16+1,w
  3876  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3877  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  3878  0F72  00BA               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3879  0F73  0876               	movf	?_BMP280_Read16,w
  3880  0F74  00B9               	movwf	(_BMP280_calib^(0+128)+4)
  3881                           
  3882                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3883  0F75  308E               	movlw	142
  3884  0F76  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3885  0F7B  0877               	movf	?_BMP280_Read16+1,w
  3886  0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  3888  0F7E  00BC               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3889  0F7F  0876               	movf	?_BMP280_Read16,w
  3890  0F80  00BB               	movwf	(_BMP280_calib^(0+128)+6)
  3891                           
  3892                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3893  0F81  3090               	movlw	144
  3894  0F82  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3895  0F87  0877               	movf	?_BMP280_Read16+1,w
  3896  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  3897  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  3898  0F8A  00BE               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3899  0F8B  0876               	movf	?_BMP280_Read16,w
  3900  0F8C  00BD               	movwf	(_BMP280_calib^(0+128)+8)
  3901                           
  3902                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3903  0F8D  3092               	movlw	146
  3904  0F8E  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3905  0F93  0877               	movf	?_BMP280_Read16+1,w
  3906  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0F96  00C0               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3909  0F97  0876               	movf	?_BMP280_Read16,w
  3910  0F98  00BF               	movwf	(_BMP280_calib^(0+128)+10)
  3911                           
  3912                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3913  0F99  3094               	movlw	148
  3914  0F9A  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3915  0F9F  0877               	movf	?_BMP280_Read16+1,w
  3916  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  3917  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  3918  0FA2  00C2               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3919  0FA3  0876               	movf	?_BMP280_Read16,w
  3920  0FA4  00C1               	movwf	(_BMP280_calib^(0+128)+12)
  3921                           
  3922                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3923  0FA5  3096               	movlw	150
  3924  0FA6  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3925  0FAB  0877               	movf	?_BMP280_Read16+1,w
  3926  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  3927  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  3928  0FAE  00C4               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3929  0FAF  0876               	movf	?_BMP280_Read16,w
  3930  0FB0  00C3               	movwf	(_BMP280_calib^(0+128)+14)
  3931                           
  3932                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3933  0FB1  3098               	movlw	152
  3934  0FB2  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3935  0FB7  0877               	movf	?_BMP280_Read16+1,w
  3936  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  3938  0FBA  00C6               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3939  0FBB  0876               	movf	?_BMP280_Read16,w
  3940  0FBC  00C5               	movwf	(_BMP280_calib^(0+128)+16)
  3941                           
  3942                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3943  0FBD  309A               	movlw	154
  3944  0FBE  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3945  0FC3  0877               	movf	?_BMP280_Read16+1,w
  3946  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  3947  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  3948  0FC6  00C8               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3949  0FC7  0876               	movf	?_BMP280_Read16,w
  3950  0FC8  00C7               	movwf	(_BMP280_calib^(0+128)+18)
  3951                           
  3952                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3953  0FC9  309C               	movlw	156
  3954  0FCA  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3955  0FCF  0877               	movf	?_BMP280_Read16+1,w
  3956  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  3957  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  3958  0FD2  00CA               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3959  0FD3  0876               	movf	?_BMP280_Read16,w
  3960  0FD4  00C9               	movwf	(_BMP280_calib^(0+128)+20)
  3961                           
  3962                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3963  0FD5  309E               	movlw	158
  3964  0FD6  120A  158A  25B1  120A  158A  	fcall	_BMP280_Read16
  3965  0FDB  0877               	movf	?_BMP280_Read16+1,w
  3966  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  3967  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  3968  0FDE  00CC               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3969  0FDF  0876               	movf	?_BMP280_Read16,w
  3970  0FE0  00CB               	movwf	(_BMP280_calib^(0+128)+22)
  3971                           
  3972                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3973  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0FE3  0823               	movf	BMP280_begin@T_sampling,w
  3976  0FE4  00A7               	movwf	??_BMP280_begin
  3977  0FE5  0827               	movf	??_BMP280_begin,w
  3978  0FE6  00F6               	movwf	BMP280_Configure@T_sampling
  3979  0FE7  0824               	movf	BMP280_begin@P_sampling,w
  3980  0FE8  00A8               	movwf	??_BMP280_begin+1
  3981  0FE9  0828               	movf	??_BMP280_begin+1,w
  3982  0FEA  00F7               	movwf	BMP280_Configure@P_sampling
  3983  0FEB  0825               	movf	BMP280_begin@filter,w
  3984  0FEC  00A9               	movwf	??_BMP280_begin+2
  3985  0FED  0829               	movf	??_BMP280_begin+2,w
  3986  0FEE  00F8               	movwf	BMP280_Configure@filter
  3987  0FEF  0826               	movf	BMP280_begin@standby,w
  3988  0FF0  00AA               	movwf	??_BMP280_begin+3
  3989  0FF1  082A               	movf	??_BMP280_begin+3,w
  3990  0FF2  00F9               	movwf	BMP280_Configure@standby
  3991  0FF3  087D               	movf	BMP280_begin@mode,w
  3992  0FF4  120A  158A  2521  120A  158A  	fcall	_BMP280_Configure
  3993  0FF9                     l1208:
  3994                           
  3995                           ;BMP280.c: 188:   return 1;
  3996  0FF9  3001               	movlw	1
  3997  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0FFC  00A3               	movwf	?_BMP280_begin
  4000  0FFD  3000               	movlw	0
  4001  0FFE  00A4               	movwf	?_BMP280_begin+1
  4002  0FFF                     l144:
  4003  0FFF  0008               	return
  4004  1000                     __end_of_BMP280_begin:
  4005                           
  4006                           	psect	text10
  4007  0CE5                     __ptext10:	
  4008 ;; *************** function _BMP280_Read8 *****************
  4009 ;; Defined at:
  4010 ;;		line 105 in file "BMP280.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  reg_addr        1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  reg_addr        1    8[COMMON] unsigned char 
  4015 ;;  ret             1    9[COMMON] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         2       0       0       0       0
  4027 ;;      Temps:          2       0       0       0       0
  4028 ;;      Totals:         4       0       0       0       0
  4029 ;;Total ram usage:        4 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    2
  4032 ;; This function calls:
  4033 ;;		_I2C_Master_Read
  4034 ;;		_I2C_Master_Start
  4035 ;;		_I2C_Master_Stop
  4036 ;;		_I2C_Master_Write
  4037 ;; This function is called by:
  4038 ;;		_BMP280_begin
  4039 ;;		_BMP280_ForcedMeasurement
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _BMP280_Read8
  4045  0CE5                     _BMP280_Read8:
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  4049                           ;BMP280_Read8@reg_addr stored from wreg
  4050  0CE5  00F8               	movwf	BMP280_Read8@reg_addr
  4051  0CE6                     l1086:
  4052                           
  4053                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  4054  0CE6  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4055                           
  4056                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  4057  0CEB  30EE               	movlw	238
  4058  0CEC  00F0               	movwf	I2C_Master_Write@d
  4059  0CED  3000               	movlw	0
  4060  0CEE  00F1               	movwf	I2C_Master_Write@d+1
  4061  0CEF  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4062                           
  4063                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  4064  0CF4  0878               	movf	BMP280_Read8@reg_addr,w
  4065  0CF5  00F6               	movwf	??_BMP280_Read8
  4066  0CF6  01F7               	clrf	??_BMP280_Read8+1
  4067  0CF7  0876               	movf	??_BMP280_Read8,w
  4068  0CF8  00F0               	movwf	I2C_Master_Write@d
  4069  0CF9  0877               	movf	??_BMP280_Read8+1,w
  4070  0CFA  00F1               	movwf	I2C_Master_Write@d+1
  4071  0CFB  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4072                           
  4073                           ;BMP280.c: 112:   I2C_Master_Start();
  4074  0D00  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4075                           
  4076                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  4077  0D05  30EF               	movlw	239
  4078  0D06  00F0               	movwf	I2C_Master_Write@d
  4079  0D07  3000               	movlw	0
  4080  0D08  00F1               	movwf	I2C_Master_Write@d+1
  4081  0D09  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4082                           
  4083                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  4084  0D0E  3000               	movlw	0
  4085  0D0F  00F0               	movwf	I2C_Master_Read@a
  4086  0D10  00F1               	movwf	I2C_Master_Read@a+1
  4087  0D11  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4088  0D16  0870               	movf	?_I2C_Master_Read,w
  4089  0D17  00F6               	movwf	??_BMP280_Read8
  4090  0D18  0876               	movf	??_BMP280_Read8,w
  4091  0D19  00F9               	movwf	BMP280_Read8@ret
  4092                           
  4093                           ;BMP280.c: 115:   I2C_Master_Stop();
  4094  0D1A  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4095  0D1F                     l1088:
  4096                           
  4097                           ;BMP280.c: 117:   return ret;
  4098  0D1F  0879               	movf	BMP280_Read8@ret,w
  4099  0D20                     l134:
  4100  0D20  0008               	return
  4101  0D21                     __end_of_BMP280_Read8:
  4102                           
  4103                           	psect	text11
  4104  0DB1                     __ptext11:	
  4105 ;; *************** function _BMP280_Read16 *****************
  4106 ;; Defined at:
  4107 ;;		line 121 in file "BMP280.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  reg_addr        1    wreg     unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  reg_addr        1   10[COMMON] unsigned char 
  4112 ;;  ret             2   11[COMMON] struct .
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2    6[COMMON] unsigned int 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         2       0       0       0       0
  4123 ;;      Locals:         3       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0
  4125 ;;      Totals:         7       0       0       0       0
  4126 ;;Total ram usage:        7 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    2
  4129 ;; This function calls:
  4130 ;;		_I2C_Master_Read
  4131 ;;		_I2C_Master_Start
  4132 ;;		_I2C_Master_Stop
  4133 ;;		_I2C_Master_Write
  4134 ;; This function is called by:
  4135 ;;		_BMP280_begin
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function _BMP280_Read16
  4141  0DB1                     _BMP280_Read16:
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  4145                           ;BMP280_Read16@reg_addr stored from wreg
  4146  0DB1  00FA               	movwf	BMP280_Read16@reg_addr
  4147  0DB2                     l1092:
  4148                           
  4149                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  4150  0DB2  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4151                           
  4152                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  4153  0DB7  30EE               	movlw	238
  4154  0DB8  00F0               	movwf	I2C_Master_Write@d
  4155  0DB9  3000               	movlw	0
  4156  0DBA  00F1               	movwf	I2C_Master_Write@d+1
  4157  0DBB  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4158                           
  4159                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  4160  0DC0  087A               	movf	BMP280_Read16@reg_addr,w
  4161  0DC1  00F8               	movwf	??_BMP280_Read16
  4162  0DC2  01F9               	clrf	??_BMP280_Read16+1
  4163  0DC3  0878               	movf	??_BMP280_Read16,w
  4164  0DC4  00F0               	movwf	I2C_Master_Write@d
  4165  0DC5  0879               	movf	??_BMP280_Read16+1,w
  4166  0DC6  00F1               	movwf	I2C_Master_Write@d+1
  4167  0DC7  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4168                           
  4169                           ;BMP280.c: 132:   I2C_Master_Start();
  4170  0DCC  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4171                           
  4172                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  4173  0DD1  30EF               	movlw	239
  4174  0DD2  00F0               	movwf	I2C_Master_Write@d
  4175  0DD3  3000               	movlw	0
  4176  0DD4  00F1               	movwf	I2C_Master_Write@d+1
  4177  0DD5  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4178                           
  4179                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  4180  0DDA  3001               	movlw	1
  4181  0DDB  00F0               	movwf	I2C_Master_Read@a
  4182  0DDC  3000               	movlw	0
  4183  0DDD  00F1               	movwf	I2C_Master_Read@a+1
  4184  0DDE  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4185  0DE3  0870               	movf	?_I2C_Master_Read,w
  4186  0DE4  00F8               	movwf	??_BMP280_Read16
  4187  0DE5  0878               	movf	??_BMP280_Read16,w
  4188  0DE6  00FB               	movwf	BMP280_Read16@ret
  4189                           
  4190                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  4191  0DE7  3000               	movlw	0
  4192  0DE8  00F0               	movwf	I2C_Master_Read@a
  4193  0DE9  00F1               	movwf	I2C_Master_Read@a+1
  4194  0DEA  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  4195  0DEF  0870               	movf	?_I2C_Master_Read,w
  4196  0DF0  00F8               	movwf	??_BMP280_Read16
  4197  0DF1  0878               	movf	??_BMP280_Read16,w
  4198  0DF2  00FC               	movwf	BMP280_Read16@ret+1
  4199                           
  4200                           ;BMP280.c: 136:   I2C_Master_Stop();
  4201  0DF3  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4202  0DF8                     l1094:
  4203                           
  4204                           ;BMP280.c: 138:   return(ret.w);
  4205  0DF8  087C               	movf	BMP280_Read16@ret+1,w
  4206  0DF9  00F7               	movwf	?_BMP280_Read16+1
  4207  0DFA  087B               	movf	BMP280_Read16@ret,w
  4208  0DFB  00F6               	movwf	?_BMP280_Read16
  4209  0DFC                     l137:
  4210  0DFC  0008               	return
  4211  0DFD                     __end_of_BMP280_Read16:
  4212                           
  4213                           	psect	text12
  4214  0C7F                     __ptext12:	
  4215 ;; *************** function _I2C_Master_Read *****************
  4216 ;; Defined at:
  4217 ;;		line 74 in file "I2C.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  a               2    0[COMMON] unsigned short 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  temp            2    4[COMMON] unsigned short 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    0[COMMON] unsigned short 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         2       0       0       0       0
  4232 ;;      Locals:         2       0       0       0       0
  4233 ;;      Temps:          2       0       0       0       0
  4234 ;;      Totals:         6       0       0       0       0
  4235 ;;Total ram usage:        6 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    1
  4238 ;; This function calls:
  4239 ;;		_I2C_Master_Wait
  4240 ;; This function is called by:
  4241 ;;		_BMP280_Read8
  4242 ;;		_BMP280_Read16
  4243 ;;		_BMP280_Update
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function _I2C_Master_Read
  4249  0C7F                     _I2C_Master_Read:
  4250  0C7F                     l1032:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4253                           
  4254                           
  4255                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4256  0C7F  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4257  0C84                     l1034:
  4258                           
  4259                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4260  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  4261  0C85  1303               	bcf	3,6	;RP1=0, select bank1
  4262  0C86  1591               	bsf	17,3	;volatile
  4263                           
  4264                           ;I2C.c: 79:     I2C_Master_Wait();
  4265  0C87  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4266  0C8C                     l1036:
  4267                           
  4268                           ;I2C.c: 80:     temp = SSPBUF;
  4269  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0C8E  0813               	movf	19,w	;volatile
  4272  0C8F  00F2               	movwf	??_I2C_Master_Read
  4273  0C90  01F3               	clrf	??_I2C_Master_Read+1
  4274  0C91  0872               	movf	??_I2C_Master_Read,w
  4275  0C92  00F4               	movwf	I2C_Master_Read@temp
  4276  0C93  0873               	movf	??_I2C_Master_Read+1,w
  4277  0C94  00F5               	movwf	I2C_Master_Read@temp+1
  4278  0C95                     l1038:
  4279                           
  4280                           ;I2C.c: 81:     I2C_Master_Wait();
  4281  0C95  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4282  0C9A                     l1040:
  4283                           
  4284                           ;I2C.c: 82:     if(a == 1){
  4285  0C9A  0370               	decf	I2C_Master_Read@a,w
  4286  0C9B  0471               	iorwf	I2C_Master_Read@a+1,w
  4287  0C9C  1D03               	btfss	3,2
  4288  0C9D  2C9F               	goto	u621
  4289  0C9E  2CA0               	goto	u620
  4290  0C9F                     u621:
  4291  0C9F  2CA4               	goto	l105
  4292  0CA0                     u620:
  4293  0CA0                     l1042:
  4294                           
  4295                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4296  0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  4297  0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  4298  0CA2  1291               	bcf	17,5	;volatile
  4299                           
  4300                           ;I2C.c: 84:     }else{
  4301  0CA3  2CA7               	goto	l106
  4302  0CA4                     l105:
  4303                           
  4304                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4305  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  4306  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  4307  0CA6  1691               	bsf	17,5	;volatile
  4308  0CA7                     l106:	
  4309                           ;I2C.c: 86:     }
  4310                           
  4311                           
  4312                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4313  0CA7  1611               	bsf	17,4	;volatile
  4314  0CA8                     l1044:
  4315                           
  4316                           ;I2C.c: 88:     return temp;
  4317  0CA8  0875               	movf	I2C_Master_Read@temp+1,w
  4318  0CA9  00F1               	movwf	?_I2C_Master_Read+1
  4319  0CAA  0874               	movf	I2C_Master_Read@temp,w
  4320  0CAB  00F0               	movwf	?_I2C_Master_Read
  4321  0CAC                     l107:
  4322  0CAC  0008               	return
  4323  0CAD                     __end_of_I2C_Master_Read:
  4324                           
  4325                           	psect	text13
  4326  0D21                     __ptext13:	
  4327 ;; *************** function _BMP280_Configure *****************
  4328 ;; Defined at:
  4329 ;;		line 142 in file "BMP280.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  mode            1    wreg     enum E1307
  4332 ;;  T_sampling      1    6[COMMON] enum E1312
  4333 ;;  P_sampling      1    7[COMMON] enum E1312
  4334 ;;  filter          1    8[COMMON] enum E1320
  4335 ;;  standby         1    9[COMMON] enum E1327
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  mode            1    0[BANK0 ] enum E1307
  4338 ;;  _config         1    2[BANK0 ] unsigned char 
  4339 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         4       0       0       0       0
  4350 ;;      Locals:         0       3       0       0       0
  4351 ;;      Temps:          3       0       0       0       0
  4352 ;;      Totals:         7       3       0       0       0
  4353 ;;Total ram usage:       10 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    3
  4356 ;; This function calls:
  4357 ;;		_BMP280_Write
  4358 ;; This function is called by:
  4359 ;;		_BMP280_begin
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _BMP280_Configure
  4365  0D21                     _BMP280_Configure:
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4369                           ;BMP280_Configure@mode stored from wreg
  4370  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0D23  00A0               	movwf	BMP280_Configure@mode
  4373  0D24                     l1098:
  4374                           
  4375                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4376  0D24  0878               	movf	BMP280_Configure@filter,w
  4377  0D25  00FA               	movwf	??_BMP280_Configure
  4378  0D26  3002               	movlw	2
  4379  0D27                     u715:
  4380  0D27  1003               	clrc
  4381  0D28  0DFA               	rlf	??_BMP280_Configure,f
  4382  0D29  3EFF               	addlw	-1
  4383  0D2A  1D03               	skipz
  4384  0D2B  2D27               	goto	u715
  4385  0D2C  0879               	movf	BMP280_Configure@standby,w
  4386  0D2D  00FB               	movwf	??_BMP280_Configure+1
  4387  0D2E  3004               	movlw	4
  4388  0D2F                     u725:
  4389  0D2F  1003               	clrc
  4390  0D30  0DFB               	rlf	??_BMP280_Configure+1,f
  4391  0D31  3EFF               	addlw	-1
  4392  0D32  1D03               	skipz
  4393  0D33  2D2F               	goto	u725
  4394  0D34  1003               	clrc
  4395  0D35  0D7B               	rlf	??_BMP280_Configure+1,w
  4396  0D36  047A               	iorwf	??_BMP280_Configure,w
  4397  0D37  39FC               	andlw	252
  4398  0D38  00FC               	movwf	??_BMP280_Configure+2
  4399  0D39  087C               	movf	??_BMP280_Configure+2,w
  4400  0D3A  00A2               	movwf	BMP280_Configure@_config
  4401                           
  4402                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4403  0D3B  0877               	movf	BMP280_Configure@P_sampling,w
  4404  0D3C  00FA               	movwf	??_BMP280_Configure
  4405  0D3D  3002               	movlw	2
  4406  0D3E                     u735:
  4407  0D3E  1003               	clrc
  4408  0D3F  0DFA               	rlf	??_BMP280_Configure,f
  4409  0D40  3EFF               	addlw	-1
  4410  0D41  1D03               	skipz
  4411  0D42  2D3E               	goto	u735
  4412  0D43  0876               	movf	BMP280_Configure@T_sampling,w
  4413  0D44  00FB               	movwf	??_BMP280_Configure+1
  4414  0D45  3004               	movlw	4
  4415  0D46                     u745:
  4416  0D46  1003               	clrc
  4417  0D47  0DFB               	rlf	??_BMP280_Configure+1,f
  4418  0D48  3EFF               	addlw	-1
  4419  0D49  1D03               	skipz
  4420  0D4A  2D46               	goto	u745
  4421  0D4B  1003               	clrc
  4422  0D4C  0D7B               	rlf	??_BMP280_Configure+1,w
  4423  0D4D  047A               	iorwf	??_BMP280_Configure,w
  4424  0D4E  0420               	iorwf	BMP280_Configure@mode,w
  4425  0D4F  00FC               	movwf	??_BMP280_Configure+2
  4426  0D50  087C               	movf	??_BMP280_Configure+2,w
  4427  0D51  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4428  0D52                     l1100:
  4429                           
  4430                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  4431  0D52  0822               	movf	BMP280_Configure@_config,w
  4432  0D53  00FA               	movwf	??_BMP280_Configure
  4433  0D54  087A               	movf	??_BMP280_Configure,w
  4434  0D55  00F2               	movwf	BMP280_Write@_data
  4435  0D56  30F5               	movlw	245
  4436  0D57  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  4437  0D5C                     l1102:
  4438                           
  4439                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  4440  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0D5E  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4443  0D5F  00FA               	movwf	??_BMP280_Configure
  4444  0D60  087A               	movf	??_BMP280_Configure,w
  4445  0D61  00F2               	movwf	BMP280_Write@_data
  4446  0D62  30F4               	movlw	244
  4447  0D63  120A  158A  2425  120A  158A  	fcall	_BMP280_Write
  4448  0D68                     l140:
  4449  0D68  0008               	return
  4450  0D69                     __end_of_BMP280_Configure:
  4451                           
  4452                           	psect	text14
  4453  0C25                     __ptext14:	
  4454 ;; *************** function _BMP280_Write *****************
  4455 ;; Defined at:
  4456 ;;		line 95 in file "BMP280.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  reg_addr        1    wreg     unsigned char 
  4459 ;;  _data           1    2[COMMON] unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  reg_addr        1    5[COMMON] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         1       0       0       0       0
  4472 ;;      Locals:         1       0       0       0       0
  4473 ;;      Temps:          2       0       0       0       0
  4474 ;;      Totals:         4       0       0       0       0
  4475 ;;Total ram usage:        4 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    2
  4478 ;; This function calls:
  4479 ;;		_I2C_Master_Start
  4480 ;;		_I2C_Master_Stop
  4481 ;;		_I2C_Master_Write
  4482 ;; This function is called by:
  4483 ;;		_BMP280_Configure
  4484 ;;		_BMP280_begin
  4485 ;;		_BMP280_ForcedMeasurement
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function _BMP280_Write
  4491  0C25                     _BMP280_Write:
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4495                           ;BMP280_Write@reg_addr stored from wreg
  4496  0C25  00F5               	movwf	BMP280_Write@reg_addr
  4497  0C26                     l1048:
  4498                           
  4499                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  4500  0C26  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Start
  4501                           
  4502                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  4503  0C2B  30EE               	movlw	238
  4504  0C2C  00F0               	movwf	I2C_Master_Write@d
  4505  0C2D  3000               	movlw	0
  4506  0C2E  00F1               	movwf	I2C_Master_Write@d+1
  4507  0C2F  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4508                           
  4509                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  4510  0C34  0875               	movf	BMP280_Write@reg_addr,w
  4511  0C35  00F3               	movwf	??_BMP280_Write
  4512  0C36  01F4               	clrf	??_BMP280_Write+1
  4513  0C37  0873               	movf	??_BMP280_Write,w
  4514  0C38  00F0               	movwf	I2C_Master_Write@d
  4515  0C39  0874               	movf	??_BMP280_Write+1,w
  4516  0C3A  00F1               	movwf	I2C_Master_Write@d+1
  4517  0C3B  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4518                           
  4519                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  4520  0C40  0872               	movf	BMP280_Write@_data,w
  4521  0C41  00F3               	movwf	??_BMP280_Write
  4522  0C42  01F4               	clrf	??_BMP280_Write+1
  4523  0C43  0873               	movf	??_BMP280_Write,w
  4524  0C44  00F0               	movwf	I2C_Master_Write@d
  4525  0C45  0874               	movf	??_BMP280_Write+1,w
  4526  0C46  00F1               	movwf	I2C_Master_Write@d+1
  4527  0C47  120A  158A  23FF  120A  158A  	fcall	_I2C_Master_Write
  4528                           
  4529                           ;BMP280.c: 101:   I2C_Master_Stop();
  4530  0C4C  120A  158A  23F6  120A  158A  	fcall	_I2C_Master_Stop
  4531  0C51                     l131:
  4532  0C51  0008               	return
  4533  0C52                     __end_of_BMP280_Write:
  4534                           
  4535                           	psect	text15
  4536  0BFF                     __ptext15:	
  4537 ;; *************** function _I2C_Master_Write *****************
  4538 ;; Defined at:
  4539 ;;		line 65 in file "I2C.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  d               2    0[COMMON] unsigned int 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         2       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0
  4556 ;;      Totals:         2       0       0       0       0
  4557 ;;Total ram usage:        2 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    1
  4560 ;; This function calls:
  4561 ;;		_I2C_Master_Wait
  4562 ;; This function is called by:
  4563 ;;		_BMP280_Write
  4564 ;;		_BMP280_Read8
  4565 ;;		_BMP280_Read16
  4566 ;;		_BMP280_Update
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _I2C_Master_Write
  4572  0BFF                     _I2C_Master_Write:
  4573  0BFF                     l1028:	
  4574                           ;incstack = 0
  4575                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4576                           
  4577                           
  4578                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4579  0BFF  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4580  0C04                     l1030:
  4581                           
  4582                           ;I2C.c: 68:     SSPBUF = d;
  4583  0C04  0870               	movf	I2C_Master_Write@d,w
  4584  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0C07  0093               	movwf	19	;volatile
  4587  0C08                     l102:
  4588  0C08  0008               	return
  4589  0C09                     __end_of_I2C_Master_Write:
  4590                           
  4591                           	psect	text16
  4592  0BF6                     __ptext16:	
  4593 ;; *************** function _I2C_Master_Stop *****************
  4594 ;; Defined at:
  4595 ;;		line 55 in file "I2C.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0, pclath, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0
  4612 ;;      Totals:         0       0       0       0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    1
  4616 ;; This function calls:
  4617 ;;		_I2C_Master_Wait
  4618 ;; This function is called by:
  4619 ;;		_BMP280_Write
  4620 ;;		_BMP280_Read8
  4621 ;;		_BMP280_Read16
  4622 ;;		_BMP280_Update
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _I2C_Master_Stop
  4628  0BF6                     _I2C_Master_Stop:
  4629  0BF6                     l1024:	
  4630                           ;incstack = 0
  4631                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4632                           
  4633                           
  4634                           ;I2C.c: 57:     I2C_Master_Wait();
  4635  0BF6  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4636  0BFB                     l1026:
  4637                           
  4638                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4639  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  4640  0BFC  1303               	bcf	3,6	;RP1=0, select bank1
  4641  0BFD  1511               	bsf	17,2	;volatile
  4642  0BFE                     l99:
  4643  0BFE  0008               	return
  4644  0BFF                     __end_of_I2C_Master_Stop:
  4645                           
  4646                           	psect	text17
  4647  0BED                     __ptext17:	
  4648 ;; *************** function _I2C_Master_Start *****************
  4649 ;; Defined at:
  4650 ;;		line 39 in file "I2C.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    1
  4671 ;; This function calls:
  4672 ;;		_I2C_Master_Wait
  4673 ;; This function is called by:
  4674 ;;		_BMP280_Write
  4675 ;;		_BMP280_Read8
  4676 ;;		_BMP280_Read16
  4677 ;;		_BMP280_Update
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _I2C_Master_Start
  4683  0BED                     _I2C_Master_Start:
  4684  0BED                     l1020:	
  4685                           ;incstack = 0
  4686                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4687                           
  4688                           
  4689                           ;I2C.c: 41:     I2C_Master_Wait();
  4690  0BED  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4691  0BF2                     l1022:
  4692                           
  4693                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4694  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  4695  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  4696  0BF4  1411               	bsf	17,0	;volatile
  4697  0BF5                     l93:
  4698  0BF5  0008               	return
  4699  0BF6                     __end_of_I2C_Master_Start:
  4700                           
  4701                           	psect	text18
  4702  0009                     __ptext18:	
  4703 ;; *************** function _I2C_Master_Wait *****************
  4704 ;; Defined at:
  4705 ;;		line 32 in file "I2C.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_I2C_Master_Start
  4729 ;;		_I2C_Master_Stop
  4730 ;;		_I2C_Master_Write
  4731 ;;		_I2C_Master_Read
  4732 ;;		_I2C_Master_RepeatedStart
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _I2C_Master_Wait
  4738  0009                     _I2C_Master_Wait:
  4739  0009                     l1016:	
  4740                           ;incstack = 0
  4741                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4742                           
  4743  0009                     l87:	
  4744                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4745                           
  4746  0009  1683               	bsf	3,5	;RP0=1, select bank1
  4747  000A  1303               	bcf	3,6	;RP1=0, select bank1
  4748  000B  1914               	btfsc	20,2	;volatile
  4749  000C  280E               	goto	u601
  4750  000D  280F               	goto	u600
  4751  000E                     u601:
  4752  000E  2809               	goto	l87
  4753  000F                     u600:
  4754  000F                     l1018:
  4755  000F  0811               	movf	17,w	;volatile
  4756  0010  391F               	andlw	31
  4757  0011  1D03               	btfss	3,2
  4758  0012  2814               	goto	u611
  4759  0013  2815               	goto	u610
  4760  0014                     u611:
  4761  0014  2809               	goto	l87
  4762  0015                     u610:
  4763  0015                     l90:
  4764  0015  0008               	return
  4765  0016                     __end_of_I2C_Master_Wait:
  4766  007E                     btemp	set	126	;btemp
  4767  007E                     wtemp0	set	126
  4768                           
  4769                           	psect	config
  4770                           
  4771                           ;Config register CONFIG1 @ 0x2007
  4772                           ;	Oscillator Selection bits
  4773                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4774                           ;	Watchdog Timer Enable bit
  4775                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4776                           ;	Power-up Timer Enable bit
  4777                           ;	PWRTE = OFF, PWRT disabled
  4778                           ;	RE3/MCLR pin function select bit
  4779                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4780                           ;	Code Protection bit
  4781                           ;	CP = OFF, Program memory code protection is disabled
  4782                           ;	Data Code Protection bit
  4783                           ;	CPD = OFF, Data memory code protection is disabled
  4784                           ;	Brown Out Reset Selection bits
  4785                           ;	BOREN = ON, BOR enabled
  4786                           ;	Internal External Switchover bit
  4787                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4788                           ;	Fail-Safe Clock Monitor Enabled bit
  4789                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4790                           ;	Low Voltage Programming Enable bit
  4791                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4792                           ;	In-Circuit Debugger Mode bit
  4793                           ;	DEBUG = 0x1, unprogrammed default
  4794  2007                     	org	8199
  4795  2007  23F4               	dw	9204
  4796                           
  4797                           ;Config register CONFIG2 @ 0x2008
  4798                           ;	Brown-out Reset Selection bit
  4799                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4800                           ;	Flash Program Memory Self Write Enable bits
  4801                           ;	WRT = OFF, Write protection off
  4802  2008                     	org	8200
  4803  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      78
    BANK1            80      0      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_BMP280_begin
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23235
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             14 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             14 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     5     5      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                             13 COMMON     1     1      0
                                              3 BANK0      8     4      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      89       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      89      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 14:42:06 2021

               _BMP280_Configure 0D21                               l46 0C6E                               l55 0C24  
                             l47 0C6E                               l90 0015                               l84 0CE4  
                             l93 0BF5                               l87 0009                               l99 0BFE  
                             fsr 0004                              l102 0C08                              l105 0CA4  
                            l106 0CA7                              l131 0C51                              l107 0CAC  
                            l140 0D68                              l134 0D20                              l144 0FFF  
                            l160 02C4                              l137 0DFC                              l164 07EA  
                            l317 002A                              l157 0F19                              l166 067C  
                            l327 00B2                              l266 0DB0                              l288 0E62  
                            _GIE 005F          BMP280_Configure@_config 0022                              u600 000F  
                            u601 000E                              u610 0015                              u611 0014  
                            u620 0CA0                              u700 0CC4                              u621 0C9F  
                            u630 0E0D                              u631 0E0C                              u705 0CBF  
                            u650 0E21                              u810 0DA8                              u715 0D27  
                            u651 0E20                              u811 0DA7                              u900 009A  
                            u820 001D                              u725 0D2F                              u901 0099  
                            u821 001C                              u645 0E12                              u805 0D98  
                            u910 009F                              u830 002E                              u670 0E3C  
                            u750 0EBE                              u735 0D3E                              u911 009E  
                            u831 002D                              u671 0E3B                              u920 0F26  
                            u840 004D                              u760 0F08                              u745 0D46  
                            u921 0F25                              u841 004C                              u665 0E23  
                            u930 0F51                              u690 0E5A                              u770 0D77  
                            u931 0F50                              u691 0E59                              u675 0E38  
                            u771 0D76                              u755 0EB9                              u860 0061  
                            u940 00CF                              u861 0060                              u685 0E4C  
                            u781 0D80                              u765 0F03                              u782 0D87  
                            u855 0052                              u783 0D8E                              u951 00F8  
                            u880 007C                              u952 00F9                              u881 007B  
                            u961 0180                              u953 00FE                              u945 00CA  
                            u962 0181                              u954 00FF                              u875 0063  
                            u795 0D90                              u971 01C9                              u963 0186  
                            u955 0104                              u980 029C                              u972 01CA  
                            u964 0187                              u956 0105                              u885 0078  
                            u981 029D                              u973 01CF                              u965 018C  
                            u990 02EE                              u982 02A2                              u974 01D0  
                            u966 018D                              u895 008C                              u991 02EF  
                            u983 02A3                              u975 01D5                              u992 02F4  
                            u976 01D6                              u993 02F5                              fsr0 0004  
                            indf 0000     __size_of_BMP280_readPressure 0526           BMP280_begin@P_sampling 0024  
                           l1020 0BED                             l1100 0D52                             l1022 0BF2  
                           l1030 0C04                             l1102 0D5C                             l1110 0E72  
                           l1016 0009                             l1024 0BF6                             l1040 0C9A  
                           l1032 0C7F                             l1200 0F37                             l1120 0EA3  
                           l1112 0E7B                             l1104 0E63                             l1018 000F  
                           l1026 0BFB                             l1042 0CA0                             l1034 0C84  
                           l1050 0DFD                             l1130 0EF5                             l1122 0EB0  
                           l1114 0E80                             l1106 0E64                             l1028 0BFF  
                           l1044 0CA8                             l1036 0C8C                             l1204 0F46  
                           l1060 0E2A                             l1052 0E0D                             l1140 0D8E  
                           l1220 02C8                             l1132 0EFA                             l1124 0ECF  
                           l1116 0E89                             l1108 0E69                             l1212 00B6  
                           l1038 0C95                             l1206 0F51                             l1150 0019  
                           l1062 0E3C                             l1054 0E10                             l1070 0E5A  
                           l1142 0D97                             l1134 0D69                             l1230 0637  
                           l1222 0599                             l1126 0EDC                             l1118 0E96  
                           l1214 024B                             l1048 0C26                             l1208 0FF9  
                           l1160 0045                             l1152 001D                             l1064 0E4A  
                           l1056 0E1D                             l1144 0DA8                             l1136 0D71  
                           l1232 065A                             l1128 0EE9                             l1216 026E  
                           l1080 0CE1                             l1240 0C6D                             l1170 006A  
                           l1162 004D                             l1154 002E                             l1066 0E4B  
                           l1058 0E21                             l1138 0D77                             l1234 07DC  
                           l1226 05A2                             l1082 0CE2                             l1074 0CAD  
                           l1242 0C6F                             l1092 0DB2                             l1172 007C  
                           l1164 0050                             l1180 009A                             l1156 0039  
                           l1148 0016                             l1068 0E54                             l1228 0623  
                           l1084 0CE3                             l1076 0CB1                             l1094 0DF8  
                           l1086 0CE6                             l1182 009F                             l1174 008A  
                           l1166 005D                             l1158 003D                             l1078 0CB4  
                           l1190 0C17                             l1238 0C52                             l1088 0D1F  
                           l1192 0F1B                             l1184 00AA                             l1176 008B  
                           l1168 0061                             l1098 0D24                             l1194 0F26  
                           l1178 0094                             l1188 0C09                             l1198 0F2B  
                           u1000 03C3                             u1010 03CD                             u1011 03CE  
                           u1100 068A                             u1020 03F4                             u1012 03D3  
                           u1013 03D4                             u1005 03BE                             u1110 06A3  
                           u1030 0415                             u1031 0416                             u1120 06C3  
                           u1040 0511                             u1032 041B                             u1105 0685  
                           u1041 0512                             u1033 041C                             u1025 03EF  
                           u1130 0723                             u1050 055A                             u1042 0517  
                           u1115 069E                             u1051 055B                             u1043 0518  
                           u1140 078D                             u1060 05A1                             u1052 0560  
                           u1141 078E                             u1125 06BE                             u1061 05A0  
                           u1053 0561                             u1150 079F                             u1142 0793  
                           u1151 07A0                             u1143 0794                             u1135 071E  
                           u1071 05E5                             u1152 07A5                             u1080 05F9  
                           u1072 05E6                             u1160 0C6D                             u1153 07A6  
                           u1081 05FA                             u1073 05EB                             u1161 0C6C  
                           u1090 0637                             u1082 05FF                             u1074 05EC  
                           u1091 0636                             u1083 0600                             u1075 05F1  
                           u1076 05F2                             u1093 0633                             u1197 0F3F  
                           _PEIE 005E          BMP280_Configure@standby 0079                             _main 0C52  
                           btemp 007E                             start 0000  __size_of_BMP280_readTemperature 0212  
         BMP280_begin@T_sampling 0023            __size_of_BMP280_Read8 003C                 ?_I2C_Master_Init 0020  
               ?_I2C_Master_Read 0070                 ?_I2C_Master_Wait 0070            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0070            __size_of_BMP280_begin 00E6                  __end_of___aldiv 00B3  
                          ?_main 0070                            _ANSEL 0188                  __end_of___lldiv 0E63  
                BMP280_Read8@ret 0079                            _PORTB 0006                            _PORTD 0008  
                          _TRISB 0086                            _TRISC 0087                            _TRISD 0088  
                          _SSPIE 0463                            _TRISE 0089                            _SSPIF 0063  
            ___lmul@multiplicand 002A                            _adc_P 00B1                            _adc_T 005F  
                          _setup 0C09                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0CE5                     _BMP280_Write 0C25                     _BMP280_calib 00B5  
                   _BMP280_begin 0F1A                  __initialization 07EB                     __end_of_main 0C7F  
         __size_of_BMP280_Read16 004C                           ??_main 007E           __size_of_BMP280_Update 00B7  
         _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0070                ?_I2C_Master_Write 0070  
               BMP280_Read16@ret 007B               ??_I2C_Master_Start 0070               ??_I2C_Master_Write 0072  
                         ?_setup 0070                           _ANSELH 0189                           _SSPADD 0093  
                         _TRISC3 043B                           _TRISC4 043C                           _SSPCON 0014  
                         _SSPBUF 0013                           ___lmul 0D69                        ??___aldiv 0078  
                      ??___lldiv 0078                           _buffer 00A0                           _t_fine 005B  
     BMP280_Configure@P_sampling 0077         __end_of_BMP280_Configure 0D69                    _BMP280_Read16 0DB1  
        __end_of__initialization 07FC       BMP280_Configure@T_sampling 0076                    _BMP280_Update 0E63  
                 __pcstackCOMMON 0070              _BMP280_readPressure 02C5                    __end_of_setup 0C25  
               BMP280_Update@ret 007A             ?_BMP280_readPressure 0070                          ??_setup 007E  
                     __pbssBANK0 005B                       __pbssBANK1 00A0                   ?_BMP280_Read16 0076  
                 ?_BMP280_Update 0070          BMP280_readPressure@var1 0057          BMP280_readPressure@var2 004F  
        BMP280_readPressure@pres 004A                       __pmaintext 0C52                          ?___lmul 0026  
                 ___lmul@product 007A                 BMP280_begin@mode 007D            ??_BMP280_readPressure 002E  
                        _SSPCON2 0091          _BMP280_readPressure$965 004B          _BMP280_readPressure$966 003E  
        _BMP280_readPressure$967 0042          _BMP280_readPressure$968 0046                          _SSPSTAT 0094  
     BMP280_Configure@_ctrl_meas 0021             BMP280_Write@reg_addr 0075                          ___aldiv 0016  
                __size_of___lmul 0048                          ___lldiv 0DFD          ?_BMP280_readTemperature 0070  
                        __ptext1 0C09                          __ptext2 0CAD                          __ptext3 00B3  
                        __ptext4 0E63                          __ptext5 02C5                          __ptext6 0D69  
                        __ptext7 0DFD                          __ptext8 0016                          __ptext9 0F1A  
               ___aldiv@dividend 0074         __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E  
       __size_of_I2C_Master_Wait 000D         __size_of_I2C_Master_Stop 0009                          _presmas 0065  
                        _presion 0063                  ??_BMP280_Read16 0078                          clrloop0 0BE6  
           end_of_initialization 07FC                  ??_BMP280_Update 0076            BMP280_Read16@reg_addr 007A  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D                 ___aldiv@quotient 0022  
               I2C_Master_Init@c 0020                 I2C_Master_Read@a 0070   __end_of_BMP280_readTemperature 02C5  
                      _PORTBbits 0006                        _TRISCbits 0087                ?_BMP280_Configure 0076  
             ??_BMP280_Configure 007A           BMP280_Configure@filter 0078                   __end_of___lmul 0DB1  
            start_initialization 07EB                ??_I2C_Master_Init 0024                ??_I2C_Master_Read 0072  
              ??_I2C_Master_Wait 0070                ??_I2C_Master_Stop 0070                         ??___lmul 0079  
           BMP280_Configure@mode 0020                        ___latbits 0002                    __pcstackBANK0 0020  
                  ?_BMP280_Read8 0070                 _I2C_Master_Start 0BED                 _I2C_Master_Write 0BFF  
                  ?_BMP280_Write 0072                    ?_BMP280_begin 0023             BMP280_readPressure@p 0053  
              BMP280_Write@_data 0072                         ?___aldiv 0070                         ?___lldiv 0070  
    __end_of_BMP280_readPressure 07EB                   __size_of_setup 001C                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                   ??_BMP280_Read8 0076                        clear_ram0 0BE5  
                 ??_BMP280_Write 0073                   ??_BMP280_begin 0027       _BMP280_readTemperature$963 004B  
     _BMP280_readTemperature$964 0046              I2C_Master_Read@temp 0074                ___lmul@multiplier 0026  
          __end_of_BMP280_Read16 0DFD            __end_of_BMP280_Update 0F1A        __size_of_BMP280_Configure 0048  
               __size_of___aldiv 009D                 __size_of___lldiv 0066                  _I2C_Master_Init 0CAD  
                _I2C_Master_Read 0C7F                  _I2C_Master_Wait 0009                  _I2C_Master_Stop 0BF6  
                       __ptext10 0CE5                         __ptext11 0DB1                         __ptext12 0C7F  
                       __ptext13 0D21                         __ptext14 0C25                         __ptext15 0BFF  
                       __ptext16 0BF6                         __ptext17 0BED                         __ptext18 0009  
     BMP280_readTemperature@var1 003E       BMP280_readTemperature@var2 0042       BMP280_readTemperature@temp 004A  
                  __size_of_main 002D                         _pressure 0066             __end_of_BMP280_Read8 0D21  
       __end_of_I2C_Master_Start 0BF6         __end_of_I2C_Master_Write 0C09             __end_of_BMP280_Write 0C52  
           __end_of_BMP280_begin 1000             BMP280_Read8@reg_addr 0078                 ___lldiv@dividend 0074  
            BMP280_begin@standby 0026         ??_BMP280_readTemperature 002E          __end_of_I2C_Master_Init 0CE5  
        __end_of_I2C_Master_Read 0CAD          __end_of_I2C_Master_Wait 0016          __end_of_I2C_Master_Stop 0BFF  
                    _temperature 006A                 ___lldiv@quotient 0079                I2C_Master_Write@d 0070  
                   ___aldiv@sign 0021                      _SSPCON2bits 0091  
