

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 11:01:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  0008                     _PORTD	set	8
   379  0006                     _PORTB	set	6
   380  0063                     _SSPIF	set	99
   381  005E                     _PEIE	set	94
   382  005F                     _GIE	set	95
   383  0091                     _SSPCON2bits	set	145
   384  0087                     _TRISCbits	set	135
   385  0094                     _SSPSTAT	set	148
   386  0093                     _SSPADD	set	147
   387  0091                     _SSPCON2	set	145
   388  0088                     _TRISD	set	136
   389  0089                     _TRISE	set	137
   390  0086                     _TRISB	set	134
   391  0087                     _TRISC	set	135
   392  0463                     _SSPIE	set	1123
   393  043C                     _TRISC4	set	1084
   394  043B                     _TRISC3	set	1083
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	cinit
   399  07EB                     start_initialization:	
   400                           ; #config settings
   401                           
   402  07EB                     __initialization:
   403                           
   404                           ; Clear objects allocated to BANK0
   405  07EB  1383               	bcf	3,7	;select IRP bank0
   406  07EC  305F               	movlw	low __pbssBANK0
   407  07ED  0084               	movwf	4
   408  07EE  3070               	movlw	low (__pbssBANK0+17)
   409  07EF  120A  158A  26D4  120A  118A  	fcall	clear_ram0
   410                           
   411                           ; Clear objects allocated to BANK1
   412  07F4  30A0               	movlw	low __pbssBANK1
   413  07F5  0084               	movwf	4
   414  07F6  30CD               	movlw	low (__pbssBANK1+45)
   415  07F7  120A  158A  26D4  120A  118A  	fcall	clear_ram0
   416  07FC                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  07FC                     __end_of__initialization:
   420  07FC  0183               	clrf	3
   421  07FD  120A  158A  2F14   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK0
   424  005F                     __pbssBANK0:
   425  005F                     _t_fine:
   426  005F                     	ds	4
   427  0063                     _adc_P:
   428  0063                     	ds	4
   429  0067                     _adc_T:
   430  0067                     	ds	4
   431  006B                     _presmas:
   432  006B                     	ds	1
   433  006C                     _pressure:
   434  006C                     	ds	4
   435                           
   436                           	psect	bssBANK1
   437  00A0                     __pbssBANK1:
   438  00A0                     _buffer:
   439  00A0                     	ds	17
   440  00B1                     _temperature:
   441  00B1                     	ds	4
   442  00B5                     _BMP280_calib:
   443  00B5                     	ds	24
   444                           
   445                           	psect	clrtext
   446  0ED4                     clear_ram0:	
   447                           ;	Called with FSR containing the base address, and
   448                           ;	W with the last address+1
   449                           
   450  0ED4  0064               	clrwdt	;clear the watchdog before getting into this loop
   451  0ED5                     clrloop0:
   452  0ED5  0180               	clrf	0	;clear RAM location pointed to by FSR
   453  0ED6  0A84               	incf	4,f	;increment pointer
   454  0ED7  0604               	xorwf	4,w	;XOR with final address
   455  0ED8  1903               	btfsc	3,2	;have we reached the end yet?
   456  0ED9  3400               	retlw	0	;all done for this memory range, return
   457  0EDA  0604               	xorwf	4,w	;XOR again to restore value
   458  0EDB  2ED5               	goto	clrloop0	;do the next byte
   459                           
   460                           	psect	cstackCOMMON
   461  0071                     __pcstackCOMMON:
   462  0071                     ?_setup:
   463  0071                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0071                     ?_I2C_Master_Wait:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0071                     ??_I2C_Master_Wait:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0071                     ?_I2C_Master_Start:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0071                     ??_I2C_Master_Start:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0071                     ?_I2C_Master_Stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0071                     ??_I2C_Master_Stop:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0071                     ?_I2C_Master_Write:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0071                     ?_BMP280_Read8:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0071                     ?_BMP280_readPressure:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0071                     ?_I2C_Master_Read:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0071                     ?___lldiv:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0071                     ?___aldiv:	
   500                           ; 4 bytes @ 0x0
   501                           
   502  0071                     I2C_Master_Write@d:	
   503                           ; 4 bytes @ 0x0
   504                           
   505  0071                     I2C_Master_Read@a:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0071                     ___lldiv@divisor:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0071                     ___aldiv@divisor:	
   512                           ; 4 bytes @ 0x0
   513                           
   514                           
   515                           ; 4 bytes @ 0x0
   516  0071                     	ds	2
   517  0073                     ??_I2C_Master_Write:
   518  0073                     ??_I2C_Master_Read:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0073                     ?_BMP280_Write:	
   522                           ; 1 bytes @ 0x2
   523                           
   524  0073                     BMP280_Write@_data:	
   525                           ; 1 bytes @ 0x2
   526                           
   527                           
   528                           ; 1 bytes @ 0x2
   529  0073                     	ds	1
   530  0074                     ??_BMP280_Write:
   531                           
   532                           ; 1 bytes @ 0x3
   533  0074                     	ds	1
   534  0075                     I2C_Master_Read@temp:
   535  0075                     ___lldiv@dividend:	
   536                           ; 2 bytes @ 0x4
   537                           
   538  0075                     ___aldiv@dividend:	
   539                           ; 4 bytes @ 0x4
   540                           
   541                           
   542                           ; 4 bytes @ 0x4
   543  0075                     	ds	1
   544  0076                     BMP280_Write@reg_addr:
   545                           
   546                           ; 1 bytes @ 0x5
   547  0076                     	ds	1
   548  0077                     ??_BMP280_Read8:
   549  0077                     ?_BMP280_Configure:	
   550                           ; 1 bytes @ 0x6
   551                           
   552  0077                     ?_BMP280_Read16:	
   553                           ; 1 bytes @ 0x6
   554                           
   555  0077                     BMP280_Configure@T_sampling:	
   556                           ; 2 bytes @ 0x6
   557                           
   558                           
   559                           ; 1 bytes @ 0x6
   560  0077                     	ds	1
   561  0078                     BMP280_Configure@P_sampling:
   562                           
   563                           ; 1 bytes @ 0x7
   564  0078                     	ds	1
   565  0079                     ??_BMP280_Read16:
   566  0079                     ??___lldiv:	
   567                           ; 1 bytes @ 0x8
   568                           
   569  0079                     ??___aldiv:	
   570                           ; 1 bytes @ 0x8
   571                           
   572  0079                     BMP280_Read8@reg_addr:	
   573                           ; 1 bytes @ 0x8
   574                           
   575  0079                     BMP280_Configure@filter:	
   576                           ; 1 bytes @ 0x8
   577                           
   578                           
   579                           ; 1 bytes @ 0x8
   580  0079                     	ds	1
   581  007A                     ??_I2C_Master_Init:
   582  007A                     ??___lmul:	
   583                           ; 1 bytes @ 0x9
   584                           
   585  007A                     BMP280_Read8@ret:	
   586                           ; 1 bytes @ 0x9
   587                           
   588  007A                     BMP280_Configure@standby:	
   589                           ; 1 bytes @ 0x9
   590                           
   591                           
   592                           ; 1 bytes @ 0x9
   593  007A                     	ds	1
   594  007B                     ??_BMP280_Configure:
   595  007B                     BMP280_Read16@reg_addr:	
   596                           ; 1 bytes @ 0xA
   597                           
   598                           
   599                           ; 1 bytes @ 0xA
   600  007B                     	ds	1
   601  007C                     BMP280_Read16@ret:
   602                           
   603                           ; 2 bytes @ 0xB
   604  007C                     	ds	2
   605  007E                     ??_setup:
   606  007E                     ??_main:	
   607                           ; 1 bytes @ 0xD
   608                           
   609                           
   610                           	psect	cstackBANK0
   611  0020                     __pcstackBANK0:	
   612                           ; 1 bytes @ 0xD
   613                           
   614  0020                     BMP280_Configure@mode:
   615  0020                     ___aldiv@counter:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0020                     ___lldiv@quotient:	
   619                           ; 1 bytes @ 0x0
   620                           
   621                           
   622                           ; 4 bytes @ 0x0
   623  0020                     	ds	1
   624  0021                     BMP280_Configure@_ctrl_meas:
   625  0021                     ___aldiv@sign:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630  0021                     	ds	1
   631  0022                     BMP280_Configure@_config:
   632  0022                     ___aldiv@quotient:	
   633                           ; 1 bytes @ 0x2
   634                           
   635                           
   636                           ; 4 bytes @ 0x2
   637  0022                     	ds	1
   638  0023                     ?_BMP280_begin:
   639  0023                     BMP280_begin@T_sampling:	
   640                           ; 2 bytes @ 0x3
   641                           
   642                           
   643                           ; 1 bytes @ 0x3
   644  0023                     	ds	1
   645  0024                     BMP280_begin@P_sampling:
   646  0024                     ___lldiv@counter:	
   647                           ; 1 bytes @ 0x4
   648                           
   649                           
   650                           ; 1 bytes @ 0x4
   651  0024                     	ds	1
   652  0025                     ?_I2C_Master_Init:
   653  0025                     BMP280_begin@filter:	
   654                           ; 1 bytes @ 0x5
   655                           
   656  0025                     I2C_Master_Init@c:	
   657                           ; 1 bytes @ 0x5
   658                           
   659                           
   660                           ; 4 bytes @ 0x5
   661  0025                     	ds	1
   662  0026                     ?___lmul:
   663  0026                     BMP280_begin@standby:	
   664                           ; 4 bytes @ 0x6
   665                           
   666  0026                     ___lmul@multiplier:	
   667                           ; 1 bytes @ 0x6
   668                           
   669                           
   670                           ; 4 bytes @ 0x6
   671  0026                     	ds	1
   672  0027                     ??_BMP280_begin:
   673                           
   674                           ; 1 bytes @ 0x7
   675  0027                     	ds	3
   676  002A                     ___lmul@multiplicand:
   677                           
   678                           ; 4 bytes @ 0xA
   679  002A                     	ds	1
   680  002B                     BMP280_begin@mode:
   681                           
   682                           ; 1 bytes @ 0xB
   683  002B                     	ds	3
   684  002E                     ___lmul@product:
   685                           
   686                           ; 4 bytes @ 0xE
   687  002E                     	ds	4
   688  0032                     ??_BMP280_readPressure:
   689                           
   690                           ; 1 bytes @ 0x12
   691  0032                     	ds	16
   692  0042                     _BMP280_readPressure$935:
   693                           
   694                           ; 4 bytes @ 0x22
   695  0042                     	ds	4
   696  0046                     _BMP280_readPressure$936:
   697                           
   698                           ; 4 bytes @ 0x26
   699  0046                     	ds	4
   700  004A                     _BMP280_readPressure$937:
   701                           
   702                           ; 4 bytes @ 0x2A
   703  004A                     	ds	4
   704  004E                     BMP280_readPressure@pres:
   705                           
   706                           ; 1 bytes @ 0x2E
   707  004E                     	ds	1
   708  004F                     _BMP280_readPressure$934:
   709                           
   710                           ; 4 bytes @ 0x2F
   711  004F                     	ds	4
   712  0053                     BMP280_readPressure@var2:
   713                           
   714                           ; 4 bytes @ 0x33
   715  0053                     	ds	4
   716  0057                     BMP280_readPressure@p:
   717                           
   718                           ; 4 bytes @ 0x37
   719  0057                     	ds	4
   720  005B                     BMP280_readPressure@var1:
   721                           
   722                           ; 4 bytes @ 0x3B
   723  005B                     	ds	4
   724                           
   725                           	psect	maintext
   726  0F14                     __pmaintext:	
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 121 in file "main_m.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : B00/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels required when called:    5
   752 ;; This function calls:
   753 ;;		_BMP280_begin
   754 ;;		_BMP280_readPressure
   755 ;;		_setup
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _main
   763  0F14                     _main:
   764  0F14                     l1210:	
   765                           ;incstack = 0
   766                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;main_m.c: 122:     setup();
   770  0F14  120A  158A  26F8  120A  158A  	fcall	_setup
   771                           
   772                           ;main_m.c: 123:     BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, STAN
      +                          DBY_0_5);
   773  0F19  1283               	bcf	3,5	;RP0=0, select bank0
   774  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
   775  0F1B  01A3               	clrf	BMP280_begin@T_sampling
   776  0F1C  0AA3               	incf	BMP280_begin@T_sampling,f
   777  0F1D  01A4               	clrf	BMP280_begin@P_sampling
   778  0F1E  0AA4               	incf	BMP280_begin@P_sampling,f
   779  0F1F  01A5               	clrf	BMP280_begin@filter
   780  0F20  01A6               	clrf	BMP280_begin@standby
   781  0F21  3003               	movlw	3
   782  0F22  120A  118A  21F5  120A  158A  	fcall	_BMP280_begin
   783  0F27                     l1212:
   784                           
   785                           ;main_m.c: 126:         BMP280_readPressure(&pressure);
   786  0F27  306C               	movlw	(low (_pressure| 0))& (0+255)
   787  0F28  120A  118A  22D3  120A  158A  	fcall	_BMP280_readPressure
   788  0F2D  2F27               	goto	l1212
   789  0F2E  120A  118A  2801   	ljmp	start
   790  0F31                     __end_of_main:
   791                           
   792                           	psect	text1
   793  0EF8                     __ptext1:	
   794 ;; *************** function _setup *****************
   795 ;; Defined at:
   796 ;;		line 142 in file "main_m.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    2
   817 ;; This function calls:
   818 ;;		_I2C_Master_Init
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _setup
   826  0EF8                     _setup:
   827  0EF8                     l1142:	
   828                           ;incstack = 0
   829                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   830                           
   831                           
   832                           ;main_m.c: 143:     ANSEL = 0;
   833  0EF8  1683               	bsf	3,5	;RP0=1, select bank3
   834  0EF9  1703               	bsf	3,6	;RP1=1, select bank3
   835  0EFA  0188               	clrf	8	;volatile
   836                           
   837                           ;main_m.c: 144:     ANSELH = 0;
   838  0EFB  0189               	clrf	9	;volatile
   839                           
   840                           ;main_m.c: 145:     TRISC = 0;
   841  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
   842  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
   843  0EFE  0187               	clrf	7	;volatile
   844                           
   845                           ;main_m.c: 146:     TRISB = 0;
   846  0EFF  0186               	clrf	6	;volatile
   847                           
   848                           ;main_m.c: 147:     TRISE = 0;
   849  0F00  0189               	clrf	9	;volatile
   850                           
   851                           ;main_m.c: 148:     TRISD = 0;
   852  0F01  0188               	clrf	8	;volatile
   853                           
   854                           ;main_m.c: 149:     PORTB = 0;
   855  0F02  1283               	bcf	3,5	;RP0=0, select bank0
   856  0F03  1303               	bcf	3,6	;RP1=0, select bank0
   857  0F04  0186               	clrf	6	;volatile
   858                           
   859                           ;main_m.c: 150:     PORTD = 0;
   860  0F05  0188               	clrf	8	;volatile
   861  0F06                     l1144:
   862                           
   863                           ;main_m.c: 151:     I2C_Master_Init(100000);
   864  0F06  3000               	movlw	0
   865  0F07  00A8               	movwf	I2C_Master_Init@c+3
   866  0F08  3001               	movlw	1
   867  0F09  00A7               	movwf	I2C_Master_Init@c+2
   868  0F0A  3086               	movlw	134
   869  0F0B  00A6               	movwf	I2C_Master_Init@c+1
   870  0F0C  30A0               	movlw	160
   871  0F0D  00A5               	movwf	I2C_Master_Init@c
   872  0F0E  120A  158A  278C  120A  158A  	fcall	_I2C_Master_Init
   873  0F13                     l45:
   874  0F13  0008               	return
   875  0F14                     __end_of_setup:
   876                           
   877                           	psect	text2
   878  0F8C                     __ptext2:	
   879 ;; *************** function _I2C_Master_Init *****************
   880 ;; Defined at:
   881 ;;		line 16 in file "I2C.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  c               4    5[BANK0 ] const unsigned long 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       4       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          4       0       0       0       0
   898 ;;      Totals:         4       4       0       0       0
   899 ;;Total ram usage:        8 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    1
   902 ;; This function calls:
   903 ;;		___lldiv
   904 ;; This function is called by:
   905 ;;		_setup
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _I2C_Master_Init
   911  0F8C                     _I2C_Master_Init:
   912  0F8C                     l1058:	
   913                           ;incstack = 0
   914                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   915                           
   916                           
   917                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   918  0F8C  3028               	movlw	40
   919  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
   920  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
   921  0F8F  0094               	movwf	20	;volatile
   922  0F90                     l1060:
   923                           
   924                           ;I2C.c: 19:     SSPCON2 = 0;
   925  0F90  1683               	bsf	3,5	;RP0=1, select bank1
   926  0F91  1303               	bcf	3,6	;RP1=0, select bank1
   927  0F92  0191               	clrf	17	;volatile
   928  0F93                     l1062:
   929                           
   930                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   931  0F93  1283               	bcf	3,5	;RP0=0, select bank0
   932  0F94  1303               	bcf	3,6	;RP1=0, select bank0
   933  0F95  0825               	movf	I2C_Master_Init@c,w
   934  0F96  00FA               	movwf	??_I2C_Master_Init
   935  0F97  0826               	movf	I2C_Master_Init@c+1,w
   936  0F98  00FB               	movwf	??_I2C_Master_Init+1
   937  0F99  0827               	movf	I2C_Master_Init@c+2,w
   938  0F9A  00FC               	movwf	??_I2C_Master_Init+2
   939  0F9B  0828               	movf	I2C_Master_Init@c+3,w
   940  0F9C  00FD               	movwf	??_I2C_Master_Init+3
   941  0F9D  3002               	movlw	2
   942  0F9E                     u695:
   943  0F9E  1003               	clrc
   944  0F9F  0DFA               	rlf	??_I2C_Master_Init,f
   945  0FA0  0DFB               	rlf	??_I2C_Master_Init+1,f
   946  0FA1  0DFC               	rlf	??_I2C_Master_Init+2,f
   947  0FA2  0DFD               	rlf	??_I2C_Master_Init+3,f
   948  0FA3                     u690:
   949  0FA3  3EFF               	addlw	-1
   950  0FA4  1D03               	skipz
   951  0FA5  2F9E               	goto	u695
   952  0FA6  087D               	movf	??_I2C_Master_Init+3,w
   953  0FA7  00F4               	movwf	___lldiv@divisor+3
   954  0FA8  087C               	movf	??_I2C_Master_Init+2,w
   955  0FA9  00F3               	movwf	___lldiv@divisor+2
   956  0FAA  087B               	movf	??_I2C_Master_Init+1,w
   957  0FAB  00F2               	movwf	___lldiv@divisor+1
   958  0FAC  087A               	movf	??_I2C_Master_Init,w
   959  0FAD  00F1               	movwf	___lldiv@divisor
   960  0FAE  3000               	movlw	0
   961  0FAF  00F8               	movwf	___lldiv@dividend+3
   962  0FB0  307A               	movlw	122
   963  0FB1  00F7               	movwf	___lldiv@dividend+2
   964  0FB2  3012               	movlw	18
   965  0FB3  00F6               	movwf	___lldiv@dividend+1
   966  0FB4  3000               	movlw	0
   967  0FB5  00F5               	movwf	___lldiv@dividend
   968  0FB6  120A  118A  20F0  120A  158A  	fcall	___lldiv
   969  0FBB  0871               	movf	?___lldiv,w
   970  0FBC  3EFF               	addlw	255
   971  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
   972  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
   973  0FBF  0093               	movwf	19	;volatile
   974  0FC0                     l1064:
   975                           
   976                           ;I2C.c: 21:     SSPSTAT = 0;
   977  0FC0  0194               	clrf	20	;volatile
   978  0FC1                     l1066:
   979                           
   980                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
   981  0FC1  1587               	bsf	7,3	;volatile
   982  0FC2                     l1068:
   983                           
   984                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
   985  0FC2  1607               	bsf	7,4	;volatile
   986  0FC3                     l74:
   987  0FC3  0008               	return
   988  0FC4                     __end_of_I2C_Master_Init:
   989                           
   990                           	psect	text3
   991  02D3                     __ptext3:	
   992 ;; *************** function _BMP280_readPressure *****************
   993 ;; Defined at:
   994 ;;		line 265 in file "BMP280.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  pres            1    wreg     PTR unsigned long 
   997 ;;		 -> pressure(4), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  pres            1   46[BANK0 ] PTR unsigned long 
  1000 ;;		 -> pressure(4), 
  1001 ;;  var1            4   59[BANK0 ] long 
  1002 ;;  p               4   55[BANK0 ] unsigned long 
  1003 ;;  var2            4   51[BANK0 ] long 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  2    6[None  ] int 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0      29       0       0       0
  1015 ;;      Temps:          0      16       0       0       0
  1016 ;;      Totals:         0      45       0       0       0
  1017 ;;Total ram usage:       45 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    1
  1020 ;; This function calls:
  1021 ;;		___aldiv
  1022 ;;		___lldiv
  1023 ;;		___lmul
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _BMP280_readPressure
  1031  02D3                     _BMP280_readPressure:
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1035                           ;BMP280_readPressure@pres stored from wreg
  1036  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1037  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1038  02D5  00CE               	movwf	BMP280_readPressure@pres
  1039  02D6                     l1162:
  1040                           
  1041                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1042  02D6  3000               	movlw	0
  1043  02D7  00B2               	movwf	??_BMP280_readPressure
  1044  02D8  3006               	movlw	6
  1045  02D9  00B3               	movwf	??_BMP280_readPressure+1
  1046  02DA  30FF               	movlw	255
  1047  02DB  00B4               	movwf	??_BMP280_readPressure+2
  1048  02DC  30FF               	movlw	255
  1049  02DD  00B5               	movwf	??_BMP280_readPressure+3
  1050  02DE  3000               	movlw	0
  1051  02DF  00F4               	movwf	___aldiv@divisor+3
  1052  02E0  3000               	movlw	0
  1053  02E1  00F3               	movwf	___aldiv@divisor+2
  1054  02E2  3000               	movlw	0
  1055  02E3  00F2               	movwf	___aldiv@divisor+1
  1056  02E4  3002               	movlw	2
  1057  02E5  00F1               	movwf	___aldiv@divisor
  1058  02E6  0862               	movf	_t_fine+3,w
  1059  02E7  00F8               	movwf	___aldiv@dividend+3
  1060  02E8  0861               	movf	_t_fine+2,w
  1061  02E9  00F7               	movwf	___aldiv@dividend+2
  1062  02EA  0860               	movf	_t_fine+1,w
  1063  02EB  00F6               	movwf	___aldiv@dividend+1
  1064  02EC  085F               	movf	_t_fine,w
  1065  02ED  00F5               	movwf	___aldiv@dividend
  1066  02EE  120A  118A  2158  120A  118A  	fcall	___aldiv
  1067  02F3  0871               	movf	?___aldiv,w
  1068  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1069  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1070  02F6  07B2               	addwf	??_BMP280_readPressure,f
  1071  02F7  0872               	movf	?___aldiv+1,w
  1072  02F8  1803               	skipnc
  1073  02F9  0F72               	incfsz	?___aldiv+1,w
  1074  02FA  2AFC               	goto	u910
  1075  02FB  2AFD               	goto	u911
  1076  02FC                     u910:
  1077  02FC  07B3               	addwf	??_BMP280_readPressure+1,f
  1078  02FD                     u911:
  1079  02FD  0873               	movf	?___aldiv+2,w
  1080  02FE  1803               	skipnc
  1081  02FF  0F73               	incfsz	?___aldiv+2,w
  1082  0300  2B02               	goto	u912
  1083  0301  2B03               	goto	u913
  1084  0302                     u912:
  1085  0302  07B4               	addwf	??_BMP280_readPressure+2,f
  1086  0303                     u913:
  1087  0303  0874               	movf	?___aldiv+3,w
  1088  0304  1803               	skipnc
  1089  0305  0A74               	incf	?___aldiv+3,w
  1090  0306  07B5               	addwf	??_BMP280_readPressure+3,f
  1091  0307  0835               	movf	??_BMP280_readPressure+3,w
  1092  0308  00DE               	movwf	BMP280_readPressure@var1+3
  1093  0309  0834               	movf	??_BMP280_readPressure+2,w
  1094  030A  00DD               	movwf	BMP280_readPressure@var1+2
  1095  030B  0833               	movf	??_BMP280_readPressure+1,w
  1096  030C  00DC               	movwf	BMP280_readPressure@var1+1
  1097  030D  0832               	movf	??_BMP280_readPressure,w
  1098  030E  00DB               	movwf	BMP280_readPressure@var1
  1099                           
  1100                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1101  030F  3000               	movlw	0
  1102  0310  00F4               	movwf	___aldiv@divisor+3
  1103  0311  3000               	movlw	0
  1104  0312  00F3               	movwf	___aldiv@divisor+2
  1105  0313  3000               	movlw	0
  1106  0314  00F2               	movwf	___aldiv@divisor+1
  1107  0315  3004               	movlw	4
  1108  0316  00F1               	movwf	___aldiv@divisor
  1109  0317  085E               	movf	BMP280_readPressure@var1+3,w
  1110  0318  00F8               	movwf	___aldiv@dividend+3
  1111  0319  085D               	movf	BMP280_readPressure@var1+2,w
  1112  031A  00F7               	movwf	___aldiv@dividend+2
  1113  031B  085C               	movf	BMP280_readPressure@var1+1,w
  1114  031C  00F6               	movwf	___aldiv@dividend+1
  1115  031D  085B               	movf	BMP280_readPressure@var1,w
  1116  031E  00F5               	movwf	___aldiv@dividend
  1117  031F  120A  118A  2158  120A  118A  	fcall	___aldiv
  1118  0324  0874               	movf	?___aldiv+3,w
  1119  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0327  00A9               	movwf	___lmul@multiplier+3
  1122  0328  0873               	movf	?___aldiv+2,w
  1123  0329  00A8               	movwf	___lmul@multiplier+2
  1124  032A  0872               	movf	?___aldiv+1,w
  1125  032B  00A7               	movwf	___lmul@multiplier+1
  1126  032C  0871               	movf	?___aldiv,w
  1127  032D  00A6               	movwf	___lmul@multiplier
  1128  032E  3000               	movlw	0
  1129  032F  00F4               	movwf	___aldiv@divisor+3
  1130  0330  3000               	movlw	0
  1131  0331  00F3               	movwf	___aldiv@divisor+2
  1132  0332  3000               	movlw	0
  1133  0333  00F2               	movwf	___aldiv@divisor+1
  1134  0334  3004               	movlw	4
  1135  0335  00F1               	movwf	___aldiv@divisor
  1136  0336  085E               	movf	BMP280_readPressure@var1+3,w
  1137  0337  00F8               	movwf	___aldiv@dividend+3
  1138  0338  085D               	movf	BMP280_readPressure@var1+2,w
  1139  0339  00F7               	movwf	___aldiv@dividend+2
  1140  033A  085C               	movf	BMP280_readPressure@var1+1,w
  1141  033B  00F6               	movwf	___aldiv@dividend+1
  1142  033C  085B               	movf	BMP280_readPressure@var1,w
  1143  033D  00F5               	movwf	___aldiv@dividend
  1144  033E  120A  118A  2158  120A  118A  	fcall	___aldiv
  1145  0343  0874               	movf	?___aldiv+3,w
  1146  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0346  00AD               	movwf	___lmul@multiplicand+3
  1149  0347  0873               	movf	?___aldiv+2,w
  1150  0348  00AC               	movwf	___lmul@multiplicand+2
  1151  0349  0872               	movf	?___aldiv+1,w
  1152  034A  00AB               	movwf	___lmul@multiplicand+1
  1153  034B  0871               	movf	?___aldiv,w
  1154  034C  00AA               	movwf	___lmul@multiplicand
  1155  034D  120A  118A  205C  120A  118A  	fcall	___lmul
  1156  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0354  0829               	movf	?___lmul+3,w
  1159  0355  00D2               	movwf	_BMP280_readPressure$934+3
  1160  0356  0828               	movf	?___lmul+2,w
  1161  0357  00D1               	movwf	_BMP280_readPressure$934+2
  1162  0358  0827               	movf	?___lmul+1,w
  1163  0359  00D0               	movwf	_BMP280_readPressure$934+1
  1164  035A  0826               	movf	?___lmul,w
  1165  035B  00CF               	movwf	_BMP280_readPressure$934
  1166                           
  1167                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1168  035C  3000               	movlw	0
  1169  035D  00F4               	movwf	___aldiv@divisor+3
  1170  035E  3000               	movlw	0
  1171  035F  00F3               	movwf	___aldiv@divisor+2
  1172  0360  3008               	movlw	8
  1173  0361  00F2               	movwf	___aldiv@divisor+1
  1174  0362  3000               	movlw	0
  1175  0363  00F1               	movwf	___aldiv@divisor
  1176  0364  0852               	movf	_BMP280_readPressure$934+3,w
  1177  0365  00F8               	movwf	___aldiv@dividend+3
  1178  0366  0851               	movf	_BMP280_readPressure$934+2,w
  1179  0367  00F7               	movwf	___aldiv@dividend+2
  1180  0368  0850               	movf	_BMP280_readPressure$934+1,w
  1181  0369  00F6               	movwf	___aldiv@dividend+1
  1182  036A  084F               	movf	_BMP280_readPressure$934,w
  1183  036B  00F5               	movwf	___aldiv@dividend
  1184  036C  120A  118A  2158  120A  118A  	fcall	___aldiv
  1185  0371  0874               	movf	?___aldiv+3,w
  1186  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0374  00A9               	movwf	___lmul@multiplier+3
  1189  0375  0873               	movf	?___aldiv+2,w
  1190  0376  00A8               	movwf	___lmul@multiplier+2
  1191  0377  0872               	movf	?___aldiv+1,w
  1192  0378  00A7               	movwf	___lmul@multiplier+1
  1193  0379  0871               	movf	?___aldiv,w
  1194  037A  00A6               	movwf	___lmul@multiplier
  1195  037B  1683               	bsf	3,5	;RP0=1, select bank1
  1196  037C  1303               	bcf	3,6	;RP1=0, select bank1
  1197  037D  0845               	movf	(_BMP280_calib^(0+128)+16),w
  1198  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1199  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0380  00AA               	movwf	___lmul@multiplicand
  1201  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0382  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0383  0846               	movf	((_BMP280_calib+1)^(0+128)+16),w
  1204  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0386  00AB               	movwf	___lmul@multiplicand+1
  1207  0387  3000               	movlw	0
  1208  0388  1BAB               	btfsc	___lmul@multiplicand+1,7
  1209  0389  30FF               	movlw	255
  1210  038A  00AC               	movwf	___lmul@multiplicand+2
  1211  038B  00AD               	movwf	___lmul@multiplicand+3
  1212  038C  120A  118A  205C  120A  118A  	fcall	___lmul
  1213  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0393  0829               	movf	?___lmul+3,w
  1216  0394  00D6               	movwf	BMP280_readPressure@var2+3
  1217  0395  0828               	movf	?___lmul+2,w
  1218  0396  00D5               	movwf	BMP280_readPressure@var2+2
  1219  0397  0827               	movf	?___lmul+1,w
  1220  0398  00D4               	movwf	BMP280_readPressure@var2+1
  1221  0399  0826               	movf	?___lmul,w
  1222  039A  00D3               	movwf	BMP280_readPressure@var2
  1223                           
  1224                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  1225  039B  0853               	movf	BMP280_readPressure@var2,w
  1226  039C  00B2               	movwf	??_BMP280_readPressure
  1227  039D  0854               	movf	BMP280_readPressure@var2+1,w
  1228  039E  00B3               	movwf	??_BMP280_readPressure+1
  1229  039F  0855               	movf	BMP280_readPressure@var2+2,w
  1230  03A0  00B4               	movwf	??_BMP280_readPressure+2
  1231  03A1  0856               	movf	BMP280_readPressure@var2+3,w
  1232  03A2  00B5               	movwf	??_BMP280_readPressure+3
  1233  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  1234  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  1235  03A5  0843               	movf	(_BMP280_calib^(0+128)+14),w
  1236  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1237  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1238  03A8  00A6               	movwf	___lmul@multiplier
  1239  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  1240  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  1241  03AB  0844               	movf	((_BMP280_calib+1)^(0+128)+14),w
  1242  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1243  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1244  03AE  00A7               	movwf	___lmul@multiplier+1
  1245  03AF  3000               	movlw	0
  1246  03B0  1BA7               	btfsc	___lmul@multiplier+1,7
  1247  03B1  30FF               	movlw	255
  1248  03B2  00A8               	movwf	___lmul@multiplier+2
  1249  03B3  00A9               	movwf	___lmul@multiplier+3
  1250  03B4  085E               	movf	BMP280_readPressure@var1+3,w
  1251  03B5  00AD               	movwf	___lmul@multiplicand+3
  1252  03B6  085D               	movf	BMP280_readPressure@var1+2,w
  1253  03B7  00AC               	movwf	___lmul@multiplicand+2
  1254  03B8  085C               	movf	BMP280_readPressure@var1+1,w
  1255  03B9  00AB               	movwf	___lmul@multiplicand+1
  1256  03BA  085B               	movf	BMP280_readPressure@var1,w
  1257  03BB  00AA               	movwf	___lmul@multiplicand
  1258  03BC  120A  118A  205C  120A  118A  	fcall	___lmul
  1259  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1260  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1261  03C3  0826               	movf	?___lmul,w
  1262  03C4  00B6               	movwf	??_BMP280_readPressure+4
  1263  03C5  0827               	movf	?___lmul+1,w
  1264  03C6  00B7               	movwf	??_BMP280_readPressure+5
  1265  03C7  0828               	movf	?___lmul+2,w
  1266  03C8  00B8               	movwf	??_BMP280_readPressure+6
  1267  03C9  0829               	movf	?___lmul+3,w
  1268  03CA  00B9               	movwf	??_BMP280_readPressure+7
  1269  03CB  3001               	movlw	1
  1270  03CC                     u925:
  1271  03CC  1003               	clrc
  1272  03CD  0DB6               	rlf	??_BMP280_readPressure+4,f
  1273  03CE  0DB7               	rlf	??_BMP280_readPressure+5,f
  1274  03CF  0DB8               	rlf	??_BMP280_readPressure+6,f
  1275  03D0  0DB9               	rlf	??_BMP280_readPressure+7,f
  1276  03D1                     u920:
  1277  03D1  3EFF               	addlw	-1
  1278  03D2  1D03               	skipz
  1279  03D3  2BCC               	goto	u925
  1280  03D4  0836               	movf	??_BMP280_readPressure+4,w
  1281  03D5  07B2               	addwf	??_BMP280_readPressure,f
  1282  03D6  0837               	movf	??_BMP280_readPressure+5,w
  1283  03D7  1803               	skipnc
  1284  03D8  0F37               	incfsz	??_BMP280_readPressure+5,w
  1285  03D9  2BDB               	goto	u930
  1286  03DA  2BDC               	goto	u931
  1287  03DB                     u930:
  1288  03DB  07B3               	addwf	??_BMP280_readPressure+1,f
  1289  03DC                     u931:
  1290  03DC  0838               	movf	??_BMP280_readPressure+6,w
  1291  03DD  1803               	skipnc
  1292  03DE  0F38               	incfsz	??_BMP280_readPressure+6,w
  1293  03DF  2BE1               	goto	u932
  1294  03E0  2BE2               	goto	u933
  1295  03E1                     u932:
  1296  03E1  07B4               	addwf	??_BMP280_readPressure+2,f
  1297  03E2                     u933:
  1298  03E2  0839               	movf	??_BMP280_readPressure+7,w
  1299  03E3  1803               	skipnc
  1300  03E4  0A39               	incf	??_BMP280_readPressure+7,w
  1301  03E5  07B5               	addwf	??_BMP280_readPressure+3,f
  1302  03E6  0835               	movf	??_BMP280_readPressure+3,w
  1303  03E7  00D6               	movwf	BMP280_readPressure@var2+3
  1304  03E8  0834               	movf	??_BMP280_readPressure+2,w
  1305  03E9  00D5               	movwf	BMP280_readPressure@var2+2
  1306  03EA  0833               	movf	??_BMP280_readPressure+1,w
  1307  03EB  00D4               	movwf	BMP280_readPressure@var2+1
  1308  03EC  0832               	movf	??_BMP280_readPressure,w
  1309  03ED  00D3               	movwf	BMP280_readPressure@var2
  1310                           
  1311                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  1312  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1313  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1314  03F0  0841               	movf	(_BMP280_calib^(0+128)+12),w
  1315  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1316  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1317  03F3  00B2               	movwf	??_BMP280_readPressure
  1318  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1319  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1320  03F6  0842               	movf	((_BMP280_calib+1)^(0+128)+12),w
  1321  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1322  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1323  03F9  00B3               	movwf	??_BMP280_readPressure+1
  1324  03FA  01B4               	clrf	??_BMP280_readPressure+2
  1325  03FB  01B5               	clrf	??_BMP280_readPressure+3
  1326  03FC  3010               	movlw	16
  1327  03FD                     u945:
  1328  03FD  1003               	clrc
  1329  03FE  0DB2               	rlf	??_BMP280_readPressure,f
  1330  03FF  0DB3               	rlf	??_BMP280_readPressure+1,f
  1331  0400  0DB4               	rlf	??_BMP280_readPressure+2,f
  1332  0401  0DB5               	rlf	??_BMP280_readPressure+3,f
  1333  0402                     u940:
  1334  0402  3EFF               	addlw	-1
  1335  0403  1D03               	skipz
  1336  0404  2BFD               	goto	u945
  1337  0405  3000               	movlw	0
  1338  0406  00F4               	movwf	___aldiv@divisor+3
  1339  0407  3000               	movlw	0
  1340  0408  00F3               	movwf	___aldiv@divisor+2
  1341  0409  3000               	movlw	0
  1342  040A  00F2               	movwf	___aldiv@divisor+1
  1343  040B  3004               	movlw	4
  1344  040C  00F1               	movwf	___aldiv@divisor
  1345  040D  0856               	movf	BMP280_readPressure@var2+3,w
  1346  040E  00F8               	movwf	___aldiv@dividend+3
  1347  040F  0855               	movf	BMP280_readPressure@var2+2,w
  1348  0410  00F7               	movwf	___aldiv@dividend+2
  1349  0411  0854               	movf	BMP280_readPressure@var2+1,w
  1350  0412  00F6               	movwf	___aldiv@dividend+1
  1351  0413  0853               	movf	BMP280_readPressure@var2,w
  1352  0414  00F5               	movwf	___aldiv@dividend
  1353  0415  120A  118A  2158  120A  118A  	fcall	___aldiv
  1354  041A  0871               	movf	?___aldiv,w
  1355  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1356  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1357  041D  07B2               	addwf	??_BMP280_readPressure,f
  1358  041E  0872               	movf	?___aldiv+1,w
  1359  041F  1803               	skipnc
  1360  0420  0F72               	incfsz	?___aldiv+1,w
  1361  0421  2C23               	goto	u950
  1362  0422  2C24               	goto	u951
  1363  0423                     u950:
  1364  0423  07B3               	addwf	??_BMP280_readPressure+1,f
  1365  0424                     u951:
  1366  0424  0873               	movf	?___aldiv+2,w
  1367  0425  1803               	skipnc
  1368  0426  0F73               	incfsz	?___aldiv+2,w
  1369  0427  2C29               	goto	u952
  1370  0428  2C2A               	goto	u953
  1371  0429                     u952:
  1372  0429  07B4               	addwf	??_BMP280_readPressure+2,f
  1373  042A                     u953:
  1374  042A  0874               	movf	?___aldiv+3,w
  1375  042B  1803               	skipnc
  1376  042C  0A74               	incf	?___aldiv+3,w
  1377  042D  07B5               	addwf	??_BMP280_readPressure+3,f
  1378  042E  0835               	movf	??_BMP280_readPressure+3,w
  1379  042F  00D6               	movwf	BMP280_readPressure@var2+3
  1380  0430  0834               	movf	??_BMP280_readPressure+2,w
  1381  0431  00D5               	movwf	BMP280_readPressure@var2+2
  1382  0432  0833               	movf	??_BMP280_readPressure+1,w
  1383  0433  00D4               	movwf	BMP280_readPressure@var2+1
  1384  0434  0832               	movf	??_BMP280_readPressure,w
  1385  0435  00D3               	movwf	BMP280_readPressure@var2
  1386                           
  1387                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1388  0436  3000               	movlw	0
  1389  0437  00F4               	movwf	___aldiv@divisor+3
  1390  0438  3000               	movlw	0
  1391  0439  00F3               	movwf	___aldiv@divisor+2
  1392  043A  3000               	movlw	0
  1393  043B  00F2               	movwf	___aldiv@divisor+1
  1394  043C  3004               	movlw	4
  1395  043D  00F1               	movwf	___aldiv@divisor
  1396  043E  085E               	movf	BMP280_readPressure@var1+3,w
  1397  043F  00F8               	movwf	___aldiv@dividend+3
  1398  0440  085D               	movf	BMP280_readPressure@var1+2,w
  1399  0441  00F7               	movwf	___aldiv@dividend+2
  1400  0442  085C               	movf	BMP280_readPressure@var1+1,w
  1401  0443  00F6               	movwf	___aldiv@dividend+1
  1402  0444  085B               	movf	BMP280_readPressure@var1,w
  1403  0445  00F5               	movwf	___aldiv@dividend
  1404  0446  120A  118A  2158  120A  118A  	fcall	___aldiv
  1405  044B  0874               	movf	?___aldiv+3,w
  1406  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1407  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1408  044E  00A9               	movwf	___lmul@multiplier+3
  1409  044F  0873               	movf	?___aldiv+2,w
  1410  0450  00A8               	movwf	___lmul@multiplier+2
  1411  0451  0872               	movf	?___aldiv+1,w
  1412  0452  00A7               	movwf	___lmul@multiplier+1
  1413  0453  0871               	movf	?___aldiv,w
  1414  0454  00A6               	movwf	___lmul@multiplier
  1415  0455  3000               	movlw	0
  1416  0456  00F4               	movwf	___aldiv@divisor+3
  1417  0457  3000               	movlw	0
  1418  0458  00F3               	movwf	___aldiv@divisor+2
  1419  0459  3000               	movlw	0
  1420  045A  00F2               	movwf	___aldiv@divisor+1
  1421  045B  3004               	movlw	4
  1422  045C  00F1               	movwf	___aldiv@divisor
  1423  045D  085E               	movf	BMP280_readPressure@var1+3,w
  1424  045E  00F8               	movwf	___aldiv@dividend+3
  1425  045F  085D               	movf	BMP280_readPressure@var1+2,w
  1426  0460  00F7               	movwf	___aldiv@dividend+2
  1427  0461  085C               	movf	BMP280_readPressure@var1+1,w
  1428  0462  00F6               	movwf	___aldiv@dividend+1
  1429  0463  085B               	movf	BMP280_readPressure@var1,w
  1430  0464  00F5               	movwf	___aldiv@dividend
  1431  0465  120A  118A  2158  120A  118A  	fcall	___aldiv
  1432  046A  0874               	movf	?___aldiv+3,w
  1433  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1434  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1435  046D  00AD               	movwf	___lmul@multiplicand+3
  1436  046E  0873               	movf	?___aldiv+2,w
  1437  046F  00AC               	movwf	___lmul@multiplicand+2
  1438  0470  0872               	movf	?___aldiv+1,w
  1439  0471  00AB               	movwf	___lmul@multiplicand+1
  1440  0472  0871               	movf	?___aldiv,w
  1441  0473  00AA               	movwf	___lmul@multiplicand
  1442  0474  120A  118A  205C  120A  118A  	fcall	___lmul
  1443  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1444  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1445  047B  0829               	movf	?___lmul+3,w
  1446  047C  00D2               	movwf	_BMP280_readPressure$934+3
  1447  047D  0828               	movf	?___lmul+2,w
  1448  047E  00D1               	movwf	_BMP280_readPressure$934+2
  1449  047F  0827               	movf	?___lmul+1,w
  1450  0480  00D0               	movwf	_BMP280_readPressure$934+1
  1451  0481  0826               	movf	?___lmul,w
  1452  0482  00CF               	movwf	_BMP280_readPressure$934
  1453                           
  1454                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1455  0483  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0484  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0485  083F               	movf	(_BMP280_calib^(0+128)+10),w
  1458  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0488  00A6               	movwf	___lmul@multiplier
  1461  0489  1683               	bsf	3,5	;RP0=1, select bank1
  1462  048A  1303               	bcf	3,6	;RP1=0, select bank1
  1463  048B  0840               	movf	((_BMP280_calib+1)^(0+128)+10),w
  1464  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1465  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1466  048E  00A7               	movwf	___lmul@multiplier+1
  1467  048F  3000               	movlw	0
  1468  0490  1BA7               	btfsc	___lmul@multiplier+1,7
  1469  0491  30FF               	movlw	255
  1470  0492  00A8               	movwf	___lmul@multiplier+2
  1471  0493  00A9               	movwf	___lmul@multiplier+3
  1472  0494  3000               	movlw	0
  1473  0495  00F4               	movwf	___aldiv@divisor+3
  1474  0496  3000               	movlw	0
  1475  0497  00F3               	movwf	___aldiv@divisor+2
  1476  0498  3020               	movlw	32
  1477  0499  00F2               	movwf	___aldiv@divisor+1
  1478  049A  3000               	movlw	0
  1479  049B  00F1               	movwf	___aldiv@divisor
  1480  049C  0852               	movf	_BMP280_readPressure$934+3,w
  1481  049D  00F8               	movwf	___aldiv@dividend+3
  1482  049E  0851               	movf	_BMP280_readPressure$934+2,w
  1483  049F  00F7               	movwf	___aldiv@dividend+2
  1484  04A0  0850               	movf	_BMP280_readPressure$934+1,w
  1485  04A1  00F6               	movwf	___aldiv@dividend+1
  1486  04A2  084F               	movf	_BMP280_readPressure$934,w
  1487  04A3  00F5               	movwf	___aldiv@dividend
  1488  04A4  120A  118A  2158  120A  118A  	fcall	___aldiv
  1489  04A9  0874               	movf	?___aldiv+3,w
  1490  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1491  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1492  04AC  00AD               	movwf	___lmul@multiplicand+3
  1493  04AD  0873               	movf	?___aldiv+2,w
  1494  04AE  00AC               	movwf	___lmul@multiplicand+2
  1495  04AF  0872               	movf	?___aldiv+1,w
  1496  04B0  00AB               	movwf	___lmul@multiplicand+1
  1497  04B1  0871               	movf	?___aldiv,w
  1498  04B2  00AA               	movwf	___lmul@multiplicand
  1499  04B3  120A  118A  205C  120A  118A  	fcall	___lmul
  1500  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1501  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1502  04BA  0829               	movf	?___lmul+3,w
  1503  04BB  00C5               	movwf	_BMP280_readPressure$935+3
  1504  04BC  0828               	movf	?___lmul+2,w
  1505  04BD  00C4               	movwf	_BMP280_readPressure$935+2
  1506  04BE  0827               	movf	?___lmul+1,w
  1507  04BF  00C3               	movwf	_BMP280_readPressure$935+1
  1508  04C0  0826               	movf	?___lmul,w
  1509  04C1  00C2               	movwf	_BMP280_readPressure$935
  1510                           
  1511                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1512  04C2  3000               	movlw	0
  1513  04C3  00F4               	movwf	___aldiv@divisor+3
  1514  04C4  3000               	movlw	0
  1515  04C5  00F3               	movwf	___aldiv@divisor+2
  1516  04C6  3000               	movlw	0
  1517  04C7  00F2               	movwf	___aldiv@divisor+1
  1518  04C8  3002               	movlw	2
  1519  04C9  00F1               	movwf	___aldiv@divisor
  1520  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1521  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1522  04CC  083D               	movf	(_BMP280_calib^(0+128)+8),w
  1523  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1524  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1525  04CF  00A6               	movwf	___lmul@multiplier
  1526  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1527  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1528  04D2  083E               	movf	((_BMP280_calib+1)^(0+128)+8),w
  1529  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1530  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1531  04D5  00A7               	movwf	___lmul@multiplier+1
  1532  04D6  3000               	movlw	0
  1533  04D7  1BA7               	btfsc	___lmul@multiplier+1,7
  1534  04D8  30FF               	movlw	255
  1535  04D9  00A8               	movwf	___lmul@multiplier+2
  1536  04DA  00A9               	movwf	___lmul@multiplier+3
  1537  04DB  085E               	movf	BMP280_readPressure@var1+3,w
  1538  04DC  00AD               	movwf	___lmul@multiplicand+3
  1539  04DD  085D               	movf	BMP280_readPressure@var1+2,w
  1540  04DE  00AC               	movwf	___lmul@multiplicand+2
  1541  04DF  085C               	movf	BMP280_readPressure@var1+1,w
  1542  04E0  00AB               	movwf	___lmul@multiplicand+1
  1543  04E1  085B               	movf	BMP280_readPressure@var1,w
  1544  04E2  00AA               	movwf	___lmul@multiplicand
  1545  04E3  120A  118A  205C  120A  118A  	fcall	___lmul
  1546  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1547  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1548  04EA  0829               	movf	?___lmul+3,w
  1549  04EB  00F8               	movwf	___aldiv@dividend+3
  1550  04EC  0828               	movf	?___lmul+2,w
  1551  04ED  00F7               	movwf	___aldiv@dividend+2
  1552  04EE  0827               	movf	?___lmul+1,w
  1553  04EF  00F6               	movwf	___aldiv@dividend+1
  1554  04F0  0826               	movf	?___lmul,w
  1555  04F1  00F5               	movwf	___aldiv@dividend
  1556  04F2  120A  118A  2158  120A  118A  	fcall	___aldiv
  1557  04F7  0871               	movf	?___aldiv,w
  1558  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1559  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1560  04FA  00B2               	movwf	??_BMP280_readPressure
  1561  04FB  0872               	movf	?___aldiv+1,w
  1562  04FC  00B3               	movwf	??_BMP280_readPressure+1
  1563  04FD  0873               	movf	?___aldiv+2,w
  1564  04FE  00B4               	movwf	??_BMP280_readPressure+2
  1565  04FF  0874               	movf	?___aldiv+3,w
  1566  0500  00B5               	movwf	??_BMP280_readPressure+3
  1567  0501  3000               	movlw	0
  1568  0502  00F4               	movwf	___aldiv@divisor+3
  1569  0503  3000               	movlw	0
  1570  0504  00F3               	movwf	___aldiv@divisor+2
  1571  0505  3000               	movlw	0
  1572  0506  00F2               	movwf	___aldiv@divisor+1
  1573  0507  3008               	movlw	8
  1574  0508  00F1               	movwf	___aldiv@divisor
  1575  0509  0845               	movf	_BMP280_readPressure$935+3,w
  1576  050A  00F8               	movwf	___aldiv@dividend+3
  1577  050B  0844               	movf	_BMP280_readPressure$935+2,w
  1578  050C  00F7               	movwf	___aldiv@dividend+2
  1579  050D  0843               	movf	_BMP280_readPressure$935+1,w
  1580  050E  00F6               	movwf	___aldiv@dividend+1
  1581  050F  0842               	movf	_BMP280_readPressure$935,w
  1582  0510  00F5               	movwf	___aldiv@dividend
  1583  0511  120A  118A  2158  120A  118A  	fcall	___aldiv
  1584  0516  0871               	movf	?___aldiv,w
  1585  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0519  07B2               	addwf	??_BMP280_readPressure,f
  1588  051A  0872               	movf	?___aldiv+1,w
  1589  051B  1803               	skipnc
  1590  051C  0F72               	incfsz	?___aldiv+1,w
  1591  051D  2D1F               	goto	u960
  1592  051E  2D20               	goto	u961
  1593  051F                     u960:
  1594  051F  07B3               	addwf	??_BMP280_readPressure+1,f
  1595  0520                     u961:
  1596  0520  0873               	movf	?___aldiv+2,w
  1597  0521  1803               	skipnc
  1598  0522  0F73               	incfsz	?___aldiv+2,w
  1599  0523  2D25               	goto	u962
  1600  0524  2D26               	goto	u963
  1601  0525                     u962:
  1602  0525  07B4               	addwf	??_BMP280_readPressure+2,f
  1603  0526                     u963:
  1604  0526  0874               	movf	?___aldiv+3,w
  1605  0527  1803               	skipnc
  1606  0528  0A74               	incf	?___aldiv+3,w
  1607  0529  07B5               	addwf	??_BMP280_readPressure+3,f
  1608  052A  0835               	movf	??_BMP280_readPressure+3,w
  1609  052B  00C9               	movwf	_BMP280_readPressure$936+3
  1610  052C  0834               	movf	??_BMP280_readPressure+2,w
  1611  052D  00C8               	movwf	_BMP280_readPressure$936+2
  1612  052E  0833               	movf	??_BMP280_readPressure+1,w
  1613  052F  00C7               	movwf	_BMP280_readPressure$936+1
  1614  0530  0832               	movf	??_BMP280_readPressure,w
  1615  0531  00C6               	movwf	_BMP280_readPressure$936
  1616                           
  1617                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  1618  0532  3000               	movlw	0
  1619  0533  00F4               	movwf	___aldiv@divisor+3
  1620  0534  3004               	movlw	4
  1621  0535  00F3               	movwf	___aldiv@divisor+2
  1622  0536  3000               	movlw	0
  1623  0537  00F2               	movwf	___aldiv@divisor+1
  1624  0538  3000               	movlw	0
  1625  0539  00F1               	movwf	___aldiv@divisor
  1626  053A  0849               	movf	_BMP280_readPressure$936+3,w
  1627  053B  00F8               	movwf	___aldiv@dividend+3
  1628  053C  0848               	movf	_BMP280_readPressure$936+2,w
  1629  053D  00F7               	movwf	___aldiv@dividend+2
  1630  053E  0847               	movf	_BMP280_readPressure$936+1,w
  1631  053F  00F6               	movwf	___aldiv@dividend+1
  1632  0540  0846               	movf	_BMP280_readPressure$936,w
  1633  0541  00F5               	movwf	___aldiv@dividend
  1634  0542  120A  118A  2158  120A  118A  	fcall	___aldiv
  1635  0547  0874               	movf	?___aldiv+3,w
  1636  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1638  054A  00DE               	movwf	BMP280_readPressure@var1+3
  1639  054B  0873               	movf	?___aldiv+2,w
  1640  054C  00DD               	movwf	BMP280_readPressure@var1+2
  1641  054D  0872               	movf	?___aldiv+1,w
  1642  054E  00DC               	movwf	BMP280_readPressure@var1+1
  1643  054F  0871               	movf	?___aldiv,w
  1644  0550  00DB               	movwf	BMP280_readPressure@var1
  1645                           
  1646                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  1647  0551  3000               	movlw	0
  1648  0552  00F4               	movwf	___aldiv@divisor+3
  1649  0553  3000               	movlw	0
  1650  0554  00F3               	movwf	___aldiv@divisor+2
  1651  0555  3080               	movlw	128
  1652  0556  00F2               	movwf	___aldiv@divisor+1
  1653  0557  3000               	movlw	0
  1654  0558  00F1               	movwf	___aldiv@divisor
  1655  0559  3000               	movlw	0
  1656  055A  00B2               	movwf	??_BMP280_readPressure
  1657  055B  3080               	movlw	128
  1658  055C  00B3               	movwf	??_BMP280_readPressure+1
  1659  055D  3000               	movlw	0
  1660  055E  00B4               	movwf	??_BMP280_readPressure+2
  1661  055F  3000               	movlw	0
  1662  0560  00B5               	movwf	??_BMP280_readPressure+3
  1663  0561  085B               	movf	BMP280_readPressure@var1,w
  1664  0562  07B2               	addwf	??_BMP280_readPressure,f
  1665  0563  085C               	movf	BMP280_readPressure@var1+1,w
  1666  0564  1803               	skipnc
  1667  0565  0F5C               	incfsz	BMP280_readPressure@var1+1,w
  1668  0566  2D68               	goto	u970
  1669  0567  2D69               	goto	u971
  1670  0568                     u970:
  1671  0568  07B3               	addwf	??_BMP280_readPressure+1,f
  1672  0569                     u971:
  1673  0569  085D               	movf	BMP280_readPressure@var1+2,w
  1674  056A  1803               	skipnc
  1675  056B  0F5D               	incfsz	BMP280_readPressure@var1+2,w
  1676  056C  2D6E               	goto	u972
  1677  056D  2D6F               	goto	u973
  1678  056E                     u972:
  1679  056E  07B4               	addwf	??_BMP280_readPressure+2,f
  1680  056F                     u973:
  1681  056F  085E               	movf	BMP280_readPressure@var1+3,w
  1682  0570  1803               	skipnc
  1683  0571  0A5E               	incf	BMP280_readPressure@var1+3,w
  1684  0572  07B5               	addwf	??_BMP280_readPressure+3,f
  1685  0573  0835               	movf	??_BMP280_readPressure+3,w
  1686  0574  00A9               	movwf	___lmul@multiplier+3
  1687  0575  0834               	movf	??_BMP280_readPressure+2,w
  1688  0576  00A8               	movwf	___lmul@multiplier+2
  1689  0577  0833               	movf	??_BMP280_readPressure+1,w
  1690  0578  00A7               	movwf	___lmul@multiplier+1
  1691  0579  0832               	movf	??_BMP280_readPressure,w
  1692  057A  00A6               	movwf	___lmul@multiplier
  1693  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1694  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1695  057D  083B               	movf	(_BMP280_calib^(0+128)+6),w
  1696  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1697  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0580  00AA               	movwf	___lmul@multiplicand
  1699  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0583  083C               	movf	((_BMP280_calib+1)^(0+128)+6),w
  1702  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0586  00AB               	movwf	___lmul@multiplicand+1
  1705  0587  01AC               	clrf	___lmul@multiplicand+2
  1706  0588  01AD               	clrf	___lmul@multiplicand+3
  1707  0589  120A  118A  205C  120A  118A  	fcall	___lmul
  1708  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1709  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0590  0829               	movf	?___lmul+3,w
  1711  0591  00F8               	movwf	___aldiv@dividend+3
  1712  0592  0828               	movf	?___lmul+2,w
  1713  0593  00F7               	movwf	___aldiv@dividend+2
  1714  0594  0827               	movf	?___lmul+1,w
  1715  0595  00F6               	movwf	___aldiv@dividend+1
  1716  0596  0826               	movf	?___lmul,w
  1717  0597  00F5               	movwf	___aldiv@dividend
  1718  0598  120A  118A  2158  120A  118A  	fcall	___aldiv
  1719  059D  0874               	movf	?___aldiv+3,w
  1720  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1721  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1722  05A0  00DE               	movwf	BMP280_readPressure@var1+3
  1723  05A1  0873               	movf	?___aldiv+2,w
  1724  05A2  00DD               	movwf	BMP280_readPressure@var1+2
  1725  05A3  0872               	movf	?___aldiv+1,w
  1726  05A4  00DC               	movwf	BMP280_readPressure@var1+1
  1727  05A5  0871               	movf	?___aldiv,w
  1728  05A6  00DB               	movwf	BMP280_readPressure@var1
  1729  05A7                     l1164:
  1730                           
  1731                           ;BMP280.c: 282:   if (var1 == 0)
  1732  05A7  085E               	movf	BMP280_readPressure@var1+3,w
  1733  05A8  045D               	iorwf	BMP280_readPressure@var1+2,w
  1734  05A9  045C               	iorwf	BMP280_readPressure@var1+1,w
  1735  05AA  045B               	iorwf	BMP280_readPressure@var1,w
  1736  05AB  1D03               	skipz
  1737  05AC  2DAE               	goto	u981
  1738  05AD  2DAF               	goto	u980
  1739  05AE                     u981:
  1740  05AE  2DB0               	goto	l1168
  1741  05AF                     u980:
  1742  05AF  2FEA               	goto	l154
  1743  05B0                     l1168:
  1744                           
  1745                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  1746  05B0  3000               	movlw	0
  1747  05B1  00B2               	movwf	??_BMP280_readPressure
  1748  05B2  3000               	movlw	0
  1749  05B3  00B3               	movwf	??_BMP280_readPressure+1
  1750  05B4  3010               	movlw	16
  1751  05B5  00B4               	movwf	??_BMP280_readPressure+2
  1752  05B6  3000               	movlw	0
  1753  05B7  00B5               	movwf	??_BMP280_readPressure+3
  1754  05B8  3000               	movlw	0
  1755  05B9  00F4               	movwf	___aldiv@divisor+3
  1756  05BA  3000               	movlw	0
  1757  05BB  00F3               	movwf	___aldiv@divisor+2
  1758  05BC  3010               	movlw	16
  1759  05BD  00F2               	movwf	___aldiv@divisor+1
  1760  05BE  3000               	movlw	0
  1761  05BF  00F1               	movwf	___aldiv@divisor
  1762  05C0  0856               	movf	BMP280_readPressure@var2+3,w
  1763  05C1  00F8               	movwf	___aldiv@dividend+3
  1764  05C2  0855               	movf	BMP280_readPressure@var2+2,w
  1765  05C3  00F7               	movwf	___aldiv@dividend+2
  1766  05C4  0854               	movf	BMP280_readPressure@var2+1,w
  1767  05C5  00F6               	movwf	___aldiv@dividend+1
  1768  05C6  0853               	movf	BMP280_readPressure@var2,w
  1769  05C7  00F5               	movwf	___aldiv@dividend
  1770  05C8  120A  118A  2158  120A  118A  	fcall	___aldiv
  1771  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1772  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1773  05CF  0963               	comf	_adc_P,w
  1774  05D0  00B6               	movwf	??_BMP280_readPressure+4
  1775  05D1  0964               	comf	_adc_P+1,w
  1776  05D2  00B7               	movwf	??_BMP280_readPressure+5
  1777  05D3  0965               	comf	_adc_P+2,w
  1778  05D4  00B8               	movwf	??_BMP280_readPressure+6
  1779  05D5  0966               	comf	_adc_P+3,w
  1780  05D6  00B9               	movwf	??_BMP280_readPressure+7
  1781  05D7  0AB6               	incf	??_BMP280_readPressure+4,f
  1782  05D8  1903               	skipnz
  1783  05D9  0AB7               	incf	??_BMP280_readPressure+5,f
  1784  05DA  1903               	skipnz
  1785  05DB  0AB8               	incf	??_BMP280_readPressure+6,f
  1786  05DC  1903               	skipnz
  1787  05DD  0AB9               	incf	??_BMP280_readPressure+7,f
  1788  05DE  0871               	movf	?___aldiv,w
  1789  05DF  02B6               	subwf	??_BMP280_readPressure+4,f
  1790  05E0  0872               	movf	?___aldiv+1,w
  1791  05E1  1C03               	skipc
  1792  05E2  0F72               	incfsz	?___aldiv+1,w
  1793  05E3  2DE5               	goto	u991
  1794  05E4  2DE6               	goto	u992
  1795  05E5                     u991:
  1796  05E5  02B7               	subwf	??_BMP280_readPressure+5,f
  1797  05E6                     u992:
  1798  05E6  0873               	movf	?___aldiv+2,w
  1799  05E7  1C03               	skipc
  1800  05E8  0F73               	incfsz	?___aldiv+2,w
  1801  05E9  2DEB               	goto	u993
  1802  05EA  2DEC               	goto	u994
  1803  05EB                     u993:
  1804  05EB  02B8               	subwf	??_BMP280_readPressure+6,f
  1805  05EC                     u994:
  1806  05EC  0874               	movf	?___aldiv+3,w
  1807  05ED  1C03               	skipc
  1808  05EE  0F74               	incfsz	?___aldiv+3,w
  1809  05EF  2DF1               	goto	u995
  1810  05F0  2DF2               	goto	u996
  1811  05F1                     u995:
  1812  05F1  02B9               	subwf	??_BMP280_readPressure+7,f
  1813  05F2                     u996:
  1814  05F2  0836               	movf	??_BMP280_readPressure+4,w
  1815  05F3  07B2               	addwf	??_BMP280_readPressure,f
  1816  05F4  0837               	movf	??_BMP280_readPressure+5,w
  1817  05F5  1803               	skipnc
  1818  05F6  0F37               	incfsz	??_BMP280_readPressure+5,w
  1819  05F7  2DF9               	goto	u1000
  1820  05F8  2DFA               	goto	u1001
  1821  05F9                     u1000:
  1822  05F9  07B3               	addwf	??_BMP280_readPressure+1,f
  1823  05FA                     u1001:
  1824  05FA  0838               	movf	??_BMP280_readPressure+6,w
  1825  05FB  1803               	skipnc
  1826  05FC  0F38               	incfsz	??_BMP280_readPressure+6,w
  1827  05FD  2DFF               	goto	u1002
  1828  05FE  2E00               	goto	u1003
  1829  05FF                     u1002:
  1830  05FF  07B4               	addwf	??_BMP280_readPressure+2,f
  1831  0600                     u1003:
  1832  0600  0839               	movf	??_BMP280_readPressure+7,w
  1833  0601  1803               	skipnc
  1834  0602  0A39               	incf	??_BMP280_readPressure+7,w
  1835  0603  07B5               	addwf	??_BMP280_readPressure+3,f
  1836  0604  0835               	movf	??_BMP280_readPressure+3,w
  1837  0605  00A9               	movwf	___lmul@multiplier+3
  1838  0606  0834               	movf	??_BMP280_readPressure+2,w
  1839  0607  00A8               	movwf	___lmul@multiplier+2
  1840  0608  0833               	movf	??_BMP280_readPressure+1,w
  1841  0609  00A7               	movwf	___lmul@multiplier+1
  1842  060A  0832               	movf	??_BMP280_readPressure,w
  1843  060B  00A6               	movwf	___lmul@multiplier
  1844  060C  3000               	movlw	0
  1845  060D  00AD               	movwf	___lmul@multiplicand+3
  1846  060E  3000               	movlw	0
  1847  060F  00AC               	movwf	___lmul@multiplicand+2
  1848  0610  300C               	movlw	12
  1849  0611  00AB               	movwf	___lmul@multiplicand+1
  1850  0612  3035               	movlw	53
  1851  0613  00AA               	movwf	___lmul@multiplicand
  1852  0614  120A  118A  205C  120A  118A  	fcall	___lmul
  1853  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1854  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1855  061B  0829               	movf	?___lmul+3,w
  1856  061C  00DA               	movwf	BMP280_readPressure@p+3
  1857  061D  0828               	movf	?___lmul+2,w
  1858  061E  00D9               	movwf	BMP280_readPressure@p+2
  1859  061F  0827               	movf	?___lmul+1,w
  1860  0620  00D8               	movwf	BMP280_readPressure@p+1
  1861  0621  0826               	movf	?___lmul,w
  1862  0622  00D7               	movwf	BMP280_readPressure@p
  1863  0623                     l1170:
  1864                           
  1865                           ;BMP280.c: 287:   if (p < 0x80000000)
  1866  0623  3080               	movlw	128
  1867  0624  025A               	subwf	BMP280_readPressure@p+3,w
  1868  0625  1D03               	skipz
  1869  0626  2E33               	goto	u1013
  1870  0627  3000               	movlw	0
  1871  0628  0259               	subwf	BMP280_readPressure@p+2,w
  1872  0629  1D03               	skipz
  1873  062A  2E33               	goto	u1013
  1874  062B  3000               	movlw	0
  1875  062C  0258               	subwf	BMP280_readPressure@p+1,w
  1876  062D  1D03               	skipz
  1877  062E  2E33               	goto	u1013
  1878  062F  3000               	movlw	0
  1879  0630  0257               	subwf	BMP280_readPressure@p,w
  1880  0631  1D03               	skipz
  1881  0632  2E33               	goto	u1013
  1882  0633                     u1013:
  1883  0633  1803               	btfsc	3,0
  1884  0634  2E36               	goto	u1011
  1885  0635  2E37               	goto	u1010
  1886  0636                     u1011:
  1887  0636  2E5A               	goto	l1174
  1888  0637                     u1010:
  1889  0637                     l1172:
  1890                           
  1891                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  1892  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0639  085E               	movf	BMP280_readPressure@var1+3,w
  1895  063A  00F4               	movwf	___lldiv@divisor+3
  1896  063B  085D               	movf	BMP280_readPressure@var1+2,w
  1897  063C  00F3               	movwf	___lldiv@divisor+2
  1898  063D  085C               	movf	BMP280_readPressure@var1+1,w
  1899  063E  00F2               	movwf	___lldiv@divisor+1
  1900  063F  085B               	movf	BMP280_readPressure@var1,w
  1901  0640  00F1               	movwf	___lldiv@divisor
  1902  0641  1003               	clrc
  1903  0642  0D57               	rlf	BMP280_readPressure@p,w
  1904  0643  00F5               	movwf	___lldiv@dividend
  1905  0644  0D58               	rlf	BMP280_readPressure@p+1,w
  1906  0645  00F6               	movwf	___lldiv@dividend+1
  1907  0646  0D59               	rlf	BMP280_readPressure@p+2,w
  1908  0647  00F7               	movwf	___lldiv@dividend+2
  1909  0648  0D5A               	rlf	BMP280_readPressure@p+3,w
  1910  0649  00F8               	movwf	___lldiv@dividend+3
  1911  064A  120A  118A  20F0  120A  118A  	fcall	___lldiv
  1912  064F  0874               	movf	?___lldiv+3,w
  1913  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0652  00DA               	movwf	BMP280_readPressure@p+3
  1916  0653  0873               	movf	?___lldiv+2,w
  1917  0654  00D9               	movwf	BMP280_readPressure@p+2
  1918  0655  0872               	movf	?___lldiv+1,w
  1919  0656  00D8               	movwf	BMP280_readPressure@p+1
  1920  0657  0871               	movf	?___lldiv,w
  1921  0658  00D7               	movwf	BMP280_readPressure@p
  1922  0659  2E7C               	goto	l156
  1923  065A                     l1174:
  1924                           
  1925                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  1926  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1927  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1928  065C  085E               	movf	BMP280_readPressure@var1+3,w
  1929  065D  00F4               	movwf	___lldiv@divisor+3
  1930  065E  085D               	movf	BMP280_readPressure@var1+2,w
  1931  065F  00F3               	movwf	___lldiv@divisor+2
  1932  0660  085C               	movf	BMP280_readPressure@var1+1,w
  1933  0661  00F2               	movwf	___lldiv@divisor+1
  1934  0662  085B               	movf	BMP280_readPressure@var1,w
  1935  0663  00F1               	movwf	___lldiv@divisor
  1936  0664  085A               	movf	BMP280_readPressure@p+3,w
  1937  0665  00F8               	movwf	___lldiv@dividend+3
  1938  0666  0859               	movf	BMP280_readPressure@p+2,w
  1939  0667  00F7               	movwf	___lldiv@dividend+2
  1940  0668  0858               	movf	BMP280_readPressure@p+1,w
  1941  0669  00F6               	movwf	___lldiv@dividend+1
  1942  066A  0857               	movf	BMP280_readPressure@p,w
  1943  066B  00F5               	movwf	___lldiv@dividend
  1944  066C  120A  118A  20F0  120A  118A  	fcall	___lldiv
  1945  0671  1003               	clrc
  1946  0672  0D71               	rlf	?___lldiv,w
  1947  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0675  00D7               	movwf	BMP280_readPressure@p
  1950  0676  0D72               	rlf	?___lldiv+1,w
  1951  0677  00D8               	movwf	BMP280_readPressure@p+1
  1952  0678  0D73               	rlf	?___lldiv+2,w
  1953  0679  00D9               	movwf	BMP280_readPressure@p+2
  1954  067A  0D74               	rlf	?___lldiv+3,w
  1955  067B  00DA               	movwf	BMP280_readPressure@p+3
  1956  067C                     l156:
  1957                           
  1958                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  1959  067C  0857               	movf	BMP280_readPressure@p,w
  1960  067D  00B2               	movwf	??_BMP280_readPressure
  1961  067E  0858               	movf	BMP280_readPressure@p+1,w
  1962  067F  00B3               	movwf	??_BMP280_readPressure+1
  1963  0680  0859               	movf	BMP280_readPressure@p+2,w
  1964  0681  00B4               	movwf	??_BMP280_readPressure+2
  1965  0682  085A               	movf	BMP280_readPressure@p+3,w
  1966  0683  00B5               	movwf	??_BMP280_readPressure+3
  1967  0684  3003               	movlw	3
  1968  0685                     u1025:
  1969  0685  1003               	clrc
  1970  0686  0CB5               	rrf	??_BMP280_readPressure+3,f
  1971  0687  0CB4               	rrf	??_BMP280_readPressure+2,f
  1972  0688  0CB3               	rrf	??_BMP280_readPressure+1,f
  1973  0689  0CB2               	rrf	??_BMP280_readPressure,f
  1974  068A                     u1020:
  1975  068A  3EFF               	addlw	-1
  1976  068B  1D03               	skipz
  1977  068C  2E85               	goto	u1025
  1978  068D  0835               	movf	??_BMP280_readPressure+3,w
  1979  068E  00AD               	movwf	___lmul@multiplicand+3
  1980  068F  0834               	movf	??_BMP280_readPressure+2,w
  1981  0690  00AC               	movwf	___lmul@multiplicand+2
  1982  0691  0833               	movf	??_BMP280_readPressure+1,w
  1983  0692  00AB               	movwf	___lmul@multiplicand+1
  1984  0693  0832               	movf	??_BMP280_readPressure,w
  1985  0694  00AA               	movwf	___lmul@multiplicand
  1986  0695  0857               	movf	BMP280_readPressure@p,w
  1987  0696  00B6               	movwf	??_BMP280_readPressure+4
  1988  0697  0858               	movf	BMP280_readPressure@p+1,w
  1989  0698  00B7               	movwf	??_BMP280_readPressure+5
  1990  0699  0859               	movf	BMP280_readPressure@p+2,w
  1991  069A  00B8               	movwf	??_BMP280_readPressure+6
  1992  069B  085A               	movf	BMP280_readPressure@p+3,w
  1993  069C  00B9               	movwf	??_BMP280_readPressure+7
  1994  069D  3003               	movlw	3
  1995  069E                     u1035:
  1996  069E  1003               	clrc
  1997  069F  0CB9               	rrf	??_BMP280_readPressure+7,f
  1998  06A0  0CB8               	rrf	??_BMP280_readPressure+6,f
  1999  06A1  0CB7               	rrf	??_BMP280_readPressure+5,f
  2000  06A2  0CB6               	rrf	??_BMP280_readPressure+4,f
  2001  06A3                     u1030:
  2002  06A3  3EFF               	addlw	-1
  2003  06A4  1D03               	skipz
  2004  06A5  2E9E               	goto	u1035
  2005  06A6  0839               	movf	??_BMP280_readPressure+7,w
  2006  06A7  00A9               	movwf	___lmul@multiplier+3
  2007  06A8  0838               	movf	??_BMP280_readPressure+6,w
  2008  06A9  00A8               	movwf	___lmul@multiplier+2
  2009  06AA  0837               	movf	??_BMP280_readPressure+5,w
  2010  06AB  00A7               	movwf	___lmul@multiplier+1
  2011  06AC  0836               	movf	??_BMP280_readPressure+4,w
  2012  06AD  00A6               	movwf	___lmul@multiplier
  2013  06AE  120A  118A  205C  120A  118A  	fcall	___lmul
  2014  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2015  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2016  06B5  0826               	movf	?___lmul,w
  2017  06B6  00BA               	movwf	??_BMP280_readPressure+8
  2018  06B7  0827               	movf	?___lmul+1,w
  2019  06B8  00BB               	movwf	??_BMP280_readPressure+9
  2020  06B9  0828               	movf	?___lmul+2,w
  2021  06BA  00BC               	movwf	??_BMP280_readPressure+10
  2022  06BB  0829               	movf	?___lmul+3,w
  2023  06BC  00BD               	movwf	??_BMP280_readPressure+11
  2024  06BD  300D               	movlw	13
  2025  06BE                     u1045:
  2026  06BE  1003               	clrc
  2027  06BF  0CBD               	rrf	??_BMP280_readPressure+11,f
  2028  06C0  0CBC               	rrf	??_BMP280_readPressure+10,f
  2029  06C1  0CBB               	rrf	??_BMP280_readPressure+9,f
  2030  06C2  0CBA               	rrf	??_BMP280_readPressure+8,f
  2031  06C3                     u1040:
  2032  06C3  3EFF               	addlw	-1
  2033  06C4  1D03               	skipz
  2034  06C5  2EBE               	goto	u1045
  2035  06C6  083D               	movf	??_BMP280_readPressure+11,w
  2036  06C7  00CD               	movwf	_BMP280_readPressure$937+3
  2037  06C8  083C               	movf	??_BMP280_readPressure+10,w
  2038  06C9  00CC               	movwf	_BMP280_readPressure$937+2
  2039  06CA  083B               	movf	??_BMP280_readPressure+9,w
  2040  06CB  00CB               	movwf	_BMP280_readPressure$937+1
  2041  06CC  083A               	movf	??_BMP280_readPressure+8,w
  2042  06CD  00CA               	movwf	_BMP280_readPressure$937
  2043                           
  2044                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2045  06CE  3000               	movlw	0
  2046  06CF  00F4               	movwf	___aldiv@divisor+3
  2047  06D0  3000               	movlw	0
  2048  06D1  00F3               	movwf	___aldiv@divisor+2
  2049  06D2  3010               	movlw	16
  2050  06D3  00F2               	movwf	___aldiv@divisor+1
  2051  06D4  3000               	movlw	0
  2052  06D5  00F1               	movwf	___aldiv@divisor
  2053  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2054  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2055  06D8  084B               	movf	(_BMP280_calib^(0+128)+22),w
  2056  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2057  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2058  06DB  00A6               	movwf	___lmul@multiplier
  2059  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2060  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2061  06DE  084C               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2062  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2063  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2064  06E1  00A7               	movwf	___lmul@multiplier+1
  2065  06E2  3000               	movlw	0
  2066  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2067  06E4  30FF               	movlw	255
  2068  06E5  00A8               	movwf	___lmul@multiplier+2
  2069  06E6  00A9               	movwf	___lmul@multiplier+3
  2070  06E7  084D               	movf	_BMP280_readPressure$937+3,w
  2071  06E8  00AD               	movwf	___lmul@multiplicand+3
  2072  06E9  084C               	movf	_BMP280_readPressure$937+2,w
  2073  06EA  00AC               	movwf	___lmul@multiplicand+2
  2074  06EB  084B               	movf	_BMP280_readPressure$937+1,w
  2075  06EC  00AB               	movwf	___lmul@multiplicand+1
  2076  06ED  084A               	movf	_BMP280_readPressure$937,w
  2077  06EE  00AA               	movwf	___lmul@multiplicand
  2078  06EF  120A  118A  205C  120A  118A  	fcall	___lmul
  2079  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2080  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2081  06F6  0829               	movf	?___lmul+3,w
  2082  06F7  00F8               	movwf	___aldiv@dividend+3
  2083  06F8  0828               	movf	?___lmul+2,w
  2084  06F9  00F7               	movwf	___aldiv@dividend+2
  2085  06FA  0827               	movf	?___lmul+1,w
  2086  06FB  00F6               	movwf	___aldiv@dividend+1
  2087  06FC  0826               	movf	?___lmul,w
  2088  06FD  00F5               	movwf	___aldiv@dividend
  2089  06FE  120A  118A  2158  120A  118A  	fcall	___aldiv
  2090  0703  0874               	movf	?___aldiv+3,w
  2091  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0706  00DE               	movwf	BMP280_readPressure@var1+3
  2094  0707  0873               	movf	?___aldiv+2,w
  2095  0708  00DD               	movwf	BMP280_readPressure@var1+2
  2096  0709  0872               	movf	?___aldiv+1,w
  2097  070A  00DC               	movwf	BMP280_readPressure@var1+1
  2098  070B  0871               	movf	?___aldiv,w
  2099  070C  00DB               	movwf	BMP280_readPressure@var1
  2100                           
  2101                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2102  070D  3000               	movlw	0
  2103  070E  00F4               	movwf	___aldiv@divisor+3
  2104  070F  3000               	movlw	0
  2105  0710  00F3               	movwf	___aldiv@divisor+2
  2106  0711  3020               	movlw	32
  2107  0712  00F2               	movwf	___aldiv@divisor+1
  2108  0713  3000               	movlw	0
  2109  0714  00F1               	movwf	___aldiv@divisor
  2110  0715  0857               	movf	BMP280_readPressure@p,w
  2111  0716  00B2               	movwf	??_BMP280_readPressure
  2112  0717  0858               	movf	BMP280_readPressure@p+1,w
  2113  0718  00B3               	movwf	??_BMP280_readPressure+1
  2114  0719  0859               	movf	BMP280_readPressure@p+2,w
  2115  071A  00B4               	movwf	??_BMP280_readPressure+2
  2116  071B  085A               	movf	BMP280_readPressure@p+3,w
  2117  071C  00B5               	movwf	??_BMP280_readPressure+3
  2118  071D  3002               	movlw	2
  2119  071E                     u1055:
  2120  071E  1003               	clrc
  2121  071F  0CB5               	rrf	??_BMP280_readPressure+3,f
  2122  0720  0CB4               	rrf	??_BMP280_readPressure+2,f
  2123  0721  0CB3               	rrf	??_BMP280_readPressure+1,f
  2124  0722  0CB2               	rrf	??_BMP280_readPressure,f
  2125  0723                     u1050:
  2126  0723  3EFF               	addlw	-1
  2127  0724  1D03               	skipz
  2128  0725  2F1E               	goto	u1055
  2129  0726  0835               	movf	??_BMP280_readPressure+3,w
  2130  0727  00A9               	movwf	___lmul@multiplier+3
  2131  0728  0834               	movf	??_BMP280_readPressure+2,w
  2132  0729  00A8               	movwf	___lmul@multiplier+2
  2133  072A  0833               	movf	??_BMP280_readPressure+1,w
  2134  072B  00A7               	movwf	___lmul@multiplier+1
  2135  072C  0832               	movf	??_BMP280_readPressure,w
  2136  072D  00A6               	movwf	___lmul@multiplier
  2137  072E  1683               	bsf	3,5	;RP0=1, select bank1
  2138  072F  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0730  0849               	movf	(_BMP280_calib^(0+128)+20),w
  2140  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0733  00AA               	movwf	___lmul@multiplicand
  2143  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2145  0736  084A               	movf	((_BMP280_calib+1)^(0+128)+20),w
  2146  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0739  00AB               	movwf	___lmul@multiplicand+1
  2149  073A  3000               	movlw	0
  2150  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  2151  073C  30FF               	movlw	255
  2152  073D  00AC               	movwf	___lmul@multiplicand+2
  2153  073E  00AD               	movwf	___lmul@multiplicand+3
  2154  073F  120A  118A  205C  120A  118A  	fcall	___lmul
  2155  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0746  0829               	movf	?___lmul+3,w
  2158  0747  00F8               	movwf	___aldiv@dividend+3
  2159  0748  0828               	movf	?___lmul+2,w
  2160  0749  00F7               	movwf	___aldiv@dividend+2
  2161  074A  0827               	movf	?___lmul+1,w
  2162  074B  00F6               	movwf	___aldiv@dividend+1
  2163  074C  0826               	movf	?___lmul,w
  2164  074D  00F5               	movwf	___aldiv@dividend
  2165  074E  120A  118A  2158  120A  118A  	fcall	___aldiv
  2166  0753  0874               	movf	?___aldiv+3,w
  2167  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0756  00D6               	movwf	BMP280_readPressure@var2+3
  2170  0757  0873               	movf	?___aldiv+2,w
  2171  0758  00D5               	movwf	BMP280_readPressure@var2+2
  2172  0759  0872               	movf	?___aldiv+1,w
  2173  075A  00D4               	movwf	BMP280_readPressure@var2+1
  2174  075B  0871               	movf	?___aldiv,w
  2175  075C  00D3               	movwf	BMP280_readPressure@var2
  2176                           
  2177                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  2178  075D  3000               	movlw	0
  2179  075E  00F4               	movwf	___aldiv@divisor+3
  2180  075F  3000               	movlw	0
  2181  0760  00F3               	movwf	___aldiv@divisor+2
  2182  0761  3000               	movlw	0
  2183  0762  00F2               	movwf	___aldiv@divisor+1
  2184  0763  3010               	movlw	16
  2185  0764  00F1               	movwf	___aldiv@divisor
  2186  0765  0853               	movf	BMP280_readPressure@var2,w
  2187  0766  00B2               	movwf	??_BMP280_readPressure
  2188  0767  0854               	movf	BMP280_readPressure@var2+1,w
  2189  0768  00B3               	movwf	??_BMP280_readPressure+1
  2190  0769  0855               	movf	BMP280_readPressure@var2+2,w
  2191  076A  00B4               	movwf	??_BMP280_readPressure+2
  2192  076B  0856               	movf	BMP280_readPressure@var2+3,w
  2193  076C  00B5               	movwf	??_BMP280_readPressure+3
  2194  076D  085B               	movf	BMP280_readPressure@var1,w
  2195  076E  00B6               	movwf	??_BMP280_readPressure+4
  2196  076F  085C               	movf	BMP280_readPressure@var1+1,w
  2197  0770  00B7               	movwf	??_BMP280_readPressure+5
  2198  0771  085D               	movf	BMP280_readPressure@var1+2,w
  2199  0772  00B8               	movwf	??_BMP280_readPressure+6
  2200  0773  085E               	movf	BMP280_readPressure@var1+3,w
  2201  0774  00B9               	movwf	??_BMP280_readPressure+7
  2202  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0776  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0777  0847               	movf	(_BMP280_calib^(0+128)+18),w
  2205  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2207  077A  00BA               	movwf	??_BMP280_readPressure+8
  2208  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2209  077C  1303               	bcf	3,6	;RP1=0, select bank1
  2210  077D  0848               	movf	((_BMP280_calib+1)^(0+128)+18),w
  2211  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2212  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0780  00BB               	movwf	??_BMP280_readPressure+9
  2214  0781  3000               	movlw	0
  2215  0782  1BBB               	btfsc	??_BMP280_readPressure+9,7
  2216  0783  30FF               	movlw	255
  2217  0784  00BC               	movwf	??_BMP280_readPressure+10
  2218  0785  00BD               	movwf	??_BMP280_readPressure+11
  2219  0786  083A               	movf	??_BMP280_readPressure+8,w
  2220  0787  07B6               	addwf	??_BMP280_readPressure+4,f
  2221  0788  083B               	movf	??_BMP280_readPressure+9,w
  2222  0789  1803               	skipnc
  2223  078A  0F3B               	incfsz	??_BMP280_readPressure+9,w
  2224  078B  2F8D               	goto	u1060
  2225  078C  2F8E               	goto	u1061
  2226  078D                     u1060:
  2227  078D  07B7               	addwf	??_BMP280_readPressure+5,f
  2228  078E                     u1061:
  2229  078E  083C               	movf	??_BMP280_readPressure+10,w
  2230  078F  1803               	skipnc
  2231  0790  0F3C               	incfsz	??_BMP280_readPressure+10,w
  2232  0791  2F93               	goto	u1062
  2233  0792  2F94               	goto	u1063
  2234  0793                     u1062:
  2235  0793  07B8               	addwf	??_BMP280_readPressure+6,f
  2236  0794                     u1063:
  2237  0794  083D               	movf	??_BMP280_readPressure+11,w
  2238  0795  1803               	skipnc
  2239  0796  0A3D               	incf	??_BMP280_readPressure+11,w
  2240  0797  07B9               	addwf	??_BMP280_readPressure+7,f
  2241  0798  0836               	movf	??_BMP280_readPressure+4,w
  2242  0799  07B2               	addwf	??_BMP280_readPressure,f
  2243  079A  0837               	movf	??_BMP280_readPressure+5,w
  2244  079B  1803               	skipnc
  2245  079C  0F37               	incfsz	??_BMP280_readPressure+5,w
  2246  079D  2F9F               	goto	u1070
  2247  079E  2FA0               	goto	u1071
  2248  079F                     u1070:
  2249  079F  07B3               	addwf	??_BMP280_readPressure+1,f
  2250  07A0                     u1071:
  2251  07A0  0838               	movf	??_BMP280_readPressure+6,w
  2252  07A1  1803               	skipnc
  2253  07A2  0F38               	incfsz	??_BMP280_readPressure+6,w
  2254  07A3  2FA5               	goto	u1072
  2255  07A4  2FA6               	goto	u1073
  2256  07A5                     u1072:
  2257  07A5  07B4               	addwf	??_BMP280_readPressure+2,f
  2258  07A6                     u1073:
  2259  07A6  0839               	movf	??_BMP280_readPressure+7,w
  2260  07A7  1803               	skipnc
  2261  07A8  0A39               	incf	??_BMP280_readPressure+7,w
  2262  07A9  07B5               	addwf	??_BMP280_readPressure+3,f
  2263  07AA  0835               	movf	??_BMP280_readPressure+3,w
  2264  07AB  00F8               	movwf	___aldiv@dividend+3
  2265  07AC  0834               	movf	??_BMP280_readPressure+2,w
  2266  07AD  00F7               	movwf	___aldiv@dividend+2
  2267  07AE  0833               	movf	??_BMP280_readPressure+1,w
  2268  07AF  00F6               	movwf	___aldiv@dividend+1
  2269  07B0  0832               	movf	??_BMP280_readPressure,w
  2270  07B1  00F5               	movwf	___aldiv@dividend
  2271  07B2  120A  118A  2158  120A  118A  	fcall	___aldiv
  2272  07B7  0871               	movf	?___aldiv,w
  2273  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2274  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2275  07BA  0757               	addwf	BMP280_readPressure@p,w
  2276  07BB  00BE               	movwf	??_BMP280_readPressure+12
  2277  07BC  3000               	movlw	0
  2278  07BD  1803               	skipnc
  2279  07BE  3001               	movlw	1
  2280  07BF  0772               	addwf	?___aldiv+1,w
  2281  07C0  01C0               	clrf	??_BMP280_readPressure+14
  2282  07C1  1803               	skipnc
  2283  07C2  0AC0               	incf	??_BMP280_readPressure+14,f
  2284  07C3  0758               	addwf	BMP280_readPressure@p+1,w
  2285  07C4  00BF               	movwf	??_BMP280_readPressure+13
  2286  07C5  1803               	skipnc
  2287  07C6  0AC0               	incf	??_BMP280_readPressure+14,f
  2288  07C7  0873               	movf	?___aldiv+2,w
  2289  07C8  0740               	addwf	??_BMP280_readPressure+14,w
  2290  07C9  01C1               	clrf	??_BMP280_readPressure+15
  2291  07CA  1803               	skipnc
  2292  07CB  0AC1               	incf	??_BMP280_readPressure+15,f
  2293  07CC  0759               	addwf	BMP280_readPressure@p+2,w
  2294  07CD  00C0               	movwf	??_BMP280_readPressure+14
  2295  07CE  1803               	skipnc
  2296  07CF  0AC1               	incf	??_BMP280_readPressure+15,f
  2297  07D0  0874               	movf	?___aldiv+3,w
  2298  07D1  0741               	addwf	??_BMP280_readPressure+15,w
  2299  07D2  075A               	addwf	BMP280_readPressure@p+3,w
  2300  07D3  00C1               	movwf	??_BMP280_readPressure+15
  2301  07D4  0841               	movf	??_BMP280_readPressure+15,w
  2302  07D5  00DA               	movwf	BMP280_readPressure@p+3
  2303  07D6  0840               	movf	??_BMP280_readPressure+14,w
  2304  07D7  00D9               	movwf	BMP280_readPressure@p+2
  2305  07D8  083F               	movf	??_BMP280_readPressure+13,w
  2306  07D9  00D8               	movwf	BMP280_readPressure@p+1
  2307  07DA  083E               	movf	??_BMP280_readPressure+12,w
  2308  07DB  00D7               	movwf	BMP280_readPressure@p
  2309  07DC                     l1176:
  2310                           
  2311                           ;BMP280.c: 298:   *pres = p;
  2312  07DC  084E               	movf	BMP280_readPressure@pres,w
  2313  07DD  0084               	movwf	4
  2314  07DE  0857               	movf	BMP280_readPressure@p,w
  2315  07DF  1383               	bcf	3,7	;select IRP bank0
  2316  07E0  0080               	movwf	0
  2317  07E1  0A84               	incf	4,f
  2318  07E2  0858               	movf	BMP280_readPressure@p+1,w
  2319  07E3  0080               	movwf	0
  2320  07E4  0A84               	incf	4,f
  2321  07E5  0859               	movf	BMP280_readPressure@p+2,w
  2322  07E6  0080               	movwf	0
  2323  07E7  0A84               	incf	4,f
  2324  07E8  085A               	movf	BMP280_readPressure@p+3,w
  2325  07E9  0080               	movwf	0
  2326  07EA                     l154:
  2327  07EA  0008               	return
  2328  07EB                     __end_of_BMP280_readPressure:
  2329                           
  2330                           	psect	text4
  2331  005C                     __ptext4:	
  2332 ;; *************** function ___lmul *****************
  2333 ;; Defined at:
  2334 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  multiplier      4    6[BANK0 ] unsigned long 
  2337 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  product         4   14[BANK0 ] unsigned long 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  4    6[BANK0 ] unsigned long 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       8       0       0       0
  2350 ;;      Locals:         0       4       0       0       0
  2351 ;;      Temps:          1       0       0       0       0
  2352 ;;      Totals:         1      12       0       0       0
  2353 ;;Total ram usage:       13 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_BMP280_readPressure
  2359 ;;		_BMP280_readTemperature
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function ___lmul
  2365  005C                     ___lmul:
  2366  005C                     l1088:	
  2367                           ;incstack = 0
  2368                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2369                           
  2370  005C  3000               	movlw	0
  2371  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2372  005E  1303               	bcf	3,6	;RP1=0, select bank0
  2373  005F  00B1               	movwf	___lmul@product+3
  2374  0060  3000               	movlw	0
  2375  0061  00B0               	movwf	___lmul@product+2
  2376  0062  3000               	movlw	0
  2377  0063  00AF               	movwf	___lmul@product+1
  2378  0064  3000               	movlw	0
  2379  0065  00AE               	movwf	___lmul@product
  2380  0066                     l1090:
  2381  0066  1C26               	btfss	___lmul@multiplier,0
  2382  0067  2869               	goto	u741
  2383  0068  286A               	goto	u740
  2384  0069                     u741:
  2385  0069  2881               	goto	l1094
  2386  006A                     u740:
  2387  006A                     l1092:
  2388  006A  082A               	movf	___lmul@multiplicand,w
  2389  006B  07AE               	addwf	___lmul@product,f
  2390  006C  082B               	movf	___lmul@multiplicand+1,w
  2391  006D  1103               	clrz
  2392  006E  1803               	skipnc
  2393  006F  3E01               	addlw	1
  2394  0070  1903               	skipnz
  2395  0071  2873               	goto	u751
  2396  0072  07AF               	addwf	___lmul@product+1,f
  2397  0073                     u751:
  2398  0073  082C               	movf	___lmul@multiplicand+2,w
  2399  0074  1103               	clrz
  2400  0075  1803               	skipnc
  2401  0076  3E01               	addlw	1
  2402  0077  1903               	skipnz
  2403  0078  287A               	goto	u752
  2404  0079  07B0               	addwf	___lmul@product+2,f
  2405  007A                     u752:
  2406  007A  082D               	movf	___lmul@multiplicand+3,w
  2407  007B  1103               	clrz
  2408  007C  1803               	skipnc
  2409  007D  3E01               	addlw	1
  2410  007E  1903               	skipnz
  2411  007F  2881               	goto	u753
  2412  0080  07B1               	addwf	___lmul@product+3,f
  2413  0081                     u753:
  2414  0081                     l1094:
  2415  0081  3001               	movlw	1
  2416  0082  00FA               	movwf	??___lmul
  2417  0083                     u765:
  2418  0083  1003               	clrc
  2419  0084  0DAA               	rlf	___lmul@multiplicand,f
  2420  0085  0DAB               	rlf	___lmul@multiplicand+1,f
  2421  0086  0DAC               	rlf	___lmul@multiplicand+2,f
  2422  0087  0DAD               	rlf	___lmul@multiplicand+3,f
  2423  0088  0BFA               	decfsz	??___lmul,f
  2424  0089  2883               	goto	u765
  2425  008A                     l1096:
  2426  008A  3001               	movlw	1
  2427  008B                     u775:
  2428  008B  1003               	clrc
  2429  008C  0CA9               	rrf	___lmul@multiplier+3,f
  2430  008D  0CA8               	rrf	___lmul@multiplier+2,f
  2431  008E  0CA7               	rrf	___lmul@multiplier+1,f
  2432  008F  0CA6               	rrf	___lmul@multiplier,f
  2433  0090  3EFF               	addlw	-1
  2434  0091  1D03               	skipz
  2435  0092  288B               	goto	u775
  2436  0093  0829               	movf	___lmul@multiplier+3,w
  2437  0094  0428               	iorwf	___lmul@multiplier+2,w
  2438  0095  0427               	iorwf	___lmul@multiplier+1,w
  2439  0096  0426               	iorwf	___lmul@multiplier,w
  2440  0097  1D03               	skipz
  2441  0098  289A               	goto	u781
  2442  0099  289B               	goto	u780
  2443  009A                     u781:
  2444  009A  2866               	goto	l1090
  2445  009B                     u780:
  2446  009B                     l1098:
  2447  009B  0831               	movf	___lmul@product+3,w
  2448  009C  00A9               	movwf	?___lmul+3
  2449  009D  0830               	movf	___lmul@product+2,w
  2450  009E  00A8               	movwf	?___lmul+2
  2451  009F  082F               	movf	___lmul@product+1,w
  2452  00A0  00A7               	movwf	?___lmul+1
  2453  00A1  082E               	movf	___lmul@product,w
  2454  00A2  00A6               	movwf	?___lmul
  2455  00A3                     l256:
  2456  00A3  0008               	return
  2457  00A4                     __end_of___lmul:
  2458                           
  2459                           	psect	text5
  2460  00F0                     __ptext5:	
  2461 ;; *************** function ___lldiv *****************
  2462 ;; Defined at:
  2463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  divisor         4    0[COMMON] unsigned long 
  2466 ;;  dividend        4    4[COMMON] unsigned long 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  quotient        4    0[BANK0 ] unsigned long 
  2469 ;;  counter         1    4[BANK0 ] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  4    0[COMMON] unsigned long 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         8       0       0       0       0
  2480 ;;      Locals:         0       5       0       0       0
  2481 ;;      Temps:          1       0       0       0       0
  2482 ;;      Totals:         9       5       0       0       0
  2483 ;;Total ram usage:       14 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_I2C_Master_Init
  2489 ;;		_BMP280_readPressure
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           
  2494                           ;psect for function ___lldiv
  2495  00F0                     ___lldiv:
  2496  00F0                     l1034:	
  2497                           ;incstack = 0
  2498                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2499                           
  2500  00F0  3000               	movlw	0
  2501  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2502  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2503  00F3  00A3               	movwf	___lldiv@quotient+3
  2504  00F4  3000               	movlw	0
  2505  00F5  00A2               	movwf	___lldiv@quotient+2
  2506  00F6  3000               	movlw	0
  2507  00F7  00A1               	movwf	___lldiv@quotient+1
  2508  00F8  3000               	movlw	0
  2509  00F9  00A0               	movwf	___lldiv@quotient
  2510  00FA  0874               	movf	___lldiv@divisor+3,w
  2511  00FB  0473               	iorwf	___lldiv@divisor+2,w
  2512  00FC  0472               	iorwf	___lldiv@divisor+1,w
  2513  00FD  0471               	iorwf	___lldiv@divisor,w
  2514  00FE  1903               	skipnz
  2515  00FF  2901               	goto	u621
  2516  0100  2902               	goto	u620
  2517  0101                     u621:
  2518  0101  294F               	goto	l1054
  2519  0102                     u620:
  2520  0102                     l1036:
  2521  0102  01A4               	clrf	___lldiv@counter
  2522  0103  0AA4               	incf	___lldiv@counter,f
  2523  0104  2912               	goto	l1040
  2524  0105                     l1038:
  2525  0105  3001               	movlw	1
  2526  0106  00F9               	movwf	??___lldiv
  2527  0107                     u635:
  2528  0107  1003               	clrc
  2529  0108  0DF1               	rlf	___lldiv@divisor,f
  2530  0109  0DF2               	rlf	___lldiv@divisor+1,f
  2531  010A  0DF3               	rlf	___lldiv@divisor+2,f
  2532  010B  0DF4               	rlf	___lldiv@divisor+3,f
  2533  010C  0BF9               	decfsz	??___lldiv,f
  2534  010D  2907               	goto	u635
  2535  010E  3001               	movlw	1
  2536  010F  00F9               	movwf	??___lldiv
  2537  0110  0879               	movf	??___lldiv,w
  2538  0111  07A4               	addwf	___lldiv@counter,f
  2539  0112                     l1040:
  2540  0112  1FF4               	btfss	___lldiv@divisor+3,7
  2541  0113  2915               	goto	u641
  2542  0114  2916               	goto	u640
  2543  0115                     u641:
  2544  0115  2905               	goto	l1038
  2545  0116                     u640:
  2546  0116                     l1042:
  2547  0116  3001               	movlw	1
  2548  0117  00F9               	movwf	??___lldiv
  2549  0118                     u655:
  2550  0118  1003               	clrc
  2551  0119  0DA0               	rlf	___lldiv@quotient,f
  2552  011A  0DA1               	rlf	___lldiv@quotient+1,f
  2553  011B  0DA2               	rlf	___lldiv@quotient+2,f
  2554  011C  0DA3               	rlf	___lldiv@quotient+3,f
  2555  011D  0BF9               	decfsz	??___lldiv,f
  2556  011E  2918               	goto	u655
  2557  011F                     l1044:
  2558  011F  0874               	movf	___lldiv@divisor+3,w
  2559  0120  0278               	subwf	___lldiv@dividend+3,w
  2560  0121  1D03               	skipz
  2561  0122  292D               	goto	u665
  2562  0123  0873               	movf	___lldiv@divisor+2,w
  2563  0124  0277               	subwf	___lldiv@dividend+2,w
  2564  0125  1D03               	skipz
  2565  0126  292D               	goto	u665
  2566  0127  0872               	movf	___lldiv@divisor+1,w
  2567  0128  0276               	subwf	___lldiv@dividend+1,w
  2568  0129  1D03               	skipz
  2569  012A  292D               	goto	u665
  2570  012B  0871               	movf	___lldiv@divisor,w
  2571  012C  0275               	subwf	___lldiv@dividend,w
  2572  012D                     u665:
  2573  012D  1C03               	skipc
  2574  012E  2930               	goto	u661
  2575  012F  2931               	goto	u660
  2576  0130                     u661:
  2577  0130  2940               	goto	l1050
  2578  0131                     u660:
  2579  0131                     l1046:
  2580  0131  0871               	movf	___lldiv@divisor,w
  2581  0132  02F5               	subwf	___lldiv@dividend,f
  2582  0133  0872               	movf	___lldiv@divisor+1,w
  2583  0134  1C03               	skipc
  2584  0135  0F72               	incfsz	___lldiv@divisor+1,w
  2585  0136  02F6               	subwf	___lldiv@dividend+1,f
  2586  0137  0873               	movf	___lldiv@divisor+2,w
  2587  0138  1C03               	skipc
  2588  0139  0F73               	incfsz	___lldiv@divisor+2,w
  2589  013A  02F7               	subwf	___lldiv@dividend+2,f
  2590  013B  0874               	movf	___lldiv@divisor+3,w
  2591  013C  1C03               	skipc
  2592  013D  0F74               	incfsz	___lldiv@divisor+3,w
  2593  013E  02F8               	subwf	___lldiv@dividend+3,f
  2594  013F                     l1048:
  2595  013F  1420               	bsf	___lldiv@quotient,0
  2596  0140                     l1050:
  2597  0140  3001               	movlw	1
  2598  0141                     u675:
  2599  0141  1003               	clrc
  2600  0142  0CF4               	rrf	___lldiv@divisor+3,f
  2601  0143  0CF3               	rrf	___lldiv@divisor+2,f
  2602  0144  0CF2               	rrf	___lldiv@divisor+1,f
  2603  0145  0CF1               	rrf	___lldiv@divisor,f
  2604  0146  3EFF               	addlw	-1
  2605  0147  1D03               	skipz
  2606  0148  2941               	goto	u675
  2607  0149                     l1052:
  2608  0149  3001               	movlw	1
  2609  014A  02A4               	subwf	___lldiv@counter,f
  2610  014B  1D03               	btfss	3,2
  2611  014C  294E               	goto	u681
  2612  014D  294F               	goto	u680
  2613  014E                     u681:
  2614  014E  2916               	goto	l1042
  2615  014F                     u680:
  2616  014F                     l1054:
  2617  014F  0823               	movf	___lldiv@quotient+3,w
  2618  0150  00F4               	movwf	?___lldiv+3
  2619  0151  0822               	movf	___lldiv@quotient+2,w
  2620  0152  00F3               	movwf	?___lldiv+2
  2621  0153  0821               	movf	___lldiv@quotient+1,w
  2622  0154  00F2               	movwf	?___lldiv+1
  2623  0155  0820               	movf	___lldiv@quotient,w
  2624  0156  00F1               	movwf	?___lldiv
  2625  0157                     l278:
  2626  0157  0008               	return
  2627  0158                     __end_of___lldiv:
  2628                           
  2629                           	psect	text6
  2630  0158                     __ptext6:	
  2631 ;; *************** function ___aldiv *****************
  2632 ;; Defined at:
  2633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  divisor         4    0[COMMON] long 
  2636 ;;  dividend        4    4[COMMON] long 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  quotient        4    2[BANK0 ] long 
  2639 ;;  sign            1    1[BANK0 ] unsigned char 
  2640 ;;  counter         1    0[BANK0 ] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  4    0[COMMON] long 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         8       0       0       0       0
  2651 ;;      Locals:         0       6       0       0       0
  2652 ;;      Temps:          1       0       0       0       0
  2653 ;;      Totals:         9       6       0       0       0
  2654 ;;Total ram usage:       15 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_BMP280_readPressure
  2660 ;;		_BMP280_readTemperature
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function ___aldiv
  2666  0158                     ___aldiv:
  2667  0158                     l1102:	
  2668                           ;incstack = 0
  2669                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2670                           
  2671  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2673  015A  01A1               	clrf	___aldiv@sign
  2674  015B                     l1104:
  2675  015B  1FF4               	btfss	___aldiv@divisor+3,7
  2676  015C  295E               	goto	u791
  2677  015D  295F               	goto	u790
  2678  015E                     u791:
  2679  015E  296C               	goto	l307
  2680  015F                     u790:
  2681  015F                     l1106:
  2682  015F  09F1               	comf	___aldiv@divisor,f
  2683  0160  09F2               	comf	___aldiv@divisor+1,f
  2684  0161  09F3               	comf	___aldiv@divisor+2,f
  2685  0162  09F4               	comf	___aldiv@divisor+3,f
  2686  0163  0AF1               	incf	___aldiv@divisor,f
  2687  0164  1903               	skipnz
  2688  0165  0AF2               	incf	___aldiv@divisor+1,f
  2689  0166  1903               	skipnz
  2690  0167  0AF3               	incf	___aldiv@divisor+2,f
  2691  0168  1903               	skipnz
  2692  0169  0AF4               	incf	___aldiv@divisor+3,f
  2693  016A  01A1               	clrf	___aldiv@sign
  2694  016B  0AA1               	incf	___aldiv@sign,f
  2695  016C                     l307:
  2696  016C  1FF8               	btfss	___aldiv@dividend+3,7
  2697  016D  296F               	goto	u801
  2698  016E  2970               	goto	u800
  2699  016F                     u801:
  2700  016F  297F               	goto	l1112
  2701  0170                     u800:
  2702  0170                     l1108:
  2703  0170  09F5               	comf	___aldiv@dividend,f
  2704  0171  09F6               	comf	___aldiv@dividend+1,f
  2705  0172  09F7               	comf	___aldiv@dividend+2,f
  2706  0173  09F8               	comf	___aldiv@dividend+3,f
  2707  0174  0AF5               	incf	___aldiv@dividend,f
  2708  0175  1903               	skipnz
  2709  0176  0AF6               	incf	___aldiv@dividend+1,f
  2710  0177  1903               	skipnz
  2711  0178  0AF7               	incf	___aldiv@dividend+2,f
  2712  0179  1903               	skipnz
  2713  017A  0AF8               	incf	___aldiv@dividend+3,f
  2714  017B                     l1110:
  2715  017B  3001               	movlw	1
  2716  017C  00F9               	movwf	??___aldiv
  2717  017D  0879               	movf	??___aldiv,w
  2718  017E  06A1               	xorwf	___aldiv@sign,f
  2719  017F                     l1112:
  2720  017F  3000               	movlw	0
  2721  0180  00A5               	movwf	___aldiv@quotient+3
  2722  0181  3000               	movlw	0
  2723  0182  00A4               	movwf	___aldiv@quotient+2
  2724  0183  3000               	movlw	0
  2725  0184  00A3               	movwf	___aldiv@quotient+1
  2726  0185  3000               	movlw	0
  2727  0186  00A2               	movwf	___aldiv@quotient
  2728  0187                     l1114:
  2729  0187  0874               	movf	___aldiv@divisor+3,w
  2730  0188  0473               	iorwf	___aldiv@divisor+2,w
  2731  0189  0472               	iorwf	___aldiv@divisor+1,w
  2732  018A  0471               	iorwf	___aldiv@divisor,w
  2733  018B  1903               	skipnz
  2734  018C  298E               	goto	u811
  2735  018D  298F               	goto	u810
  2736  018E                     u811:
  2737  018E  29DC               	goto	l1134
  2738  018F                     u810:
  2739  018F                     l1116:
  2740  018F  01A0               	clrf	___aldiv@counter
  2741  0190  0AA0               	incf	___aldiv@counter,f
  2742  0191  299F               	goto	l1120
  2743  0192                     l1118:
  2744  0192  3001               	movlw	1
  2745  0193  00F9               	movwf	??___aldiv
  2746  0194                     u825:
  2747  0194  1003               	clrc
  2748  0195  0DF1               	rlf	___aldiv@divisor,f
  2749  0196  0DF2               	rlf	___aldiv@divisor+1,f
  2750  0197  0DF3               	rlf	___aldiv@divisor+2,f
  2751  0198  0DF4               	rlf	___aldiv@divisor+3,f
  2752  0199  0BF9               	decfsz	??___aldiv,f
  2753  019A  2994               	goto	u825
  2754  019B  3001               	movlw	1
  2755  019C  00F9               	movwf	??___aldiv
  2756  019D  0879               	movf	??___aldiv,w
  2757  019E  07A0               	addwf	___aldiv@counter,f
  2758  019F                     l1120:
  2759  019F  1FF4               	btfss	___aldiv@divisor+3,7
  2760  01A0  29A2               	goto	u831
  2761  01A1  29A3               	goto	u830
  2762  01A2                     u831:
  2763  01A2  2992               	goto	l1118
  2764  01A3                     u830:
  2765  01A3                     l1122:
  2766  01A3  3001               	movlw	1
  2767  01A4  00F9               	movwf	??___aldiv
  2768  01A5                     u845:
  2769  01A5  1003               	clrc
  2770  01A6  0DA2               	rlf	___aldiv@quotient,f
  2771  01A7  0DA3               	rlf	___aldiv@quotient+1,f
  2772  01A8  0DA4               	rlf	___aldiv@quotient+2,f
  2773  01A9  0DA5               	rlf	___aldiv@quotient+3,f
  2774  01AA  0BF9               	decfsz	??___aldiv,f
  2775  01AB  29A5               	goto	u845
  2776  01AC                     l1124:
  2777  01AC  0874               	movf	___aldiv@divisor+3,w
  2778  01AD  0278               	subwf	___aldiv@dividend+3,w
  2779  01AE  1D03               	skipz
  2780  01AF  29BA               	goto	u855
  2781  01B0  0873               	movf	___aldiv@divisor+2,w
  2782  01B1  0277               	subwf	___aldiv@dividend+2,w
  2783  01B2  1D03               	skipz
  2784  01B3  29BA               	goto	u855
  2785  01B4  0872               	movf	___aldiv@divisor+1,w
  2786  01B5  0276               	subwf	___aldiv@dividend+1,w
  2787  01B6  1D03               	skipz
  2788  01B7  29BA               	goto	u855
  2789  01B8  0871               	movf	___aldiv@divisor,w
  2790  01B9  0275               	subwf	___aldiv@dividend,w
  2791  01BA                     u855:
  2792  01BA  1C03               	skipc
  2793  01BB  29BD               	goto	u851
  2794  01BC  29BE               	goto	u850
  2795  01BD                     u851:
  2796  01BD  29CD               	goto	l1130
  2797  01BE                     u850:
  2798  01BE                     l1126:
  2799  01BE  0871               	movf	___aldiv@divisor,w
  2800  01BF  02F5               	subwf	___aldiv@dividend,f
  2801  01C0  0872               	movf	___aldiv@divisor+1,w
  2802  01C1  1C03               	skipc
  2803  01C2  0F72               	incfsz	___aldiv@divisor+1,w
  2804  01C3  02F6               	subwf	___aldiv@dividend+1,f
  2805  01C4  0873               	movf	___aldiv@divisor+2,w
  2806  01C5  1C03               	skipc
  2807  01C6  0F73               	incfsz	___aldiv@divisor+2,w
  2808  01C7  02F7               	subwf	___aldiv@dividend+2,f
  2809  01C8  0874               	movf	___aldiv@divisor+3,w
  2810  01C9  1C03               	skipc
  2811  01CA  0F74               	incfsz	___aldiv@divisor+3,w
  2812  01CB  02F8               	subwf	___aldiv@dividend+3,f
  2813  01CC                     l1128:
  2814  01CC  1422               	bsf	___aldiv@quotient,0
  2815  01CD                     l1130:
  2816  01CD  3001               	movlw	1
  2817  01CE                     u865:
  2818  01CE  1003               	clrc
  2819  01CF  0CF4               	rrf	___aldiv@divisor+3,f
  2820  01D0  0CF3               	rrf	___aldiv@divisor+2,f
  2821  01D1  0CF2               	rrf	___aldiv@divisor+1,f
  2822  01D2  0CF1               	rrf	___aldiv@divisor,f
  2823  01D3  3EFF               	addlw	-1
  2824  01D4  1D03               	skipz
  2825  01D5  29CE               	goto	u865
  2826  01D6                     l1132:
  2827  01D6  3001               	movlw	1
  2828  01D7  02A0               	subwf	___aldiv@counter,f
  2829  01D8  1D03               	btfss	3,2
  2830  01D9  29DB               	goto	u871
  2831  01DA  29DC               	goto	u870
  2832  01DB                     u871:
  2833  01DB  29A3               	goto	l1122
  2834  01DC                     u870:
  2835  01DC                     l1134:
  2836  01DC  0821               	movf	___aldiv@sign,w
  2837  01DD  1903               	btfsc	3,2
  2838  01DE  29E0               	goto	u881
  2839  01DF  29E1               	goto	u880
  2840  01E0                     u881:
  2841  01E0  29EC               	goto	l1138
  2842  01E1                     u880:
  2843  01E1                     l1136:
  2844  01E1  09A2               	comf	___aldiv@quotient,f
  2845  01E2  09A3               	comf	___aldiv@quotient+1,f
  2846  01E3  09A4               	comf	___aldiv@quotient+2,f
  2847  01E4  09A5               	comf	___aldiv@quotient+3,f
  2848  01E5  0AA2               	incf	___aldiv@quotient,f
  2849  01E6  1903               	skipnz
  2850  01E7  0AA3               	incf	___aldiv@quotient+1,f
  2851  01E8  1903               	skipnz
  2852  01E9  0AA4               	incf	___aldiv@quotient+2,f
  2853  01EA  1903               	skipnz
  2854  01EB  0AA5               	incf	___aldiv@quotient+3,f
  2855  01EC                     l1138:
  2856  01EC  0825               	movf	___aldiv@quotient+3,w
  2857  01ED  00F4               	movwf	?___aldiv+3
  2858  01EE  0824               	movf	___aldiv@quotient+2,w
  2859  01EF  00F3               	movwf	?___aldiv+2
  2860  01F0  0823               	movf	___aldiv@quotient+1,w
  2861  01F1  00F2               	movwf	?___aldiv+1
  2862  01F2  0822               	movf	___aldiv@quotient,w
  2863  01F3  00F1               	movwf	?___aldiv
  2864  01F4                     l317:
  2865  01F4  0008               	return
  2866  01F5                     __end_of___aldiv:
  2867                           
  2868                           	psect	text7
  2869  01F5                     __ptext7:	
  2870 ;; *************** function _BMP280_begin *****************
  2871 ;; Defined at:
  2872 ;;		line 155 in file "BMP280.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  mode            1    wreg     enum E1307
  2875 ;;  T_sampling      1    3[BANK0 ] enum E1312
  2876 ;;  P_sampling      1    4[BANK0 ] enum E1312
  2877 ;;  filter          1    5[BANK0 ] enum E1320
  2878 ;;  standby         1    6[BANK0 ] enum E1327
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  mode            1   11[BANK0 ] enum E1307
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2    3[BANK0 ] int 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0, pclath, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         0       4       0       0       0
  2891 ;;      Locals:         0       1       0       0       0
  2892 ;;      Temps:          0       4       0       0       0
  2893 ;;      Totals:         0       9       0       0       0
  2894 ;;Total ram usage:        9 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    4
  2897 ;; This function calls:
  2898 ;;		_BMP280_Configure
  2899 ;;		_BMP280_Read16
  2900 ;;		_BMP280_Read8
  2901 ;;		_BMP280_Write
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _BMP280_begin
  2909  01F5                     _BMP280_begin:
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  2913                           ;BMP280_begin@mode stored from wreg
  2914  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2915  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2916  01F7  00AB               	movwf	BMP280_begin@mode
  2917  01F8                     l1146:
  2918                           
  2919                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  2920  01F8  30D0               	movlw	208
  2921  01F9  120A  158A  27C4  120A  118A  	fcall	_BMP280_Read8
  2922  01FE  3A58               	xorlw	88
  2923  01FF  1903               	skipnz
  2924  0200  2A02               	goto	u891
  2925  0201  2A03               	goto	u890
  2926  0202                     u891:
  2927  0202  2A04               	goto	l1150
  2928  0203                     u890:
  2929  0203  2AD2               	goto	l134
  2930  0204                     l1150:
  2931                           
  2932                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  2933  0204  30B6               	movlw	182
  2934  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0207  00A7               	movwf	??_BMP280_begin
  2937  0208  0827               	movf	??_BMP280_begin,w
  2938  0209  00F3               	movwf	BMP280_Write@_data
  2939  020A  30E0               	movlw	224
  2940  020B  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  2941  0210                     l1152:
  2942                           
  2943                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2944  0210  3002               	movlw	2
  2945  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2947  0213  00A9               	movwf	??_BMP280_begin+2
  2948  0214  3004               	movlw	4
  2949  0215  00A8               	movwf	??_BMP280_begin+1
  2950  0216  30B9               	movlw	185
  2951  0217  00A7               	movwf	??_BMP280_begin
  2952  0218                     u1177:
  2953  0218  0BA7               	decfsz	??_BMP280_begin,f
  2954  0219  2A18               	goto	u1177
  2955  021A  0BA8               	decfsz	??_BMP280_begin+1,f
  2956  021B  2A18               	goto	u1177
  2957  021C  0BA9               	decfsz	??_BMP280_begin+2,f
  2958  021D  2A18               	goto	u1177
  2959  021E  2A1F               	nop2
  2960  021F                     l1156:	
  2961                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  2962                           
  2963                           
  2964                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  2965  021F  30F3               	movlw	243
  2966  0220  120A  158A  27C4  120A  118A  	fcall	_BMP280_Read8
  2967  0225  3901               	andlw	1
  2968  0226  1D03               	btfss	3,2
  2969  0227  2A29               	goto	u901
  2970  0228  2A2A               	goto	u900
  2971  0229                     u901:
  2972  0229  2A10               	goto	l1152
  2973  022A                     u900:
  2974  022A                     l1158:
  2975                           
  2976                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  2977  022A  3088               	movlw	136
  2978  022B  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  2979  0230  0878               	movf	?_BMP280_Read16+1,w
  2980  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0233  00B6               	movwf	(_BMP280_calib+1)^(0+128)
  2983  0234  0877               	movf	?_BMP280_Read16,w
  2984  0235  00B5               	movwf	_BMP280_calib^(0+128)
  2985                           
  2986                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  2987  0236  308A               	movlw	138
  2988  0237  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  2989  023C  0878               	movf	?_BMP280_Read16+1,w
  2990  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2991  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2992  023F  00B8               	movwf	((_BMP280_calib+1)^(0+128)+2)
  2993  0240  0877               	movf	?_BMP280_Read16,w
  2994  0241  00B7               	movwf	(_BMP280_calib^(0+128)+2)
  2995                           
  2996                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  2997  0242  308C               	movlw	140
  2998  0243  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  2999  0248  0878               	movf	?_BMP280_Read16+1,w
  3000  0249  1683               	bsf	3,5	;RP0=1, select bank1
  3001  024A  1303               	bcf	3,6	;RP1=0, select bank1
  3002  024B  00BA               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3003  024C  0877               	movf	?_BMP280_Read16,w
  3004  024D  00B9               	movwf	(_BMP280_calib^(0+128)+4)
  3005                           
  3006                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3007  024E  308E               	movlw	142
  3008  024F  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3009  0254  0878               	movf	?_BMP280_Read16+1,w
  3010  0255  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0256  1303               	bcf	3,6	;RP1=0, select bank1
  3012  0257  00BC               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3013  0258  0877               	movf	?_BMP280_Read16,w
  3014  0259  00BB               	movwf	(_BMP280_calib^(0+128)+6)
  3015                           
  3016                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3017  025A  3090               	movlw	144
  3018  025B  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3019  0260  0878               	movf	?_BMP280_Read16+1,w
  3020  0261  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0262  1303               	bcf	3,6	;RP1=0, select bank1
  3022  0263  00BE               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3023  0264  0877               	movf	?_BMP280_Read16,w
  3024  0265  00BD               	movwf	(_BMP280_calib^(0+128)+8)
  3025                           
  3026                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3027  0266  3092               	movlw	146
  3028  0267  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3029  026C  0878               	movf	?_BMP280_Read16+1,w
  3030  026D  1683               	bsf	3,5	;RP0=1, select bank1
  3031  026E  1303               	bcf	3,6	;RP1=0, select bank1
  3032  026F  00C0               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3033  0270  0877               	movf	?_BMP280_Read16,w
  3034  0271  00BF               	movwf	(_BMP280_calib^(0+128)+10)
  3035                           
  3036                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3037  0272  3094               	movlw	148
  3038  0273  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3039  0278  0878               	movf	?_BMP280_Read16+1,w
  3040  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3041  027A  1303               	bcf	3,6	;RP1=0, select bank1
  3042  027B  00C2               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3043  027C  0877               	movf	?_BMP280_Read16,w
  3044  027D  00C1               	movwf	(_BMP280_calib^(0+128)+12)
  3045                           
  3046                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3047  027E  3096               	movlw	150
  3048  027F  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3049  0284  0878               	movf	?_BMP280_Read16+1,w
  3050  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3052  0287  00C4               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3053  0288  0877               	movf	?_BMP280_Read16,w
  3054  0289  00C3               	movwf	(_BMP280_calib^(0+128)+14)
  3055                           
  3056                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3057  028A  3098               	movlw	152
  3058  028B  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3059  0290  0878               	movf	?_BMP280_Read16+1,w
  3060  0291  1683               	bsf	3,5	;RP0=1, select bank1
  3061  0292  1303               	bcf	3,6	;RP1=0, select bank1
  3062  0293  00C6               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3063  0294  0877               	movf	?_BMP280_Read16,w
  3064  0295  00C5               	movwf	(_BMP280_calib^(0+128)+16)
  3065                           
  3066                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3067  0296  309A               	movlw	154
  3068  0297  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3069  029C  0878               	movf	?_BMP280_Read16+1,w
  3070  029D  1683               	bsf	3,5	;RP0=1, select bank1
  3071  029E  1303               	bcf	3,6	;RP1=0, select bank1
  3072  029F  00C8               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3073  02A0  0877               	movf	?_BMP280_Read16,w
  3074  02A1  00C7               	movwf	(_BMP280_calib^(0+128)+18)
  3075                           
  3076                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3077  02A2  309C               	movlw	156
  3078  02A3  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3079  02A8  0878               	movf	?_BMP280_Read16+1,w
  3080  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  3081  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  3082  02AB  00CA               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3083  02AC  0877               	movf	?_BMP280_Read16,w
  3084  02AD  00C9               	movwf	(_BMP280_calib^(0+128)+20)
  3085                           
  3086                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3087  02AE  309E               	movlw	158
  3088  02AF  120A  118A  20A4  120A  118A  	fcall	_BMP280_Read16
  3089  02B4  0878               	movf	?_BMP280_Read16+1,w
  3090  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  3091  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  3092  02B7  00CC               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3093  02B8  0877               	movf	?_BMP280_Read16,w
  3094  02B9  00CB               	movwf	(_BMP280_calib^(0+128)+22)
  3095                           
  3096                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3097  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3098  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3099  02BC  0823               	movf	BMP280_begin@T_sampling,w
  3100  02BD  00A7               	movwf	??_BMP280_begin
  3101  02BE  0827               	movf	??_BMP280_begin,w
  3102  02BF  00F7               	movwf	BMP280_Configure@T_sampling
  3103  02C0  0824               	movf	BMP280_begin@P_sampling,w
  3104  02C1  00A8               	movwf	??_BMP280_begin+1
  3105  02C2  0828               	movf	??_BMP280_begin+1,w
  3106  02C3  00F8               	movwf	BMP280_Configure@P_sampling
  3107  02C4  0825               	movf	BMP280_begin@filter,w
  3108  02C5  00A9               	movwf	??_BMP280_begin+2
  3109  02C6  0829               	movf	??_BMP280_begin+2,w
  3110  02C7  00F9               	movwf	BMP280_Configure@filter
  3111  02C8  0826               	movf	BMP280_begin@standby,w
  3112  02C9  00AA               	movwf	??_BMP280_begin+3
  3113  02CA  082A               	movf	??_BMP280_begin+3,w
  3114  02CB  00FA               	movwf	BMP280_Configure@standby
  3115  02CC  082B               	movf	BMP280_begin@mode,w
  3116  02CD  120A  118A  2014  120A  118A  	fcall	_BMP280_Configure
  3117  02D2                     l134:
  3118  02D2  0008               	return
  3119  02D3                     __end_of_BMP280_begin:
  3120                           
  3121                           	psect	text8
  3122  0FC4                     __ptext8:	
  3123 ;; *************** function _BMP280_Read8 *****************
  3124 ;; Defined at:
  3125 ;;		line 105 in file "BMP280.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  reg_addr        1    wreg     unsigned char 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  reg_addr        1    8[COMMON] unsigned char 
  3130 ;;  ret             1    9[COMMON] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         2       0       0       0       0
  3142 ;;      Temps:          2       0       0       0       0
  3143 ;;      Totals:         4       0       0       0       0
  3144 ;;Total ram usage:        4 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		_I2C_Master_Read
  3149 ;;		_I2C_Master_Start
  3150 ;;		_I2C_Master_Stop
  3151 ;;		_I2C_Master_Write
  3152 ;; This function is called by:
  3153 ;;		_BMP280_begin
  3154 ;;		_BMP280_ForcedMeasurement
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _BMP280_Read8
  3160  0FC4                     _BMP280_Read8:
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  3164                           ;BMP280_Read8@reg_addr stored from wreg
  3165  0FC4  00F9               	movwf	BMP280_Read8@reg_addr
  3166  0FC5                     l1070:
  3167                           
  3168                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  3169  0FC5  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3170                           
  3171                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  3172  0FCA  30EE               	movlw	238
  3173  0FCB  00F1               	movwf	I2C_Master_Write@d
  3174  0FCC  3000               	movlw	0
  3175  0FCD  00F2               	movwf	I2C_Master_Write@d+1
  3176  0FCE  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3177                           
  3178                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  3179  0FD3  0879               	movf	BMP280_Read8@reg_addr,w
  3180  0FD4  00F7               	movwf	??_BMP280_Read8
  3181  0FD5  01F8               	clrf	??_BMP280_Read8+1
  3182  0FD6  0877               	movf	??_BMP280_Read8,w
  3183  0FD7  00F1               	movwf	I2C_Master_Write@d
  3184  0FD8  0878               	movf	??_BMP280_Read8+1,w
  3185  0FD9  00F2               	movwf	I2C_Master_Write@d+1
  3186  0FDA  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3187                           
  3188                           ;BMP280.c: 112:   I2C_Master_Start();
  3189  0FDF  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3190                           
  3191                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  3192  0FE4  30EF               	movlw	239
  3193  0FE5  00F1               	movwf	I2C_Master_Write@d
  3194  0FE6  3000               	movlw	0
  3195  0FE7  00F2               	movwf	I2C_Master_Write@d+1
  3196  0FE8  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3197                           
  3198                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  3199  0FED  3000               	movlw	0
  3200  0FEE  00F1               	movwf	I2C_Master_Read@a
  3201  0FEF  00F2               	movwf	I2C_Master_Read@a+1
  3202  0FF0  120A  158A  275E  120A  158A  	fcall	_I2C_Master_Read
  3203  0FF5  0871               	movf	?_I2C_Master_Read,w
  3204  0FF6  00F7               	movwf	??_BMP280_Read8
  3205  0FF7  0877               	movf	??_BMP280_Read8,w
  3206  0FF8  00FA               	movwf	BMP280_Read8@ret
  3207                           
  3208                           ;BMP280.c: 115:   I2C_Master_Stop();
  3209  0FF9  120A  158A  26E5  120A  158A  	fcall	_I2C_Master_Stop
  3210  0FFE                     l1072:
  3211                           
  3212                           ;BMP280.c: 117:   return ret;
  3213  0FFE  087A               	movf	BMP280_Read8@ret,w
  3214  0FFF                     l124:
  3215  0FFF  0008               	return
  3216  1000                     __end_of_BMP280_Read8:
  3217                           
  3218                           	psect	text9
  3219  00A4                     __ptext9:	
  3220 ;; *************** function _BMP280_Read16 *****************
  3221 ;; Defined at:
  3222 ;;		line 121 in file "BMP280.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  reg_addr        1    wreg     unsigned char 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  reg_addr        1   10[COMMON] unsigned char 
  3227 ;;  ret             2   11[COMMON] struct .
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    6[COMMON] unsigned int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         2       0       0       0       0
  3238 ;;      Locals:         3       0       0       0       0
  3239 ;;      Temps:          2       0       0       0       0
  3240 ;;      Totals:         7       0       0       0       0
  3241 ;;Total ram usage:        7 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    2
  3244 ;; This function calls:
  3245 ;;		_I2C_Master_Read
  3246 ;;		_I2C_Master_Start
  3247 ;;		_I2C_Master_Stop
  3248 ;;		_I2C_Master_Write
  3249 ;; This function is called by:
  3250 ;;		_BMP280_begin
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _BMP280_Read16
  3256  00A4                     _BMP280_Read16:
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  3260                           ;BMP280_Read16@reg_addr stored from wreg
  3261  00A4  00FB               	movwf	BMP280_Read16@reg_addr
  3262  00A5                     l1076:
  3263                           
  3264                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  3265  00A5  120A  158A  26DC  120A  118A  	fcall	_I2C_Master_Start
  3266                           
  3267                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  3268  00AA  30EE               	movlw	238
  3269  00AB  00F1               	movwf	I2C_Master_Write@d
  3270  00AC  3000               	movlw	0
  3271  00AD  00F2               	movwf	I2C_Master_Write@d+1
  3272  00AE  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3273                           
  3274                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  3275  00B3  087B               	movf	BMP280_Read16@reg_addr,w
  3276  00B4  00F9               	movwf	??_BMP280_Read16
  3277  00B5  01FA               	clrf	??_BMP280_Read16+1
  3278  00B6  0879               	movf	??_BMP280_Read16,w
  3279  00B7  00F1               	movwf	I2C_Master_Write@d
  3280  00B8  087A               	movf	??_BMP280_Read16+1,w
  3281  00B9  00F2               	movwf	I2C_Master_Write@d+1
  3282  00BA  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3283                           
  3284                           ;BMP280.c: 132:   I2C_Master_Start();
  3285  00BF  120A  158A  26DC  120A  118A  	fcall	_I2C_Master_Start
  3286                           
  3287                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  3288  00C4  30EF               	movlw	239
  3289  00C5  00F1               	movwf	I2C_Master_Write@d
  3290  00C6  3000               	movlw	0
  3291  00C7  00F2               	movwf	I2C_Master_Write@d+1
  3292  00C8  120A  158A  26EE  120A  118A  	fcall	_I2C_Master_Write
  3293                           
  3294                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  3295  00CD  3001               	movlw	1
  3296  00CE  00F1               	movwf	I2C_Master_Read@a
  3297  00CF  3000               	movlw	0
  3298  00D0  00F2               	movwf	I2C_Master_Read@a+1
  3299  00D1  120A  158A  275E  120A  118A  	fcall	_I2C_Master_Read
  3300  00D6  0871               	movf	?_I2C_Master_Read,w
  3301  00D7  00F9               	movwf	??_BMP280_Read16
  3302  00D8  0879               	movf	??_BMP280_Read16,w
  3303  00D9  00FC               	movwf	BMP280_Read16@ret
  3304                           
  3305                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  3306  00DA  3000               	movlw	0
  3307  00DB  00F1               	movwf	I2C_Master_Read@a
  3308  00DC  00F2               	movwf	I2C_Master_Read@a+1
  3309  00DD  120A  158A  275E  120A  118A  	fcall	_I2C_Master_Read
  3310  00E2  0871               	movf	?_I2C_Master_Read,w
  3311  00E3  00F9               	movwf	??_BMP280_Read16
  3312  00E4  0879               	movf	??_BMP280_Read16,w
  3313  00E5  00FD               	movwf	BMP280_Read16@ret+1
  3314                           
  3315                           ;BMP280.c: 136:   I2C_Master_Stop();
  3316  00E6  120A  158A  26E5  120A  118A  	fcall	_I2C_Master_Stop
  3317  00EB                     l1078:
  3318                           
  3319                           ;BMP280.c: 138:   return(ret.w);
  3320  00EB  087D               	movf	BMP280_Read16@ret+1,w
  3321  00EC  00F8               	movwf	?_BMP280_Read16+1
  3322  00ED  087C               	movf	BMP280_Read16@ret,w
  3323  00EE  00F7               	movwf	?_BMP280_Read16
  3324  00EF                     l127:
  3325  00EF  0008               	return
  3326  00F0                     __end_of_BMP280_Read16:
  3327                           
  3328                           	psect	text10
  3329  0F5E                     __ptext10:	
  3330 ;; *************** function _I2C_Master_Read *****************
  3331 ;; Defined at:
  3332 ;;		line 74 in file "I2C.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  a               2    0[COMMON] unsigned short 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  temp            2    4[COMMON] unsigned short 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2    0[COMMON] unsigned short 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         2       0       0       0       0
  3347 ;;      Locals:         2       0       0       0       0
  3348 ;;      Temps:          2       0       0       0       0
  3349 ;;      Totals:         6       0       0       0       0
  3350 ;;Total ram usage:        6 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		_I2C_Master_Wait
  3355 ;; This function is called by:
  3356 ;;		_BMP280_Read8
  3357 ;;		_BMP280_Read16
  3358 ;;		_BMP280_Update
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _I2C_Master_Read
  3364  0F5E                     _I2C_Master_Read:
  3365  0F5E                     l1016:	
  3366                           ;incstack = 0
  3367                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3368                           
  3369                           
  3370                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3371  0F5E  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3372  0F63                     l1018:
  3373                           
  3374                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3375  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  3376  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  3377  0F65  1591               	bsf	17,3	;volatile
  3378                           
  3379                           ;I2C.c: 79:     I2C_Master_Wait();
  3380  0F66  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3381  0F6B                     l1020:
  3382                           
  3383                           ;I2C.c: 80:     temp = SSPBUF;
  3384  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0F6D  0813               	movf	19,w	;volatile
  3387  0F6E  00F3               	movwf	??_I2C_Master_Read
  3388  0F6F  01F4               	clrf	??_I2C_Master_Read+1
  3389  0F70  0873               	movf	??_I2C_Master_Read,w
  3390  0F71  00F5               	movwf	I2C_Master_Read@temp
  3391  0F72  0874               	movf	??_I2C_Master_Read+1,w
  3392  0F73  00F6               	movwf	I2C_Master_Read@temp+1
  3393  0F74                     l1022:
  3394                           
  3395                           ;I2C.c: 81:     I2C_Master_Wait();
  3396  0F74  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3397  0F79                     l1024:
  3398                           
  3399                           ;I2C.c: 82:     if(a == 1){
  3400  0F79  0371               	decf	I2C_Master_Read@a,w
  3401  0F7A  0472               	iorwf	I2C_Master_Read@a+1,w
  3402  0F7B  1D03               	btfss	3,2
  3403  0F7C  2F7E               	goto	u611
  3404  0F7D  2F7F               	goto	u610
  3405  0F7E                     u611:
  3406  0F7E  2F83               	goto	l95
  3407  0F7F                     u610:
  3408  0F7F                     l1026:
  3409                           
  3410                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3411  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0F81  1291               	bcf	17,5	;volatile
  3414                           
  3415                           ;I2C.c: 84:     }else{
  3416  0F82  2F86               	goto	l96
  3417  0F83                     l95:
  3418                           
  3419                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3420  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  3421  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  3422  0F85  1691               	bsf	17,5	;volatile
  3423  0F86                     l96:	
  3424                           ;I2C.c: 86:     }
  3425                           
  3426                           
  3427                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3428  0F86  1611               	bsf	17,4	;volatile
  3429  0F87                     l1028:
  3430                           
  3431                           ;I2C.c: 88:     return temp;
  3432  0F87  0876               	movf	I2C_Master_Read@temp+1,w
  3433  0F88  00F2               	movwf	?_I2C_Master_Read+1
  3434  0F89  0875               	movf	I2C_Master_Read@temp,w
  3435  0F8A  00F1               	movwf	?_I2C_Master_Read
  3436  0F8B                     l97:
  3437  0F8B  0008               	return
  3438  0F8C                     __end_of_I2C_Master_Read:
  3439                           
  3440                           	psect	text11
  3441  0014                     __ptext11:	
  3442 ;; *************** function _BMP280_Configure *****************
  3443 ;; Defined at:
  3444 ;;		line 142 in file "BMP280.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  mode            1    wreg     enum E1307
  3447 ;;  T_sampling      1    6[COMMON] enum E1312
  3448 ;;  P_sampling      1    7[COMMON] enum E1312
  3449 ;;  filter          1    8[COMMON] enum E1320
  3450 ;;  standby         1    9[COMMON] enum E1327
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  mode            1    0[BANK0 ] enum E1307
  3453 ;;  _config         1    2[BANK0 ] unsigned char 
  3454 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         4       0       0       0       0
  3465 ;;      Locals:         0       3       0       0       0
  3466 ;;      Temps:          3       0       0       0       0
  3467 ;;      Totals:         7       3       0       0       0
  3468 ;;Total ram usage:       10 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		_BMP280_Write
  3473 ;; This function is called by:
  3474 ;;		_BMP280_begin
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _BMP280_Configure
  3480  0014                     _BMP280_Configure:
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  3484                           ;BMP280_Configure@mode stored from wreg
  3485  0014  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0015  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0016  00A0               	movwf	BMP280_Configure@mode
  3488  0017                     l1082:
  3489                           
  3490                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  3491  0017  0879               	movf	BMP280_Configure@filter,w
  3492  0018  00FB               	movwf	??_BMP280_Configure
  3493  0019  3002               	movlw	2
  3494  001A                     u705:
  3495  001A  1003               	clrc
  3496  001B  0DFB               	rlf	??_BMP280_Configure,f
  3497  001C  3EFF               	addlw	-1
  3498  001D  1D03               	skipz
  3499  001E  281A               	goto	u705
  3500  001F  087A               	movf	BMP280_Configure@standby,w
  3501  0020  00FC               	movwf	??_BMP280_Configure+1
  3502  0021  3004               	movlw	4
  3503  0022                     u715:
  3504  0022  1003               	clrc
  3505  0023  0DFC               	rlf	??_BMP280_Configure+1,f
  3506  0024  3EFF               	addlw	-1
  3507  0025  1D03               	skipz
  3508  0026  2822               	goto	u715
  3509  0027  1003               	clrc
  3510  0028  0D7C               	rlf	??_BMP280_Configure+1,w
  3511  0029  047B               	iorwf	??_BMP280_Configure,w
  3512  002A  39FC               	andlw	252
  3513  002B  00FD               	movwf	??_BMP280_Configure+2
  3514  002C  087D               	movf	??_BMP280_Configure+2,w
  3515  002D  00A2               	movwf	BMP280_Configure@_config
  3516                           
  3517                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  3518  002E  0878               	movf	BMP280_Configure@P_sampling,w
  3519  002F  00FB               	movwf	??_BMP280_Configure
  3520  0030  3002               	movlw	2
  3521  0031                     u725:
  3522  0031  1003               	clrc
  3523  0032  0DFB               	rlf	??_BMP280_Configure,f
  3524  0033  3EFF               	addlw	-1
  3525  0034  1D03               	skipz
  3526  0035  2831               	goto	u725
  3527  0036  0877               	movf	BMP280_Configure@T_sampling,w
  3528  0037  00FC               	movwf	??_BMP280_Configure+1
  3529  0038  3004               	movlw	4
  3530  0039                     u735:
  3531  0039  1003               	clrc
  3532  003A  0DFC               	rlf	??_BMP280_Configure+1,f
  3533  003B  3EFF               	addlw	-1
  3534  003C  1D03               	skipz
  3535  003D  2839               	goto	u735
  3536  003E  1003               	clrc
  3537  003F  0D7C               	rlf	??_BMP280_Configure+1,w
  3538  0040  047B               	iorwf	??_BMP280_Configure,w
  3539  0041  0420               	iorwf	BMP280_Configure@mode,w
  3540  0042  00FD               	movwf	??_BMP280_Configure+2
  3541  0043  087D               	movf	??_BMP280_Configure+2,w
  3542  0044  00A1               	movwf	BMP280_Configure@_ctrl_meas
  3543  0045                     l1084:
  3544                           
  3545                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  3546  0045  0822               	movf	BMP280_Configure@_config,w
  3547  0046  00FB               	movwf	??_BMP280_Configure
  3548  0047  087B               	movf	??_BMP280_Configure,w
  3549  0048  00F3               	movwf	BMP280_Write@_data
  3550  0049  30F5               	movlw	245
  3551  004A  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  3552  004F                     l1086:
  3553                           
  3554                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  3555  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0051  0821               	movf	BMP280_Configure@_ctrl_meas,w
  3558  0052  00FB               	movwf	??_BMP280_Configure
  3559  0053  087B               	movf	??_BMP280_Configure,w
  3560  0054  00F3               	movwf	BMP280_Write@_data
  3561  0055  30F4               	movlw	244
  3562  0056  120A  158A  2731  120A  118A  	fcall	_BMP280_Write
  3563  005B                     l130:
  3564  005B  0008               	return
  3565  005C                     __end_of_BMP280_Configure:
  3566                           
  3567                           	psect	text12
  3568  0F31                     __ptext12:	
  3569 ;; *************** function _BMP280_Write *****************
  3570 ;; Defined at:
  3571 ;;		line 95 in file "BMP280.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  reg_addr        1    wreg     unsigned char 
  3574 ;;  _data           1    2[COMMON] unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  reg_addr        1    5[COMMON] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         1       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0
  3588 ;;      Temps:          2       0       0       0       0
  3589 ;;      Totals:         4       0       0       0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		_I2C_Master_Start
  3595 ;;		_I2C_Master_Stop
  3596 ;;		_I2C_Master_Write
  3597 ;; This function is called by:
  3598 ;;		_BMP280_Configure
  3599 ;;		_BMP280_begin
  3600 ;;		_BMP280_ForcedMeasurement
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _BMP280_Write
  3606  0F31                     _BMP280_Write:
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  3610                           ;BMP280_Write@reg_addr stored from wreg
  3611  0F31  00F6               	movwf	BMP280_Write@reg_addr
  3612  0F32                     l1032:
  3613                           
  3614                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  3615  0F32  120A  158A  26DC  120A  158A  	fcall	_I2C_Master_Start
  3616                           
  3617                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  3618  0F37  30EE               	movlw	238
  3619  0F38  00F1               	movwf	I2C_Master_Write@d
  3620  0F39  3000               	movlw	0
  3621  0F3A  00F2               	movwf	I2C_Master_Write@d+1
  3622  0F3B  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3623                           
  3624                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  3625  0F40  0876               	movf	BMP280_Write@reg_addr,w
  3626  0F41  00F4               	movwf	??_BMP280_Write
  3627  0F42  01F5               	clrf	??_BMP280_Write+1
  3628  0F43  0874               	movf	??_BMP280_Write,w
  3629  0F44  00F1               	movwf	I2C_Master_Write@d
  3630  0F45  0875               	movf	??_BMP280_Write+1,w
  3631  0F46  00F2               	movwf	I2C_Master_Write@d+1
  3632  0F47  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3633                           
  3634                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  3635  0F4C  0873               	movf	BMP280_Write@_data,w
  3636  0F4D  00F4               	movwf	??_BMP280_Write
  3637  0F4E  01F5               	clrf	??_BMP280_Write+1
  3638  0F4F  0874               	movf	??_BMP280_Write,w
  3639  0F50  00F1               	movwf	I2C_Master_Write@d
  3640  0F51  0875               	movf	??_BMP280_Write+1,w
  3641  0F52  00F2               	movwf	I2C_Master_Write@d+1
  3642  0F53  120A  158A  26EE  120A  158A  	fcall	_I2C_Master_Write
  3643                           
  3644                           ;BMP280.c: 101:   I2C_Master_Stop();
  3645  0F58  120A  158A  26E5  120A  158A  	fcall	_I2C_Master_Stop
  3646  0F5D                     l121:
  3647  0F5D  0008               	return
  3648  0F5E                     __end_of_BMP280_Write:
  3649                           
  3650                           	psect	text13
  3651  0EEE                     __ptext13:	
  3652 ;; *************** function _I2C_Master_Write *****************
  3653 ;; Defined at:
  3654 ;;		line 65 in file "I2C.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  d               2    0[COMMON] unsigned int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         2       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    1
  3675 ;; This function calls:
  3676 ;;		_I2C_Master_Wait
  3677 ;; This function is called by:
  3678 ;;		_BMP280_Write
  3679 ;;		_BMP280_Read8
  3680 ;;		_BMP280_Read16
  3681 ;;		_BMP280_Update
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _I2C_Master_Write
  3687  0EEE                     _I2C_Master_Write:
  3688  0EEE                     l1012:	
  3689                           ;incstack = 0
  3690                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3691                           
  3692                           
  3693                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3694  0EEE  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3695  0EF3                     l1014:
  3696                           
  3697                           ;I2C.c: 68:     SSPBUF = d;
  3698  0EF3  0871               	movf	I2C_Master_Write@d,w
  3699  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0EF6  0093               	movwf	19	;volatile
  3702  0EF7                     l92:
  3703  0EF7  0008               	return
  3704  0EF8                     __end_of_I2C_Master_Write:
  3705                           
  3706                           	psect	text14
  3707  0EE5                     __ptext14:	
  3708 ;; *************** function _I2C_Master_Stop *****************
  3709 ;; Defined at:
  3710 ;;		line 55 in file "I2C.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    1
  3731 ;; This function calls:
  3732 ;;		_I2C_Master_Wait
  3733 ;; This function is called by:
  3734 ;;		_BMP280_Write
  3735 ;;		_BMP280_Read8
  3736 ;;		_BMP280_Read16
  3737 ;;		_BMP280_Update
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _I2C_Master_Stop
  3743  0EE5                     _I2C_Master_Stop:
  3744  0EE5                     l1008:	
  3745                           ;incstack = 0
  3746                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3747                           
  3748                           
  3749                           ;I2C.c: 57:     I2C_Master_Wait();
  3750  0EE5  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3751  0EEA                     l1010:
  3752                           
  3753                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3754  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3755  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3756  0EEC  1511               	bsf	17,2	;volatile
  3757  0EED                     l89:
  3758  0EED  0008               	return
  3759  0EEE                     __end_of_I2C_Master_Stop:
  3760                           
  3761                           	psect	text15
  3762  0EDC                     __ptext15:	
  3763 ;; *************** function _I2C_Master_Start *****************
  3764 ;; Defined at:
  3765 ;;		line 39 in file "I2C.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, pclath, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    1
  3786 ;; This function calls:
  3787 ;;		_I2C_Master_Wait
  3788 ;; This function is called by:
  3789 ;;		_BMP280_Write
  3790 ;;		_BMP280_Read8
  3791 ;;		_BMP280_Read16
  3792 ;;		_BMP280_Update
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _I2C_Master_Start
  3798  0EDC                     _I2C_Master_Start:
  3799  0EDC                     l1004:	
  3800                           ;incstack = 0
  3801                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3802                           
  3803                           
  3804                           ;I2C.c: 41:     I2C_Master_Wait();
  3805  0EDC  120A  118A  2007  120A  158A  	fcall	_I2C_Master_Wait
  3806  0EE1                     l1006:
  3807                           
  3808                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3809  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0EE3  1411               	bsf	17,0	;volatile
  3812  0EE4                     l83:
  3813  0EE4  0008               	return
  3814  0EE5                     __end_of_I2C_Master_Start:
  3815                           
  3816                           	psect	text16
  3817  0007                     __ptext16:	
  3818 ;; *************** function _I2C_Master_Wait *****************
  3819 ;; Defined at:
  3820 ;;		line 32 in file "I2C.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_I2C_Master_Start
  3844 ;;		_I2C_Master_Stop
  3845 ;;		_I2C_Master_Write
  3846 ;;		_I2C_Master_Read
  3847 ;;		_I2C_Master_RepeatedStart
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _I2C_Master_Wait
  3853  0007                     _I2C_Master_Wait:
  3854  0007                     l1000:	
  3855                           ;incstack = 0
  3856                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3857                           
  3858  0007                     l77:	
  3859                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3860                           
  3861  0007  1683               	bsf	3,5	;RP0=1, select bank1
  3862  0008  1303               	bcf	3,6	;RP1=0, select bank1
  3863  0009  1914               	btfsc	20,2	;volatile
  3864  000A  280C               	goto	u591
  3865  000B  280D               	goto	u590
  3866  000C                     u591:
  3867  000C  2807               	goto	l77
  3868  000D                     u590:
  3869  000D                     l1002:
  3870  000D  0811               	movf	17,w	;volatile
  3871  000E  391F               	andlw	31
  3872  000F  1D03               	btfss	3,2
  3873  0010  2812               	goto	u601
  3874  0011  2813               	goto	u600
  3875  0012                     u601:
  3876  0012  2807               	goto	l77
  3877  0013                     u600:
  3878  0013                     l80:
  3879  0013  0008               	return
  3880  0014                     __end_of_I2C_Master_Wait:
  3881  007E                     btemp	set	126	;btemp
  3882  007E                     wtemp0	set	126
  3883                           
  3884                           	psect	config
  3885                           
  3886                           ;Config register CONFIG1 @ 0x2007
  3887                           ;	Oscillator Selection bits
  3888                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3889                           ;	Watchdog Timer Enable bit
  3890                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3891                           ;	Power-up Timer Enable bit
  3892                           ;	PWRTE = OFF, PWRT disabled
  3893                           ;	RE3/MCLR pin function select bit
  3894                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3895                           ;	Code Protection bit
  3896                           ;	CP = OFF, Program memory code protection is disabled
  3897                           ;	Data Code Protection bit
  3898                           ;	CPD = OFF, Data memory code protection is disabled
  3899                           ;	Brown Out Reset Selection bits
  3900                           ;	BOREN = ON, BOR enabled
  3901                           ;	Internal External Switchover bit
  3902                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3903                           ;	Fail-Safe Clock Monitor Enabled bit
  3904                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3905                           ;	Low Voltage Programming Enable bit
  3906                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3907                           ;	In-Circuit Debugger Mode bit
  3908                           ;	DEBUG = 0x1, unprogrammed default
  3909  2007                     	org	8199
  3910  2007  23F4               	dw	9204
  3911                           
  3912                           ;Config register CONFIG2 @ 0x2008
  3913                           ;	Brown-out Reset Selection bit
  3914                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3915                           ;	Flash Program Memory Self Write Enable bits
  3916                           ;	WRT = OFF, Write protection off
  3917  2008                     	org	8200
  3918  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     63      80
    BANK1            80      0      45
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK0[4]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15068
                       _BMP280_begin
                _BMP280_readPressure
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              9 COMMON     4     4      0
                                              5 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             18 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     1     1      0
                                              6 BANK0     12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                              3 BANK0      9     5      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2D       7       56.2%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 11:01:35 2021

            _BMP280_Configure 0014                            l45 0F13                            l80 0013  
                          l74 0FC3                            l83 0EE4                            l92 0EF7  
                          l77 0007                            l95 0F83                            l96 0F86  
                          l89 0EED                            l97 0F8B                            fsr 0004  
                         l121 0F5D                           l130 005B                           l124 0FFF  
                         l134 02D2                           l127 00EF                           l154 07EA  
                         l307 016C                           l156 067C                           l317 01F4  
                         l256 00A3                           l278 0157                           _GIE 005F  
     BMP280_Configure@_config 0022                           u600 0013                           u601 0012  
                         u610 0F7F                           u611 0F7E                           u620 0102  
                         u621 0101                           u800 0170                           u640 0116  
                         u705 001A                           u801 016F                           u641 0115  
                         u810 018F                           u715 0022                           u811 018E  
                         u635 0107                           u900 022A                           u660 0131  
                         u740 006A                           u725 0031                           u901 0229  
                         u661 0130                           u741 0069                           u590 000D  
                         u830 01A3                           u910 02FC                           u591 000C  
                         u735 0039                           u831 01A2                           u655 0118  
                         u751 0073                           u911 02FD                           u680 014F  
                         u752 007A                           u920 03D1                           u912 0302  
                         u825 0194                           u681 014E                           u665 012D  
                         u753 0081                           u913 0303                           u850 01BE  
                         u930 03DB                           u690 0FA3                           u851 01BD  
                         u675 0141                           u931 03DC                           u780 009B  
                         u940 0402                           u932 03E1                           u845 01A5  
                         u781 009A                           u765 0083                           u933 03E2  
                         u925 03CC                           u870 01DC                           u790 015F  
                         u950 0423                           u871 01DB                           u855 01BA  
                         u791 015E                           u775 008B                           u951 0424  
                         u695 0F9E                           u880 01E1                           u960 051F  
                         u952 0429                           u881 01E0                           u865 01CE  
                         u961 0520                           u953 042A                           u945 03FD  
                         u890 0203                           u970 0568                           u962 0525  
                         u891 0202                           u971 0569                           u963 0526  
                         u980 05AF                           u972 056E                           u981 05AE  
                         u973 056F                           u991 05E5                           u992 05E6  
                         u993 05EB                           u994 05EC                           u995 05F1  
                         u996 05F2                           fsr0 0004                           indf 0000  
__size_of_BMP280_readPressure 0518        BMP280_begin@P_sampling 0024                          l1000 0007  
                        l1002 000D                          l1010 0EEA                          l1004 0EDC  
                        l1012 0EEE                          l1020 0F6B                          l1006 0EE1  
                        l1014 0EF3                          l1022 0F74                          l1110 017B  
                        l1102 0158                          l1008 0EE5                          l1032 0F32  
                        l1024 0F79                          l1016 0F5E                          l1120 019F  
                        l1112 017F                          l1104 015B                          l1040 0112  
                        l1026 0F7F                          l1018 0F63                          l1130 01CD  
                        l1122 01A3                          l1114 0187                          l1106 015F  
                        l1050 0140                          l1042 0116                          l1034 00F0  
                        l1210 0F14                          l1028 0F87                          l1132 01D6  
                        l1124 01AC                          l1116 018F                          l1108 0170  
                        l1052 0149                          l1044 011F                          l1036 0102  
                        l1060 0F90                          l1212 0F27                          l1070 0FC5  
                        l1150 0204                          l1126 01BE                          l1118 0192  
                        l1134 01DC                          l1046 0131                          l1038 0105  
                        l1054 014F                          l1062 0F93                          l1142 0EF8  
                        l1072 0FFE                          l1152 0210                          l1136 01E1  
                        l1128 01CC                          l1048 013F                          l1064 0FC0  
                        l1144 0F06                          l1082 0017                          l1146 01F8  
                        l1138 01EC                          l1090 0066                          l1170 0623  
                        l1162 02D6                          l1066 0FC1                          l1058 0F8C  
                        l1084 0045                          l1076 00A5                          l1156 021F  
                        l1092 006A                          l1172 0637                          l1164 05A7  
                        l1068 0FC2                          l1086 004F                          l1078 00EB  
                        l1158 022A                          l1094 0081                          l1174 065A  
                        l1096 008A                          l1088 005C                          l1176 07DC  
                        l1168 05B0                          l1098 009B                          u1000 05F9  
                        u1001 05FA                          u1010 0637                          u1002 05FF  
                        u1011 0636                          u1003 0600                          u1020 068A  
                        u1013 0633                          u1030 06A3                          u1040 06C3  
                        u1025 0685                          u1050 0723                          u1035 069E  
                        u1060 078D                          u1061 078E                          u1045 06BE  
                        u1070 079F                          u1062 0793                          u1071 07A0  
                        u1063 0794                          u1055 071E                          u1072 07A5  
                        u1073 07A6                          u1177 0218                          _PEIE 005E  
     BMP280_Configure@standby 007A                          _main 0F14                          btemp 007E  
                        start 0001        BMP280_begin@T_sampling 0023         __size_of_BMP280_Read8 003C  
            ?_I2C_Master_Init 0025              ?_I2C_Master_Read 0071              ?_I2C_Master_Wait 0071  
       __size_of_BMP280_Write 002D              ?_I2C_Master_Stop 0071         __size_of_BMP280_begin 00DE  
             __end_of___aldiv 01F5                         ?_main 0071                         _ANSEL 0188  
             __end_of___lldiv 0158               BMP280_Read8@ret 007A                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _SSPIE 0463                         _TRISE 0089  
                       _SSPIF 0063           ___lmul@multiplicand 002A                         _adc_P 0063  
                       _adc_T 0067                         _setup 0EF8                         status 0003  
                       wtemp0 007E                  _BMP280_Read8 0FC4                  _BMP280_Write 0F31  
                _BMP280_calib 00B5                  _BMP280_begin 01F5               __initialization 07EB  
                __end_of_main 0F31        __size_of_BMP280_Read16 004C                        ??_main 007E  
           ?_I2C_Master_Start 0071             ?_I2C_Master_Write 0071              BMP280_Read16@ret 007C  
          ??_I2C_Master_Start 0071            ??_I2C_Master_Write 0073                        ?_setup 0071  
                      _ANSELH 0189                        _SSPADD 0093                        _TRISC3 043B  
                      _TRISC4 043C                        _SSPCON 0014                        _SSPBUF 0013  
                      ___lmul 005C                     ??___aldiv 0079                     ??___lldiv 0079  
                      _buffer 00A0                        _t_fine 005F    BMP280_Configure@P_sampling 0078  
    __end_of_BMP280_Configure 005C                 _BMP280_Read16 00A4       __end_of__initialization 07FC  
  BMP280_Configure@T_sampling 0077                __pcstackCOMMON 0071           _BMP280_readPressure 02D3  
               __end_of_setup 0F14          ?_BMP280_readPressure 0071                       ??_setup 007E  
                  __pbssBANK0 005F                    __pbssBANK1 00A0                ?_BMP280_Read16 0077  
     BMP280_readPressure@var1 005B       BMP280_readPressure@var2 0053       BMP280_readPressure@pres 004E  
                  __pmaintext 0F14                       ?___lmul 0026                ___lmul@product 002E  
            BMP280_begin@mode 002B         ??_BMP280_readPressure 0032                       _SSPCON2 0091  
     _BMP280_readPressure$934 004F       _BMP280_readPressure$935 0042       _BMP280_readPressure$936 0046  
     _BMP280_readPressure$937 004A                       _SSPSTAT 0094    BMP280_Configure@_ctrl_meas 0021  
        BMP280_Write@reg_addr 0076                       ___aldiv 0158               __size_of___lmul 0048  
                     ___lldiv 00F0                       __ptext1 0EF8                       __ptext2 0F8C  
                     __ptext3 02D3                       __ptext4 005C                       __ptext5 00F0  
                     __ptext6 0158                       __ptext7 01F5                       __ptext8 0FC4  
                     __ptext9 00A4              ___aldiv@dividend 0075      __size_of_I2C_Master_Init 0038  
    __size_of_I2C_Master_Read 002E      __size_of_I2C_Master_Wait 000D      __size_of_I2C_Master_Stop 0009  
                     _presmas 006B               ??_BMP280_Read16 0079                       clrloop0 0ED5  
        end_of_initialization 07FC         BMP280_Read16@reg_addr 007B            BMP280_begin@filter 0025  
   __size_of_I2C_Master_Start 0009     __size_of_I2C_Master_Write 000A               ___lldiv@divisor 0071  
             ___lldiv@counter 0024              ___aldiv@quotient 0022              I2C_Master_Init@c 0025  
            I2C_Master_Read@a 0071                     _TRISCbits 0087             ?_BMP280_Configure 0077  
          ??_BMP280_Configure 007B        BMP280_Configure@filter 0079                __end_of___lmul 00A4  
         start_initialization 07EB             ??_I2C_Master_Init 007A             ??_I2C_Master_Read 0073  
           ??_I2C_Master_Wait 0071             ??_I2C_Master_Stop 0071                      ??___lmul 007A  
        BMP280_Configure@mode 0020                     ___latbits 0002                 __pcstackBANK0 0020  
               ?_BMP280_Read8 0071              _I2C_Master_Start 0EDC              _I2C_Master_Write 0EEE  
               ?_BMP280_Write 0073                 ?_BMP280_begin 0023          BMP280_readPressure@p 0057  
           BMP280_Write@_data 0073                      ?___aldiv 0071                      ?___lldiv 0071  
 __end_of_BMP280_readPressure 07EB                __size_of_setup 001C               ___aldiv@divisor 0071  
             ___aldiv@counter 0020                ??_BMP280_Read8 0077                     clear_ram0 0ED4  
              ??_BMP280_Write 0074                ??_BMP280_begin 0027           I2C_Master_Read@temp 0075  
           ___lmul@multiplier 0026         __end_of_BMP280_Read16 00F0     __size_of_BMP280_Configure 0048  
            __size_of___aldiv 009D              __size_of___lldiv 0068               _I2C_Master_Init 0F8C  
             _I2C_Master_Read 0F5E               _I2C_Master_Wait 0007               _I2C_Master_Stop 0EE5  
                    __ptext10 0F5E                      __ptext11 0014                      __ptext12 0F31  
                    __ptext13 0EEE                      __ptext14 0EE5                      __ptext15 0EDC  
                    __ptext16 0007                 __size_of_main 001D                      _pressure 006C  
        __end_of_BMP280_Read8 1000      __end_of_I2C_Master_Start 0EE5      __end_of_I2C_Master_Write 0EF8  
        __end_of_BMP280_Write 0F5E          __end_of_BMP280_begin 02D3          BMP280_Read8@reg_addr 0079  
            ___lldiv@dividend 0075           BMP280_begin@standby 0026       __end_of_I2C_Master_Init 0FC4  
     __end_of_I2C_Master_Read 0F8C       __end_of_I2C_Master_Wait 0014       __end_of_I2C_Master_Stop 0EEE  
                 _temperature 00B1              ___lldiv@quotient 0020             I2C_Master_Write@d 0071  
                ___aldiv@sign 0021                   _SSPCON2bits 0091  
