

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 14:42:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0013                     _SSPBUF	set	19
   379  0014                     _SSPCON	set	20
   380  0008                     _PORTD	set	8
   381  0006                     _PORTB	set	6
   382  0006                     _PORTBbits	set	6
   383  0063                     _SSPIF	set	99
   384  005E                     _PEIE	set	94
   385  005F                     _GIE	set	95
   386  0091                     _SSPCON2bits	set	145
   387  0087                     _TRISCbits	set	135
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0091                     _SSPCON2	set	145
   391  0088                     _TRISD	set	136
   392  0089                     _TRISE	set	137
   393  0086                     _TRISB	set	134
   394  0087                     _TRISC	set	135
   395  0463                     _SSPIE	set	1123
   396  043C                     _TRISC4	set	1084
   397  043B                     _TRISC3	set	1083
   398  0189                     _ANSELH	set	393
   399  0188                     _ANSEL	set	392
   400                           
   401                           	psect	cinit
   402  07EB                     start_initialization:	
   403                           ; #config settings
   404                           
   405  07EB                     __initialization:
   406                           
   407                           ; Clear objects allocated to BANK0
   408  07EB  1383               	bcf	3,7	;select IRP bank0
   409  07EC  305F               	movlw	low __pbssBANK0
   410  07ED  0084               	movwf	4
   411  07EE  306E               	movlw	low (__pbssBANK0+15)
   412  07EF  120A  158A  23D3  120A  118A  	fcall	clear_ram0
   413                           
   414                           ; Clear objects allocated to BANK1
   415  07F4  30A0               	movlw	low __pbssBANK1
   416  07F5  0084               	movwf	4
   417  07F6  30D1               	movlw	low (__pbssBANK1+49)
   418  07F7  120A  158A  23D3  120A  118A  	fcall	clear_ram0
   419  07FC                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422  07FC                     __end_of__initialization:
   423  07FC  0183               	clrf	3
   424  07FD  120A  158A  2C40   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	bssBANK0
   427  005F                     __pbssBANK0:
   428  005F                     _t_fine:
   429  005F                     	ds	4
   430  0063                     _adc_T:
   431  0063                     	ds	4
   432  0067                     _presion:
   433  0067                     	ds	2
   434  0069                     _presmas:
   435  0069                     	ds	1
   436  006A                     _temperature:
   437  006A                     	ds	4
   438                           
   439                           	psect	bssBANK1
   440  00A0                     __pbssBANK1:
   441  00A0                     _buffer:
   442  00A0                     	ds	17
   443  00B1                     _adc_P:
   444  00B1                     	ds	4
   445  00B5                     _BMP280_calib:
   446  00B5                     	ds	24
   447  00CD                     _pressure:
   448  00CD                     	ds	4
   449                           
   450                           	psect	clrtext
   451  0BD3                     clear_ram0:	
   452                           ;	Called with FSR containing the base address, and
   453                           ;	W with the last address+1
   454                           
   455  0BD3  0064               	clrwdt	;clear the watchdog before getting into this loop
   456  0BD4                     clrloop0:
   457  0BD4  0180               	clrf	0	;clear RAM location pointed to by FSR
   458  0BD5  0A84               	incf	4,f	;increment pointer
   459  0BD6  0604               	xorwf	4,w	;XOR with final address
   460  0BD7  1903               	btfsc	3,2	;have we reached the end yet?
   461  0BD8  3400               	retlw	0	;all done for this memory range, return
   462  0BD9  0604               	xorwf	4,w	;XOR again to restore value
   463  0BDA  2BD4               	goto	clrloop0	;do the next byte
   464                           
   465                           	psect	cstackCOMMON
   466  0071                     __pcstackCOMMON:
   467  0071                     ?_setup:
   468  0071                     ?_main:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0071                     ?_I2C_Master_Wait:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0071                     ??_I2C_Master_Wait:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0071                     ?_I2C_Master_Start:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0071                     ??_I2C_Master_Start:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0071                     ?_I2C_Master_Stop:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0071                     ??_I2C_Master_Stop:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0071                     ?_I2C_Master_Write:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0071                     ?_BMP280_Read8:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0071                     ?_BMP280_Update:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0071                     ?_BMP280_readTemperature:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0071                     ?_BMP280_readPressure:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0071                     ?_I2C_Master_Read:	
   505                           ; 2 bytes @ 0x0
   506                           
   507  0071                     ?___lldiv:	
   508                           ; 2 bytes @ 0x0
   509                           
   510  0071                     ?___aldiv:	
   511                           ; 4 bytes @ 0x0
   512                           
   513  0071                     I2C_Master_Write@d:	
   514                           ; 4 bytes @ 0x0
   515                           
   516  0071                     I2C_Master_Read@a:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0071                     ___lldiv@divisor:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0071                     ___aldiv@divisor:	
   523                           ; 4 bytes @ 0x0
   524                           
   525                           
   526                           ; 4 bytes @ 0x0
   527  0071                     	ds	2
   528  0073                     ??_I2C_Master_Write:
   529  0073                     ??_I2C_Master_Read:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0073                     ?_BMP280_Write:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0073                     BMP280_Write@_data:	
   536                           ; 1 bytes @ 0x2
   537                           
   538                           
   539                           ; 1 bytes @ 0x2
   540  0073                     	ds	1
   541  0074                     ??_BMP280_Write:
   542                           
   543                           ; 1 bytes @ 0x3
   544  0074                     	ds	1
   545  0075                     I2C_Master_Read@temp:
   546  0075                     ___lldiv@dividend:	
   547                           ; 2 bytes @ 0x4
   548                           
   549  0075                     ___aldiv@dividend:	
   550                           ; 4 bytes @ 0x4
   551                           
   552                           
   553                           ; 4 bytes @ 0x4
   554  0075                     	ds	1
   555  0076                     BMP280_Write@reg_addr:
   556                           
   557                           ; 1 bytes @ 0x5
   558  0076                     	ds	1
   559  0077                     ??_BMP280_Read8:
   560  0077                     ?_BMP280_Configure:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0077                     ??_BMP280_Update:	
   564                           ; 1 bytes @ 0x6
   565                           
   566  0077                     ?_BMP280_Read16:	
   567                           ; 1 bytes @ 0x6
   568                           
   569  0077                     BMP280_Configure@T_sampling:	
   570                           ; 2 bytes @ 0x6
   571                           
   572                           
   573                           ; 1 bytes @ 0x6
   574  0077                     	ds	1
   575  0078                     BMP280_Configure@P_sampling:
   576                           
   577                           ; 1 bytes @ 0x7
   578  0078                     	ds	1
   579  0079                     ??_BMP280_Read16:
   580  0079                     ??___lldiv:	
   581                           ; 1 bytes @ 0x8
   582                           
   583  0079                     ??___aldiv:	
   584                           ; 1 bytes @ 0x8
   585                           
   586  0079                     BMP280_Read8@reg_addr:	
   587                           ; 1 bytes @ 0x8
   588                           
   589  0079                     BMP280_Configure@filter:	
   590                           ; 1 bytes @ 0x8
   591                           
   592                           
   593                           ; 1 bytes @ 0x8
   594  0079                     	ds	1
   595  007A                     ??_I2C_Master_Init:
   596  007A                     ??___lmul:	
   597                           ; 1 bytes @ 0x9
   598                           
   599  007A                     BMP280_Read8@ret:	
   600                           ; 1 bytes @ 0x9
   601                           
   602  007A                     BMP280_Configure@standby:	
   603                           ; 1 bytes @ 0x9
   604                           
   605                           
   606                           ; 1 bytes @ 0x9
   607  007A                     	ds	1
   608  007B                     ??_BMP280_Configure:
   609  007B                     BMP280_Read16@reg_addr:	
   610                           ; 1 bytes @ 0xA
   611                           
   612                           
   613                           ; 1 bytes @ 0xA
   614  007B                     	ds	1
   615  007C                     BMP280_Read16@ret:
   616                           
   617                           ; 2 bytes @ 0xB
   618  007C                     	ds	2
   619  007E                     ??_setup:
   620  007E                     ??_main:	
   621                           ; 1 bytes @ 0xD
   622                           
   623                           
   624                           	psect	cstackBANK0
   625  0020                     __pcstackBANK0:	
   626                           ; 1 bytes @ 0xD
   627                           
   628  0020                     BMP280_Configure@mode:
   629  0020                     ___aldiv@counter:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0020                     BMP280_Update@ret:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0020                     ___lldiv@quotient:	
   636                           ; 4 bytes @ 0x0
   637                           
   638                           
   639                           ; 4 bytes @ 0x0
   640  0020                     	ds	1
   641  0021                     BMP280_Configure@_ctrl_meas:
   642  0021                     ___aldiv@sign:	
   643                           ; 1 bytes @ 0x1
   644                           
   645                           
   646                           ; 1 bytes @ 0x1
   647  0021                     	ds	1
   648  0022                     BMP280_Configure@_config:
   649  0022                     ___aldiv@quotient:	
   650                           ; 1 bytes @ 0x2
   651                           
   652                           
   653                           ; 4 bytes @ 0x2
   654  0022                     	ds	1
   655  0023                     ?_BMP280_begin:
   656  0023                     BMP280_begin@T_sampling:	
   657                           ; 2 bytes @ 0x3
   658                           
   659                           
   660                           ; 1 bytes @ 0x3
   661  0023                     	ds	1
   662  0024                     BMP280_begin@P_sampling:
   663  0024                     ___lldiv@counter:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  0024                     	ds	1
   669  0025                     ?_I2C_Master_Init:
   670  0025                     BMP280_begin@filter:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0025                     I2C_Master_Init@c:	
   674                           ; 1 bytes @ 0x5
   675                           
   676                           
   677                           ; 4 bytes @ 0x5
   678  0025                     	ds	1
   679  0026                     ?___lmul:
   680  0026                     BMP280_begin@standby:	
   681                           ; 4 bytes @ 0x6
   682                           
   683  0026                     ___lmul@multiplier:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 4 bytes @ 0x6
   688  0026                     	ds	1
   689  0027                     ??_BMP280_begin:
   690                           
   691                           ; 1 bytes @ 0x7
   692  0027                     	ds	3
   693  002A                     ___lmul@multiplicand:
   694                           
   695                           ; 4 bytes @ 0xA
   696  002A                     	ds	1
   697  002B                     BMP280_begin@mode:
   698                           
   699                           ; 1 bytes @ 0xB
   700  002B                     	ds	3
   701  002E                     ___lmul@product:
   702                           
   703                           ; 4 bytes @ 0xE
   704  002E                     	ds	4
   705  0032                     ??_BMP280_readTemperature:
   706  0032                     ??_BMP280_readPressure:	
   707                           ; 1 bytes @ 0x12
   708                           
   709                           
   710                           ; 1 bytes @ 0x12
   711  0032                     	ds	16
   712  0042                     BMP280_readTemperature@var1:
   713  0042                     _BMP280_readPressure$966:	
   714                           ; 4 bytes @ 0x22
   715                           
   716                           
   717                           ; 4 bytes @ 0x22
   718  0042                     	ds	4
   719  0046                     BMP280_readTemperature@var2:
   720  0046                     _BMP280_readPressure$967:	
   721                           ; 4 bytes @ 0x26
   722                           
   723                           
   724                           ; 4 bytes @ 0x26
   725  0046                     	ds	4
   726  004A                     _BMP280_readTemperature$964:
   727  004A                     _BMP280_readPressure$968:	
   728                           ; 4 bytes @ 0x2A
   729                           
   730                           
   731                           ; 4 bytes @ 0x2A
   732  004A                     	ds	4
   733  004E                     BMP280_readTemperature@temp:
   734  004E                     BMP280_readPressure@pres:	
   735                           ; 1 bytes @ 0x2E
   736                           
   737                           
   738                           ; 1 bytes @ 0x2E
   739  004E                     	ds	1
   740  004F                     _BMP280_readTemperature$963:
   741  004F                     _BMP280_readPressure$965:	
   742                           ; 4 bytes @ 0x2F
   743                           
   744                           
   745                           ; 4 bytes @ 0x2F
   746  004F                     	ds	4
   747  0053                     BMP280_readPressure@var2:
   748                           
   749                           ; 4 bytes @ 0x33
   750  0053                     	ds	4
   751  0057                     BMP280_readPressure@p:
   752                           
   753                           ; 4 bytes @ 0x37
   754  0057                     	ds	4
   755  005B                     BMP280_readPressure@var1:
   756                           
   757                           ; 4 bytes @ 0x3B
   758  005B                     	ds	4
   759                           
   760                           	psect	maintext
   761  0C40                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 145 in file "main_m.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : B00/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels required when called:    5
   787 ;; This function calls:
   788 ;;		_BMP280_begin
   789 ;;		_BMP280_readPressure
   790 ;;		_BMP280_readTemperature
   791 ;;		_setup
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _main
   799  0C40                     _main:
   800  0C40                     l1238:	
   801                           ;incstack = 0
   802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   803                           
   804                           
   805                           ;main_m.c: 146:     setup();
   806  0C40  120A  158A  23F7  120A  158A  	fcall	_setup
   807                           
   808                           ;main_m.c: 147:     if(BMP280_begin(MODE_NORMAL, SAMPLING_X1, SAMPLING_X1, FILTER_OFF, S
      +                          TANDBY_0_5) == 0)
   809  0C45  1283               	bcf	3,5	;RP0=0, select bank0
   810  0C46  1303               	bcf	3,6	;RP1=0, select bank0
   811  0C47  01A3               	clrf	BMP280_begin@T_sampling
   812  0C48  0AA3               	incf	BMP280_begin@T_sampling,f
   813  0C49  01A4               	clrf	BMP280_begin@P_sampling
   814  0C4A  0AA4               	incf	BMP280_begin@P_sampling,f
   815  0C4B  01A5               	clrf	BMP280_begin@filter
   816  0C4C  01A6               	clrf	BMP280_begin@standby
   817  0C4D  3003               	movlw	3
   818  0C4E  120A  158A  2718  120A  158A  	fcall	_BMP280_begin
   819  0C53  1283               	bcf	3,5	;RP0=0, select bank0
   820  0C54  1303               	bcf	3,6	;RP1=0, select bank0
   821  0C55  0823               	movf	?_BMP280_begin,w
   822  0C56  0424               	iorwf	?_BMP280_begin+1,w
   823  0C57  1D03               	btfss	3,2
   824  0C58  2C5A               	goto	u1161
   825  0C59  2C5B               	goto	u1160
   826  0C5A                     u1161:
   827  0C5A  2C5D               	goto	l1242
   828  0C5B                     u1160:
   829  0C5B                     l1240:
   830                           
   831                           ;main_m.c: 148: {;main_m.c: 149:         PORTBbits.RB2 = 1;
   832  0C5B  1506               	bsf	6,2	;volatile
   833  0C5C                     l46:	
   834                           ;main_m.c: 150:     while (1) {}}
   835                           
   836  0C5C                     l47:
   837  0C5C  2C5C               	goto	l46
   838  0C5D                     l1242:
   839                           
   840                           ;main_m.c: 152:     BMP280_readTemperature(&temperature);
   841  0C5D  306A               	movlw	(low (_temperature| 0))& (0+255)
   842  0C5E  120A  118A  20B3  120A  158A  	fcall	_BMP280_readTemperature
   843                           
   844                           ;main_m.c: 153:     BMP280_readPressure(&pressure);
   845  0C63  30CD               	movlw	(low (_pressure| 0))& (0+255)
   846  0C64  120A  118A  22C5  120A  158A  	fcall	_BMP280_readPressure
   847  0C69  2C5D               	goto	l1242
   848  0C6A  120A  118A  2801   	ljmp	start
   849  0C6D                     __end_of_main:
   850                           
   851                           	psect	text1
   852  0BF7                     __ptext1:	
   853 ;; *************** function _setup *****************
   854 ;; Defined at:
   855 ;;		line 173 in file "main_m.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_I2C_Master_Init
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _setup
   885  0BF7                     _setup:
   886  0BF7                     l1188:	
   887                           ;incstack = 0
   888                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   889                           
   890                           
   891                           ;main_m.c: 174:     ANSEL = 0;
   892  0BF7  1683               	bsf	3,5	;RP0=1, select bank3
   893  0BF8  1703               	bsf	3,6	;RP1=1, select bank3
   894  0BF9  0188               	clrf	8	;volatile
   895                           
   896                           ;main_m.c: 175:     ANSELH = 0;
   897  0BFA  0189               	clrf	9	;volatile
   898                           
   899                           ;main_m.c: 176:     TRISC = 0;
   900  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
   901  0BFC  1303               	bcf	3,6	;RP1=0, select bank1
   902  0BFD  0187               	clrf	7	;volatile
   903                           
   904                           ;main_m.c: 177:     TRISB = 0;
   905  0BFE  0186               	clrf	6	;volatile
   906                           
   907                           ;main_m.c: 178:     TRISE = 0;
   908  0BFF  0189               	clrf	9	;volatile
   909                           
   910                           ;main_m.c: 179:     TRISD = 0;
   911  0C00  0188               	clrf	8	;volatile
   912                           
   913                           ;main_m.c: 180:     PORTB = 0;
   914  0C01  1283               	bcf	3,5	;RP0=0, select bank0
   915  0C02  1303               	bcf	3,6	;RP1=0, select bank0
   916  0C03  0186               	clrf	6	;volatile
   917                           
   918                           ;main_m.c: 181:     PORTD = 0;
   919  0C04  0188               	clrf	8	;volatile
   920  0C05                     l1190:
   921                           
   922                           ;main_m.c: 182:     I2C_Master_Init(100000);
   923  0C05  3000               	movlw	0
   924  0C06  00A8               	movwf	I2C_Master_Init@c+3
   925  0C07  3001               	movlw	1
   926  0C08  00A7               	movwf	I2C_Master_Init@c+2
   927  0C09  3086               	movlw	134
   928  0C0A  00A6               	movwf	I2C_Master_Init@c+1
   929  0C0B  30A0               	movlw	160
   930  0C0C  00A5               	movwf	I2C_Master_Init@c
   931  0C0D  120A  158A  249B  120A  158A  	fcall	_I2C_Master_Init
   932  0C12                     l55:
   933  0C12  0008               	return
   934  0C13                     __end_of_setup:
   935                           
   936                           	psect	text2
   937  0C9B                     __ptext2:	
   938 ;; *************** function _I2C_Master_Init *****************
   939 ;; Defined at:
   940 ;;		line 16 in file "I2C.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  c               4    5[BANK0 ] const unsigned long 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       4       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          4       0       0       0       0
   957 ;;      Totals:         4       4       0       0       0
   958 ;;Total ram usage:        8 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		___lldiv
   963 ;; This function is called by:
   964 ;;		_setup
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _I2C_Master_Init
   970  0C9B                     _I2C_Master_Init:
   971  0C9B                     l1074:	
   972                           ;incstack = 0
   973                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   974                           
   975                           
   976                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   977  0C9B  3028               	movlw	40
   978  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
   979  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
   980  0C9E  0094               	movwf	20	;volatile
   981  0C9F                     l1076:
   982                           
   983                           ;I2C.c: 19:     SSPCON2 = 0;
   984  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
   985  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
   986  0CA1  0191               	clrf	17	;volatile
   987  0CA2                     l1078:
   988                           
   989                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   990  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
   991  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
   992  0CA4  0825               	movf	I2C_Master_Init@c,w
   993  0CA5  00FA               	movwf	??_I2C_Master_Init
   994  0CA6  0826               	movf	I2C_Master_Init@c+1,w
   995  0CA7  00FB               	movwf	??_I2C_Master_Init+1
   996  0CA8  0827               	movf	I2C_Master_Init@c+2,w
   997  0CA9  00FC               	movwf	??_I2C_Master_Init+2
   998  0CAA  0828               	movf	I2C_Master_Init@c+3,w
   999  0CAB  00FD               	movwf	??_I2C_Master_Init+3
  1000  0CAC  3002               	movlw	2
  1001  0CAD                     u705:
  1002  0CAD  1003               	clrc
  1003  0CAE  0DFA               	rlf	??_I2C_Master_Init,f
  1004  0CAF  0DFB               	rlf	??_I2C_Master_Init+1,f
  1005  0CB0  0DFC               	rlf	??_I2C_Master_Init+2,f
  1006  0CB1  0DFD               	rlf	??_I2C_Master_Init+3,f
  1007  0CB2                     u700:
  1008  0CB2  3EFF               	addlw	-1
  1009  0CB3  1D03               	skipz
  1010  0CB4  2CAD               	goto	u705
  1011  0CB5  087D               	movf	??_I2C_Master_Init+3,w
  1012  0CB6  00F4               	movwf	___lldiv@divisor+3
  1013  0CB7  087C               	movf	??_I2C_Master_Init+2,w
  1014  0CB8  00F3               	movwf	___lldiv@divisor+2
  1015  0CB9  087B               	movf	??_I2C_Master_Init+1,w
  1016  0CBA  00F2               	movwf	___lldiv@divisor+1
  1017  0CBB  087A               	movf	??_I2C_Master_Init,w
  1018  0CBC  00F1               	movwf	___lldiv@divisor
  1019  0CBD  3000               	movlw	0
  1020  0CBE  00F8               	movwf	___lldiv@dividend+3
  1021  0CBF  307A               	movlw	122
  1022  0CC0  00F7               	movwf	___lldiv@dividend+2
  1023  0CC1  3012               	movlw	18
  1024  0CC2  00F6               	movwf	___lldiv@dividend+1
  1025  0CC3  3000               	movlw	0
  1026  0CC4  00F5               	movwf	___lldiv@dividend
  1027  0CC5  120A  158A  25EB  120A  158A  	fcall	___lldiv
  1028  0CCA  0871               	movf	?___lldiv,w
  1029  0CCB  3EFF               	addlw	255
  1030  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0CCE  0093               	movwf	19	;volatile
  1033  0CCF                     l1080:
  1034                           
  1035                           ;I2C.c: 21:     SSPSTAT = 0;
  1036  0CCF  0194               	clrf	20	;volatile
  1037  0CD0                     l1082:
  1038                           
  1039                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1040  0CD0  1587               	bsf	7,3	;volatile
  1041  0CD1                     l1084:
  1042                           
  1043                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1044  0CD1  1607               	bsf	7,4	;volatile
  1045  0CD2                     l84:
  1046  0CD2  0008               	return
  1047  0CD3                     __end_of_I2C_Master_Init:
  1048                           
  1049                           	psect	text3
  1050  00B3                     __ptext3:	
  1051 ;; *************** function _BMP280_readTemperature *****************
  1052 ;; Defined at:
  1053 ;;		line 241 in file "BMP280.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  temp            1    wreg     PTR long 
  1056 ;;		 -> temperature(4), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  temp            1   46[BANK0 ] PTR long 
  1059 ;;		 -> temperature(4), 
  1060 ;;  var2            4   38[BANK0 ] long 
  1061 ;;  var1            4   34[BANK0 ] long 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2    8[None  ] int 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0      17       0       0       0
  1073 ;;      Temps:          0      16       0       0       0
  1074 ;;      Totals:         0      33       0       0       0
  1075 ;;Total ram usage:       33 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    3
  1078 ;; This function calls:
  1079 ;;		_BMP280_Update
  1080 ;;		___aldiv
  1081 ;;		___lmul
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _BMP280_readTemperature
  1089  00B3                     _BMP280_readTemperature:
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _BMP280_readTemperature: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1093                           ;BMP280_readTemperature@temp stored from wreg
  1094  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00B5  00CE               	movwf	BMP280_readTemperature@temp
  1097  00B6                     l1212:
  1098                           
  1099                           ;BMP280.c: 241: int BMP280_readTemperature(int32_t *temp);BMP280.c: 242: {;BMP280.c: 243
      +                          :   int32_t var1, var2;;BMP280.c: 245:   BMP280_Update();
  1100  00B6  120A  158A  2653  120A  118A  	fcall	_BMP280_Update
  1101                           
  1102                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1103  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1104  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1105  00BD  0835               	movf	_BMP280_calib^(0+128),w
  1106  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1107  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1108  00C0  00B2               	movwf	??_BMP280_readTemperature
  1109  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1110  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1111  00C3  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1112  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1113  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1114  00C6  00B3               	movwf	??_BMP280_readTemperature+1
  1115  00C7  01B4               	clrf	??_BMP280_readTemperature+2
  1116  00C8  01B5               	clrf	??_BMP280_readTemperature+3
  1117  00C9  3001               	movlw	1
  1118  00CA                     u945:
  1119  00CA  1003               	clrc
  1120  00CB  0DB2               	rlf	??_BMP280_readTemperature,f
  1121  00CC  0DB3               	rlf	??_BMP280_readTemperature+1,f
  1122  00CD  0DB4               	rlf	??_BMP280_readTemperature+2,f
  1123  00CE  0DB5               	rlf	??_BMP280_readTemperature+3,f
  1124  00CF                     u940:
  1125  00CF  3EFF               	addlw	-1
  1126  00D0  1D03               	skipz
  1127  00D1  28CA               	goto	u945
  1128  00D2  3000               	movlw	0
  1129  00D3  00F4               	movwf	___aldiv@divisor+3
  1130  00D4  3000               	movlw	0
  1131  00D5  00F3               	movwf	___aldiv@divisor+2
  1132  00D6  3000               	movlw	0
  1133  00D7  00F2               	movwf	___aldiv@divisor+1
  1134  00D8  3008               	movlw	8
  1135  00D9  00F1               	movwf	___aldiv@divisor
  1136  00DA  0866               	movf	_adc_T+3,w
  1137  00DB  00F8               	movwf	___aldiv@dividend+3
  1138  00DC  0865               	movf	_adc_T+2,w
  1139  00DD  00F7               	movwf	___aldiv@dividend+2
  1140  00DE  0864               	movf	_adc_T+1,w
  1141  00DF  00F6               	movwf	___aldiv@dividend+1
  1142  00E0  0863               	movf	_adc_T,w
  1143  00E1  00F5               	movwf	___aldiv@dividend
  1144  00E2  120A  118A  2016  120A  118A  	fcall	___aldiv
  1145  00E7  0871               	movf	?___aldiv,w
  1146  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1147  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00EA  00B6               	movwf	??_BMP280_readTemperature+4
  1149  00EB  0872               	movf	?___aldiv+1,w
  1150  00EC  00B7               	movwf	??_BMP280_readTemperature+5
  1151  00ED  0873               	movf	?___aldiv+2,w
  1152  00EE  00B8               	movwf	??_BMP280_readTemperature+6
  1153  00EF  0874               	movf	?___aldiv+3,w
  1154  00F0  00B9               	movwf	??_BMP280_readTemperature+7
  1155  00F1  0832               	movf	??_BMP280_readTemperature,w
  1156  00F2  02B6               	subwf	??_BMP280_readTemperature+4,f
  1157  00F3  0833               	movf	??_BMP280_readTemperature+1,w
  1158  00F4  1C03               	skipc
  1159  00F5  0F33               	incfsz	??_BMP280_readTemperature+1,w
  1160  00F6  28F8               	goto	u951
  1161  00F7  28F9               	goto	u952
  1162  00F8                     u951:
  1163  00F8  02B7               	subwf	??_BMP280_readTemperature+5,f
  1164  00F9                     u952:
  1165  00F9  0834               	movf	??_BMP280_readTemperature+2,w
  1166  00FA  1C03               	skipc
  1167  00FB  0F34               	incfsz	??_BMP280_readTemperature+2,w
  1168  00FC  28FE               	goto	u953
  1169  00FD  28FF               	goto	u954
  1170  00FE                     u953:
  1171  00FE  02B8               	subwf	??_BMP280_readTemperature+6,f
  1172  00FF                     u954:
  1173  00FF  0835               	movf	??_BMP280_readTemperature+3,w
  1174  0100  1C03               	skipc
  1175  0101  0F35               	incfsz	??_BMP280_readTemperature+3,w
  1176  0102  2904               	goto	u955
  1177  0103  2905               	goto	u956
  1178  0104                     u955:
  1179  0104  02B9               	subwf	??_BMP280_readTemperature+7,f
  1180  0105                     u956:
  1181  0105  0839               	movf	??_BMP280_readTemperature+7,w
  1182  0106  00A9               	movwf	___lmul@multiplier+3
  1183  0107  0838               	movf	??_BMP280_readTemperature+6,w
  1184  0108  00A8               	movwf	___lmul@multiplier+2
  1185  0109  0837               	movf	??_BMP280_readTemperature+5,w
  1186  010A  00A7               	movwf	___lmul@multiplier+1
  1187  010B  0836               	movf	??_BMP280_readTemperature+4,w
  1188  010C  00A6               	movwf	___lmul@multiplier
  1189  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1190  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1191  010F  0837               	movf	(_BMP280_calib^(0+128)+2),w
  1192  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0112  00AA               	movwf	___lmul@multiplicand
  1195  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1196  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1197  0115  0838               	movf	((_BMP280_calib+1)^(0+128)+2),w
  1198  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0118  00AB               	movwf	___lmul@multiplicand+1
  1201  0119  3000               	movlw	0
  1202  011A  1BAB               	btfsc	___lmul@multiplicand+1,7
  1203  011B  30FF               	movlw	255
  1204  011C  00AC               	movwf	___lmul@multiplicand+2
  1205  011D  00AD               	movwf	___lmul@multiplicand+3
  1206  011E  120A  158A  2557  120A  118A  	fcall	___lmul
  1207  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0125  0829               	movf	?___lmul+3,w
  1210  0126  00D2               	movwf	_BMP280_readTemperature$963+3
  1211  0127  0828               	movf	?___lmul+2,w
  1212  0128  00D1               	movwf	_BMP280_readTemperature$963+2
  1213  0129  0827               	movf	?___lmul+1,w
  1214  012A  00D0               	movwf	_BMP280_readTemperature$963+1
  1215  012B  0826               	movf	?___lmul,w
  1216  012C  00CF               	movwf	_BMP280_readTemperature$963
  1217                           
  1218                           ;BMP280.c: 248:   var1 = ((((adc_T / 8) - ((int32_t)BMP280_calib.dig_T1 * 2))) *
  1219  012D  3000               	movlw	0
  1220  012E  00F4               	movwf	___aldiv@divisor+3
  1221  012F  3000               	movlw	0
  1222  0130  00F3               	movwf	___aldiv@divisor+2
  1223  0131  3008               	movlw	8
  1224  0132  00F2               	movwf	___aldiv@divisor+1
  1225  0133  3000               	movlw	0
  1226  0134  00F1               	movwf	___aldiv@divisor
  1227  0135  0852               	movf	_BMP280_readTemperature$963+3,w
  1228  0136  00F8               	movwf	___aldiv@dividend+3
  1229  0137  0851               	movf	_BMP280_readTemperature$963+2,w
  1230  0138  00F7               	movwf	___aldiv@dividend+2
  1231  0139  0850               	movf	_BMP280_readTemperature$963+1,w
  1232  013A  00F6               	movwf	___aldiv@dividend+1
  1233  013B  084F               	movf	_BMP280_readTemperature$963,w
  1234  013C  00F5               	movwf	___aldiv@dividend
  1235  013D  120A  118A  2016  120A  118A  	fcall	___aldiv
  1236  0142  0874               	movf	?___aldiv+3,w
  1237  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0145  00C5               	movwf	BMP280_readTemperature@var1+3
  1240  0146  0873               	movf	?___aldiv+2,w
  1241  0147  00C4               	movwf	BMP280_readTemperature@var1+2
  1242  0148  0872               	movf	?___aldiv+1,w
  1243  0149  00C3               	movwf	BMP280_readTemperature@var1+1
  1244  014A  0871               	movf	?___aldiv,w
  1245  014B  00C2               	movwf	BMP280_readTemperature@var1
  1246                           
  1247                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1248  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1249  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1250  014E  0835               	movf	_BMP280_calib^(0+128),w
  1251  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0151  00B2               	movwf	??_BMP280_readTemperature
  1254  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0154  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1257  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0157  00B3               	movwf	??_BMP280_readTemperature+1
  1260  0158  01B4               	clrf	??_BMP280_readTemperature+2
  1261  0159  01B5               	clrf	??_BMP280_readTemperature+3
  1262  015A  3000               	movlw	0
  1263  015B  00F4               	movwf	___aldiv@divisor+3
  1264  015C  3000               	movlw	0
  1265  015D  00F3               	movwf	___aldiv@divisor+2
  1266  015E  3000               	movlw	0
  1267  015F  00F2               	movwf	___aldiv@divisor+1
  1268  0160  3010               	movlw	16
  1269  0161  00F1               	movwf	___aldiv@divisor
  1270  0162  0866               	movf	_adc_T+3,w
  1271  0163  00F8               	movwf	___aldiv@dividend+3
  1272  0164  0865               	movf	_adc_T+2,w
  1273  0165  00F7               	movwf	___aldiv@dividend+2
  1274  0166  0864               	movf	_adc_T+1,w
  1275  0167  00F6               	movwf	___aldiv@dividend+1
  1276  0168  0863               	movf	_adc_T,w
  1277  0169  00F5               	movwf	___aldiv@dividend
  1278  016A  120A  118A  2016  120A  118A  	fcall	___aldiv
  1279  016F  0871               	movf	?___aldiv,w
  1280  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0172  00B6               	movwf	??_BMP280_readTemperature+4
  1283  0173  0872               	movf	?___aldiv+1,w
  1284  0174  00B7               	movwf	??_BMP280_readTemperature+5
  1285  0175  0873               	movf	?___aldiv+2,w
  1286  0176  00B8               	movwf	??_BMP280_readTemperature+6
  1287  0177  0874               	movf	?___aldiv+3,w
  1288  0178  00B9               	movwf	??_BMP280_readTemperature+7
  1289  0179  0832               	movf	??_BMP280_readTemperature,w
  1290  017A  02B6               	subwf	??_BMP280_readTemperature+4,f
  1291  017B  0833               	movf	??_BMP280_readTemperature+1,w
  1292  017C  1C03               	skipc
  1293  017D  0F33               	incfsz	??_BMP280_readTemperature+1,w
  1294  017E  2980               	goto	u961
  1295  017F  2981               	goto	u962
  1296  0180                     u961:
  1297  0180  02B7               	subwf	??_BMP280_readTemperature+5,f
  1298  0181                     u962:
  1299  0181  0834               	movf	??_BMP280_readTemperature+2,w
  1300  0182  1C03               	skipc
  1301  0183  0F34               	incfsz	??_BMP280_readTemperature+2,w
  1302  0184  2986               	goto	u963
  1303  0185  2987               	goto	u964
  1304  0186                     u963:
  1305  0186  02B8               	subwf	??_BMP280_readTemperature+6,f
  1306  0187                     u964:
  1307  0187  0835               	movf	??_BMP280_readTemperature+3,w
  1308  0188  1C03               	skipc
  1309  0189  0F35               	incfsz	??_BMP280_readTemperature+3,w
  1310  018A  298C               	goto	u965
  1311  018B  298D               	goto	u966
  1312  018C                     u965:
  1313  018C  02B9               	subwf	??_BMP280_readTemperature+7,f
  1314  018D                     u966:
  1315  018D  0839               	movf	??_BMP280_readTemperature+7,w
  1316  018E  00A9               	movwf	___lmul@multiplier+3
  1317  018F  0838               	movf	??_BMP280_readTemperature+6,w
  1318  0190  00A8               	movwf	___lmul@multiplier+2
  1319  0191  0837               	movf	??_BMP280_readTemperature+5,w
  1320  0192  00A7               	movwf	___lmul@multiplier+1
  1321  0193  0836               	movf	??_BMP280_readTemperature+4,w
  1322  0194  00A6               	movwf	___lmul@multiplier
  1323  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0197  0835               	movf	_BMP280_calib^(0+128),w
  1326  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1328  019A  00BA               	movwf	??_BMP280_readTemperature+8
  1329  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1330  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1331  019D  0836               	movf	(_BMP280_calib+1)^(0+128),w
  1332  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1333  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1334  01A0  00BB               	movwf	??_BMP280_readTemperature+9
  1335  01A1  01BC               	clrf	??_BMP280_readTemperature+10
  1336  01A2  01BD               	clrf	??_BMP280_readTemperature+11
  1337  01A3  3000               	movlw	0
  1338  01A4  00F4               	movwf	___aldiv@divisor+3
  1339  01A5  3000               	movlw	0
  1340  01A6  00F3               	movwf	___aldiv@divisor+2
  1341  01A7  3000               	movlw	0
  1342  01A8  00F2               	movwf	___aldiv@divisor+1
  1343  01A9  3010               	movlw	16
  1344  01AA  00F1               	movwf	___aldiv@divisor
  1345  01AB  0866               	movf	_adc_T+3,w
  1346  01AC  00F8               	movwf	___aldiv@dividend+3
  1347  01AD  0865               	movf	_adc_T+2,w
  1348  01AE  00F7               	movwf	___aldiv@dividend+2
  1349  01AF  0864               	movf	_adc_T+1,w
  1350  01B0  00F6               	movwf	___aldiv@dividend+1
  1351  01B1  0863               	movf	_adc_T,w
  1352  01B2  00F5               	movwf	___aldiv@dividend
  1353  01B3  120A  118A  2016  120A  118A  	fcall	___aldiv
  1354  01B8  0871               	movf	?___aldiv,w
  1355  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1356  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1357  01BB  00BE               	movwf	??_BMP280_readTemperature+12
  1358  01BC  0872               	movf	?___aldiv+1,w
  1359  01BD  00BF               	movwf	??_BMP280_readTemperature+13
  1360  01BE  0873               	movf	?___aldiv+2,w
  1361  01BF  00C0               	movwf	??_BMP280_readTemperature+14
  1362  01C0  0874               	movf	?___aldiv+3,w
  1363  01C1  00C1               	movwf	??_BMP280_readTemperature+15
  1364  01C2  083A               	movf	??_BMP280_readTemperature+8,w
  1365  01C3  02BE               	subwf	??_BMP280_readTemperature+12,f
  1366  01C4  083B               	movf	??_BMP280_readTemperature+9,w
  1367  01C5  1C03               	skipc
  1368  01C6  0F3B               	incfsz	??_BMP280_readTemperature+9,w
  1369  01C7  29C9               	goto	u971
  1370  01C8  29CA               	goto	u972
  1371  01C9                     u971:
  1372  01C9  02BF               	subwf	??_BMP280_readTemperature+13,f
  1373  01CA                     u972:
  1374  01CA  083C               	movf	??_BMP280_readTemperature+10,w
  1375  01CB  1C03               	skipc
  1376  01CC  0F3C               	incfsz	??_BMP280_readTemperature+10,w
  1377  01CD  29CF               	goto	u973
  1378  01CE  29D0               	goto	u974
  1379  01CF                     u973:
  1380  01CF  02C0               	subwf	??_BMP280_readTemperature+14,f
  1381  01D0                     u974:
  1382  01D0  083D               	movf	??_BMP280_readTemperature+11,w
  1383  01D1  1C03               	skipc
  1384  01D2  0F3D               	incfsz	??_BMP280_readTemperature+11,w
  1385  01D3  29D5               	goto	u975
  1386  01D4  29D6               	goto	u976
  1387  01D5                     u975:
  1388  01D5  02C1               	subwf	??_BMP280_readTemperature+15,f
  1389  01D6                     u976:
  1390  01D6  0841               	movf	??_BMP280_readTemperature+15,w
  1391  01D7  00AD               	movwf	___lmul@multiplicand+3
  1392  01D8  0840               	movf	??_BMP280_readTemperature+14,w
  1393  01D9  00AC               	movwf	___lmul@multiplicand+2
  1394  01DA  083F               	movf	??_BMP280_readTemperature+13,w
  1395  01DB  00AB               	movwf	___lmul@multiplicand+1
  1396  01DC  083E               	movf	??_BMP280_readTemperature+12,w
  1397  01DD  00AA               	movwf	___lmul@multiplicand
  1398  01DE  120A  158A  2557  120A  118A  	fcall	___lmul
  1399  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1400  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1401  01E5  0829               	movf	?___lmul+3,w
  1402  01E6  00D2               	movwf	_BMP280_readTemperature$963+3
  1403  01E7  0828               	movf	?___lmul+2,w
  1404  01E8  00D1               	movwf	_BMP280_readTemperature$963+2
  1405  01E9  0827               	movf	?___lmul+1,w
  1406  01EA  00D0               	movwf	_BMP280_readTemperature$963+1
  1407  01EB  0826               	movf	?___lmul,w
  1408  01EC  00CF               	movwf	_BMP280_readTemperature$963
  1409                           
  1410                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1411  01ED  3000               	movlw	0
  1412  01EE  00F4               	movwf	___aldiv@divisor+3
  1413  01EF  3000               	movlw	0
  1414  01F0  00F3               	movwf	___aldiv@divisor+2
  1415  01F1  3010               	movlw	16
  1416  01F2  00F2               	movwf	___aldiv@divisor+1
  1417  01F3  3000               	movlw	0
  1418  01F4  00F1               	movwf	___aldiv@divisor
  1419  01F5  0852               	movf	_BMP280_readTemperature$963+3,w
  1420  01F6  00F8               	movwf	___aldiv@dividend+3
  1421  01F7  0851               	movf	_BMP280_readTemperature$963+2,w
  1422  01F8  00F7               	movwf	___aldiv@dividend+2
  1423  01F9  0850               	movf	_BMP280_readTemperature$963+1,w
  1424  01FA  00F6               	movwf	___aldiv@dividend+1
  1425  01FB  084F               	movf	_BMP280_readTemperature$963,w
  1426  01FC  00F5               	movwf	___aldiv@dividend
  1427  01FD  120A  118A  2016  120A  118A  	fcall	___aldiv
  1428  0202  0874               	movf	?___aldiv+3,w
  1429  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0205  00A9               	movwf	___lmul@multiplier+3
  1432  0206  0873               	movf	?___aldiv+2,w
  1433  0207  00A8               	movwf	___lmul@multiplier+2
  1434  0208  0872               	movf	?___aldiv+1,w
  1435  0209  00A7               	movwf	___lmul@multiplier+1
  1436  020A  0871               	movf	?___aldiv,w
  1437  020B  00A6               	movwf	___lmul@multiplier
  1438  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1439  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1440  020E  0839               	movf	(_BMP280_calib^(0+128)+4),w
  1441  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0211  00AA               	movwf	___lmul@multiplicand
  1444  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1446  0214  083A               	movf	((_BMP280_calib+1)^(0+128)+4),w
  1447  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0217  00AB               	movwf	___lmul@multiplicand+1
  1450  0218  3000               	movlw	0
  1451  0219  1BAB               	btfsc	___lmul@multiplicand+1,7
  1452  021A  30FF               	movlw	255
  1453  021B  00AC               	movwf	___lmul@multiplicand+2
  1454  021C  00AD               	movwf	___lmul@multiplicand+3
  1455  021D  120A  158A  2557  120A  118A  	fcall	___lmul
  1456  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0224  0829               	movf	?___lmul+3,w
  1459  0225  00CD               	movwf	_BMP280_readTemperature$964+3
  1460  0226  0828               	movf	?___lmul+2,w
  1461  0227  00CC               	movwf	_BMP280_readTemperature$964+2
  1462  0228  0827               	movf	?___lmul+1,w
  1463  0229  00CB               	movwf	_BMP280_readTemperature$964+1
  1464  022A  0826               	movf	?___lmul,w
  1465  022B  00CA               	movwf	_BMP280_readTemperature$964
  1466                           
  1467                           ;BMP280.c: 251:   var2 = (((((adc_T / 16) - ((int32_t)BMP280_calib.dig_T1)) *
  1468  022C  3000               	movlw	0
  1469  022D  00F4               	movwf	___aldiv@divisor+3
  1470  022E  3000               	movlw	0
  1471  022F  00F3               	movwf	___aldiv@divisor+2
  1472  0230  3040               	movlw	64
  1473  0231  00F2               	movwf	___aldiv@divisor+1
  1474  0232  3000               	movlw	0
  1475  0233  00F1               	movwf	___aldiv@divisor
  1476  0234  084D               	movf	_BMP280_readTemperature$964+3,w
  1477  0235  00F8               	movwf	___aldiv@dividend+3
  1478  0236  084C               	movf	_BMP280_readTemperature$964+2,w
  1479  0237  00F7               	movwf	___aldiv@dividend+2
  1480  0238  084B               	movf	_BMP280_readTemperature$964+1,w
  1481  0239  00F6               	movwf	___aldiv@dividend+1
  1482  023A  084A               	movf	_BMP280_readTemperature$964,w
  1483  023B  00F5               	movwf	___aldiv@dividend
  1484  023C  120A  118A  2016  120A  118A  	fcall	___aldiv
  1485  0241  0874               	movf	?___aldiv+3,w
  1486  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0244  00C9               	movwf	BMP280_readTemperature@var2+3
  1489  0245  0873               	movf	?___aldiv+2,w
  1490  0246  00C8               	movwf	BMP280_readTemperature@var2+2
  1491  0247  0872               	movf	?___aldiv+1,w
  1492  0248  00C7               	movwf	BMP280_readTemperature@var2+1
  1493  0249  0871               	movf	?___aldiv,w
  1494  024A  00C6               	movwf	BMP280_readTemperature@var2
  1495  024B                     l1214:
  1496                           
  1497                           ;BMP280.c: 255:   t_fine = var1 + var2;
  1498  024B  0842               	movf	BMP280_readTemperature@var1,w
  1499  024C  0746               	addwf	BMP280_readTemperature@var2,w
  1500  024D  00B2               	movwf	??_BMP280_readTemperature
  1501  024E  3000               	movlw	0
  1502  024F  1803               	skipnc
  1503  0250  3001               	movlw	1
  1504  0251  0743               	addwf	BMP280_readTemperature@var1+1,w
  1505  0252  01B4               	clrf	??_BMP280_readTemperature+2
  1506  0253  1803               	skipnc
  1507  0254  0AB4               	incf	??_BMP280_readTemperature+2,f
  1508  0255  0747               	addwf	BMP280_readTemperature@var2+1,w
  1509  0256  00B3               	movwf	??_BMP280_readTemperature+1
  1510  0257  1803               	skipnc
  1511  0258  0AB4               	incf	??_BMP280_readTemperature+2,f
  1512  0259  0844               	movf	BMP280_readTemperature@var1+2,w
  1513  025A  0734               	addwf	??_BMP280_readTemperature+2,w
  1514  025B  01B5               	clrf	??_BMP280_readTemperature+3
  1515  025C  1803               	skipnc
  1516  025D  0AB5               	incf	??_BMP280_readTemperature+3,f
  1517  025E  0748               	addwf	BMP280_readTemperature@var2+2,w
  1518  025F  00B4               	movwf	??_BMP280_readTemperature+2
  1519  0260  1803               	skipnc
  1520  0261  0AB5               	incf	??_BMP280_readTemperature+3,f
  1521  0262  0845               	movf	BMP280_readTemperature@var1+3,w
  1522  0263  0735               	addwf	??_BMP280_readTemperature+3,w
  1523  0264  0749               	addwf	BMP280_readTemperature@var2+3,w
  1524  0265  00B5               	movwf	??_BMP280_readTemperature+3
  1525  0266  0835               	movf	??_BMP280_readTemperature+3,w
  1526  0267  00E2               	movwf	_t_fine+3
  1527  0268  0834               	movf	??_BMP280_readTemperature+2,w
  1528  0269  00E1               	movwf	_t_fine+2
  1529  026A  0833               	movf	??_BMP280_readTemperature+1,w
  1530  026B  00E0               	movwf	_t_fine+1
  1531  026C  0832               	movf	??_BMP280_readTemperature,w
  1532  026D  00DF               	movwf	_t_fine
  1533  026E                     l1216:
  1534                           
  1535                           ;BMP280.c: 257:   *temp = (t_fine * 5 + 128) / 256;
  1536  026E  3000               	movlw	0
  1537  026F  00F4               	movwf	___aldiv@divisor+3
  1538  0270  3000               	movlw	0
  1539  0271  00F3               	movwf	___aldiv@divisor+2
  1540  0272  3001               	movlw	1
  1541  0273  00F2               	movwf	___aldiv@divisor+1
  1542  0274  3000               	movlw	0
  1543  0275  00F1               	movwf	___aldiv@divisor
  1544  0276  3080               	movlw	128
  1545  0277  00B2               	movwf	??_BMP280_readTemperature
  1546  0278  3000               	movlw	0
  1547  0279  00B3               	movwf	??_BMP280_readTemperature+1
  1548  027A  3000               	movlw	0
  1549  027B  00B4               	movwf	??_BMP280_readTemperature+2
  1550  027C  3000               	movlw	0
  1551  027D  00B5               	movwf	??_BMP280_readTemperature+3
  1552  027E  0862               	movf	_t_fine+3,w
  1553  027F  00A9               	movwf	___lmul@multiplier+3
  1554  0280  0861               	movf	_t_fine+2,w
  1555  0281  00A8               	movwf	___lmul@multiplier+2
  1556  0282  0860               	movf	_t_fine+1,w
  1557  0283  00A7               	movwf	___lmul@multiplier+1
  1558  0284  085F               	movf	_t_fine,w
  1559  0285  00A6               	movwf	___lmul@multiplier
  1560  0286  3000               	movlw	0
  1561  0287  00AD               	movwf	___lmul@multiplicand+3
  1562  0288  3000               	movlw	0
  1563  0289  00AC               	movwf	___lmul@multiplicand+2
  1564  028A  3000               	movlw	0
  1565  028B  00AB               	movwf	___lmul@multiplicand+1
  1566  028C  3005               	movlw	5
  1567  028D  00AA               	movwf	___lmul@multiplicand
  1568  028E  120A  158A  2557  120A  118A  	fcall	___lmul
  1569  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0295  0826               	movf	?___lmul,w
  1572  0296  07B2               	addwf	??_BMP280_readTemperature,f
  1573  0297  0827               	movf	?___lmul+1,w
  1574  0298  1803               	skipnc
  1575  0299  0F27               	incfsz	?___lmul+1,w
  1576  029A  2A9C               	goto	u980
  1577  029B  2A9D               	goto	u981
  1578  029C                     u980:
  1579  029C  07B3               	addwf	??_BMP280_readTemperature+1,f
  1580  029D                     u981:
  1581  029D  0828               	movf	?___lmul+2,w
  1582  029E  1803               	skipnc
  1583  029F  0F28               	incfsz	?___lmul+2,w
  1584  02A0  2AA2               	goto	u982
  1585  02A1  2AA3               	goto	u983
  1586  02A2                     u982:
  1587  02A2  07B4               	addwf	??_BMP280_readTemperature+2,f
  1588  02A3                     u983:
  1589  02A3  0829               	movf	?___lmul+3,w
  1590  02A4  1803               	skipnc
  1591  02A5  0A29               	incf	?___lmul+3,w
  1592  02A6  07B5               	addwf	??_BMP280_readTemperature+3,f
  1593  02A7  0835               	movf	??_BMP280_readTemperature+3,w
  1594  02A8  00F8               	movwf	___aldiv@dividend+3
  1595  02A9  0834               	movf	??_BMP280_readTemperature+2,w
  1596  02AA  00F7               	movwf	___aldiv@dividend+2
  1597  02AB  0833               	movf	??_BMP280_readTemperature+1,w
  1598  02AC  00F6               	movwf	___aldiv@dividend+1
  1599  02AD  0832               	movf	??_BMP280_readTemperature,w
  1600  02AE  00F5               	movwf	___aldiv@dividend
  1601  02AF  120A  118A  2016  120A  118A  	fcall	___aldiv
  1602  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1603  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1604  02B6  084E               	movf	BMP280_readTemperature@temp,w
  1605  02B7  0084               	movwf	4
  1606  02B8  0871               	movf	?___aldiv,w
  1607  02B9  1383               	bcf	3,7	;select IRP bank0
  1608  02BA  0080               	movwf	0
  1609  02BB  0A84               	incf	4,f
  1610  02BC  0872               	movf	?___aldiv+1,w
  1611  02BD  0080               	movwf	0
  1612  02BE  0A84               	incf	4,f
  1613  02BF  0873               	movf	?___aldiv+2,w
  1614  02C0  0080               	movwf	0
  1615  02C1  0A84               	incf	4,f
  1616  02C2  0874               	movf	?___aldiv+3,w
  1617  02C3  0080               	movwf	0
  1618  02C4                     l160:
  1619  02C4  0008               	return
  1620  02C5                     __end_of_BMP280_readTemperature:
  1621                           
  1622                           	psect	text4
  1623  0E53                     __ptext4:	
  1624 ;; *************** function _BMP280_Update *****************
  1625 ;; Defined at:
  1626 ;;		line 210 in file "BMP280.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  ret             4    0[BANK0 ] struct .
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       4       0       0       0
  1642 ;;      Temps:          4       0       0       0       0
  1643 ;;      Totals:         4       4       0       0       0
  1644 ;;Total ram usage:        8 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    2
  1647 ;; This function calls:
  1648 ;;		_I2C_Master_Read
  1649 ;;		_I2C_Master_Start
  1650 ;;		_I2C_Master_Stop
  1651 ;;		_I2C_Master_Write
  1652 ;; This function is called by:
  1653 ;;		_BMP280_readTemperature
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _BMP280_Update
  1659  0E53                     _BMP280_Update:
  1660  0E53                     l1104:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _BMP280_Update: [wreg+status,2+status,0+pclath+cstack]
  1663                           
  1664                           
  1665                           ;BMP280.c: 216:   } ret;;BMP280.c: 217:   ret.b[3] = 0x00;
  1666  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0E55  01A3               	clrf	BMP280_Update@ret+3
  1669  0E56                     l1106:
  1670                           
  1671                           ;BMP280.c: 219:   I2C_Master_Start();
  1672  0E56  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  1673  0E5B                     l1108:
  1674                           
  1675                           ;BMP280.c: 220:   I2C_Master_Write( 0xEE);
  1676  0E5B  30EE               	movlw	238
  1677  0E5C  00F1               	movwf	I2C_Master_Write@d
  1678  0E5D  3000               	movlw	0
  1679  0E5E  00F2               	movwf	I2C_Master_Write@d+1
  1680  0E5F  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  1681  0E64                     l1110:
  1682                           
  1683                           ;BMP280.c: 221:   I2C_Master_Write( 0xF7);
  1684  0E64  30F7               	movlw	247
  1685  0E65  00F1               	movwf	I2C_Master_Write@d
  1686  0E66  3000               	movlw	0
  1687  0E67  00F2               	movwf	I2C_Master_Write@d+1
  1688  0E68  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  1689  0E6D                     l1112:
  1690                           
  1691                           ;BMP280.c: 222:   I2C_Master_Start();
  1692  0E6D  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  1693  0E72                     l1114:
  1694                           
  1695                           ;BMP280.c: 223:   I2C_Master_Write( 0xEE | 1);
  1696  0E72  30EF               	movlw	239
  1697  0E73  00F1               	movwf	I2C_Master_Write@d
  1698  0E74  3000               	movlw	0
  1699  0E75  00F2               	movwf	I2C_Master_Write@d+1
  1700  0E76  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  1701  0E7B                     l1116:
  1702                           
  1703                           ;BMP280.c: 224:   ret.b[2] = I2C_Master_Read( 1);
  1704  0E7B  3001               	movlw	1
  1705  0E7C  00F1               	movwf	I2C_Master_Read@a
  1706  0E7D  3000               	movlw	0
  1707  0E7E  00F2               	movwf	I2C_Master_Read@a+1
  1708  0E7F  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1709  0E84  0871               	movf	?_I2C_Master_Read,w
  1710  0E85  00F7               	movwf	??_BMP280_Update
  1711  0E86  0877               	movf	??_BMP280_Update,w
  1712  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0E89  00A2               	movwf	BMP280_Update@ret+2
  1715  0E8A                     l1118:
  1716                           
  1717                           ;BMP280.c: 225:   ret.b[1] = I2C_Master_Read( 1);
  1718  0E8A  3001               	movlw	1
  1719  0E8B  00F1               	movwf	I2C_Master_Read@a
  1720  0E8C  3000               	movlw	0
  1721  0E8D  00F2               	movwf	I2C_Master_Read@a+1
  1722  0E8E  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1723  0E93  0871               	movf	?_I2C_Master_Read,w
  1724  0E94  00F7               	movwf	??_BMP280_Update
  1725  0E95  0877               	movf	??_BMP280_Update,w
  1726  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0E98  00A1               	movwf	BMP280_Update@ret+1
  1729  0E99                     l1120:
  1730                           
  1731                           ;BMP280.c: 226:   ret.b[0] = I2C_Master_Read( 1);
  1732  0E99  3001               	movlw	1
  1733  0E9A  00F1               	movwf	I2C_Master_Read@a
  1734  0E9B  3000               	movlw	0
  1735  0E9C  00F2               	movwf	I2C_Master_Read@a+1
  1736  0E9D  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1737  0EA2  0871               	movf	?_I2C_Master_Read,w
  1738  0EA3  00F7               	movwf	??_BMP280_Update
  1739  0EA4  0877               	movf	??_BMP280_Update,w
  1740  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  1742  0EA7  00A0               	movwf	BMP280_Update@ret
  1743  0EA8                     l1122:
  1744                           
  1745                           ;BMP280.c: 228:   adc_P = (ret.dw >> 4) & 0xFFFFF;
  1746  0EA8  0820               	movf	BMP280_Update@ret,w
  1747  0EA9  00F7               	movwf	??_BMP280_Update
  1748  0EAA  0821               	movf	BMP280_Update@ret+1,w
  1749  0EAB  00F8               	movwf	??_BMP280_Update+1
  1750  0EAC  0822               	movf	BMP280_Update@ret+2,w
  1751  0EAD  00F9               	movwf	??_BMP280_Update+2
  1752  0EAE  0823               	movf	BMP280_Update@ret+3,w
  1753  0EAF  00FA               	movwf	??_BMP280_Update+3
  1754  0EB0  3004               	movlw	4
  1755  0EB1                     u755:
  1756  0EB1  1003               	clrc
  1757  0EB2  0CFA               	rrf	??_BMP280_Update+3,f
  1758  0EB3  0CF9               	rrf	??_BMP280_Update+2,f
  1759  0EB4  0CF8               	rrf	??_BMP280_Update+1,f
  1760  0EB5  0CF7               	rrf	??_BMP280_Update,f
  1761  0EB6                     u750:
  1762  0EB6  3EFF               	addlw	-1
  1763  0EB7  1D03               	skipz
  1764  0EB8  2EB1               	goto	u755
  1765  0EB9  30FF               	movlw	255
  1766  0EBA  0577               	andwf	??_BMP280_Update,w
  1767  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0EBD  00B1               	movwf	_adc_P^(0+128)
  1770  0EBE  30FF               	movlw	255
  1771  0EBF  0578               	andwf	??_BMP280_Update+1,w
  1772  0EC0  00B2               	movwf	(_adc_P+1)^(0+128)
  1773  0EC1  300F               	movlw	15
  1774  0EC2  0579               	andwf	??_BMP280_Update+2,w
  1775  0EC3  00B3               	movwf	(_adc_P+2)^(0+128)
  1776  0EC4  3000               	movlw	0
  1777  0EC5  057A               	andwf	??_BMP280_Update+3,w
  1778  0EC6  00B4               	movwf	(_adc_P+3)^(0+128)
  1779  0EC7                     l1124:
  1780                           
  1781                           ;BMP280.c: 230:   ret.b[2] = I2C_Master_Read(1);
  1782  0EC7  3001               	movlw	1
  1783  0EC8  00F1               	movwf	I2C_Master_Read@a
  1784  0EC9  3000               	movlw	0
  1785  0ECA  00F2               	movwf	I2C_Master_Read@a+1
  1786  0ECB  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1787  0ED0  0871               	movf	?_I2C_Master_Read,w
  1788  0ED1  00F7               	movwf	??_BMP280_Update
  1789  0ED2  0877               	movf	??_BMP280_Update,w
  1790  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0ED5  00A2               	movwf	BMP280_Update@ret+2
  1793  0ED6                     l1126:
  1794                           
  1795                           ;BMP280.c: 231:   ret.b[1] = I2C_Master_Read(1);
  1796  0ED6  3001               	movlw	1
  1797  0ED7  00F1               	movwf	I2C_Master_Read@a
  1798  0ED8  3000               	movlw	0
  1799  0ED9  00F2               	movwf	I2C_Master_Read@a+1
  1800  0EDA  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1801  0EDF  0871               	movf	?_I2C_Master_Read,w
  1802  0EE0  00F7               	movwf	??_BMP280_Update
  1803  0EE1  0877               	movf	??_BMP280_Update,w
  1804  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0EE4  00A1               	movwf	BMP280_Update@ret+1
  1807  0EE5                     l1128:
  1808                           
  1809                           ;BMP280.c: 232:   ret.b[0] = I2C_Master_Read(0);
  1810  0EE5  3000               	movlw	0
  1811  0EE6  00F1               	movwf	I2C_Master_Read@a
  1812  0EE7  00F2               	movwf	I2C_Master_Read@a+1
  1813  0EE8  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  1814  0EED  0871               	movf	?_I2C_Master_Read,w
  1815  0EEE  00F7               	movwf	??_BMP280_Update
  1816  0EEF  0877               	movf	??_BMP280_Update,w
  1817  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0EF2  00A0               	movwf	BMP280_Update@ret
  1820  0EF3                     l1130:
  1821                           
  1822                           ;BMP280.c: 233:   I2C_Master_Stop();
  1823  0EF3  120A  158A  23E4  120A  158A  	fcall	_I2C_Master_Stop
  1824  0EF8                     l1132:
  1825                           
  1826                           ;BMP280.c: 235:   adc_T = (ret.dw >> 4) & 0xFFFFF;
  1827  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0EFA  0820               	movf	BMP280_Update@ret,w
  1830  0EFB  00F7               	movwf	??_BMP280_Update
  1831  0EFC  0821               	movf	BMP280_Update@ret+1,w
  1832  0EFD  00F8               	movwf	??_BMP280_Update+1
  1833  0EFE  0822               	movf	BMP280_Update@ret+2,w
  1834  0EFF  00F9               	movwf	??_BMP280_Update+2
  1835  0F00  0823               	movf	BMP280_Update@ret+3,w
  1836  0F01  00FA               	movwf	??_BMP280_Update+3
  1837  0F02  3004               	movlw	4
  1838  0F03                     u765:
  1839  0F03  1003               	clrc
  1840  0F04  0CFA               	rrf	??_BMP280_Update+3,f
  1841  0F05  0CF9               	rrf	??_BMP280_Update+2,f
  1842  0F06  0CF8               	rrf	??_BMP280_Update+1,f
  1843  0F07  0CF7               	rrf	??_BMP280_Update,f
  1844  0F08                     u760:
  1845  0F08  3EFF               	addlw	-1
  1846  0F09  1D03               	skipz
  1847  0F0A  2F03               	goto	u765
  1848  0F0B  30FF               	movlw	255
  1849  0F0C  0577               	andwf	??_BMP280_Update,w
  1850  0F0D  00E3               	movwf	_adc_T
  1851  0F0E  30FF               	movlw	255
  1852  0F0F  0578               	andwf	??_BMP280_Update+1,w
  1853  0F10  00E4               	movwf	_adc_T+1
  1854  0F11  300F               	movlw	15
  1855  0F12  0579               	andwf	??_BMP280_Update+2,w
  1856  0F13  00E5               	movwf	_adc_T+2
  1857  0F14  3000               	movlw	0
  1858  0F15  057A               	andwf	??_BMP280_Update+3,w
  1859  0F16  00E6               	movwf	_adc_T+3
  1860  0F17                     l157:
  1861  0F17  0008               	return
  1862  0F18                     __end_of_BMP280_Update:
  1863                           
  1864                           	psect	text5
  1865  02C5                     __ptext5:	
  1866 ;; *************** function _BMP280_readPressure *****************
  1867 ;; Defined at:
  1868 ;;		line 265 in file "BMP280.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  pres            1    wreg     PTR unsigned long 
  1871 ;;		 -> pressure(4), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  pres            1   46[BANK0 ] PTR unsigned long 
  1874 ;;		 -> pressure(4), 
  1875 ;;  var1            4   59[BANK0 ] long 
  1876 ;;  p               4   55[BANK0 ] unsigned long 
  1877 ;;  var2            4   51[BANK0 ] long 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   10[None  ] int 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       0       0       0       0
  1888 ;;      Locals:         0      29       0       0       0
  1889 ;;      Temps:          0      16       0       0       0
  1890 ;;      Totals:         0      45       0       0       0
  1891 ;;Total ram usage:       45 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    1
  1894 ;; This function calls:
  1895 ;;		___aldiv
  1896 ;;		___lldiv
  1897 ;;		___lmul
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _BMP280_readPressure
  1905  02C5                     _BMP280_readPressure:
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _BMP280_readPressure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1909                           ;BMP280_readPressure@pres stored from wreg
  1910  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1911  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1912  02C7  00CE               	movwf	BMP280_readPressure@pres
  1913  02C8                     l1220:
  1914                           
  1915                           ;BMP280.c: 265: int BMP280_readPressure(uint32_t *pres);BMP280.c: 266: {;BMP280.c: 267: 
      +                            int32_t var1, var2;;BMP280.c: 268:   uint32_t p;;BMP280.c: 271:   var1 = (((int32_t)t_
      +                          fine) / 2) - (int32_t)64000;
  1916  02C8  3000               	movlw	0
  1917  02C9  00B2               	movwf	??_BMP280_readPressure
  1918  02CA  3006               	movlw	6
  1919  02CB  00B3               	movwf	??_BMP280_readPressure+1
  1920  02CC  30FF               	movlw	255
  1921  02CD  00B4               	movwf	??_BMP280_readPressure+2
  1922  02CE  30FF               	movlw	255
  1923  02CF  00B5               	movwf	??_BMP280_readPressure+3
  1924  02D0  3000               	movlw	0
  1925  02D1  00F4               	movwf	___aldiv@divisor+3
  1926  02D2  3000               	movlw	0
  1927  02D3  00F3               	movwf	___aldiv@divisor+2
  1928  02D4  3000               	movlw	0
  1929  02D5  00F2               	movwf	___aldiv@divisor+1
  1930  02D6  3002               	movlw	2
  1931  02D7  00F1               	movwf	___aldiv@divisor
  1932  02D8  0862               	movf	_t_fine+3,w
  1933  02D9  00F8               	movwf	___aldiv@dividend+3
  1934  02DA  0861               	movf	_t_fine+2,w
  1935  02DB  00F7               	movwf	___aldiv@dividend+2
  1936  02DC  0860               	movf	_t_fine+1,w
  1937  02DD  00F6               	movwf	___aldiv@dividend+1
  1938  02DE  085F               	movf	_t_fine,w
  1939  02DF  00F5               	movwf	___aldiv@dividend
  1940  02E0  120A  118A  2016  120A  118A  	fcall	___aldiv
  1941  02E5  0871               	movf	?___aldiv,w
  1942  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1943  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1944  02E8  07B2               	addwf	??_BMP280_readPressure,f
  1945  02E9  0872               	movf	?___aldiv+1,w
  1946  02EA  1803               	skipnc
  1947  02EB  0F72               	incfsz	?___aldiv+1,w
  1948  02EC  2AEE               	goto	u990
  1949  02ED  2AEF               	goto	u991
  1950  02EE                     u990:
  1951  02EE  07B3               	addwf	??_BMP280_readPressure+1,f
  1952  02EF                     u991:
  1953  02EF  0873               	movf	?___aldiv+2,w
  1954  02F0  1803               	skipnc
  1955  02F1  0F73               	incfsz	?___aldiv+2,w
  1956  02F2  2AF4               	goto	u992
  1957  02F3  2AF5               	goto	u993
  1958  02F4                     u992:
  1959  02F4  07B4               	addwf	??_BMP280_readPressure+2,f
  1960  02F5                     u993:
  1961  02F5  0874               	movf	?___aldiv+3,w
  1962  02F6  1803               	skipnc
  1963  02F7  0A74               	incf	?___aldiv+3,w
  1964  02F8  07B5               	addwf	??_BMP280_readPressure+3,f
  1965  02F9  0835               	movf	??_BMP280_readPressure+3,w
  1966  02FA  00DE               	movwf	BMP280_readPressure@var1+3
  1967  02FB  0834               	movf	??_BMP280_readPressure+2,w
  1968  02FC  00DD               	movwf	BMP280_readPressure@var1+2
  1969  02FD  0833               	movf	??_BMP280_readPressure+1,w
  1970  02FE  00DC               	movwf	BMP280_readPressure@var1+1
  1971  02FF  0832               	movf	??_BMP280_readPressure,w
  1972  0300  00DB               	movwf	BMP280_readPressure@var1
  1973                           
  1974                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  1975  0301  3000               	movlw	0
  1976  0302  00F4               	movwf	___aldiv@divisor+3
  1977  0303  3000               	movlw	0
  1978  0304  00F3               	movwf	___aldiv@divisor+2
  1979  0305  3000               	movlw	0
  1980  0306  00F2               	movwf	___aldiv@divisor+1
  1981  0307  3004               	movlw	4
  1982  0308  00F1               	movwf	___aldiv@divisor
  1983  0309  085E               	movf	BMP280_readPressure@var1+3,w
  1984  030A  00F8               	movwf	___aldiv@dividend+3
  1985  030B  085D               	movf	BMP280_readPressure@var1+2,w
  1986  030C  00F7               	movwf	___aldiv@dividend+2
  1987  030D  085C               	movf	BMP280_readPressure@var1+1,w
  1988  030E  00F6               	movwf	___aldiv@dividend+1
  1989  030F  085B               	movf	BMP280_readPressure@var1,w
  1990  0310  00F5               	movwf	___aldiv@dividend
  1991  0311  120A  118A  2016  120A  118A  	fcall	___aldiv
  1992  0316  0874               	movf	?___aldiv+3,w
  1993  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0319  00A9               	movwf	___lmul@multiplier+3
  1996  031A  0873               	movf	?___aldiv+2,w
  1997  031B  00A8               	movwf	___lmul@multiplier+2
  1998  031C  0872               	movf	?___aldiv+1,w
  1999  031D  00A7               	movwf	___lmul@multiplier+1
  2000  031E  0871               	movf	?___aldiv,w
  2001  031F  00A6               	movwf	___lmul@multiplier
  2002  0320  3000               	movlw	0
  2003  0321  00F4               	movwf	___aldiv@divisor+3
  2004  0322  3000               	movlw	0
  2005  0323  00F3               	movwf	___aldiv@divisor+2
  2006  0324  3000               	movlw	0
  2007  0325  00F2               	movwf	___aldiv@divisor+1
  2008  0326  3004               	movlw	4
  2009  0327  00F1               	movwf	___aldiv@divisor
  2010  0328  085E               	movf	BMP280_readPressure@var1+3,w
  2011  0329  00F8               	movwf	___aldiv@dividend+3
  2012  032A  085D               	movf	BMP280_readPressure@var1+2,w
  2013  032B  00F7               	movwf	___aldiv@dividend+2
  2014  032C  085C               	movf	BMP280_readPressure@var1+1,w
  2015  032D  00F6               	movwf	___aldiv@dividend+1
  2016  032E  085B               	movf	BMP280_readPressure@var1,w
  2017  032F  00F5               	movwf	___aldiv@dividend
  2018  0330  120A  118A  2016  120A  118A  	fcall	___aldiv
  2019  0335  0874               	movf	?___aldiv+3,w
  2020  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0338  00AD               	movwf	___lmul@multiplicand+3
  2023  0339  0873               	movf	?___aldiv+2,w
  2024  033A  00AC               	movwf	___lmul@multiplicand+2
  2025  033B  0872               	movf	?___aldiv+1,w
  2026  033C  00AB               	movwf	___lmul@multiplicand+1
  2027  033D  0871               	movf	?___aldiv,w
  2028  033E  00AA               	movwf	___lmul@multiplicand
  2029  033F  120A  158A  2557  120A  118A  	fcall	___lmul
  2030  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0346  0829               	movf	?___lmul+3,w
  2033  0347  00D2               	movwf	_BMP280_readPressure$965+3
  2034  0348  0828               	movf	?___lmul+2,w
  2035  0349  00D1               	movwf	_BMP280_readPressure$965+2
  2036  034A  0827               	movf	?___lmul+1,w
  2037  034B  00D0               	movwf	_BMP280_readPressure$965+1
  2038  034C  0826               	movf	?___lmul,w
  2039  034D  00CF               	movwf	_BMP280_readPressure$965
  2040                           
  2041                           ;BMP280.c: 272:   var2 = (((var1/4) * (var1/4)) / 2048 ) * ((int32_t)BMP280_calib.dig_P6
      +                          );
  2042  034E  3000               	movlw	0
  2043  034F  00F4               	movwf	___aldiv@divisor+3
  2044  0350  3000               	movlw	0
  2045  0351  00F3               	movwf	___aldiv@divisor+2
  2046  0352  3008               	movlw	8
  2047  0353  00F2               	movwf	___aldiv@divisor+1
  2048  0354  3000               	movlw	0
  2049  0355  00F1               	movwf	___aldiv@divisor
  2050  0356  0852               	movf	_BMP280_readPressure$965+3,w
  2051  0357  00F8               	movwf	___aldiv@dividend+3
  2052  0358  0851               	movf	_BMP280_readPressure$965+2,w
  2053  0359  00F7               	movwf	___aldiv@dividend+2
  2054  035A  0850               	movf	_BMP280_readPressure$965+1,w
  2055  035B  00F6               	movwf	___aldiv@dividend+1
  2056  035C  084F               	movf	_BMP280_readPressure$965,w
  2057  035D  00F5               	movwf	___aldiv@dividend
  2058  035E  120A  118A  2016  120A  118A  	fcall	___aldiv
  2059  0363  0874               	movf	?___aldiv+3,w
  2060  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0366  00A9               	movwf	___lmul@multiplier+3
  2063  0367  0873               	movf	?___aldiv+2,w
  2064  0368  00A8               	movwf	___lmul@multiplier+2
  2065  0369  0872               	movf	?___aldiv+1,w
  2066  036A  00A7               	movwf	___lmul@multiplier+1
  2067  036B  0871               	movf	?___aldiv,w
  2068  036C  00A6               	movwf	___lmul@multiplier
  2069  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2070  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2071  036F  0845               	movf	(_BMP280_calib^(0+128)+16),w
  2072  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0372  00AA               	movwf	___lmul@multiplicand
  2075  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0375  0846               	movf	((_BMP280_calib+1)^(0+128)+16),w
  2078  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0378  00AB               	movwf	___lmul@multiplicand+1
  2081  0379  3000               	movlw	0
  2082  037A  1BAB               	btfsc	___lmul@multiplicand+1,7
  2083  037B  30FF               	movlw	255
  2084  037C  00AC               	movwf	___lmul@multiplicand+2
  2085  037D  00AD               	movwf	___lmul@multiplicand+3
  2086  037E  120A  158A  2557  120A  118A  	fcall	___lmul
  2087  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0385  0829               	movf	?___lmul+3,w
  2090  0386  00D6               	movwf	BMP280_readPressure@var2+3
  2091  0387  0828               	movf	?___lmul+2,w
  2092  0388  00D5               	movwf	BMP280_readPressure@var2+2
  2093  0389  0827               	movf	?___lmul+1,w
  2094  038A  00D4               	movwf	BMP280_readPressure@var2+1
  2095  038B  0826               	movf	?___lmul,w
  2096  038C  00D3               	movwf	BMP280_readPressure@var2
  2097                           
  2098                           ;BMP280.c: 274:   var2 = var2 + ((var1 * ((int32_t)BMP280_calib.dig_P5)) * 2);
  2099  038D  0853               	movf	BMP280_readPressure@var2,w
  2100  038E  00B2               	movwf	??_BMP280_readPressure
  2101  038F  0854               	movf	BMP280_readPressure@var2+1,w
  2102  0390  00B3               	movwf	??_BMP280_readPressure+1
  2103  0391  0855               	movf	BMP280_readPressure@var2+2,w
  2104  0392  00B4               	movwf	??_BMP280_readPressure+2
  2105  0393  0856               	movf	BMP280_readPressure@var2+3,w
  2106  0394  00B5               	movwf	??_BMP280_readPressure+3
  2107  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0397  0843               	movf	(_BMP280_calib^(0+128)+14),w
  2110  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2112  039A  00A6               	movwf	___lmul@multiplier
  2113  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2114  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2115  039D  0844               	movf	((_BMP280_calib+1)^(0+128)+14),w
  2116  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2117  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2118  03A0  00A7               	movwf	___lmul@multiplier+1
  2119  03A1  3000               	movlw	0
  2120  03A2  1BA7               	btfsc	___lmul@multiplier+1,7
  2121  03A3  30FF               	movlw	255
  2122  03A4  00A8               	movwf	___lmul@multiplier+2
  2123  03A5  00A9               	movwf	___lmul@multiplier+3
  2124  03A6  085E               	movf	BMP280_readPressure@var1+3,w
  2125  03A7  00AD               	movwf	___lmul@multiplicand+3
  2126  03A8  085D               	movf	BMP280_readPressure@var1+2,w
  2127  03A9  00AC               	movwf	___lmul@multiplicand+2
  2128  03AA  085C               	movf	BMP280_readPressure@var1+1,w
  2129  03AB  00AB               	movwf	___lmul@multiplicand+1
  2130  03AC  085B               	movf	BMP280_readPressure@var1,w
  2131  03AD  00AA               	movwf	___lmul@multiplicand
  2132  03AE  120A  158A  2557  120A  118A  	fcall	___lmul
  2133  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2134  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2135  03B5  0826               	movf	?___lmul,w
  2136  03B6  00B6               	movwf	??_BMP280_readPressure+4
  2137  03B7  0827               	movf	?___lmul+1,w
  2138  03B8  00B7               	movwf	??_BMP280_readPressure+5
  2139  03B9  0828               	movf	?___lmul+2,w
  2140  03BA  00B8               	movwf	??_BMP280_readPressure+6
  2141  03BB  0829               	movf	?___lmul+3,w
  2142  03BC  00B9               	movwf	??_BMP280_readPressure+7
  2143  03BD  3001               	movlw	1
  2144  03BE                     u1005:
  2145  03BE  1003               	clrc
  2146  03BF  0DB6               	rlf	??_BMP280_readPressure+4,f
  2147  03C0  0DB7               	rlf	??_BMP280_readPressure+5,f
  2148  03C1  0DB8               	rlf	??_BMP280_readPressure+6,f
  2149  03C2  0DB9               	rlf	??_BMP280_readPressure+7,f
  2150  03C3                     u1000:
  2151  03C3  3EFF               	addlw	-1
  2152  03C4  1D03               	skipz
  2153  03C5  2BBE               	goto	u1005
  2154  03C6  0836               	movf	??_BMP280_readPressure+4,w
  2155  03C7  07B2               	addwf	??_BMP280_readPressure,f
  2156  03C8  0837               	movf	??_BMP280_readPressure+5,w
  2157  03C9  1803               	skipnc
  2158  03CA  0F37               	incfsz	??_BMP280_readPressure+5,w
  2159  03CB  2BCD               	goto	u1010
  2160  03CC  2BCE               	goto	u1011
  2161  03CD                     u1010:
  2162  03CD  07B3               	addwf	??_BMP280_readPressure+1,f
  2163  03CE                     u1011:
  2164  03CE  0838               	movf	??_BMP280_readPressure+6,w
  2165  03CF  1803               	skipnc
  2166  03D0  0F38               	incfsz	??_BMP280_readPressure+6,w
  2167  03D1  2BD3               	goto	u1012
  2168  03D2  2BD4               	goto	u1013
  2169  03D3                     u1012:
  2170  03D3  07B4               	addwf	??_BMP280_readPressure+2,f
  2171  03D4                     u1013:
  2172  03D4  0839               	movf	??_BMP280_readPressure+7,w
  2173  03D5  1803               	skipnc
  2174  03D6  0A39               	incf	??_BMP280_readPressure+7,w
  2175  03D7  07B5               	addwf	??_BMP280_readPressure+3,f
  2176  03D8  0835               	movf	??_BMP280_readPressure+3,w
  2177  03D9  00D6               	movwf	BMP280_readPressure@var2+3
  2178  03DA  0834               	movf	??_BMP280_readPressure+2,w
  2179  03DB  00D5               	movwf	BMP280_readPressure@var2+2
  2180  03DC  0833               	movf	??_BMP280_readPressure+1,w
  2181  03DD  00D4               	movwf	BMP280_readPressure@var2+1
  2182  03DE  0832               	movf	??_BMP280_readPressure,w
  2183  03DF  00D3               	movwf	BMP280_readPressure@var2
  2184                           
  2185                           ;BMP280.c: 275:   var2 = (var2/4) + (((int32_t)BMP280_calib.dig_P4) * 65536);
  2186  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2187  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2188  03E2  0841               	movf	(_BMP280_calib^(0+128)+12),w
  2189  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2190  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2191  03E5  00B2               	movwf	??_BMP280_readPressure
  2192  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2193  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2194  03E8  0842               	movf	((_BMP280_calib+1)^(0+128)+12),w
  2195  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2196  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2197  03EB  00B3               	movwf	??_BMP280_readPressure+1
  2198  03EC  01B4               	clrf	??_BMP280_readPressure+2
  2199  03ED  01B5               	clrf	??_BMP280_readPressure+3
  2200  03EE  3010               	movlw	16
  2201  03EF                     u1025:
  2202  03EF  1003               	clrc
  2203  03F0  0DB2               	rlf	??_BMP280_readPressure,f
  2204  03F1  0DB3               	rlf	??_BMP280_readPressure+1,f
  2205  03F2  0DB4               	rlf	??_BMP280_readPressure+2,f
  2206  03F3  0DB5               	rlf	??_BMP280_readPressure+3,f
  2207  03F4                     u1020:
  2208  03F4  3EFF               	addlw	-1
  2209  03F5  1D03               	skipz
  2210  03F6  2BEF               	goto	u1025
  2211  03F7  3000               	movlw	0
  2212  03F8  00F4               	movwf	___aldiv@divisor+3
  2213  03F9  3000               	movlw	0
  2214  03FA  00F3               	movwf	___aldiv@divisor+2
  2215  03FB  3000               	movlw	0
  2216  03FC  00F2               	movwf	___aldiv@divisor+1
  2217  03FD  3004               	movlw	4
  2218  03FE  00F1               	movwf	___aldiv@divisor
  2219  03FF  0856               	movf	BMP280_readPressure@var2+3,w
  2220  0400  00F8               	movwf	___aldiv@dividend+3
  2221  0401  0855               	movf	BMP280_readPressure@var2+2,w
  2222  0402  00F7               	movwf	___aldiv@dividend+2
  2223  0403  0854               	movf	BMP280_readPressure@var2+1,w
  2224  0404  00F6               	movwf	___aldiv@dividend+1
  2225  0405  0853               	movf	BMP280_readPressure@var2,w
  2226  0406  00F5               	movwf	___aldiv@dividend
  2227  0407  120A  118A  2016  120A  118A  	fcall	___aldiv
  2228  040C  0871               	movf	?___aldiv,w
  2229  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2230  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2231  040F  07B2               	addwf	??_BMP280_readPressure,f
  2232  0410  0872               	movf	?___aldiv+1,w
  2233  0411  1803               	skipnc
  2234  0412  0F72               	incfsz	?___aldiv+1,w
  2235  0413  2C15               	goto	u1030
  2236  0414  2C16               	goto	u1031
  2237  0415                     u1030:
  2238  0415  07B3               	addwf	??_BMP280_readPressure+1,f
  2239  0416                     u1031:
  2240  0416  0873               	movf	?___aldiv+2,w
  2241  0417  1803               	skipnc
  2242  0418  0F73               	incfsz	?___aldiv+2,w
  2243  0419  2C1B               	goto	u1032
  2244  041A  2C1C               	goto	u1033
  2245  041B                     u1032:
  2246  041B  07B4               	addwf	??_BMP280_readPressure+2,f
  2247  041C                     u1033:
  2248  041C  0874               	movf	?___aldiv+3,w
  2249  041D  1803               	skipnc
  2250  041E  0A74               	incf	?___aldiv+3,w
  2251  041F  07B5               	addwf	??_BMP280_readPressure+3,f
  2252  0420  0835               	movf	??_BMP280_readPressure+3,w
  2253  0421  00D6               	movwf	BMP280_readPressure@var2+3
  2254  0422  0834               	movf	??_BMP280_readPressure+2,w
  2255  0423  00D5               	movwf	BMP280_readPressure@var2+2
  2256  0424  0833               	movf	??_BMP280_readPressure+1,w
  2257  0425  00D4               	movwf	BMP280_readPressure@var2+1
  2258  0426  0832               	movf	??_BMP280_readPressure,w
  2259  0427  00D3               	movwf	BMP280_readPressure@var2
  2260                           
  2261                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2262  0428  3000               	movlw	0
  2263  0429  00F4               	movwf	___aldiv@divisor+3
  2264  042A  3000               	movlw	0
  2265  042B  00F3               	movwf	___aldiv@divisor+2
  2266  042C  3000               	movlw	0
  2267  042D  00F2               	movwf	___aldiv@divisor+1
  2268  042E  3004               	movlw	4
  2269  042F  00F1               	movwf	___aldiv@divisor
  2270  0430  085E               	movf	BMP280_readPressure@var1+3,w
  2271  0431  00F8               	movwf	___aldiv@dividend+3
  2272  0432  085D               	movf	BMP280_readPressure@var1+2,w
  2273  0433  00F7               	movwf	___aldiv@dividend+2
  2274  0434  085C               	movf	BMP280_readPressure@var1+1,w
  2275  0435  00F6               	movwf	___aldiv@dividend+1
  2276  0436  085B               	movf	BMP280_readPressure@var1,w
  2277  0437  00F5               	movwf	___aldiv@dividend
  2278  0438  120A  118A  2016  120A  118A  	fcall	___aldiv
  2279  043D  0874               	movf	?___aldiv+3,w
  2280  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2281  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0440  00A9               	movwf	___lmul@multiplier+3
  2283  0441  0873               	movf	?___aldiv+2,w
  2284  0442  00A8               	movwf	___lmul@multiplier+2
  2285  0443  0872               	movf	?___aldiv+1,w
  2286  0444  00A7               	movwf	___lmul@multiplier+1
  2287  0445  0871               	movf	?___aldiv,w
  2288  0446  00A6               	movwf	___lmul@multiplier
  2289  0447  3000               	movlw	0
  2290  0448  00F4               	movwf	___aldiv@divisor+3
  2291  0449  3000               	movlw	0
  2292  044A  00F3               	movwf	___aldiv@divisor+2
  2293  044B  3000               	movlw	0
  2294  044C  00F2               	movwf	___aldiv@divisor+1
  2295  044D  3004               	movlw	4
  2296  044E  00F1               	movwf	___aldiv@divisor
  2297  044F  085E               	movf	BMP280_readPressure@var1+3,w
  2298  0450  00F8               	movwf	___aldiv@dividend+3
  2299  0451  085D               	movf	BMP280_readPressure@var1+2,w
  2300  0452  00F7               	movwf	___aldiv@dividend+2
  2301  0453  085C               	movf	BMP280_readPressure@var1+1,w
  2302  0454  00F6               	movwf	___aldiv@dividend+1
  2303  0455  085B               	movf	BMP280_readPressure@var1,w
  2304  0456  00F5               	movwf	___aldiv@dividend
  2305  0457  120A  118A  2016  120A  118A  	fcall	___aldiv
  2306  045C  0874               	movf	?___aldiv+3,w
  2307  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2308  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2309  045F  00AD               	movwf	___lmul@multiplicand+3
  2310  0460  0873               	movf	?___aldiv+2,w
  2311  0461  00AC               	movwf	___lmul@multiplicand+2
  2312  0462  0872               	movf	?___aldiv+1,w
  2313  0463  00AB               	movwf	___lmul@multiplicand+1
  2314  0464  0871               	movf	?___aldiv,w
  2315  0465  00AA               	movwf	___lmul@multiplicand
  2316  0466  120A  158A  2557  120A  118A  	fcall	___lmul
  2317  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2318  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2319  046D  0829               	movf	?___lmul+3,w
  2320  046E  00D2               	movwf	_BMP280_readPressure$965+3
  2321  046F  0828               	movf	?___lmul+2,w
  2322  0470  00D1               	movwf	_BMP280_readPressure$965+2
  2323  0471  0827               	movf	?___lmul+1,w
  2324  0472  00D0               	movwf	_BMP280_readPressure$965+1
  2325  0473  0826               	movf	?___lmul,w
  2326  0474  00CF               	movwf	_BMP280_readPressure$965
  2327                           
  2328                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2329  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0477  083F               	movf	(_BMP280_calib^(0+128)+10),w
  2332  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2334  047A  00A6               	movwf	___lmul@multiplier
  2335  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2336  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2337  047D  0840               	movf	((_BMP280_calib+1)^(0+128)+10),w
  2338  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2339  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0480  00A7               	movwf	___lmul@multiplier+1
  2341  0481  3000               	movlw	0
  2342  0482  1BA7               	btfsc	___lmul@multiplier+1,7
  2343  0483  30FF               	movlw	255
  2344  0484  00A8               	movwf	___lmul@multiplier+2
  2345  0485  00A9               	movwf	___lmul@multiplier+3
  2346  0486  3000               	movlw	0
  2347  0487  00F4               	movwf	___aldiv@divisor+3
  2348  0488  3000               	movlw	0
  2349  0489  00F3               	movwf	___aldiv@divisor+2
  2350  048A  3020               	movlw	32
  2351  048B  00F2               	movwf	___aldiv@divisor+1
  2352  048C  3000               	movlw	0
  2353  048D  00F1               	movwf	___aldiv@divisor
  2354  048E  0852               	movf	_BMP280_readPressure$965+3,w
  2355  048F  00F8               	movwf	___aldiv@dividend+3
  2356  0490  0851               	movf	_BMP280_readPressure$965+2,w
  2357  0491  00F7               	movwf	___aldiv@dividend+2
  2358  0492  0850               	movf	_BMP280_readPressure$965+1,w
  2359  0493  00F6               	movwf	___aldiv@dividend+1
  2360  0494  084F               	movf	_BMP280_readPressure$965,w
  2361  0495  00F5               	movwf	___aldiv@dividend
  2362  0496  120A  118A  2016  120A  118A  	fcall	___aldiv
  2363  049B  0874               	movf	?___aldiv+3,w
  2364  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2365  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2366  049E  00AD               	movwf	___lmul@multiplicand+3
  2367  049F  0873               	movf	?___aldiv+2,w
  2368  04A0  00AC               	movwf	___lmul@multiplicand+2
  2369  04A1  0872               	movf	?___aldiv+1,w
  2370  04A2  00AB               	movwf	___lmul@multiplicand+1
  2371  04A3  0871               	movf	?___aldiv,w
  2372  04A4  00AA               	movwf	___lmul@multiplicand
  2373  04A5  120A  158A  2557  120A  118A  	fcall	___lmul
  2374  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2375  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2376  04AC  0829               	movf	?___lmul+3,w
  2377  04AD  00C5               	movwf	_BMP280_readPressure$966+3
  2378  04AE  0828               	movf	?___lmul+2,w
  2379  04AF  00C4               	movwf	_BMP280_readPressure$966+2
  2380  04B0  0827               	movf	?___lmul+1,w
  2381  04B1  00C3               	movwf	_BMP280_readPressure$966+1
  2382  04B2  0826               	movf	?___lmul,w
  2383  04B3  00C2               	movwf	_BMP280_readPressure$966
  2384                           
  2385                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2386  04B4  3000               	movlw	0
  2387  04B5  00F4               	movwf	___aldiv@divisor+3
  2388  04B6  3000               	movlw	0
  2389  04B7  00F3               	movwf	___aldiv@divisor+2
  2390  04B8  3000               	movlw	0
  2391  04B9  00F2               	movwf	___aldiv@divisor+1
  2392  04BA  3002               	movlw	2
  2393  04BB  00F1               	movwf	___aldiv@divisor
  2394  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2395  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2396  04BE  083D               	movf	(_BMP280_calib^(0+128)+8),w
  2397  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2398  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2399  04C1  00A6               	movwf	___lmul@multiplier
  2400  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2401  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2402  04C4  083E               	movf	((_BMP280_calib+1)^(0+128)+8),w
  2403  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2404  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2405  04C7  00A7               	movwf	___lmul@multiplier+1
  2406  04C8  3000               	movlw	0
  2407  04C9  1BA7               	btfsc	___lmul@multiplier+1,7
  2408  04CA  30FF               	movlw	255
  2409  04CB  00A8               	movwf	___lmul@multiplier+2
  2410  04CC  00A9               	movwf	___lmul@multiplier+3
  2411  04CD  085E               	movf	BMP280_readPressure@var1+3,w
  2412  04CE  00AD               	movwf	___lmul@multiplicand+3
  2413  04CF  085D               	movf	BMP280_readPressure@var1+2,w
  2414  04D0  00AC               	movwf	___lmul@multiplicand+2
  2415  04D1  085C               	movf	BMP280_readPressure@var1+1,w
  2416  04D2  00AB               	movwf	___lmul@multiplicand+1
  2417  04D3  085B               	movf	BMP280_readPressure@var1,w
  2418  04D4  00AA               	movwf	___lmul@multiplicand
  2419  04D5  120A  158A  2557  120A  118A  	fcall	___lmul
  2420  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2421  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2422  04DC  0829               	movf	?___lmul+3,w
  2423  04DD  00F8               	movwf	___aldiv@dividend+3
  2424  04DE  0828               	movf	?___lmul+2,w
  2425  04DF  00F7               	movwf	___aldiv@dividend+2
  2426  04E0  0827               	movf	?___lmul+1,w
  2427  04E1  00F6               	movwf	___aldiv@dividend+1
  2428  04E2  0826               	movf	?___lmul,w
  2429  04E3  00F5               	movwf	___aldiv@dividend
  2430  04E4  120A  118A  2016  120A  118A  	fcall	___aldiv
  2431  04E9  0871               	movf	?___aldiv,w
  2432  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2433  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2434  04EC  00B2               	movwf	??_BMP280_readPressure
  2435  04ED  0872               	movf	?___aldiv+1,w
  2436  04EE  00B3               	movwf	??_BMP280_readPressure+1
  2437  04EF  0873               	movf	?___aldiv+2,w
  2438  04F0  00B4               	movwf	??_BMP280_readPressure+2
  2439  04F1  0874               	movf	?___aldiv+3,w
  2440  04F2  00B5               	movwf	??_BMP280_readPressure+3
  2441  04F3  3000               	movlw	0
  2442  04F4  00F4               	movwf	___aldiv@divisor+3
  2443  04F5  3000               	movlw	0
  2444  04F6  00F3               	movwf	___aldiv@divisor+2
  2445  04F7  3000               	movlw	0
  2446  04F8  00F2               	movwf	___aldiv@divisor+1
  2447  04F9  3008               	movlw	8
  2448  04FA  00F1               	movwf	___aldiv@divisor
  2449  04FB  0845               	movf	_BMP280_readPressure$966+3,w
  2450  04FC  00F8               	movwf	___aldiv@dividend+3
  2451  04FD  0844               	movf	_BMP280_readPressure$966+2,w
  2452  04FE  00F7               	movwf	___aldiv@dividend+2
  2453  04FF  0843               	movf	_BMP280_readPressure$966+1,w
  2454  0500  00F6               	movwf	___aldiv@dividend+1
  2455  0501  0842               	movf	_BMP280_readPressure$966,w
  2456  0502  00F5               	movwf	___aldiv@dividend
  2457  0503  120A  118A  2016  120A  118A  	fcall	___aldiv
  2458  0508  0871               	movf	?___aldiv,w
  2459  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2460  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2461  050B  07B2               	addwf	??_BMP280_readPressure,f
  2462  050C  0872               	movf	?___aldiv+1,w
  2463  050D  1803               	skipnc
  2464  050E  0F72               	incfsz	?___aldiv+1,w
  2465  050F  2D11               	goto	u1040
  2466  0510  2D12               	goto	u1041
  2467  0511                     u1040:
  2468  0511  07B3               	addwf	??_BMP280_readPressure+1,f
  2469  0512                     u1041:
  2470  0512  0873               	movf	?___aldiv+2,w
  2471  0513  1803               	skipnc
  2472  0514  0F73               	incfsz	?___aldiv+2,w
  2473  0515  2D17               	goto	u1042
  2474  0516  2D18               	goto	u1043
  2475  0517                     u1042:
  2476  0517  07B4               	addwf	??_BMP280_readPressure+2,f
  2477  0518                     u1043:
  2478  0518  0874               	movf	?___aldiv+3,w
  2479  0519  1803               	skipnc
  2480  051A  0A74               	incf	?___aldiv+3,w
  2481  051B  07B5               	addwf	??_BMP280_readPressure+3,f
  2482  051C  0835               	movf	??_BMP280_readPressure+3,w
  2483  051D  00C9               	movwf	_BMP280_readPressure$967+3
  2484  051E  0834               	movf	??_BMP280_readPressure+2,w
  2485  051F  00C8               	movwf	_BMP280_readPressure$967+2
  2486  0520  0833               	movf	??_BMP280_readPressure+1,w
  2487  0521  00C7               	movwf	_BMP280_readPressure$967+1
  2488  0522  0832               	movf	??_BMP280_readPressure,w
  2489  0523  00C6               	movwf	_BMP280_readPressure$967
  2490                           
  2491                           ;BMP280.c: 277:   var1 = ((((int32_t)BMP280_calib.dig_P3 * (((var1/4) * (var1/4)) / 8192
      +                           )) / 8) +
  2492  0524  3000               	movlw	0
  2493  0525  00F4               	movwf	___aldiv@divisor+3
  2494  0526  3004               	movlw	4
  2495  0527  00F3               	movwf	___aldiv@divisor+2
  2496  0528  3000               	movlw	0
  2497  0529  00F2               	movwf	___aldiv@divisor+1
  2498  052A  3000               	movlw	0
  2499  052B  00F1               	movwf	___aldiv@divisor
  2500  052C  0849               	movf	_BMP280_readPressure$967+3,w
  2501  052D  00F8               	movwf	___aldiv@dividend+3
  2502  052E  0848               	movf	_BMP280_readPressure$967+2,w
  2503  052F  00F7               	movwf	___aldiv@dividend+2
  2504  0530  0847               	movf	_BMP280_readPressure$967+1,w
  2505  0531  00F6               	movwf	___aldiv@dividend+1
  2506  0532  0846               	movf	_BMP280_readPressure$967,w
  2507  0533  00F5               	movwf	___aldiv@dividend
  2508  0534  120A  118A  2016  120A  118A  	fcall	___aldiv
  2509  0539  0874               	movf	?___aldiv+3,w
  2510  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2511  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2512  053C  00DE               	movwf	BMP280_readPressure@var1+3
  2513  053D  0873               	movf	?___aldiv+2,w
  2514  053E  00DD               	movwf	BMP280_readPressure@var1+2
  2515  053F  0872               	movf	?___aldiv+1,w
  2516  0540  00DC               	movwf	BMP280_readPressure@var1+1
  2517  0541  0871               	movf	?___aldiv,w
  2518  0542  00DB               	movwf	BMP280_readPressure@var1
  2519                           
  2520                           ;BMP280.c: 280:   var1 =((((32768 + var1)) * ((int32_t)BMP280_calib.dig_P1)) / 32768);
  2521  0543  3000               	movlw	0
  2522  0544  00F4               	movwf	___aldiv@divisor+3
  2523  0545  3000               	movlw	0
  2524  0546  00F3               	movwf	___aldiv@divisor+2
  2525  0547  3080               	movlw	128
  2526  0548  00F2               	movwf	___aldiv@divisor+1
  2527  0549  3000               	movlw	0
  2528  054A  00F1               	movwf	___aldiv@divisor
  2529  054B  3000               	movlw	0
  2530  054C  00B2               	movwf	??_BMP280_readPressure
  2531  054D  3080               	movlw	128
  2532  054E  00B3               	movwf	??_BMP280_readPressure+1
  2533  054F  3000               	movlw	0
  2534  0550  00B4               	movwf	??_BMP280_readPressure+2
  2535  0551  3000               	movlw	0
  2536  0552  00B5               	movwf	??_BMP280_readPressure+3
  2537  0553  085B               	movf	BMP280_readPressure@var1,w
  2538  0554  07B2               	addwf	??_BMP280_readPressure,f
  2539  0555  085C               	movf	BMP280_readPressure@var1+1,w
  2540  0556  1803               	skipnc
  2541  0557  0F5C               	incfsz	BMP280_readPressure@var1+1,w
  2542  0558  2D5A               	goto	u1050
  2543  0559  2D5B               	goto	u1051
  2544  055A                     u1050:
  2545  055A  07B3               	addwf	??_BMP280_readPressure+1,f
  2546  055B                     u1051:
  2547  055B  085D               	movf	BMP280_readPressure@var1+2,w
  2548  055C  1803               	skipnc
  2549  055D  0F5D               	incfsz	BMP280_readPressure@var1+2,w
  2550  055E  2D60               	goto	u1052
  2551  055F  2D61               	goto	u1053
  2552  0560                     u1052:
  2553  0560  07B4               	addwf	??_BMP280_readPressure+2,f
  2554  0561                     u1053:
  2555  0561  085E               	movf	BMP280_readPressure@var1+3,w
  2556  0562  1803               	skipnc
  2557  0563  0A5E               	incf	BMP280_readPressure@var1+3,w
  2558  0564  07B5               	addwf	??_BMP280_readPressure+3,f
  2559  0565  0835               	movf	??_BMP280_readPressure+3,w
  2560  0566  00A9               	movwf	___lmul@multiplier+3
  2561  0567  0834               	movf	??_BMP280_readPressure+2,w
  2562  0568  00A8               	movwf	___lmul@multiplier+2
  2563  0569  0833               	movf	??_BMP280_readPressure+1,w
  2564  056A  00A7               	movwf	___lmul@multiplier+1
  2565  056B  0832               	movf	??_BMP280_readPressure,w
  2566  056C  00A6               	movwf	___lmul@multiplier
  2567  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2568  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2569  056F  083B               	movf	(_BMP280_calib^(0+128)+6),w
  2570  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0572  00AA               	movwf	___lmul@multiplicand
  2573  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0575  083C               	movf	((_BMP280_calib+1)^(0+128)+6),w
  2576  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0578  00AB               	movwf	___lmul@multiplicand+1
  2579  0579  01AC               	clrf	___lmul@multiplicand+2
  2580  057A  01AD               	clrf	___lmul@multiplicand+3
  2581  057B  120A  158A  2557  120A  118A  	fcall	___lmul
  2582  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0582  0829               	movf	?___lmul+3,w
  2585  0583  00F8               	movwf	___aldiv@dividend+3
  2586  0584  0828               	movf	?___lmul+2,w
  2587  0585  00F7               	movwf	___aldiv@dividend+2
  2588  0586  0827               	movf	?___lmul+1,w
  2589  0587  00F6               	movwf	___aldiv@dividend+1
  2590  0588  0826               	movf	?___lmul,w
  2591  0589  00F5               	movwf	___aldiv@dividend
  2592  058A  120A  118A  2016  120A  118A  	fcall	___aldiv
  2593  058F  0874               	movf	?___aldiv+3,w
  2594  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0592  00DE               	movwf	BMP280_readPressure@var1+3
  2597  0593  0873               	movf	?___aldiv+2,w
  2598  0594  00DD               	movwf	BMP280_readPressure@var1+2
  2599  0595  0872               	movf	?___aldiv+1,w
  2600  0596  00DC               	movwf	BMP280_readPressure@var1+1
  2601  0597  0871               	movf	?___aldiv,w
  2602  0598  00DB               	movwf	BMP280_readPressure@var1
  2603  0599                     l1222:
  2604                           
  2605                           ;BMP280.c: 282:   if (var1 == 0)
  2606  0599  085E               	movf	BMP280_readPressure@var1+3,w
  2607  059A  045D               	iorwf	BMP280_readPressure@var1+2,w
  2608  059B  045C               	iorwf	BMP280_readPressure@var1+1,w
  2609  059C  045B               	iorwf	BMP280_readPressure@var1,w
  2610  059D  1D03               	skipz
  2611  059E  2DA0               	goto	u1061
  2612  059F  2DA1               	goto	u1060
  2613  05A0                     u1061:
  2614  05A0  2DA2               	goto	l1226
  2615  05A1                     u1060:
  2616  05A1  2FEA               	goto	l164
  2617  05A2                     l1226:
  2618                           
  2619                           ;BMP280.c: 285:   p = (((uint32_t)(((int32_t)1048576) - adc_P) - (var2 / 4096))) * 3125;
  2620  05A2  3000               	movlw	0
  2621  05A3  00B2               	movwf	??_BMP280_readPressure
  2622  05A4  3000               	movlw	0
  2623  05A5  00B3               	movwf	??_BMP280_readPressure+1
  2624  05A6  3010               	movlw	16
  2625  05A7  00B4               	movwf	??_BMP280_readPressure+2
  2626  05A8  3000               	movlw	0
  2627  05A9  00B5               	movwf	??_BMP280_readPressure+3
  2628  05AA  3000               	movlw	0
  2629  05AB  00F4               	movwf	___aldiv@divisor+3
  2630  05AC  3000               	movlw	0
  2631  05AD  00F3               	movwf	___aldiv@divisor+2
  2632  05AE  3010               	movlw	16
  2633  05AF  00F2               	movwf	___aldiv@divisor+1
  2634  05B0  3000               	movlw	0
  2635  05B1  00F1               	movwf	___aldiv@divisor
  2636  05B2  0856               	movf	BMP280_readPressure@var2+3,w
  2637  05B3  00F8               	movwf	___aldiv@dividend+3
  2638  05B4  0855               	movf	BMP280_readPressure@var2+2,w
  2639  05B5  00F7               	movwf	___aldiv@dividend+2
  2640  05B6  0854               	movf	BMP280_readPressure@var2+1,w
  2641  05B7  00F6               	movwf	___aldiv@dividend+1
  2642  05B8  0853               	movf	BMP280_readPressure@var2,w
  2643  05B9  00F5               	movwf	___aldiv@dividend
  2644  05BA  120A  118A  2016  120A  118A  	fcall	___aldiv
  2645  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2646  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2647  05C1  0931               	comf	_adc_P^(0+128),w
  2648  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2649  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2650  05C4  00B6               	movwf	??_BMP280_readPressure+4
  2651  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2652  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2653  05C7  0932               	comf	(_adc_P+1)^(0+128),w
  2654  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2655  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2656  05CA  00B7               	movwf	??_BMP280_readPressure+5
  2657  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  2658  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  2659  05CD  0933               	comf	(_adc_P+2)^(0+128),w
  2660  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2661  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2662  05D0  00B8               	movwf	??_BMP280_readPressure+6
  2663  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  2664  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  2665  05D3  0934               	comf	(_adc_P+3)^(0+128),w
  2666  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2667  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2668  05D6  00B9               	movwf	??_BMP280_readPressure+7
  2669  05D7  0AB6               	incf	??_BMP280_readPressure+4,f
  2670  05D8  1903               	skipnz
  2671  05D9  0AB7               	incf	??_BMP280_readPressure+5,f
  2672  05DA  1903               	skipnz
  2673  05DB  0AB8               	incf	??_BMP280_readPressure+6,f
  2674  05DC  1903               	skipnz
  2675  05DD  0AB9               	incf	??_BMP280_readPressure+7,f
  2676  05DE  0871               	movf	?___aldiv,w
  2677  05DF  02B6               	subwf	??_BMP280_readPressure+4,f
  2678  05E0  0872               	movf	?___aldiv+1,w
  2679  05E1  1C03               	skipc
  2680  05E2  0F72               	incfsz	?___aldiv+1,w
  2681  05E3  2DE5               	goto	u1071
  2682  05E4  2DE6               	goto	u1072
  2683  05E5                     u1071:
  2684  05E5  02B7               	subwf	??_BMP280_readPressure+5,f
  2685  05E6                     u1072:
  2686  05E6  0873               	movf	?___aldiv+2,w
  2687  05E7  1C03               	skipc
  2688  05E8  0F73               	incfsz	?___aldiv+2,w
  2689  05E9  2DEB               	goto	u1073
  2690  05EA  2DEC               	goto	u1074
  2691  05EB                     u1073:
  2692  05EB  02B8               	subwf	??_BMP280_readPressure+6,f
  2693  05EC                     u1074:
  2694  05EC  0874               	movf	?___aldiv+3,w
  2695  05ED  1C03               	skipc
  2696  05EE  0F74               	incfsz	?___aldiv+3,w
  2697  05EF  2DF1               	goto	u1075
  2698  05F0  2DF2               	goto	u1076
  2699  05F1                     u1075:
  2700  05F1  02B9               	subwf	??_BMP280_readPressure+7,f
  2701  05F2                     u1076:
  2702  05F2  0836               	movf	??_BMP280_readPressure+4,w
  2703  05F3  07B2               	addwf	??_BMP280_readPressure,f
  2704  05F4  0837               	movf	??_BMP280_readPressure+5,w
  2705  05F5  1803               	skipnc
  2706  05F6  0F37               	incfsz	??_BMP280_readPressure+5,w
  2707  05F7  2DF9               	goto	u1080
  2708  05F8  2DFA               	goto	u1081
  2709  05F9                     u1080:
  2710  05F9  07B3               	addwf	??_BMP280_readPressure+1,f
  2711  05FA                     u1081:
  2712  05FA  0838               	movf	??_BMP280_readPressure+6,w
  2713  05FB  1803               	skipnc
  2714  05FC  0F38               	incfsz	??_BMP280_readPressure+6,w
  2715  05FD  2DFF               	goto	u1082
  2716  05FE  2E00               	goto	u1083
  2717  05FF                     u1082:
  2718  05FF  07B4               	addwf	??_BMP280_readPressure+2,f
  2719  0600                     u1083:
  2720  0600  0839               	movf	??_BMP280_readPressure+7,w
  2721  0601  1803               	skipnc
  2722  0602  0A39               	incf	??_BMP280_readPressure+7,w
  2723  0603  07B5               	addwf	??_BMP280_readPressure+3,f
  2724  0604  0835               	movf	??_BMP280_readPressure+3,w
  2725  0605  00A9               	movwf	___lmul@multiplier+3
  2726  0606  0834               	movf	??_BMP280_readPressure+2,w
  2727  0607  00A8               	movwf	___lmul@multiplier+2
  2728  0608  0833               	movf	??_BMP280_readPressure+1,w
  2729  0609  00A7               	movwf	___lmul@multiplier+1
  2730  060A  0832               	movf	??_BMP280_readPressure,w
  2731  060B  00A6               	movwf	___lmul@multiplier
  2732  060C  3000               	movlw	0
  2733  060D  00AD               	movwf	___lmul@multiplicand+3
  2734  060E  3000               	movlw	0
  2735  060F  00AC               	movwf	___lmul@multiplicand+2
  2736  0610  300C               	movlw	12
  2737  0611  00AB               	movwf	___lmul@multiplicand+1
  2738  0612  3035               	movlw	53
  2739  0613  00AA               	movwf	___lmul@multiplicand
  2740  0614  120A  158A  2557  120A  118A  	fcall	___lmul
  2741  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2742  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2743  061B  0829               	movf	?___lmul+3,w
  2744  061C  00DA               	movwf	BMP280_readPressure@p+3
  2745  061D  0828               	movf	?___lmul+2,w
  2746  061E  00D9               	movwf	BMP280_readPressure@p+2
  2747  061F  0827               	movf	?___lmul+1,w
  2748  0620  00D8               	movwf	BMP280_readPressure@p+1
  2749  0621  0826               	movf	?___lmul,w
  2750  0622  00D7               	movwf	BMP280_readPressure@p
  2751  0623                     l1228:
  2752                           
  2753                           ;BMP280.c: 287:   if (p < 0x80000000)
  2754  0623  3080               	movlw	128
  2755  0624  025A               	subwf	BMP280_readPressure@p+3,w
  2756  0625  1D03               	skipz
  2757  0626  2E33               	goto	u1093
  2758  0627  3000               	movlw	0
  2759  0628  0259               	subwf	BMP280_readPressure@p+2,w
  2760  0629  1D03               	skipz
  2761  062A  2E33               	goto	u1093
  2762  062B  3000               	movlw	0
  2763  062C  0258               	subwf	BMP280_readPressure@p+1,w
  2764  062D  1D03               	skipz
  2765  062E  2E33               	goto	u1093
  2766  062F  3000               	movlw	0
  2767  0630  0257               	subwf	BMP280_readPressure@p,w
  2768  0631  1D03               	skipz
  2769  0632  2E33               	goto	u1093
  2770  0633                     u1093:
  2771  0633  1803               	btfsc	3,0
  2772  0634  2E36               	goto	u1091
  2773  0635  2E37               	goto	u1090
  2774  0636                     u1091:
  2775  0636  2E5A               	goto	l1232
  2776  0637                     u1090:
  2777  0637                     l1230:
  2778                           
  2779                           ;BMP280.c: 288:     p = (p * 2) / ((uint32_t)var1);
  2780  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0639  085E               	movf	BMP280_readPressure@var1+3,w
  2783  063A  00F4               	movwf	___lldiv@divisor+3
  2784  063B  085D               	movf	BMP280_readPressure@var1+2,w
  2785  063C  00F3               	movwf	___lldiv@divisor+2
  2786  063D  085C               	movf	BMP280_readPressure@var1+1,w
  2787  063E  00F2               	movwf	___lldiv@divisor+1
  2788  063F  085B               	movf	BMP280_readPressure@var1,w
  2789  0640  00F1               	movwf	___lldiv@divisor
  2790  0641  1003               	clrc
  2791  0642  0D57               	rlf	BMP280_readPressure@p,w
  2792  0643  00F5               	movwf	___lldiv@dividend
  2793  0644  0D58               	rlf	BMP280_readPressure@p+1,w
  2794  0645  00F6               	movwf	___lldiv@dividend+1
  2795  0646  0D59               	rlf	BMP280_readPressure@p+2,w
  2796  0647  00F7               	movwf	___lldiv@dividend+2
  2797  0648  0D5A               	rlf	BMP280_readPressure@p+3,w
  2798  0649  00F8               	movwf	___lldiv@dividend+3
  2799  064A  120A  158A  25EB  120A  118A  	fcall	___lldiv
  2800  064F  0874               	movf	?___lldiv+3,w
  2801  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2803  0652  00DA               	movwf	BMP280_readPressure@p+3
  2804  0653  0873               	movf	?___lldiv+2,w
  2805  0654  00D9               	movwf	BMP280_readPressure@p+2
  2806  0655  0872               	movf	?___lldiv+1,w
  2807  0656  00D8               	movwf	BMP280_readPressure@p+1
  2808  0657  0871               	movf	?___lldiv,w
  2809  0658  00D7               	movwf	BMP280_readPressure@p
  2810  0659  2E7C               	goto	l166
  2811  065A                     l1232:
  2812                           
  2813                           ;BMP280.c: 291:     p = (p / (uint32_t)var1) * 2;
  2814  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2815  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2816  065C  085E               	movf	BMP280_readPressure@var1+3,w
  2817  065D  00F4               	movwf	___lldiv@divisor+3
  2818  065E  085D               	movf	BMP280_readPressure@var1+2,w
  2819  065F  00F3               	movwf	___lldiv@divisor+2
  2820  0660  085C               	movf	BMP280_readPressure@var1+1,w
  2821  0661  00F2               	movwf	___lldiv@divisor+1
  2822  0662  085B               	movf	BMP280_readPressure@var1,w
  2823  0663  00F1               	movwf	___lldiv@divisor
  2824  0664  085A               	movf	BMP280_readPressure@p+3,w
  2825  0665  00F8               	movwf	___lldiv@dividend+3
  2826  0666  0859               	movf	BMP280_readPressure@p+2,w
  2827  0667  00F7               	movwf	___lldiv@dividend+2
  2828  0668  0858               	movf	BMP280_readPressure@p+1,w
  2829  0669  00F6               	movwf	___lldiv@dividend+1
  2830  066A  0857               	movf	BMP280_readPressure@p,w
  2831  066B  00F5               	movwf	___lldiv@dividend
  2832  066C  120A  158A  25EB  120A  118A  	fcall	___lldiv
  2833  0671  1003               	clrc
  2834  0672  0D71               	rlf	?___lldiv,w
  2835  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0675  00D7               	movwf	BMP280_readPressure@p
  2838  0676  0D72               	rlf	?___lldiv+1,w
  2839  0677  00D8               	movwf	BMP280_readPressure@p+1
  2840  0678  0D73               	rlf	?___lldiv+2,w
  2841  0679  00D9               	movwf	BMP280_readPressure@p+2
  2842  067A  0D74               	rlf	?___lldiv+3,w
  2843  067B  00DA               	movwf	BMP280_readPressure@p+3
  2844  067C                     l166:
  2845                           
  2846                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2847  067C  0857               	movf	BMP280_readPressure@p,w
  2848  067D  00B2               	movwf	??_BMP280_readPressure
  2849  067E  0858               	movf	BMP280_readPressure@p+1,w
  2850  067F  00B3               	movwf	??_BMP280_readPressure+1
  2851  0680  0859               	movf	BMP280_readPressure@p+2,w
  2852  0681  00B4               	movwf	??_BMP280_readPressure+2
  2853  0682  085A               	movf	BMP280_readPressure@p+3,w
  2854  0683  00B5               	movwf	??_BMP280_readPressure+3
  2855  0684  3003               	movlw	3
  2856  0685                     u1105:
  2857  0685  1003               	clrc
  2858  0686  0CB5               	rrf	??_BMP280_readPressure+3,f
  2859  0687  0CB4               	rrf	??_BMP280_readPressure+2,f
  2860  0688  0CB3               	rrf	??_BMP280_readPressure+1,f
  2861  0689  0CB2               	rrf	??_BMP280_readPressure,f
  2862  068A                     u1100:
  2863  068A  3EFF               	addlw	-1
  2864  068B  1D03               	skipz
  2865  068C  2E85               	goto	u1105
  2866  068D  0835               	movf	??_BMP280_readPressure+3,w
  2867  068E  00AD               	movwf	___lmul@multiplicand+3
  2868  068F  0834               	movf	??_BMP280_readPressure+2,w
  2869  0690  00AC               	movwf	___lmul@multiplicand+2
  2870  0691  0833               	movf	??_BMP280_readPressure+1,w
  2871  0692  00AB               	movwf	___lmul@multiplicand+1
  2872  0693  0832               	movf	??_BMP280_readPressure,w
  2873  0694  00AA               	movwf	___lmul@multiplicand
  2874  0695  0857               	movf	BMP280_readPressure@p,w
  2875  0696  00B6               	movwf	??_BMP280_readPressure+4
  2876  0697  0858               	movf	BMP280_readPressure@p+1,w
  2877  0698  00B7               	movwf	??_BMP280_readPressure+5
  2878  0699  0859               	movf	BMP280_readPressure@p+2,w
  2879  069A  00B8               	movwf	??_BMP280_readPressure+6
  2880  069B  085A               	movf	BMP280_readPressure@p+3,w
  2881  069C  00B9               	movwf	??_BMP280_readPressure+7
  2882  069D  3003               	movlw	3
  2883  069E                     u1115:
  2884  069E  1003               	clrc
  2885  069F  0CB9               	rrf	??_BMP280_readPressure+7,f
  2886  06A0  0CB8               	rrf	??_BMP280_readPressure+6,f
  2887  06A1  0CB7               	rrf	??_BMP280_readPressure+5,f
  2888  06A2  0CB6               	rrf	??_BMP280_readPressure+4,f
  2889  06A3                     u1110:
  2890  06A3  3EFF               	addlw	-1
  2891  06A4  1D03               	skipz
  2892  06A5  2E9E               	goto	u1115
  2893  06A6  0839               	movf	??_BMP280_readPressure+7,w
  2894  06A7  00A9               	movwf	___lmul@multiplier+3
  2895  06A8  0838               	movf	??_BMP280_readPressure+6,w
  2896  06A9  00A8               	movwf	___lmul@multiplier+2
  2897  06AA  0837               	movf	??_BMP280_readPressure+5,w
  2898  06AB  00A7               	movwf	___lmul@multiplier+1
  2899  06AC  0836               	movf	??_BMP280_readPressure+4,w
  2900  06AD  00A6               	movwf	___lmul@multiplier
  2901  06AE  120A  158A  2557  120A  118A  	fcall	___lmul
  2902  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2903  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2904  06B5  0826               	movf	?___lmul,w
  2905  06B6  00BA               	movwf	??_BMP280_readPressure+8
  2906  06B7  0827               	movf	?___lmul+1,w
  2907  06B8  00BB               	movwf	??_BMP280_readPressure+9
  2908  06B9  0828               	movf	?___lmul+2,w
  2909  06BA  00BC               	movwf	??_BMP280_readPressure+10
  2910  06BB  0829               	movf	?___lmul+3,w
  2911  06BC  00BD               	movwf	??_BMP280_readPressure+11
  2912  06BD  300D               	movlw	13
  2913  06BE                     u1125:
  2914  06BE  1003               	clrc
  2915  06BF  0CBD               	rrf	??_BMP280_readPressure+11,f
  2916  06C0  0CBC               	rrf	??_BMP280_readPressure+10,f
  2917  06C1  0CBB               	rrf	??_BMP280_readPressure+9,f
  2918  06C2  0CBA               	rrf	??_BMP280_readPressure+8,f
  2919  06C3                     u1120:
  2920  06C3  3EFF               	addlw	-1
  2921  06C4  1D03               	skipz
  2922  06C5  2EBE               	goto	u1125
  2923  06C6  083D               	movf	??_BMP280_readPressure+11,w
  2924  06C7  00CD               	movwf	_BMP280_readPressure$968+3
  2925  06C8  083C               	movf	??_BMP280_readPressure+10,w
  2926  06C9  00CC               	movwf	_BMP280_readPressure$968+2
  2927  06CA  083B               	movf	??_BMP280_readPressure+9,w
  2928  06CB  00CB               	movwf	_BMP280_readPressure$968+1
  2929  06CC  083A               	movf	??_BMP280_readPressure+8,w
  2930  06CD  00CA               	movwf	_BMP280_readPressure$968
  2931                           
  2932                           ;BMP280.c: 293:   var1 = (((int32_t)BMP280_calib.dig_P9) * ((int32_t)(((p/8) * (p/8)) / 
      +                          8192))) / 4096;
  2933  06CE  3000               	movlw	0
  2934  06CF  00F4               	movwf	___aldiv@divisor+3
  2935  06D0  3000               	movlw	0
  2936  06D1  00F3               	movwf	___aldiv@divisor+2
  2937  06D2  3010               	movlw	16
  2938  06D3  00F2               	movwf	___aldiv@divisor+1
  2939  06D4  3000               	movlw	0
  2940  06D5  00F1               	movwf	___aldiv@divisor
  2941  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  2942  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  2943  06D8  084B               	movf	(_BMP280_calib^(0+128)+22),w
  2944  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2945  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2946  06DB  00A6               	movwf	___lmul@multiplier
  2947  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2948  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2949  06DE  084C               	movf	((_BMP280_calib+1)^(0+128)+22),w
  2950  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2951  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2952  06E1  00A7               	movwf	___lmul@multiplier+1
  2953  06E2  3000               	movlw	0
  2954  06E3  1BA7               	btfsc	___lmul@multiplier+1,7
  2955  06E4  30FF               	movlw	255
  2956  06E5  00A8               	movwf	___lmul@multiplier+2
  2957  06E6  00A9               	movwf	___lmul@multiplier+3
  2958  06E7  084D               	movf	_BMP280_readPressure$968+3,w
  2959  06E8  00AD               	movwf	___lmul@multiplicand+3
  2960  06E9  084C               	movf	_BMP280_readPressure$968+2,w
  2961  06EA  00AC               	movwf	___lmul@multiplicand+2
  2962  06EB  084B               	movf	_BMP280_readPressure$968+1,w
  2963  06EC  00AB               	movwf	___lmul@multiplicand+1
  2964  06ED  084A               	movf	_BMP280_readPressure$968,w
  2965  06EE  00AA               	movwf	___lmul@multiplicand
  2966  06EF  120A  158A  2557  120A  118A  	fcall	___lmul
  2967  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2968  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2969  06F6  0829               	movf	?___lmul+3,w
  2970  06F7  00F8               	movwf	___aldiv@dividend+3
  2971  06F8  0828               	movf	?___lmul+2,w
  2972  06F9  00F7               	movwf	___aldiv@dividend+2
  2973  06FA  0827               	movf	?___lmul+1,w
  2974  06FB  00F6               	movwf	___aldiv@dividend+1
  2975  06FC  0826               	movf	?___lmul,w
  2976  06FD  00F5               	movwf	___aldiv@dividend
  2977  06FE  120A  118A  2016  120A  118A  	fcall	___aldiv
  2978  0703  0874               	movf	?___aldiv+3,w
  2979  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0706  00DE               	movwf	BMP280_readPressure@var1+3
  2982  0707  0873               	movf	?___aldiv+2,w
  2983  0708  00DD               	movwf	BMP280_readPressure@var1+2
  2984  0709  0872               	movf	?___aldiv+1,w
  2985  070A  00DC               	movwf	BMP280_readPressure@var1+1
  2986  070B  0871               	movf	?___aldiv,w
  2987  070C  00DB               	movwf	BMP280_readPressure@var1
  2988                           
  2989                           ;BMP280.c: 294:   var2 = (((int32_t)(p/4)) * ((int32_t)BMP280_calib.dig_P8)) / 8192;
  2990  070D  3000               	movlw	0
  2991  070E  00F4               	movwf	___aldiv@divisor+3
  2992  070F  3000               	movlw	0
  2993  0710  00F3               	movwf	___aldiv@divisor+2
  2994  0711  3020               	movlw	32
  2995  0712  00F2               	movwf	___aldiv@divisor+1
  2996  0713  3000               	movlw	0
  2997  0714  00F1               	movwf	___aldiv@divisor
  2998  0715  0857               	movf	BMP280_readPressure@p,w
  2999  0716  00B2               	movwf	??_BMP280_readPressure
  3000  0717  0858               	movf	BMP280_readPressure@p+1,w
  3001  0718  00B3               	movwf	??_BMP280_readPressure+1
  3002  0719  0859               	movf	BMP280_readPressure@p+2,w
  3003  071A  00B4               	movwf	??_BMP280_readPressure+2
  3004  071B  085A               	movf	BMP280_readPressure@p+3,w
  3005  071C  00B5               	movwf	??_BMP280_readPressure+3
  3006  071D  3002               	movlw	2
  3007  071E                     u1135:
  3008  071E  1003               	clrc
  3009  071F  0CB5               	rrf	??_BMP280_readPressure+3,f
  3010  0720  0CB4               	rrf	??_BMP280_readPressure+2,f
  3011  0721  0CB3               	rrf	??_BMP280_readPressure+1,f
  3012  0722  0CB2               	rrf	??_BMP280_readPressure,f
  3013  0723                     u1130:
  3014  0723  3EFF               	addlw	-1
  3015  0724  1D03               	skipz
  3016  0725  2F1E               	goto	u1135
  3017  0726  0835               	movf	??_BMP280_readPressure+3,w
  3018  0727  00A9               	movwf	___lmul@multiplier+3
  3019  0728  0834               	movf	??_BMP280_readPressure+2,w
  3020  0729  00A8               	movwf	___lmul@multiplier+2
  3021  072A  0833               	movf	??_BMP280_readPressure+1,w
  3022  072B  00A7               	movwf	___lmul@multiplier+1
  3023  072C  0832               	movf	??_BMP280_readPressure,w
  3024  072D  00A6               	movwf	___lmul@multiplier
  3025  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3026  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0730  0849               	movf	(_BMP280_calib^(0+128)+20),w
  3028  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0733  00AA               	movwf	___lmul@multiplicand
  3031  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3033  0736  084A               	movf	((_BMP280_calib+1)^(0+128)+20),w
  3034  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0739  00AB               	movwf	___lmul@multiplicand+1
  3037  073A  3000               	movlw	0
  3038  073B  1BAB               	btfsc	___lmul@multiplicand+1,7
  3039  073C  30FF               	movlw	255
  3040  073D  00AC               	movwf	___lmul@multiplicand+2
  3041  073E  00AD               	movwf	___lmul@multiplicand+3
  3042  073F  120A  158A  2557  120A  118A  	fcall	___lmul
  3043  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0746  0829               	movf	?___lmul+3,w
  3046  0747  00F8               	movwf	___aldiv@dividend+3
  3047  0748  0828               	movf	?___lmul+2,w
  3048  0749  00F7               	movwf	___aldiv@dividend+2
  3049  074A  0827               	movf	?___lmul+1,w
  3050  074B  00F6               	movwf	___aldiv@dividend+1
  3051  074C  0826               	movf	?___lmul,w
  3052  074D  00F5               	movwf	___aldiv@dividend
  3053  074E  120A  118A  2016  120A  118A  	fcall	___aldiv
  3054  0753  0874               	movf	?___aldiv+3,w
  3055  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0756  00D6               	movwf	BMP280_readPressure@var2+3
  3058  0757  0873               	movf	?___aldiv+2,w
  3059  0758  00D5               	movwf	BMP280_readPressure@var2+2
  3060  0759  0872               	movf	?___aldiv+1,w
  3061  075A  00D4               	movwf	BMP280_readPressure@var2+1
  3062  075B  0871               	movf	?___aldiv,w
  3063  075C  00D3               	movwf	BMP280_readPressure@var2
  3064                           
  3065                           ;BMP280.c: 296:   p = (uint32_t)((int32_t)p + ((var1 + var2 + (int32_t)BMP280_calib.dig_
      +                          P7) / 16));
  3066  075D  3000               	movlw	0
  3067  075E  00F4               	movwf	___aldiv@divisor+3
  3068  075F  3000               	movlw	0
  3069  0760  00F3               	movwf	___aldiv@divisor+2
  3070  0761  3000               	movlw	0
  3071  0762  00F2               	movwf	___aldiv@divisor+1
  3072  0763  3010               	movlw	16
  3073  0764  00F1               	movwf	___aldiv@divisor
  3074  0765  0853               	movf	BMP280_readPressure@var2,w
  3075  0766  00B2               	movwf	??_BMP280_readPressure
  3076  0767  0854               	movf	BMP280_readPressure@var2+1,w
  3077  0768  00B3               	movwf	??_BMP280_readPressure+1
  3078  0769  0855               	movf	BMP280_readPressure@var2+2,w
  3079  076A  00B4               	movwf	??_BMP280_readPressure+2
  3080  076B  0856               	movf	BMP280_readPressure@var2+3,w
  3081  076C  00B5               	movwf	??_BMP280_readPressure+3
  3082  076D  085B               	movf	BMP280_readPressure@var1,w
  3083  076E  00B6               	movwf	??_BMP280_readPressure+4
  3084  076F  085C               	movf	BMP280_readPressure@var1+1,w
  3085  0770  00B7               	movwf	??_BMP280_readPressure+5
  3086  0771  085D               	movf	BMP280_readPressure@var1+2,w
  3087  0772  00B8               	movwf	??_BMP280_readPressure+6
  3088  0773  085E               	movf	BMP280_readPressure@var1+3,w
  3089  0774  00B9               	movwf	??_BMP280_readPressure+7
  3090  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3091  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3092  0777  0847               	movf	(_BMP280_calib^(0+128)+18),w
  3093  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3095  077A  00BA               	movwf	??_BMP280_readPressure+8
  3096  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3097  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3098  077D  0848               	movf	((_BMP280_calib+1)^(0+128)+18),w
  3099  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3100  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0780  00BB               	movwf	??_BMP280_readPressure+9
  3102  0781  3000               	movlw	0
  3103  0782  1BBB               	btfsc	??_BMP280_readPressure+9,7
  3104  0783  30FF               	movlw	255
  3105  0784  00BC               	movwf	??_BMP280_readPressure+10
  3106  0785  00BD               	movwf	??_BMP280_readPressure+11
  3107  0786  083A               	movf	??_BMP280_readPressure+8,w
  3108  0787  07B6               	addwf	??_BMP280_readPressure+4,f
  3109  0788  083B               	movf	??_BMP280_readPressure+9,w
  3110  0789  1803               	skipnc
  3111  078A  0F3B               	incfsz	??_BMP280_readPressure+9,w
  3112  078B  2F8D               	goto	u1140
  3113  078C  2F8E               	goto	u1141
  3114  078D                     u1140:
  3115  078D  07B7               	addwf	??_BMP280_readPressure+5,f
  3116  078E                     u1141:
  3117  078E  083C               	movf	??_BMP280_readPressure+10,w
  3118  078F  1803               	skipnc
  3119  0790  0F3C               	incfsz	??_BMP280_readPressure+10,w
  3120  0791  2F93               	goto	u1142
  3121  0792  2F94               	goto	u1143
  3122  0793                     u1142:
  3123  0793  07B8               	addwf	??_BMP280_readPressure+6,f
  3124  0794                     u1143:
  3125  0794  083D               	movf	??_BMP280_readPressure+11,w
  3126  0795  1803               	skipnc
  3127  0796  0A3D               	incf	??_BMP280_readPressure+11,w
  3128  0797  07B9               	addwf	??_BMP280_readPressure+7,f
  3129  0798  0836               	movf	??_BMP280_readPressure+4,w
  3130  0799  07B2               	addwf	??_BMP280_readPressure,f
  3131  079A  0837               	movf	??_BMP280_readPressure+5,w
  3132  079B  1803               	skipnc
  3133  079C  0F37               	incfsz	??_BMP280_readPressure+5,w
  3134  079D  2F9F               	goto	u1150
  3135  079E  2FA0               	goto	u1151
  3136  079F                     u1150:
  3137  079F  07B3               	addwf	??_BMP280_readPressure+1,f
  3138  07A0                     u1151:
  3139  07A0  0838               	movf	??_BMP280_readPressure+6,w
  3140  07A1  1803               	skipnc
  3141  07A2  0F38               	incfsz	??_BMP280_readPressure+6,w
  3142  07A3  2FA5               	goto	u1152
  3143  07A4  2FA6               	goto	u1153
  3144  07A5                     u1152:
  3145  07A5  07B4               	addwf	??_BMP280_readPressure+2,f
  3146  07A6                     u1153:
  3147  07A6  0839               	movf	??_BMP280_readPressure+7,w
  3148  07A7  1803               	skipnc
  3149  07A8  0A39               	incf	??_BMP280_readPressure+7,w
  3150  07A9  07B5               	addwf	??_BMP280_readPressure+3,f
  3151  07AA  0835               	movf	??_BMP280_readPressure+3,w
  3152  07AB  00F8               	movwf	___aldiv@dividend+3
  3153  07AC  0834               	movf	??_BMP280_readPressure+2,w
  3154  07AD  00F7               	movwf	___aldiv@dividend+2
  3155  07AE  0833               	movf	??_BMP280_readPressure+1,w
  3156  07AF  00F6               	movwf	___aldiv@dividend+1
  3157  07B0  0832               	movf	??_BMP280_readPressure,w
  3158  07B1  00F5               	movwf	___aldiv@dividend
  3159  07B2  120A  118A  2016  120A  118A  	fcall	___aldiv
  3160  07B7  0871               	movf	?___aldiv,w
  3161  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3162  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3163  07BA  0757               	addwf	BMP280_readPressure@p,w
  3164  07BB  00BE               	movwf	??_BMP280_readPressure+12
  3165  07BC  3000               	movlw	0
  3166  07BD  1803               	skipnc
  3167  07BE  3001               	movlw	1
  3168  07BF  0772               	addwf	?___aldiv+1,w
  3169  07C0  01C0               	clrf	??_BMP280_readPressure+14
  3170  07C1  1803               	skipnc
  3171  07C2  0AC0               	incf	??_BMP280_readPressure+14,f
  3172  07C3  0758               	addwf	BMP280_readPressure@p+1,w
  3173  07C4  00BF               	movwf	??_BMP280_readPressure+13
  3174  07C5  1803               	skipnc
  3175  07C6  0AC0               	incf	??_BMP280_readPressure+14,f
  3176  07C7  0873               	movf	?___aldiv+2,w
  3177  07C8  0740               	addwf	??_BMP280_readPressure+14,w
  3178  07C9  01C1               	clrf	??_BMP280_readPressure+15
  3179  07CA  1803               	skipnc
  3180  07CB  0AC1               	incf	??_BMP280_readPressure+15,f
  3181  07CC  0759               	addwf	BMP280_readPressure@p+2,w
  3182  07CD  00C0               	movwf	??_BMP280_readPressure+14
  3183  07CE  1803               	skipnc
  3184  07CF  0AC1               	incf	??_BMP280_readPressure+15,f
  3185  07D0  0874               	movf	?___aldiv+3,w
  3186  07D1  0741               	addwf	??_BMP280_readPressure+15,w
  3187  07D2  075A               	addwf	BMP280_readPressure@p+3,w
  3188  07D3  00C1               	movwf	??_BMP280_readPressure+15
  3189  07D4  0841               	movf	??_BMP280_readPressure+15,w
  3190  07D5  00DA               	movwf	BMP280_readPressure@p+3
  3191  07D6  0840               	movf	??_BMP280_readPressure+14,w
  3192  07D7  00D9               	movwf	BMP280_readPressure@p+2
  3193  07D8  083F               	movf	??_BMP280_readPressure+13,w
  3194  07D9  00D8               	movwf	BMP280_readPressure@p+1
  3195  07DA  083E               	movf	??_BMP280_readPressure+12,w
  3196  07DB  00D7               	movwf	BMP280_readPressure@p
  3197  07DC                     l1234:
  3198                           
  3199                           ;BMP280.c: 298:   *pres = p;
  3200  07DC  084E               	movf	BMP280_readPressure@pres,w
  3201  07DD  0084               	movwf	4
  3202  07DE  0857               	movf	BMP280_readPressure@p,w
  3203  07DF  1383               	bcf	3,7	;select IRP bank0
  3204  07E0  0080               	movwf	0
  3205  07E1  0A84               	incf	4,f
  3206  07E2  0858               	movf	BMP280_readPressure@p+1,w
  3207  07E3  0080               	movwf	0
  3208  07E4  0A84               	incf	4,f
  3209  07E5  0859               	movf	BMP280_readPressure@p+2,w
  3210  07E6  0080               	movwf	0
  3211  07E7  0A84               	incf	4,f
  3212  07E8  085A               	movf	BMP280_readPressure@p+3,w
  3213  07E9  0080               	movwf	0
  3214  07EA                     l164:
  3215  07EA  0008               	return
  3216  07EB                     __end_of_BMP280_readPressure:
  3217                           
  3218                           	psect	text6
  3219  0D57                     __ptext6:	
  3220 ;; *************** function ___lmul *****************
  3221 ;; Defined at:
  3222 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  multiplier      4    6[BANK0 ] unsigned long 
  3225 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  product         4   14[BANK0 ] unsigned long 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  4    6[BANK0 ] unsigned long 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         0       8       0       0       0
  3238 ;;      Locals:         0       4       0       0       0
  3239 ;;      Temps:          1       0       0       0       0
  3240 ;;      Totals:         1      12       0       0       0
  3241 ;;Total ram usage:       13 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_BMP280_readTemperature
  3247 ;;		_BMP280_readPressure
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function ___lmul
  3253  0D57                     ___lmul:
  3254  0D57                     l1134:	
  3255                           ;incstack = 0
  3256                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3257                           
  3258  0D57  3000               	movlw	0
  3259  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0D5A  00B1               	movwf	___lmul@product+3
  3262  0D5B  3000               	movlw	0
  3263  0D5C  00B0               	movwf	___lmul@product+2
  3264  0D5D  3000               	movlw	0
  3265  0D5E  00AF               	movwf	___lmul@product+1
  3266  0D5F  3000               	movlw	0
  3267  0D60  00AE               	movwf	___lmul@product
  3268  0D61                     l1136:
  3269  0D61  1C26               	btfss	___lmul@multiplier,0
  3270  0D62  2D64               	goto	u771
  3271  0D63  2D65               	goto	u770
  3272  0D64                     u771:
  3273  0D64  2D7C               	goto	l1140
  3274  0D65                     u770:
  3275  0D65                     l1138:
  3276  0D65  082A               	movf	___lmul@multiplicand,w
  3277  0D66  07AE               	addwf	___lmul@product,f
  3278  0D67  082B               	movf	___lmul@multiplicand+1,w
  3279  0D68  1103               	clrz
  3280  0D69  1803               	skipnc
  3281  0D6A  3E01               	addlw	1
  3282  0D6B  1903               	skipnz
  3283  0D6C  2D6E               	goto	u781
  3284  0D6D  07AF               	addwf	___lmul@product+1,f
  3285  0D6E                     u781:
  3286  0D6E  082C               	movf	___lmul@multiplicand+2,w
  3287  0D6F  1103               	clrz
  3288  0D70  1803               	skipnc
  3289  0D71  3E01               	addlw	1
  3290  0D72  1903               	skipnz
  3291  0D73  2D75               	goto	u782
  3292  0D74  07B0               	addwf	___lmul@product+2,f
  3293  0D75                     u782:
  3294  0D75  082D               	movf	___lmul@multiplicand+3,w
  3295  0D76  1103               	clrz
  3296  0D77  1803               	skipnc
  3297  0D78  3E01               	addlw	1
  3298  0D79  1903               	skipnz
  3299  0D7A  2D7C               	goto	u783
  3300  0D7B  07B1               	addwf	___lmul@product+3,f
  3301  0D7C                     u783:
  3302  0D7C                     l1140:
  3303  0D7C  3001               	movlw	1
  3304  0D7D  00FA               	movwf	??___lmul
  3305  0D7E                     u795:
  3306  0D7E  1003               	clrc
  3307  0D7F  0DAA               	rlf	___lmul@multiplicand,f
  3308  0D80  0DAB               	rlf	___lmul@multiplicand+1,f
  3309  0D81  0DAC               	rlf	___lmul@multiplicand+2,f
  3310  0D82  0DAD               	rlf	___lmul@multiplicand+3,f
  3311  0D83  0BFA               	decfsz	??___lmul,f
  3312  0D84  2D7E               	goto	u795
  3313  0D85                     l1142:
  3314  0D85  3001               	movlw	1
  3315  0D86                     u805:
  3316  0D86  1003               	clrc
  3317  0D87  0CA9               	rrf	___lmul@multiplier+3,f
  3318  0D88  0CA8               	rrf	___lmul@multiplier+2,f
  3319  0D89  0CA7               	rrf	___lmul@multiplier+1,f
  3320  0D8A  0CA6               	rrf	___lmul@multiplier,f
  3321  0D8B  3EFF               	addlw	-1
  3322  0D8C  1D03               	skipz
  3323  0D8D  2D86               	goto	u805
  3324  0D8E  0829               	movf	___lmul@multiplier+3,w
  3325  0D8F  0428               	iorwf	___lmul@multiplier+2,w
  3326  0D90  0427               	iorwf	___lmul@multiplier+1,w
  3327  0D91  0426               	iorwf	___lmul@multiplier,w
  3328  0D92  1D03               	skipz
  3329  0D93  2D95               	goto	u811
  3330  0D94  2D96               	goto	u810
  3331  0D95                     u811:
  3332  0D95  2D61               	goto	l1136
  3333  0D96                     u810:
  3334  0D96                     l1144:
  3335  0D96  0831               	movf	___lmul@product+3,w
  3336  0D97  00A9               	movwf	?___lmul+3
  3337  0D98  0830               	movf	___lmul@product+2,w
  3338  0D99  00A8               	movwf	?___lmul+2
  3339  0D9A  082F               	movf	___lmul@product+1,w
  3340  0D9B  00A7               	movwf	?___lmul+1
  3341  0D9C  082E               	movf	___lmul@product,w
  3342  0D9D  00A6               	movwf	?___lmul
  3343  0D9E                     l266:
  3344  0D9E  0008               	return
  3345  0D9F                     __end_of___lmul:
  3346                           
  3347                           	psect	text7
  3348  0DEB                     __ptext7:	
  3349 ;; *************** function ___lldiv *****************
  3350 ;; Defined at:
  3351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  divisor         4    0[COMMON] unsigned long 
  3354 ;;  dividend        4    4[COMMON] unsigned long 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  quotient        4    0[BANK0 ] unsigned long 
  3357 ;;  counter         1    4[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  4    0[COMMON] unsigned long 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         8       0       0       0       0
  3368 ;;      Locals:         0       5       0       0       0
  3369 ;;      Temps:          1       0       0       0       0
  3370 ;;      Totals:         9       5       0       0       0
  3371 ;;Total ram usage:       14 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_I2C_Master_Init
  3377 ;;		_BMP280_readPressure
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function ___lldiv
  3383  0DEB                     ___lldiv:
  3384  0DEB                     l1050:	
  3385                           ;incstack = 0
  3386                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3387                           
  3388  0DEB  3000               	movlw	0
  3389  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0DEE  00A3               	movwf	___lldiv@quotient+3
  3392  0DEF  3000               	movlw	0
  3393  0DF0  00A2               	movwf	___lldiv@quotient+2
  3394  0DF1  3000               	movlw	0
  3395  0DF2  00A1               	movwf	___lldiv@quotient+1
  3396  0DF3  3000               	movlw	0
  3397  0DF4  00A0               	movwf	___lldiv@quotient
  3398  0DF5  0874               	movf	___lldiv@divisor+3,w
  3399  0DF6  0473               	iorwf	___lldiv@divisor+2,w
  3400  0DF7  0472               	iorwf	___lldiv@divisor+1,w
  3401  0DF8  0471               	iorwf	___lldiv@divisor,w
  3402  0DF9  1903               	skipnz
  3403  0DFA  2DFC               	goto	u631
  3404  0DFB  2DFD               	goto	u630
  3405  0DFC                     u631:
  3406  0DFC  2E4A               	goto	l1070
  3407  0DFD                     u630:
  3408  0DFD                     l1052:
  3409  0DFD  01A4               	clrf	___lldiv@counter
  3410  0DFE  0AA4               	incf	___lldiv@counter,f
  3411  0DFF  2E0D               	goto	l1056
  3412  0E00                     l1054:
  3413  0E00  3001               	movlw	1
  3414  0E01  00F9               	movwf	??___lldiv
  3415  0E02                     u645:
  3416  0E02  1003               	clrc
  3417  0E03  0DF1               	rlf	___lldiv@divisor,f
  3418  0E04  0DF2               	rlf	___lldiv@divisor+1,f
  3419  0E05  0DF3               	rlf	___lldiv@divisor+2,f
  3420  0E06  0DF4               	rlf	___lldiv@divisor+3,f
  3421  0E07  0BF9               	decfsz	??___lldiv,f
  3422  0E08  2E02               	goto	u645
  3423  0E09  3001               	movlw	1
  3424  0E0A  00F9               	movwf	??___lldiv
  3425  0E0B  0879               	movf	??___lldiv,w
  3426  0E0C  07A4               	addwf	___lldiv@counter,f
  3427  0E0D                     l1056:
  3428  0E0D  1FF4               	btfss	___lldiv@divisor+3,7
  3429  0E0E  2E10               	goto	u651
  3430  0E0F  2E11               	goto	u650
  3431  0E10                     u651:
  3432  0E10  2E00               	goto	l1054
  3433  0E11                     u650:
  3434  0E11                     l1058:
  3435  0E11  3001               	movlw	1
  3436  0E12  00F9               	movwf	??___lldiv
  3437  0E13                     u665:
  3438  0E13  1003               	clrc
  3439  0E14  0DA0               	rlf	___lldiv@quotient,f
  3440  0E15  0DA1               	rlf	___lldiv@quotient+1,f
  3441  0E16  0DA2               	rlf	___lldiv@quotient+2,f
  3442  0E17  0DA3               	rlf	___lldiv@quotient+3,f
  3443  0E18  0BF9               	decfsz	??___lldiv,f
  3444  0E19  2E13               	goto	u665
  3445  0E1A                     l1060:
  3446  0E1A  0874               	movf	___lldiv@divisor+3,w
  3447  0E1B  0278               	subwf	___lldiv@dividend+3,w
  3448  0E1C  1D03               	skipz
  3449  0E1D  2E28               	goto	u675
  3450  0E1E  0873               	movf	___lldiv@divisor+2,w
  3451  0E1F  0277               	subwf	___lldiv@dividend+2,w
  3452  0E20  1D03               	skipz
  3453  0E21  2E28               	goto	u675
  3454  0E22  0872               	movf	___lldiv@divisor+1,w
  3455  0E23  0276               	subwf	___lldiv@dividend+1,w
  3456  0E24  1D03               	skipz
  3457  0E25  2E28               	goto	u675
  3458  0E26  0871               	movf	___lldiv@divisor,w
  3459  0E27  0275               	subwf	___lldiv@dividend,w
  3460  0E28                     u675:
  3461  0E28  1C03               	skipc
  3462  0E29  2E2B               	goto	u671
  3463  0E2A  2E2C               	goto	u670
  3464  0E2B                     u671:
  3465  0E2B  2E3B               	goto	l1066
  3466  0E2C                     u670:
  3467  0E2C                     l1062:
  3468  0E2C  0871               	movf	___lldiv@divisor,w
  3469  0E2D  02F5               	subwf	___lldiv@dividend,f
  3470  0E2E  0872               	movf	___lldiv@divisor+1,w
  3471  0E2F  1C03               	skipc
  3472  0E30  0F72               	incfsz	___lldiv@divisor+1,w
  3473  0E31  02F6               	subwf	___lldiv@dividend+1,f
  3474  0E32  0873               	movf	___lldiv@divisor+2,w
  3475  0E33  1C03               	skipc
  3476  0E34  0F73               	incfsz	___lldiv@divisor+2,w
  3477  0E35  02F7               	subwf	___lldiv@dividend+2,f
  3478  0E36  0874               	movf	___lldiv@divisor+3,w
  3479  0E37  1C03               	skipc
  3480  0E38  0F74               	incfsz	___lldiv@divisor+3,w
  3481  0E39  02F8               	subwf	___lldiv@dividend+3,f
  3482  0E3A                     l1064:
  3483  0E3A  1420               	bsf	___lldiv@quotient,0
  3484  0E3B                     l1066:
  3485  0E3B  3001               	movlw	1
  3486  0E3C                     u685:
  3487  0E3C  1003               	clrc
  3488  0E3D  0CF4               	rrf	___lldiv@divisor+3,f
  3489  0E3E  0CF3               	rrf	___lldiv@divisor+2,f
  3490  0E3F  0CF2               	rrf	___lldiv@divisor+1,f
  3491  0E40  0CF1               	rrf	___lldiv@divisor,f
  3492  0E41  3EFF               	addlw	-1
  3493  0E42  1D03               	skipz
  3494  0E43  2E3C               	goto	u685
  3495  0E44                     l1068:
  3496  0E44  3001               	movlw	1
  3497  0E45  02A4               	subwf	___lldiv@counter,f
  3498  0E46  1D03               	btfss	3,2
  3499  0E47  2E49               	goto	u691
  3500  0E48  2E4A               	goto	u690
  3501  0E49                     u691:
  3502  0E49  2E11               	goto	l1058
  3503  0E4A                     u690:
  3504  0E4A                     l1070:
  3505  0E4A  0823               	movf	___lldiv@quotient+3,w
  3506  0E4B  00F4               	movwf	?___lldiv+3
  3507  0E4C  0822               	movf	___lldiv@quotient+2,w
  3508  0E4D  00F3               	movwf	?___lldiv+2
  3509  0E4E  0821               	movf	___lldiv@quotient+1,w
  3510  0E4F  00F2               	movwf	?___lldiv+1
  3511  0E50  0820               	movf	___lldiv@quotient,w
  3512  0E51  00F1               	movwf	?___lldiv
  3513  0E52                     l288:
  3514  0E52  0008               	return
  3515  0E53                     __end_of___lldiv:
  3516                           
  3517                           	psect	text8
  3518  0016                     __ptext8:	
  3519 ;; *************** function ___aldiv *****************
  3520 ;; Defined at:
  3521 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  divisor         4    0[COMMON] long 
  3524 ;;  dividend        4    4[COMMON] long 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  quotient        4    2[BANK0 ] long 
  3527 ;;  sign            1    1[BANK0 ] unsigned char 
  3528 ;;  counter         1    0[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  4    0[COMMON] long 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         8       0       0       0       0
  3539 ;;      Locals:         0       6       0       0       0
  3540 ;;      Temps:          1       0       0       0       0
  3541 ;;      Totals:         9       6       0       0       0
  3542 ;;Total ram usage:       15 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_BMP280_readTemperature
  3548 ;;		_BMP280_readPressure
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           
  3553                           ;psect for function ___aldiv
  3554  0016                     ___aldiv:
  3555  0016                     l1148:	
  3556                           ;incstack = 0
  3557                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3558                           
  3559  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0018  01A1               	clrf	___aldiv@sign
  3562  0019                     l1150:
  3563  0019  1FF4               	btfss	___aldiv@divisor+3,7
  3564  001A  281C               	goto	u821
  3565  001B  281D               	goto	u820
  3566  001C                     u821:
  3567  001C  282A               	goto	l317
  3568  001D                     u820:
  3569  001D                     l1152:
  3570  001D  09F1               	comf	___aldiv@divisor,f
  3571  001E  09F2               	comf	___aldiv@divisor+1,f
  3572  001F  09F3               	comf	___aldiv@divisor+2,f
  3573  0020  09F4               	comf	___aldiv@divisor+3,f
  3574  0021  0AF1               	incf	___aldiv@divisor,f
  3575  0022  1903               	skipnz
  3576  0023  0AF2               	incf	___aldiv@divisor+1,f
  3577  0024  1903               	skipnz
  3578  0025  0AF3               	incf	___aldiv@divisor+2,f
  3579  0026  1903               	skipnz
  3580  0027  0AF4               	incf	___aldiv@divisor+3,f
  3581  0028  01A1               	clrf	___aldiv@sign
  3582  0029  0AA1               	incf	___aldiv@sign,f
  3583  002A                     l317:
  3584  002A  1FF8               	btfss	___aldiv@dividend+3,7
  3585  002B  282D               	goto	u831
  3586  002C  282E               	goto	u830
  3587  002D                     u831:
  3588  002D  283D               	goto	l1158
  3589  002E                     u830:
  3590  002E                     l1154:
  3591  002E  09F5               	comf	___aldiv@dividend,f
  3592  002F  09F6               	comf	___aldiv@dividend+1,f
  3593  0030  09F7               	comf	___aldiv@dividend+2,f
  3594  0031  09F8               	comf	___aldiv@dividend+3,f
  3595  0032  0AF5               	incf	___aldiv@dividend,f
  3596  0033  1903               	skipnz
  3597  0034  0AF6               	incf	___aldiv@dividend+1,f
  3598  0035  1903               	skipnz
  3599  0036  0AF7               	incf	___aldiv@dividend+2,f
  3600  0037  1903               	skipnz
  3601  0038  0AF8               	incf	___aldiv@dividend+3,f
  3602  0039                     l1156:
  3603  0039  3001               	movlw	1
  3604  003A  00F9               	movwf	??___aldiv
  3605  003B  0879               	movf	??___aldiv,w
  3606  003C  06A1               	xorwf	___aldiv@sign,f
  3607  003D                     l1158:
  3608  003D  3000               	movlw	0
  3609  003E  00A5               	movwf	___aldiv@quotient+3
  3610  003F  3000               	movlw	0
  3611  0040  00A4               	movwf	___aldiv@quotient+2
  3612  0041  3000               	movlw	0
  3613  0042  00A3               	movwf	___aldiv@quotient+1
  3614  0043  3000               	movlw	0
  3615  0044  00A2               	movwf	___aldiv@quotient
  3616  0045                     l1160:
  3617  0045  0874               	movf	___aldiv@divisor+3,w
  3618  0046  0473               	iorwf	___aldiv@divisor+2,w
  3619  0047  0472               	iorwf	___aldiv@divisor+1,w
  3620  0048  0471               	iorwf	___aldiv@divisor,w
  3621  0049  1903               	skipnz
  3622  004A  284C               	goto	u841
  3623  004B  284D               	goto	u840
  3624  004C                     u841:
  3625  004C  289A               	goto	l1180
  3626  004D                     u840:
  3627  004D                     l1162:
  3628  004D  01A0               	clrf	___aldiv@counter
  3629  004E  0AA0               	incf	___aldiv@counter,f
  3630  004F  285D               	goto	l1166
  3631  0050                     l1164:
  3632  0050  3001               	movlw	1
  3633  0051  00F9               	movwf	??___aldiv
  3634  0052                     u855:
  3635  0052  1003               	clrc
  3636  0053  0DF1               	rlf	___aldiv@divisor,f
  3637  0054  0DF2               	rlf	___aldiv@divisor+1,f
  3638  0055  0DF3               	rlf	___aldiv@divisor+2,f
  3639  0056  0DF4               	rlf	___aldiv@divisor+3,f
  3640  0057  0BF9               	decfsz	??___aldiv,f
  3641  0058  2852               	goto	u855
  3642  0059  3001               	movlw	1
  3643  005A  00F9               	movwf	??___aldiv
  3644  005B  0879               	movf	??___aldiv,w
  3645  005C  07A0               	addwf	___aldiv@counter,f
  3646  005D                     l1166:
  3647  005D  1FF4               	btfss	___aldiv@divisor+3,7
  3648  005E  2860               	goto	u861
  3649  005F  2861               	goto	u860
  3650  0060                     u861:
  3651  0060  2850               	goto	l1164
  3652  0061                     u860:
  3653  0061                     l1168:
  3654  0061  3001               	movlw	1
  3655  0062  00F9               	movwf	??___aldiv
  3656  0063                     u875:
  3657  0063  1003               	clrc
  3658  0064  0DA2               	rlf	___aldiv@quotient,f
  3659  0065  0DA3               	rlf	___aldiv@quotient+1,f
  3660  0066  0DA4               	rlf	___aldiv@quotient+2,f
  3661  0067  0DA5               	rlf	___aldiv@quotient+3,f
  3662  0068  0BF9               	decfsz	??___aldiv,f
  3663  0069  2863               	goto	u875
  3664  006A                     l1170:
  3665  006A  0874               	movf	___aldiv@divisor+3,w
  3666  006B  0278               	subwf	___aldiv@dividend+3,w
  3667  006C  1D03               	skipz
  3668  006D  2878               	goto	u885
  3669  006E  0873               	movf	___aldiv@divisor+2,w
  3670  006F  0277               	subwf	___aldiv@dividend+2,w
  3671  0070  1D03               	skipz
  3672  0071  2878               	goto	u885
  3673  0072  0872               	movf	___aldiv@divisor+1,w
  3674  0073  0276               	subwf	___aldiv@dividend+1,w
  3675  0074  1D03               	skipz
  3676  0075  2878               	goto	u885
  3677  0076  0871               	movf	___aldiv@divisor,w
  3678  0077  0275               	subwf	___aldiv@dividend,w
  3679  0078                     u885:
  3680  0078  1C03               	skipc
  3681  0079  287B               	goto	u881
  3682  007A  287C               	goto	u880
  3683  007B                     u881:
  3684  007B  288B               	goto	l1176
  3685  007C                     u880:
  3686  007C                     l1172:
  3687  007C  0871               	movf	___aldiv@divisor,w
  3688  007D  02F5               	subwf	___aldiv@dividend,f
  3689  007E  0872               	movf	___aldiv@divisor+1,w
  3690  007F  1C03               	skipc
  3691  0080  0F72               	incfsz	___aldiv@divisor+1,w
  3692  0081  02F6               	subwf	___aldiv@dividend+1,f
  3693  0082  0873               	movf	___aldiv@divisor+2,w
  3694  0083  1C03               	skipc
  3695  0084  0F73               	incfsz	___aldiv@divisor+2,w
  3696  0085  02F7               	subwf	___aldiv@dividend+2,f
  3697  0086  0874               	movf	___aldiv@divisor+3,w
  3698  0087  1C03               	skipc
  3699  0088  0F74               	incfsz	___aldiv@divisor+3,w
  3700  0089  02F8               	subwf	___aldiv@dividend+3,f
  3701  008A                     l1174:
  3702  008A  1422               	bsf	___aldiv@quotient,0
  3703  008B                     l1176:
  3704  008B  3001               	movlw	1
  3705  008C                     u895:
  3706  008C  1003               	clrc
  3707  008D  0CF4               	rrf	___aldiv@divisor+3,f
  3708  008E  0CF3               	rrf	___aldiv@divisor+2,f
  3709  008F  0CF2               	rrf	___aldiv@divisor+1,f
  3710  0090  0CF1               	rrf	___aldiv@divisor,f
  3711  0091  3EFF               	addlw	-1
  3712  0092  1D03               	skipz
  3713  0093  288C               	goto	u895
  3714  0094                     l1178:
  3715  0094  3001               	movlw	1
  3716  0095  02A0               	subwf	___aldiv@counter,f
  3717  0096  1D03               	btfss	3,2
  3718  0097  2899               	goto	u901
  3719  0098  289A               	goto	u900
  3720  0099                     u901:
  3721  0099  2861               	goto	l1168
  3722  009A                     u900:
  3723  009A                     l1180:
  3724  009A  0821               	movf	___aldiv@sign,w
  3725  009B  1903               	btfsc	3,2
  3726  009C  289E               	goto	u911
  3727  009D  289F               	goto	u910
  3728  009E                     u911:
  3729  009E  28AA               	goto	l1184
  3730  009F                     u910:
  3731  009F                     l1182:
  3732  009F  09A2               	comf	___aldiv@quotient,f
  3733  00A0  09A3               	comf	___aldiv@quotient+1,f
  3734  00A1  09A4               	comf	___aldiv@quotient+2,f
  3735  00A2  09A5               	comf	___aldiv@quotient+3,f
  3736  00A3  0AA2               	incf	___aldiv@quotient,f
  3737  00A4  1903               	skipnz
  3738  00A5  0AA3               	incf	___aldiv@quotient+1,f
  3739  00A6  1903               	skipnz
  3740  00A7  0AA4               	incf	___aldiv@quotient+2,f
  3741  00A8  1903               	skipnz
  3742  00A9  0AA5               	incf	___aldiv@quotient+3,f
  3743  00AA                     l1184:
  3744  00AA  0825               	movf	___aldiv@quotient+3,w
  3745  00AB  00F4               	movwf	?___aldiv+3
  3746  00AC  0824               	movf	___aldiv@quotient+2,w
  3747  00AD  00F3               	movwf	?___aldiv+2
  3748  00AE  0823               	movf	___aldiv@quotient+1,w
  3749  00AF  00F2               	movwf	?___aldiv+1
  3750  00B0  0822               	movf	___aldiv@quotient,w
  3751  00B1  00F1               	movwf	?___aldiv
  3752  00B2                     l327:
  3753  00B2  0008               	return
  3754  00B3                     __end_of___aldiv:
  3755                           
  3756                           	psect	text9
  3757  0F18                     __ptext9:	
  3758 ;; *************** function _BMP280_begin *****************
  3759 ;; Defined at:
  3760 ;;		line 155 in file "BMP280.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  mode            1    wreg     enum E1307
  3763 ;;  T_sampling      1    3[BANK0 ] enum E1312
  3764 ;;  P_sampling      1    4[BANK0 ] enum E1312
  3765 ;;  filter          1    5[BANK0 ] enum E1320
  3766 ;;  standby         1    6[BANK0 ] enum E1327
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  mode            1   11[BANK0 ] enum E1307
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    3[BANK0 ] int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       4       0       0       0
  3779 ;;      Locals:         0       1       0       0       0
  3780 ;;      Temps:          0       4       0       0       0
  3781 ;;      Totals:         0       9       0       0       0
  3782 ;;Total ram usage:        9 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		_BMP280_Configure
  3787 ;;		_BMP280_Read16
  3788 ;;		_BMP280_Read8
  3789 ;;		_BMP280_Write
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function _BMP280_begin
  3797  0F18                     _BMP280_begin:
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _BMP280_begin: [wreg+status,2+status,0+pclath+cstack]
  3801                           ;BMP280_begin@mode stored from wreg
  3802  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0F1A  00AB               	movwf	BMP280_begin@mode
  3805  0F1B                     l1192:
  3806                           
  3807                           ;BMP280.c: 155: int BMP280_begin(BMP280_mode mode,;BMP280.c: 156:                   BMP2
      +                          80_sampling T_sampling ,;BMP280.c: 157:                   BMP280_sampling P_sampling ,;B
      +                          MP280.c: 158:                   BMP280_filter filter ,;BMP280.c: 159:                   
      +                          standby_time standby );BMP280.c: 160: {;BMP280.c: 161:   if(BMP280_Read8(0xD0) != 0x58)
  3808  0F1B  30D0               	movlw	208
  3809  0F1C  120A  158A  24D3  120A  158A  	fcall	_BMP280_Read8
  3810  0F21  3A58               	xorlw	88
  3811  0F22  1903               	skipnz
  3812  0F23  2F25               	goto	u921
  3813  0F24  2F26               	goto	u920
  3814  0F25                     u921:
  3815  0F25  2F2B               	goto	l1198
  3816  0F26                     u920:
  3817  0F26                     l1194:
  3818                           
  3819                           ;BMP280.c: 162:     return 0;
  3820  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0F28  01A3               	clrf	?_BMP280_begin
  3823  0F29  01A4               	clrf	?_BMP280_begin+1
  3824  0F2A  2FFF               	goto	l144
  3825  0F2B                     l1198:
  3826                           
  3827                           ;BMP280.c: 165:   BMP280_Write(0xE0, 0xB6);
  3828  0F2B  30B6               	movlw	182
  3829  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0F2E  00A7               	movwf	??_BMP280_begin
  3832  0F2F  0827               	movf	??_BMP280_begin,w
  3833  0F30  00F3               	movwf	BMP280_Write@_data
  3834  0F31  30E0               	movlw	224
  3835  0F32  120A  158A  2413  120A  158A  	fcall	_BMP280_Write
  3836  0F37                     l1200:
  3837                           
  3838                           ;BMP280.c: 166:   _delay((unsigned long)((100)*(8000000/4000.0)));
  3839  0F37  3002               	movlw	2
  3840  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0F3A  00A9               	movwf	??_BMP280_begin+2
  3843  0F3B  3004               	movlw	4
  3844  0F3C  00A8               	movwf	??_BMP280_begin+1
  3845  0F3D  30B9               	movlw	185
  3846  0F3E  00A7               	movwf	??_BMP280_begin
  3847  0F3F                     u1197:
  3848  0F3F  0BA7               	decfsz	??_BMP280_begin,f
  3849  0F40  2F3F               	goto	u1197
  3850  0F41  0BA8               	decfsz	??_BMP280_begin+1,f
  3851  0F42  2F3F               	goto	u1197
  3852  0F43  0BA9               	decfsz	??_BMP280_begin+2,f
  3853  0F44  2F3F               	goto	u1197
  3854  0F45  2F46               	nop2
  3855  0F46                     l1204:	
  3856                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3857                           
  3858                           
  3859                           ;BMP280.c: 169:   while ( (BMP280_Read8(0xF3) & 0x01) == 0x01 )
  3860  0F46  30F3               	movlw	243
  3861  0F47  120A  158A  24D3  120A  158A  	fcall	_BMP280_Read8
  3862  0F4C  3901               	andlw	1
  3863  0F4D  1D03               	btfss	3,2
  3864  0F4E  2F50               	goto	u931
  3865  0F4F  2F51               	goto	u930
  3866  0F50                     u931:
  3867  0F50  2F37               	goto	l1200
  3868  0F51                     u930:
  3869  0F51                     l1206:
  3870                           
  3871                           ;BMP280.c: 172:   BMP280_calib.dig_T1 = BMP280_Read16(0x88);
  3872  0F51  3088               	movlw	136
  3873  0F52  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3874  0F57  0878               	movf	?_BMP280_Read16+1,w
  3875  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3876  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3877  0F5A  00B6               	movwf	(_BMP280_calib+1)^(0+128)
  3878  0F5B  0877               	movf	?_BMP280_Read16,w
  3879  0F5C  00B5               	movwf	_BMP280_calib^(0+128)
  3880                           
  3881                           ;BMP280.c: 173:   BMP280_calib.dig_T2 = BMP280_Read16(0x8A);
  3882  0F5D  308A               	movlw	138
  3883  0F5E  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3884  0F63  0878               	movf	?_BMP280_Read16+1,w
  3885  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3886  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3887  0F66  00B8               	movwf	((_BMP280_calib+1)^(0+128)+2)
  3888  0F67  0877               	movf	?_BMP280_Read16,w
  3889  0F68  00B7               	movwf	(_BMP280_calib^(0+128)+2)
  3890                           
  3891                           ;BMP280.c: 174:   BMP280_calib.dig_T3 = BMP280_Read16(0x8C);
  3892  0F69  308C               	movlw	140
  3893  0F6A  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3894  0F6F  0878               	movf	?_BMP280_Read16+1,w
  3895  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  3897  0F72  00BA               	movwf	((_BMP280_calib+1)^(0+128)+4)
  3898  0F73  0877               	movf	?_BMP280_Read16,w
  3899  0F74  00B9               	movwf	(_BMP280_calib^(0+128)+4)
  3900                           
  3901                           ;BMP280.c: 176:   BMP280_calib.dig_P1 = BMP280_Read16(0x8E);
  3902  0F75  308E               	movlw	142
  3903  0F76  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3904  0F7B  0878               	movf	?_BMP280_Read16+1,w
  3905  0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  3906  0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  3907  0F7E  00BC               	movwf	((_BMP280_calib+1)^(0+128)+6)
  3908  0F7F  0877               	movf	?_BMP280_Read16,w
  3909  0F80  00BB               	movwf	(_BMP280_calib^(0+128)+6)
  3910                           
  3911                           ;BMP280.c: 177:   BMP280_calib.dig_P2 = BMP280_Read16(0x90);
  3912  0F81  3090               	movlw	144
  3913  0F82  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3914  0F87  0878               	movf	?_BMP280_Read16+1,w
  3915  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0F8A  00BE               	movwf	((_BMP280_calib+1)^(0+128)+8)
  3918  0F8B  0877               	movf	?_BMP280_Read16,w
  3919  0F8C  00BD               	movwf	(_BMP280_calib^(0+128)+8)
  3920                           
  3921                           ;BMP280.c: 178:   BMP280_calib.dig_P3 = BMP280_Read16(0x92);
  3922  0F8D  3092               	movlw	146
  3923  0F8E  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3924  0F93  0878               	movf	?_BMP280_Read16+1,w
  3925  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0F96  00C0               	movwf	((_BMP280_calib+1)^(0+128)+10)
  3928  0F97  0877               	movf	?_BMP280_Read16,w
  3929  0F98  00BF               	movwf	(_BMP280_calib^(0+128)+10)
  3930                           
  3931                           ;BMP280.c: 179:   BMP280_calib.dig_P4 = BMP280_Read16(0x94);
  3932  0F99  3094               	movlw	148
  3933  0F9A  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3934  0F9F  0878               	movf	?_BMP280_Read16+1,w
  3935  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  3936  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  3937  0FA2  00C2               	movwf	((_BMP280_calib+1)^(0+128)+12)
  3938  0FA3  0877               	movf	?_BMP280_Read16,w
  3939  0FA4  00C1               	movwf	(_BMP280_calib^(0+128)+12)
  3940                           
  3941                           ;BMP280.c: 180:   BMP280_calib.dig_P5 = BMP280_Read16(0x96);
  3942  0FA5  3096               	movlw	150
  3943  0FA6  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3944  0FAB  0878               	movf	?_BMP280_Read16+1,w
  3945  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  3946  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  3947  0FAE  00C4               	movwf	((_BMP280_calib+1)^(0+128)+14)
  3948  0FAF  0877               	movf	?_BMP280_Read16,w
  3949  0FB0  00C3               	movwf	(_BMP280_calib^(0+128)+14)
  3950                           
  3951                           ;BMP280.c: 181:   BMP280_calib.dig_P6 = BMP280_Read16(0x98);
  3952  0FB1  3098               	movlw	152
  3953  0FB2  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3954  0FB7  0878               	movf	?_BMP280_Read16+1,w
  3955  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  3957  0FBA  00C6               	movwf	((_BMP280_calib+1)^(0+128)+16)
  3958  0FBB  0877               	movf	?_BMP280_Read16,w
  3959  0FBC  00C5               	movwf	(_BMP280_calib^(0+128)+16)
  3960                           
  3961                           ;BMP280.c: 182:   BMP280_calib.dig_P7 = BMP280_Read16(0x9A);
  3962  0FBD  309A               	movlw	154
  3963  0FBE  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3964  0FC3  0878               	movf	?_BMP280_Read16+1,w
  3965  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0FC6  00C8               	movwf	((_BMP280_calib+1)^(0+128)+18)
  3968  0FC7  0877               	movf	?_BMP280_Read16,w
  3969  0FC8  00C7               	movwf	(_BMP280_calib^(0+128)+18)
  3970                           
  3971                           ;BMP280.c: 183:   BMP280_calib.dig_P8 = BMP280_Read16(0x9C);
  3972  0FC9  309C               	movlw	156
  3973  0FCA  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3974  0FCF  0878               	movf	?_BMP280_Read16+1,w
  3975  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  3976  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  3977  0FD2  00CA               	movwf	((_BMP280_calib+1)^(0+128)+20)
  3978  0FD3  0877               	movf	?_BMP280_Read16,w
  3979  0FD4  00C9               	movwf	(_BMP280_calib^(0+128)+20)
  3980                           
  3981                           ;BMP280.c: 184:   BMP280_calib.dig_P9 = BMP280_Read16(0x9E);
  3982  0FD5  309E               	movlw	158
  3983  0FD6  120A  158A  259F  120A  158A  	fcall	_BMP280_Read16
  3984  0FDB  0878               	movf	?_BMP280_Read16+1,w
  3985  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  3986  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  3987  0FDE  00CC               	movwf	((_BMP280_calib+1)^(0+128)+22)
  3988  0FDF  0877               	movf	?_BMP280_Read16,w
  3989  0FE0  00CB               	movwf	(_BMP280_calib^(0+128)+22)
  3990                           
  3991                           ;BMP280.c: 186:   BMP280_Configure(mode, T_sampling, P_sampling, filter, standby);
  3992  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0FE3  0823               	movf	BMP280_begin@T_sampling,w
  3995  0FE4  00A7               	movwf	??_BMP280_begin
  3996  0FE5  0827               	movf	??_BMP280_begin,w
  3997  0FE6  00F7               	movwf	BMP280_Configure@T_sampling
  3998  0FE7  0824               	movf	BMP280_begin@P_sampling,w
  3999  0FE8  00A8               	movwf	??_BMP280_begin+1
  4000  0FE9  0828               	movf	??_BMP280_begin+1,w
  4001  0FEA  00F8               	movwf	BMP280_Configure@P_sampling
  4002  0FEB  0825               	movf	BMP280_begin@filter,w
  4003  0FEC  00A9               	movwf	??_BMP280_begin+2
  4004  0FED  0829               	movf	??_BMP280_begin+2,w
  4005  0FEE  00F9               	movwf	BMP280_Configure@filter
  4006  0FEF  0826               	movf	BMP280_begin@standby,w
  4007  0FF0  00AA               	movwf	??_BMP280_begin+3
  4008  0FF1  082A               	movf	??_BMP280_begin+3,w
  4009  0FF2  00FA               	movwf	BMP280_Configure@standby
  4010  0FF3  082B               	movf	BMP280_begin@mode,w
  4011  0FF4  120A  158A  250F  120A  158A  	fcall	_BMP280_Configure
  4012  0FF9                     l1208:
  4013                           
  4014                           ;BMP280.c: 188:   return 1;
  4015  0FF9  3001               	movlw	1
  4016  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  4017  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0FFC  00A3               	movwf	?_BMP280_begin
  4019  0FFD  3000               	movlw	0
  4020  0FFE  00A4               	movwf	?_BMP280_begin+1
  4021  0FFF                     l144:
  4022  0FFF  0008               	return
  4023  1000                     __end_of_BMP280_begin:
  4024                           
  4025                           	psect	text10
  4026  0CD3                     __ptext10:	
  4027 ;; *************** function _BMP280_Read8 *****************
  4028 ;; Defined at:
  4029 ;;		line 105 in file "BMP280.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  reg_addr        1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  reg_addr        1    8[COMMON] unsigned char 
  4034 ;;  ret             1    9[COMMON] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      unsigned char 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         0       0       0       0       0
  4045 ;;      Locals:         2       0       0       0       0
  4046 ;;      Temps:          2       0       0       0       0
  4047 ;;      Totals:         4       0       0       0       0
  4048 ;;Total ram usage:        4 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    2
  4051 ;; This function calls:
  4052 ;;		_I2C_Master_Read
  4053 ;;		_I2C_Master_Start
  4054 ;;		_I2C_Master_Stop
  4055 ;;		_I2C_Master_Write
  4056 ;; This function is called by:
  4057 ;;		_BMP280_begin
  4058 ;;		_BMP280_ForcedMeasurement
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _BMP280_Read8
  4064  0CD3                     _BMP280_Read8:
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _BMP280_Read8: [wreg+status,2+status,0+pclath+cstack]
  4068                           ;BMP280_Read8@reg_addr stored from wreg
  4069  0CD3  00F9               	movwf	BMP280_Read8@reg_addr
  4070  0CD4                     l1086:
  4071                           
  4072                           ;BMP280.c: 105: uint8_t BMP280_Read8(uint8_t reg_addr);BMP280.c: 106: {;BMP280.c: 107:  
      +                           uint8_t ret;;BMP280.c: 109:   I2C_Master_Start();
  4073  0CD4  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  4074                           
  4075                           ;BMP280.c: 110:   I2C_Master_Write( 0xEE);
  4076  0CD9  30EE               	movlw	238
  4077  0CDA  00F1               	movwf	I2C_Master_Write@d
  4078  0CDB  3000               	movlw	0
  4079  0CDC  00F2               	movwf	I2C_Master_Write@d+1
  4080  0CDD  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4081                           
  4082                           ;BMP280.c: 111:   I2C_Master_Write(reg_addr);
  4083  0CE2  0879               	movf	BMP280_Read8@reg_addr,w
  4084  0CE3  00F7               	movwf	??_BMP280_Read8
  4085  0CE4  01F8               	clrf	??_BMP280_Read8+1
  4086  0CE5  0877               	movf	??_BMP280_Read8,w
  4087  0CE6  00F1               	movwf	I2C_Master_Write@d
  4088  0CE7  0878               	movf	??_BMP280_Read8+1,w
  4089  0CE8  00F2               	movwf	I2C_Master_Write@d+1
  4090  0CE9  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4091                           
  4092                           ;BMP280.c: 112:   I2C_Master_Start();
  4093  0CEE  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  4094                           
  4095                           ;BMP280.c: 113:   I2C_Master_Write( 0xEE | 1);
  4096  0CF3  30EF               	movlw	239
  4097  0CF4  00F1               	movwf	I2C_Master_Write@d
  4098  0CF5  3000               	movlw	0
  4099  0CF6  00F2               	movwf	I2C_Master_Write@d+1
  4100  0CF7  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4101                           
  4102                           ;BMP280.c: 114:   ret = I2C_Master_Read(0);
  4103  0CFC  3000               	movlw	0
  4104  0CFD  00F1               	movwf	I2C_Master_Read@a
  4105  0CFE  00F2               	movwf	I2C_Master_Read@a+1
  4106  0CFF  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  4107  0D04  0871               	movf	?_I2C_Master_Read,w
  4108  0D05  00F7               	movwf	??_BMP280_Read8
  4109  0D06  0877               	movf	??_BMP280_Read8,w
  4110  0D07  00FA               	movwf	BMP280_Read8@ret
  4111                           
  4112                           ;BMP280.c: 115:   I2C_Master_Stop();
  4113  0D08  120A  158A  23E4  120A  158A  	fcall	_I2C_Master_Stop
  4114  0D0D                     l1088:
  4115                           
  4116                           ;BMP280.c: 117:   return ret;
  4117  0D0D  087A               	movf	BMP280_Read8@ret,w
  4118  0D0E                     l134:
  4119  0D0E  0008               	return
  4120  0D0F                     __end_of_BMP280_Read8:
  4121                           
  4122                           	psect	text11
  4123  0D9F                     __ptext11:	
  4124 ;; *************** function _BMP280_Read16 *****************
  4125 ;; Defined at:
  4126 ;;		line 121 in file "BMP280.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  reg_addr        1    wreg     unsigned char 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  reg_addr        1   10[COMMON] unsigned char 
  4131 ;;  ret             2   11[COMMON] struct .
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  2    6[COMMON] unsigned int 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4141 ;;      Params:         2       0       0       0       0
  4142 ;;      Locals:         3       0       0       0       0
  4143 ;;      Temps:          2       0       0       0       0
  4144 ;;      Totals:         7       0       0       0       0
  4145 ;;Total ram usage:        7 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    2
  4148 ;; This function calls:
  4149 ;;		_I2C_Master_Read
  4150 ;;		_I2C_Master_Start
  4151 ;;		_I2C_Master_Stop
  4152 ;;		_I2C_Master_Write
  4153 ;; This function is called by:
  4154 ;;		_BMP280_begin
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function _BMP280_Read16
  4160  0D9F                     _BMP280_Read16:
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _BMP280_Read16: [wreg+status,2+status,0+pclath+cstack]
  4164                           ;BMP280_Read16@reg_addr stored from wreg
  4165  0D9F  00FB               	movwf	BMP280_Read16@reg_addr
  4166  0DA0                     l1092:
  4167                           
  4168                           ;BMP280.c: 121: uint16_t BMP280_Read16(uint8_t reg_addr);BMP280.c: 122: {;BMP280.c: 127:
      +                             } ret;;BMP280.c: 129:   I2C_Master_Start();
  4169  0DA0  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  4170                           
  4171                           ;BMP280.c: 130:   I2C_Master_Write( 0xEE);
  4172  0DA5  30EE               	movlw	238
  4173  0DA6  00F1               	movwf	I2C_Master_Write@d
  4174  0DA7  3000               	movlw	0
  4175  0DA8  00F2               	movwf	I2C_Master_Write@d+1
  4176  0DA9  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4177                           
  4178                           ;BMP280.c: 131:   I2C_Master_Write(reg_addr);
  4179  0DAE  087B               	movf	BMP280_Read16@reg_addr,w
  4180  0DAF  00F9               	movwf	??_BMP280_Read16
  4181  0DB0  01FA               	clrf	??_BMP280_Read16+1
  4182  0DB1  0879               	movf	??_BMP280_Read16,w
  4183  0DB2  00F1               	movwf	I2C_Master_Write@d
  4184  0DB3  087A               	movf	??_BMP280_Read16+1,w
  4185  0DB4  00F2               	movwf	I2C_Master_Write@d+1
  4186  0DB5  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4187                           
  4188                           ;BMP280.c: 132:   I2C_Master_Start();
  4189  0DBA  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  4190                           
  4191                           ;BMP280.c: 133:   I2C_Master_Write(0xEE | 1);
  4192  0DBF  30EF               	movlw	239
  4193  0DC0  00F1               	movwf	I2C_Master_Write@d
  4194  0DC1  3000               	movlw	0
  4195  0DC2  00F2               	movwf	I2C_Master_Write@d+1
  4196  0DC3  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4197                           
  4198                           ;BMP280.c: 134:   ret.b[0] = I2C_Master_Read( 1);
  4199  0DC8  3001               	movlw	1
  4200  0DC9  00F1               	movwf	I2C_Master_Read@a
  4201  0DCA  3000               	movlw	0
  4202  0DCB  00F2               	movwf	I2C_Master_Read@a+1
  4203  0DCC  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  4204  0DD1  0871               	movf	?_I2C_Master_Read,w
  4205  0DD2  00F9               	movwf	??_BMP280_Read16
  4206  0DD3  0879               	movf	??_BMP280_Read16,w
  4207  0DD4  00FC               	movwf	BMP280_Read16@ret
  4208                           
  4209                           ;BMP280.c: 135:   ret.b[1] = I2C_Master_Read( 0);
  4210  0DD5  3000               	movlw	0
  4211  0DD6  00F1               	movwf	I2C_Master_Read@a
  4212  0DD7  00F2               	movwf	I2C_Master_Read@a+1
  4213  0DD8  120A  158A  246D  120A  158A  	fcall	_I2C_Master_Read
  4214  0DDD  0871               	movf	?_I2C_Master_Read,w
  4215  0DDE  00F9               	movwf	??_BMP280_Read16
  4216  0DDF  0879               	movf	??_BMP280_Read16,w
  4217  0DE0  00FD               	movwf	BMP280_Read16@ret+1
  4218                           
  4219                           ;BMP280.c: 136:   I2C_Master_Stop();
  4220  0DE1  120A  158A  23E4  120A  158A  	fcall	_I2C_Master_Stop
  4221  0DE6                     l1094:
  4222                           
  4223                           ;BMP280.c: 138:   return(ret.w);
  4224  0DE6  087D               	movf	BMP280_Read16@ret+1,w
  4225  0DE7  00F8               	movwf	?_BMP280_Read16+1
  4226  0DE8  087C               	movf	BMP280_Read16@ret,w
  4227  0DE9  00F7               	movwf	?_BMP280_Read16
  4228  0DEA                     l137:
  4229  0DEA  0008               	return
  4230  0DEB                     __end_of_BMP280_Read16:
  4231                           
  4232                           	psect	text12
  4233  0C6D                     __ptext12:	
  4234 ;; *************** function _I2C_Master_Read *****************
  4235 ;; Defined at:
  4236 ;;		line 74 in file "I2C.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  a               2    0[COMMON] unsigned short 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  temp            2    4[COMMON] unsigned short 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  2    0[COMMON] unsigned short 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         2       0       0       0       0
  4251 ;;      Locals:         2       0       0       0       0
  4252 ;;      Temps:          2       0       0       0       0
  4253 ;;      Totals:         6       0       0       0       0
  4254 ;;Total ram usage:        6 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    1
  4257 ;; This function calls:
  4258 ;;		_I2C_Master_Wait
  4259 ;; This function is called by:
  4260 ;;		_BMP280_Read8
  4261 ;;		_BMP280_Read16
  4262 ;;		_BMP280_Update
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function _I2C_Master_Read
  4268  0C6D                     _I2C_Master_Read:
  4269  0C6D                     l1032:	
  4270                           ;incstack = 0
  4271                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4272                           
  4273                           
  4274                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4275  0C6D  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4276  0C72                     l1034:
  4277                           
  4278                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4279  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  4280  0C73  1303               	bcf	3,6	;RP1=0, select bank1
  4281  0C74  1591               	bsf	17,3	;volatile
  4282                           
  4283                           ;I2C.c: 79:     I2C_Master_Wait();
  4284  0C75  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4285  0C7A                     l1036:
  4286                           
  4287                           ;I2C.c: 80:     temp = SSPBUF;
  4288  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0C7C  0813               	movf	19,w	;volatile
  4291  0C7D  00F3               	movwf	??_I2C_Master_Read
  4292  0C7E  01F4               	clrf	??_I2C_Master_Read+1
  4293  0C7F  0873               	movf	??_I2C_Master_Read,w
  4294  0C80  00F5               	movwf	I2C_Master_Read@temp
  4295  0C81  0874               	movf	??_I2C_Master_Read+1,w
  4296  0C82  00F6               	movwf	I2C_Master_Read@temp+1
  4297  0C83                     l1038:
  4298                           
  4299                           ;I2C.c: 81:     I2C_Master_Wait();
  4300  0C83  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4301  0C88                     l1040:
  4302                           
  4303                           ;I2C.c: 82:     if(a == 1){
  4304  0C88  0371               	decf	I2C_Master_Read@a,w
  4305  0C89  0472               	iorwf	I2C_Master_Read@a+1,w
  4306  0C8A  1D03               	btfss	3,2
  4307  0C8B  2C8D               	goto	u621
  4308  0C8C  2C8E               	goto	u620
  4309  0C8D                     u621:
  4310  0C8D  2C92               	goto	l105
  4311  0C8E                     u620:
  4312  0C8E                     l1042:
  4313                           
  4314                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4315  0C8E  1683               	bsf	3,5	;RP0=1, select bank1
  4316  0C8F  1303               	bcf	3,6	;RP1=0, select bank1
  4317  0C90  1291               	bcf	17,5	;volatile
  4318                           
  4319                           ;I2C.c: 84:     }else{
  4320  0C91  2C95               	goto	l106
  4321  0C92                     l105:
  4322                           
  4323                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4324  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  4325  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  4326  0C94  1691               	bsf	17,5	;volatile
  4327  0C95                     l106:	
  4328                           ;I2C.c: 86:     }
  4329                           
  4330                           
  4331                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4332  0C95  1611               	bsf	17,4	;volatile
  4333  0C96                     l1044:
  4334                           
  4335                           ;I2C.c: 88:     return temp;
  4336  0C96  0876               	movf	I2C_Master_Read@temp+1,w
  4337  0C97  00F2               	movwf	?_I2C_Master_Read+1
  4338  0C98  0875               	movf	I2C_Master_Read@temp,w
  4339  0C99  00F1               	movwf	?_I2C_Master_Read
  4340  0C9A                     l107:
  4341  0C9A  0008               	return
  4342  0C9B                     __end_of_I2C_Master_Read:
  4343                           
  4344                           	psect	text13
  4345  0D0F                     __ptext13:	
  4346 ;; *************** function _BMP280_Configure *****************
  4347 ;; Defined at:
  4348 ;;		line 142 in file "BMP280.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  mode            1    wreg     enum E1307
  4351 ;;  T_sampling      1    6[COMMON] enum E1312
  4352 ;;  P_sampling      1    7[COMMON] enum E1312
  4353 ;;  filter          1    8[COMMON] enum E1320
  4354 ;;  standby         1    9[COMMON] enum E1327
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  mode            1    0[BANK0 ] enum E1307
  4357 ;;  _config         1    2[BANK0 ] unsigned char 
  4358 ;;  _ctrl_meas      1    1[BANK0 ] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0, pclath, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4368 ;;      Params:         4       0       0       0       0
  4369 ;;      Locals:         0       3       0       0       0
  4370 ;;      Temps:          3       0       0       0       0
  4371 ;;      Totals:         7       3       0       0       0
  4372 ;;Total ram usage:       10 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    3
  4375 ;; This function calls:
  4376 ;;		_BMP280_Write
  4377 ;; This function is called by:
  4378 ;;		_BMP280_begin
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           
  4383                           ;psect for function _BMP280_Configure
  4384  0D0F                     _BMP280_Configure:
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _BMP280_Configure: [wreg+status,2+status,0+pclath+cstack]
  4388                           ;BMP280_Configure@mode stored from wreg
  4389  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0D11  00A0               	movwf	BMP280_Configure@mode
  4392  0D12                     l1098:
  4393                           
  4394                           ;BMP280.c: 142: void BMP280_Configure( BMP280_mode mode, BMP280_sampling T_sampling,;BMP
      +                          280.c: 143:                       BMP280_sampling P_sampling, BMP280_filter filter, stan
      +                          dby_time standby);BMP280.c: 144: {;BMP280.c: 145:   uint8_t _ctrl_meas, _config;;BMP280.
      +                          c: 147:   _config = ((standby << 5) | (filter << 2)) & 0xFC;
  4395  0D12  0879               	movf	BMP280_Configure@filter,w
  4396  0D13  00FB               	movwf	??_BMP280_Configure
  4397  0D14  3002               	movlw	2
  4398  0D15                     u715:
  4399  0D15  1003               	clrc
  4400  0D16  0DFB               	rlf	??_BMP280_Configure,f
  4401  0D17  3EFF               	addlw	-1
  4402  0D18  1D03               	skipz
  4403  0D19  2D15               	goto	u715
  4404  0D1A  087A               	movf	BMP280_Configure@standby,w
  4405  0D1B  00FC               	movwf	??_BMP280_Configure+1
  4406  0D1C  3004               	movlw	4
  4407  0D1D                     u725:
  4408  0D1D  1003               	clrc
  4409  0D1E  0DFC               	rlf	??_BMP280_Configure+1,f
  4410  0D1F  3EFF               	addlw	-1
  4411  0D20  1D03               	skipz
  4412  0D21  2D1D               	goto	u725
  4413  0D22  1003               	clrc
  4414  0D23  0D7C               	rlf	??_BMP280_Configure+1,w
  4415  0D24  047B               	iorwf	??_BMP280_Configure,w
  4416  0D25  39FC               	andlw	252
  4417  0D26  00FD               	movwf	??_BMP280_Configure+2
  4418  0D27  087D               	movf	??_BMP280_Configure+2,w
  4419  0D28  00A2               	movwf	BMP280_Configure@_config
  4420                           
  4421                           ;BMP280.c: 148:   _ctrl_meas = (T_sampling << 5) | (P_sampling << 2) | mode;
  4422  0D29  0878               	movf	BMP280_Configure@P_sampling,w
  4423  0D2A  00FB               	movwf	??_BMP280_Configure
  4424  0D2B  3002               	movlw	2
  4425  0D2C                     u735:
  4426  0D2C  1003               	clrc
  4427  0D2D  0DFB               	rlf	??_BMP280_Configure,f
  4428  0D2E  3EFF               	addlw	-1
  4429  0D2F  1D03               	skipz
  4430  0D30  2D2C               	goto	u735
  4431  0D31  0877               	movf	BMP280_Configure@T_sampling,w
  4432  0D32  00FC               	movwf	??_BMP280_Configure+1
  4433  0D33  3004               	movlw	4
  4434  0D34                     u745:
  4435  0D34  1003               	clrc
  4436  0D35  0DFC               	rlf	??_BMP280_Configure+1,f
  4437  0D36  3EFF               	addlw	-1
  4438  0D37  1D03               	skipz
  4439  0D38  2D34               	goto	u745
  4440  0D39  1003               	clrc
  4441  0D3A  0D7C               	rlf	??_BMP280_Configure+1,w
  4442  0D3B  047B               	iorwf	??_BMP280_Configure,w
  4443  0D3C  0420               	iorwf	BMP280_Configure@mode,w
  4444  0D3D  00FD               	movwf	??_BMP280_Configure+2
  4445  0D3E  087D               	movf	??_BMP280_Configure+2,w
  4446  0D3F  00A1               	movwf	BMP280_Configure@_ctrl_meas
  4447  0D40                     l1100:
  4448                           
  4449                           ;BMP280.c: 150:   BMP280_Write(0xF5, _config);
  4450  0D40  0822               	movf	BMP280_Configure@_config,w
  4451  0D41  00FB               	movwf	??_BMP280_Configure
  4452  0D42  087B               	movf	??_BMP280_Configure,w
  4453  0D43  00F3               	movwf	BMP280_Write@_data
  4454  0D44  30F5               	movlw	245
  4455  0D45  120A  158A  2413  120A  158A  	fcall	_BMP280_Write
  4456  0D4A                     l1102:
  4457                           
  4458                           ;BMP280.c: 151:   BMP280_Write(0xF4, _ctrl_meas);
  4459  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0D4C  0821               	movf	BMP280_Configure@_ctrl_meas,w
  4462  0D4D  00FB               	movwf	??_BMP280_Configure
  4463  0D4E  087B               	movf	??_BMP280_Configure,w
  4464  0D4F  00F3               	movwf	BMP280_Write@_data
  4465  0D50  30F4               	movlw	244
  4466  0D51  120A  158A  2413  120A  158A  	fcall	_BMP280_Write
  4467  0D56                     l140:
  4468  0D56  0008               	return
  4469  0D57                     __end_of_BMP280_Configure:
  4470                           
  4471                           	psect	text14
  4472  0C13                     __ptext14:	
  4473 ;; *************** function _BMP280_Write *****************
  4474 ;; Defined at:
  4475 ;;		line 95 in file "BMP280.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  reg_addr        1    wreg     unsigned char 
  4478 ;;  _data           1    2[COMMON] unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  reg_addr        1    5[COMMON] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4490 ;;      Params:         1       0       0       0       0
  4491 ;;      Locals:         1       0       0       0       0
  4492 ;;      Temps:          2       0       0       0       0
  4493 ;;      Totals:         4       0       0       0       0
  4494 ;;Total ram usage:        4 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    2
  4497 ;; This function calls:
  4498 ;;		_I2C_Master_Start
  4499 ;;		_I2C_Master_Stop
  4500 ;;		_I2C_Master_Write
  4501 ;; This function is called by:
  4502 ;;		_BMP280_Configure
  4503 ;;		_BMP280_begin
  4504 ;;		_BMP280_ForcedMeasurement
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _BMP280_Write
  4510  0C13                     _BMP280_Write:
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _BMP280_Write: [wreg+status,2+status,0+pclath+cstack]
  4514                           ;BMP280_Write@reg_addr stored from wreg
  4515  0C13  00F6               	movwf	BMP280_Write@reg_addr
  4516  0C14                     l1048:
  4517                           
  4518                           ;BMP280.c: 95: void BMP280_Write(uint8_t reg_addr, uint8_t _data);BMP280.c: 96: {;BMP280
      +                          .c: 97:   I2C_Master_Start();
  4519  0C14  120A  158A  23DB  120A  158A  	fcall	_I2C_Master_Start
  4520                           
  4521                           ;BMP280.c: 98:   I2C_Master_Write(0xEE);
  4522  0C19  30EE               	movlw	238
  4523  0C1A  00F1               	movwf	I2C_Master_Write@d
  4524  0C1B  3000               	movlw	0
  4525  0C1C  00F2               	movwf	I2C_Master_Write@d+1
  4526  0C1D  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4527                           
  4528                           ;BMP280.c: 99:   I2C_Master_Write (reg_addr);
  4529  0C22  0876               	movf	BMP280_Write@reg_addr,w
  4530  0C23  00F4               	movwf	??_BMP280_Write
  4531  0C24  01F5               	clrf	??_BMP280_Write+1
  4532  0C25  0874               	movf	??_BMP280_Write,w
  4533  0C26  00F1               	movwf	I2C_Master_Write@d
  4534  0C27  0875               	movf	??_BMP280_Write+1,w
  4535  0C28  00F2               	movwf	I2C_Master_Write@d+1
  4536  0C29  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4537                           
  4538                           ;BMP280.c: 100:   I2C_Master_Write( _data);
  4539  0C2E  0873               	movf	BMP280_Write@_data,w
  4540  0C2F  00F4               	movwf	??_BMP280_Write
  4541  0C30  01F5               	clrf	??_BMP280_Write+1
  4542  0C31  0874               	movf	??_BMP280_Write,w
  4543  0C32  00F1               	movwf	I2C_Master_Write@d
  4544  0C33  0875               	movf	??_BMP280_Write+1,w
  4545  0C34  00F2               	movwf	I2C_Master_Write@d+1
  4546  0C35  120A  158A  23ED  120A  158A  	fcall	_I2C_Master_Write
  4547                           
  4548                           ;BMP280.c: 101:   I2C_Master_Stop();
  4549  0C3A  120A  158A  23E4  120A  158A  	fcall	_I2C_Master_Stop
  4550  0C3F                     l131:
  4551  0C3F  0008               	return
  4552  0C40                     __end_of_BMP280_Write:
  4553                           
  4554                           	psect	text15
  4555  0BED                     __ptext15:	
  4556 ;; *************** function _I2C_Master_Write *****************
  4557 ;; Defined at:
  4558 ;;		line 65 in file "I2C.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  d               2    0[COMMON] unsigned int 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, pclath, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4572 ;;      Params:         2       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0
  4575 ;;      Totals:         2       0       0       0       0
  4576 ;;Total ram usage:        2 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    1
  4579 ;; This function calls:
  4580 ;;		_I2C_Master_Wait
  4581 ;; This function is called by:
  4582 ;;		_BMP280_Write
  4583 ;;		_BMP280_Read8
  4584 ;;		_BMP280_Read16
  4585 ;;		_BMP280_Update
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _I2C_Master_Write
  4591  0BED                     _I2C_Master_Write:
  4592  0BED                     l1028:	
  4593                           ;incstack = 0
  4594                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4595                           
  4596                           
  4597                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4598  0BED  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4599  0BF2                     l1030:
  4600                           
  4601                           ;I2C.c: 68:     SSPBUF = d;
  4602  0BF2  0871               	movf	I2C_Master_Write@d,w
  4603  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0BF5  0093               	movwf	19	;volatile
  4606  0BF6                     l102:
  4607  0BF6  0008               	return
  4608  0BF7                     __end_of_I2C_Master_Write:
  4609                           
  4610                           	psect	text16
  4611  0BE4                     __ptext16:	
  4612 ;; *************** function _I2C_Master_Stop *****************
  4613 ;; Defined at:
  4614 ;;		line 55 in file "I2C.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    1
  4635 ;; This function calls:
  4636 ;;		_I2C_Master_Wait
  4637 ;; This function is called by:
  4638 ;;		_BMP280_Write
  4639 ;;		_BMP280_Read8
  4640 ;;		_BMP280_Read16
  4641 ;;		_BMP280_Update
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _I2C_Master_Stop
  4647  0BE4                     _I2C_Master_Stop:
  4648  0BE4                     l1024:	
  4649                           ;incstack = 0
  4650                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4651                           
  4652                           
  4653                           ;I2C.c: 57:     I2C_Master_Wait();
  4654  0BE4  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4655  0BE9                     l1026:
  4656                           
  4657                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4658  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  4659  0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  4660  0BEB  1511               	bsf	17,2	;volatile
  4661  0BEC                     l99:
  4662  0BEC  0008               	return
  4663  0BED                     __end_of_I2C_Master_Stop:
  4664                           
  4665                           	psect	text17
  4666  0BDB                     __ptext17:	
  4667 ;; *************** function _I2C_Master_Start *****************
  4668 ;; Defined at:
  4669 ;;		line 39 in file "I2C.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4683 ;;      Params:         0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    1
  4690 ;; This function calls:
  4691 ;;		_I2C_Master_Wait
  4692 ;; This function is called by:
  4693 ;;		_BMP280_Write
  4694 ;;		_BMP280_Read8
  4695 ;;		_BMP280_Read16
  4696 ;;		_BMP280_Update
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _I2C_Master_Start
  4702  0BDB                     _I2C_Master_Start:
  4703  0BDB                     l1020:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4706                           
  4707                           
  4708                           ;I2C.c: 41:     I2C_Master_Wait();
  4709  0BDB  120A  118A  2009  120A  158A  	fcall	_I2C_Master_Wait
  4710  0BE0                     l1022:
  4711                           
  4712                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4713  0BE0  1683               	bsf	3,5	;RP0=1, select bank1
  4714  0BE1  1303               	bcf	3,6	;RP1=0, select bank1
  4715  0BE2  1411               	bsf	17,0	;volatile
  4716  0BE3                     l93:
  4717  0BE3  0008               	return
  4718  0BE4                     __end_of_I2C_Master_Start:
  4719                           
  4720                           	psect	text18
  4721  0009                     __ptext18:	
  4722 ;; *************** function _I2C_Master_Wait *****************
  4723 ;; Defined at:
  4724 ;;		line 32 in file "I2C.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_I2C_Master_Start
  4748 ;;		_I2C_Master_Stop
  4749 ;;		_I2C_Master_Write
  4750 ;;		_I2C_Master_Read
  4751 ;;		_I2C_Master_RepeatedStart
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _I2C_Master_Wait
  4757  0009                     _I2C_Master_Wait:
  4758  0009                     l1016:	
  4759                           ;incstack = 0
  4760                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4761                           
  4762  0009                     l87:	
  4763                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4764                           
  4765  0009  1683               	bsf	3,5	;RP0=1, select bank1
  4766  000A  1303               	bcf	3,6	;RP1=0, select bank1
  4767  000B  1914               	btfsc	20,2	;volatile
  4768  000C  280E               	goto	u601
  4769  000D  280F               	goto	u600
  4770  000E                     u601:
  4771  000E  2809               	goto	l87
  4772  000F                     u600:
  4773  000F                     l1018:
  4774  000F  0811               	movf	17,w	;volatile
  4775  0010  391F               	andlw	31
  4776  0011  1D03               	btfss	3,2
  4777  0012  2814               	goto	u611
  4778  0013  2815               	goto	u610
  4779  0014                     u611:
  4780  0014  2809               	goto	l87
  4781  0015                     u610:
  4782  0015                     l90:
  4783  0015  0008               	return
  4784  0016                     __end_of_I2C_Master_Wait:
  4785  007E                     btemp	set	126	;btemp
  4786  007E                     wtemp0	set	126
  4787                           
  4788                           	psect	config
  4789                           
  4790                           ;Config register CONFIG1 @ 0x2007
  4791                           ;	Oscillator Selection bits
  4792                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4793                           ;	Watchdog Timer Enable bit
  4794                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4795                           ;	Power-up Timer Enable bit
  4796                           ;	PWRTE = OFF, PWRT disabled
  4797                           ;	RE3/MCLR pin function select bit
  4798                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4799                           ;	Code Protection bit
  4800                           ;	CP = OFF, Program memory code protection is disabled
  4801                           ;	Data Code Protection bit
  4802                           ;	CPD = OFF, Data memory code protection is disabled
  4803                           ;	Brown Out Reset Selection bits
  4804                           ;	BOREN = ON, BOR enabled
  4805                           ;	Internal External Switchover bit
  4806                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4807                           ;	Fail-Safe Clock Monitor Enabled bit
  4808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4809                           ;	Low Voltage Programming Enable bit
  4810                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4811                           ;	In-Circuit Debugger Mode bit
  4812                           ;	DEBUG = 0x1, unprogrammed default
  4813  2007                     	org	8199
  4814  2007  23F4               	dw	9204
  4815                           
  4816                           ;Config register CONFIG2 @ 0x2008
  4817                           ;	Brown-out Reset Selection bit
  4818                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4819                           ;	Flash Program Memory Self Write Enable bits
  4820                           ;	WRT = OFF, Write protection off
  4821  2008                     	org	8200
  4822  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     63      78
    BANK1            80      0      49
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BMP280_readPressure@pres	PTR unsigned long  size(1) Largest target is 4
		 -> pressure(BANK1[4]), 

    BMP280_readTemperature@temp	PTR long  size(1) Largest target is 4
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->_BMP280_Update
    _BMP280_readTemperature->___lmul
    _BMP280_Update->_I2C_Master_Read
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure
    _BMP280_begin->_BMP280_Read16
    _BMP280_Read8->_I2C_Master_Read
    _BMP280_Read16->_I2C_Master_Read
    _BMP280_Configure->_BMP280_Write
    _BMP280_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_BMP280_readPressure
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _BMP280_readTemperature->___lmul
    _BMP280_readPressure->___lmul
    ___lmul->___aldiv
    _BMP280_begin->_BMP280_Configure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23235
                       _BMP280_begin
                _BMP280_readPressure
             _BMP280_readTemperature
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              9 COMMON     4     4      0
                                              5 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _BMP280_readTemperature                              33    33      0    8167
                                             18 BANK0     33    33      0
                      _BMP280_Update
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _BMP280_Update                                        8     8      0    1829
                                              6 COMMON     4     4      0
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _BMP280_readPressure                                 45    45      0    7474
                                             18 BANK0     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    2372
                                              9 COMMON     1     1      0
                                              6 BANK0     12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    3796
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _BMP280_begin                                         9     5      4    6878
                                              3 BANK0      9     5      4
                   _BMP280_Configure
                      _BMP280_Read16
                       _BMP280_Read8
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read8                                         4     4      0    1708
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Read16                                        7     5      2    1732
                                              6 COMMON     7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BMP280_Configure                                    10     6      4    1742
                                              6 COMMON     7     3      4
                                              0 BANK0      3     3      0
                       _BMP280_Write
 ---------------------------------------------------------------------------------
 (2) _BMP280_Write                                         4     3      1    1282
                                              2 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP280_begin
     _BMP280_Configure
       _BMP280_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _BMP280_Read16
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Read8
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BMP280_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BMP280_readPressure
     ___aldiv
     ___lldiv
     ___lmul
       ___aldiv (ARG)
   _BMP280_readTemperature
     _BMP280_Update
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___aldiv
     ___lmul
       ___aldiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      31       7       61.3%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 14:42:31 2021

               _BMP280_Configure 0D0F                               l46 0C5C                               l55 0C12  
                             l47 0C5C                               l90 0015                               l84 0CD2  
                             l93 0BE3                               l87 0009                               l99 0BEC  
                             fsr 0004                              l102 0BF6                              l105 0C92  
                            l106 0C95                              l131 0C3F                              l107 0C9A  
                            l140 0D56                              l134 0D0E                              l144 0FFF  
                            l160 02C4                              l137 0DEA                              l164 07EA  
                            l317 002A                              l157 0F17                              l166 067C  
                            l327 00B2                              l266 0D9E                              l288 0E52  
                            _GIE 005F          BMP280_Configure@_config 0022                              u600 000F  
                            u601 000E                              u610 0015                              u611 0014  
                            u620 0C8E                              u700 0CB2                              u621 0C8D  
                            u630 0DFD                              u631 0DFC                              u705 0CAD  
                            u650 0E11                              u810 0D96                              u715 0D15  
                            u651 0E10                              u811 0D95                              u900 009A  
                            u820 001D                              u725 0D1D                              u901 0099  
                            u821 001C                              u645 0E02                              u805 0D86  
                            u910 009F                              u830 002E                              u670 0E2C  
                            u750 0EB6                              u735 0D2C                              u911 009E  
                            u831 002D                              u671 0E2B                              u920 0F26  
                            u840 004D                              u760 0F08                              u745 0D34  
                            u921 0F25                              u841 004C                              u665 0E13  
                            u930 0F51                              u690 0E4A                              u770 0D65  
                            u931 0F50                              u691 0E49                              u675 0E28  
                            u771 0D64                              u755 0EB1                              u860 0061  
                            u940 00CF                              u861 0060                              u685 0E3C  
                            u781 0D6E                              u765 0F03                              u782 0D75  
                            u855 0052                              u783 0D7C                              u951 00F8  
                            u880 007C                              u952 00F9                              u881 007B  
                            u961 0180                              u953 00FE                              u945 00CA  
                            u962 0181                              u954 00FF                              u875 0063  
                            u795 0D7E                              u971 01C9                              u963 0186  
                            u955 0104                              u980 029C                              u972 01CA  
                            u964 0187                              u956 0105                              u885 0078  
                            u981 029D                              u973 01CF                              u965 018C  
                            u990 02EE                              u982 02A2                              u974 01D0  
                            u966 018D                              u895 008C                              u991 02EF  
                            u983 02A3                              u975 01D5                              u992 02F4  
                            u976 01D6                              u993 02F5                              fsr0 0004  
                            indf 0000     __size_of_BMP280_readPressure 0526           BMP280_begin@P_sampling 0024  
                           l1020 0BDB                             l1100 0D40                             l1022 0BE0  
                           l1030 0BF2                             l1102 0D4A                             l1110 0E64  
                           l1016 0009                             l1024 0BE4                             l1040 0C88  
                           l1032 0C6D                             l1200 0F37                             l1120 0E99  
                           l1112 0E6D                             l1104 0E53                             l1018 000F  
                           l1026 0BE9                             l1042 0C8E                             l1034 0C72  
                           l1050 0DEB                             l1130 0EF3                             l1122 0EA8  
                           l1114 0E72                             l1106 0E56                             l1028 0BED  
                           l1044 0C96                             l1036 0C7A                             l1204 0F46  
                           l1060 0E1A                             l1052 0DFD                             l1140 0D7C  
                           l1220 02C8                             l1132 0EF8                             l1124 0EC7  
                           l1116 0E7B                             l1108 0E5B                             l1212 00B6  
                           l1038 0C83                             l1206 0F51                             l1150 0019  
                           l1062 0E2C                             l1054 0E00                             l1070 0E4A  
                           l1142 0D85                             l1134 0D57                             l1230 0637  
                           l1222 0599                             l1126 0ED6                             l1118 0E8A  
                           l1214 024B                             l1048 0C14                             l1208 0FF9  
                           l1160 0045                             l1152 001D                             l1064 0E3A  
                           l1056 0E0D                             l1144 0D96                             l1136 0D61  
                           l1232 065A                             l1128 0EE5                             l1216 026E  
                           l1080 0CCF                             l1240 0C5B                             l1170 006A  
                           l1162 004D                             l1154 002E                             l1066 0E3B  
                           l1058 0E11                             l1138 0D65                             l1234 07DC  
                           l1226 05A2                             l1082 0CD0                             l1074 0C9B  
                           l1242 0C5D                             l1092 0DA0                             l1172 007C  
                           l1164 0050                             l1180 009A                             l1156 0039  
                           l1148 0016                             l1068 0E44                             l1228 0623  
                           l1084 0CD1                             l1076 0C9F                             l1094 0DE6  
                           l1086 0CD4                             l1182 009F                             l1174 008A  
                           l1166 005D                             l1158 003D                             l1078 0CA2  
                           l1190 0C05                             l1238 0C40                             l1088 0D0D  
                           l1192 0F1B                             l1184 00AA                             l1176 008B  
                           l1168 0061                             l1098 0D12                             l1194 0F26  
                           l1178 0094                             l1188 0BF7                             l1198 0F2B  
                           u1000 03C3                             u1010 03CD                             u1011 03CE  
                           u1100 068A                             u1020 03F4                             u1012 03D3  
                           u1013 03D4                             u1005 03BE                             u1110 06A3  
                           u1030 0415                             u1031 0416                             u1120 06C3  
                           u1040 0511                             u1032 041B                             u1105 0685  
                           u1041 0512                             u1033 041C                             u1025 03EF  
                           u1130 0723                             u1050 055A                             u1042 0517  
                           u1115 069E                             u1051 055B                             u1043 0518  
                           u1140 078D                             u1060 05A1                             u1052 0560  
                           u1141 078E                             u1125 06BE                             u1061 05A0  
                           u1053 0561                             u1150 079F                             u1142 0793  
                           u1151 07A0                             u1143 0794                             u1135 071E  
                           u1071 05E5                             u1152 07A5                             u1080 05F9  
                           u1072 05E6                             u1160 0C5B                             u1153 07A6  
                           u1081 05FA                             u1073 05EB                             u1161 0C5A  
                           u1090 0637                             u1082 05FF                             u1074 05EC  
                           u1091 0636                             u1083 0600                             u1075 05F1  
                           u1076 05F2                             u1093 0633                             u1197 0F3F  
                           _PEIE 005E          BMP280_Configure@standby 007A                             _main 0C40  
                           btemp 007E                             start 0001  __size_of_BMP280_readTemperature 0212  
         BMP280_begin@T_sampling 0023            __size_of_BMP280_Read8 003C                 ?_I2C_Master_Init 0025  
               ?_I2C_Master_Read 0071                 ?_I2C_Master_Wait 0071            __size_of_BMP280_Write 002D  
               ?_I2C_Master_Stop 0071            __size_of_BMP280_begin 00E8                  __end_of___aldiv 00B3  
                          ?_main 0071                            _ANSEL 0188                  __end_of___lldiv 0E53  
                BMP280_Read8@ret 007A                            _PORTB 0006                            _PORTD 0008  
                          _TRISB 0086                            _TRISC 0087                            _TRISD 0088  
                          _SSPIE 0463                            _TRISE 0089                            _SSPIF 0063  
            ___lmul@multiplicand 002A                            _adc_P 00B1                            _adc_T 0063  
                          _setup 0BF7                            status 0003                            wtemp0 007E  
                   _BMP280_Read8 0CD3                     _BMP280_Write 0C13                     _BMP280_calib 00B5  
                   _BMP280_begin 0F18                  __initialization 07EB                     __end_of_main 0C6D  
         __size_of_BMP280_Read16 004C                           ??_main 007E           __size_of_BMP280_Update 00C5  
         _BMP280_readTemperature 00B3                ?_I2C_Master_Start 0071                ?_I2C_Master_Write 0071  
               BMP280_Read16@ret 007C               ??_I2C_Master_Start 0071               ??_I2C_Master_Write 0073  
                         ?_setup 0071                           _ANSELH 0189                           _SSPADD 0093  
                         _TRISC3 043B                           _TRISC4 043C                           _SSPCON 0014  
                         _SSPBUF 0013                           ___lmul 0D57                        ??___aldiv 0079  
                      ??___lldiv 0079                           _buffer 00A0                           _t_fine 005F  
     BMP280_Configure@P_sampling 0078         __end_of_BMP280_Configure 0D57                    _BMP280_Read16 0D9F  
        __end_of__initialization 07FC       BMP280_Configure@T_sampling 0077                    _BMP280_Update 0E53  
                 __pcstackCOMMON 0071              _BMP280_readPressure 02C5                    __end_of_setup 0C13  
               BMP280_Update@ret 0020             ?_BMP280_readPressure 0071                          ??_setup 007E  
                     __pbssBANK0 005F                       __pbssBANK1 00A0                   ?_BMP280_Read16 0077  
                 ?_BMP280_Update 0071          BMP280_readPressure@var1 005B          BMP280_readPressure@var2 0053  
        BMP280_readPressure@pres 004E                       __pmaintext 0C40                          ?___lmul 0026  
                 ___lmul@product 002E                 BMP280_begin@mode 002B            ??_BMP280_readPressure 0032  
                        _SSPCON2 0091          _BMP280_readPressure$965 004F          _BMP280_readPressure$966 0042  
        _BMP280_readPressure$967 0046          _BMP280_readPressure$968 004A                          _SSPSTAT 0094  
     BMP280_Configure@_ctrl_meas 0021             BMP280_Write@reg_addr 0076                          ___aldiv 0016  
                __size_of___lmul 0048                          ___lldiv 0DEB          ?_BMP280_readTemperature 0071  
                        __ptext1 0BF7                          __ptext2 0C9B                          __ptext3 00B3  
                        __ptext4 0E53                          __ptext5 02C5                          __ptext6 0D57  
                        __ptext7 0DEB                          __ptext8 0016                          __ptext9 0F18  
               ___aldiv@dividend 0075         __size_of_I2C_Master_Init 0038         __size_of_I2C_Master_Read 002E  
       __size_of_I2C_Master_Wait 000D         __size_of_I2C_Master_Stop 0009                          _presmas 0069  
                        _presion 0067                  ??_BMP280_Read16 0079                          clrloop0 0BD4  
           end_of_initialization 07FC                  ??_BMP280_Update 0077            BMP280_Read16@reg_addr 007B  
             BMP280_begin@filter 0025        __size_of_I2C_Master_Start 0009        __size_of_I2C_Master_Write 000A  
                ___lldiv@divisor 0071                  ___lldiv@counter 0024                 ___aldiv@quotient 0022  
               I2C_Master_Init@c 0025                 I2C_Master_Read@a 0071   __end_of_BMP280_readTemperature 02C5  
                      _PORTBbits 0006                        _TRISCbits 0087                ?_BMP280_Configure 0077  
             ??_BMP280_Configure 007B           BMP280_Configure@filter 0079                   __end_of___lmul 0D9F  
            start_initialization 07EB                ??_I2C_Master_Init 007A                ??_I2C_Master_Read 0073  
              ??_I2C_Master_Wait 0071                ??_I2C_Master_Stop 0071                         ??___lmul 007A  
           BMP280_Configure@mode 0020                        ___latbits 0002                    __pcstackBANK0 0020  
                  ?_BMP280_Read8 0071                 _I2C_Master_Start 0BDB                 _I2C_Master_Write 0BED  
                  ?_BMP280_Write 0073                    ?_BMP280_begin 0023             BMP280_readPressure@p 0057  
              BMP280_Write@_data 0073                         ?___aldiv 0071                         ?___lldiv 0071  
    __end_of_BMP280_readPressure 07EB                   __size_of_setup 001C                  ___aldiv@divisor 0071  
                ___aldiv@counter 0020                   ??_BMP280_Read8 0077                        clear_ram0 0BD3  
                 ??_BMP280_Write 0074                   ??_BMP280_begin 0027       _BMP280_readTemperature$963 004F  
     _BMP280_readTemperature$964 004A              I2C_Master_Read@temp 0075                ___lmul@multiplier 0026  
          __end_of_BMP280_Read16 0DEB            __end_of_BMP280_Update 0F18        __size_of_BMP280_Configure 0048  
               __size_of___aldiv 009D                 __size_of___lldiv 0068                  _I2C_Master_Init 0C9B  
                _I2C_Master_Read 0C6D                  _I2C_Master_Wait 0009                  _I2C_Master_Stop 0BE4  
                       __ptext10 0CD3                         __ptext11 0D9F                         __ptext12 0C6D  
                       __ptext13 0D0F                         __ptext14 0C13                         __ptext15 0BED  
                       __ptext16 0BE4                         __ptext17 0BDB                         __ptext18 0009  
     BMP280_readTemperature@var1 0042       BMP280_readTemperature@var2 0046       BMP280_readTemperature@temp 004E  
                  __size_of_main 002D                         _pressure 00CD             __end_of_BMP280_Read8 0D0F  
       __end_of_I2C_Master_Start 0BE4         __end_of_I2C_Master_Write 0BF7             __end_of_BMP280_Write 0C40  
           __end_of_BMP280_begin 1000             BMP280_Read8@reg_addr 0079                 ___lldiv@dividend 0075  
            BMP280_begin@standby 0026         ??_BMP280_readTemperature 0032          __end_of_I2C_Master_Init 0CD3  
        __end_of_I2C_Master_Read 0C9B          __end_of_I2C_Master_Wait 0016          __end_of_I2C_Master_Stop 0BED  
                    _temperature 006A                 ___lldiv@quotient 0020                I2C_Master_Write@d 0071  
                   ___aldiv@sign 0021                      _SSPCON2bits 0091  
