

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 19:51:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  001E                     _ADRESH	set	30
   368  000C                     _PIR1bits	set	12
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  000B                     _INTCONbits	set	11
   374  001F                     _ADCON0bits	set	31
   375  0063                     _SSPIF	set	99
   376  0042                     _RD2	set	66
   377  0041                     _RD1	set	65
   378  0040                     _RD0	set	64
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008C                     _PIE1bits	set	140
   382  009F                     _ADCON1	set	159
   383  0085                     _TRISAbits	set	133
   384  0085                     _TRISA	set	133
   385  0089                     _TRISE	set	137
   386  0088                     _TRISD	set	136
   387  0086                     _TRISB	set	134
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  0188                     _ANSELbits	set	392
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   404  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   405  0013                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0013                     __end_of__initialization:
   409  0013  0183               	clrf	3
   410  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0075                     __pbssCOMMON:
   414  0075                     _adc_fin:
   415  0075                     	ds	2
   416  0077                     _term:
   417  0077                     	ds	2
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_conf_but:
   422  0070                     ?_confADC:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_spiWrite:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_ISR:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     spiWrite@dat:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0070                     	ds	1
   443  0071                     ??_ISR:
   444                           
   445                           ; 1 bytes @ 0x1
   446  0071                     	ds	4
   447  0075                     ??_conf_but:
   448  0075                     ??_confADC:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ??_conf_ch:	
   452                           ; 1 bytes @ 0x5
   453                           
   454  0075                     ??_spiInit:	
   455                           ; 1 bytes @ 0x5
   456                           
   457                           
   458                           	psect	cstackBANK0
   459  0020                     __pcstackBANK0:	
   460                           ; 1 bytes @ 0x5
   461                           
   462  0020                     ?_conf_ch:
   463  0020                     ?_spiInit:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0020                     spiInit@sDataSample:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0020                     conf_ch@sel:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 2 bytes @ 0x0
   474  0020                     	ds	1
   475  0021                     spiInit@sClockIdle:
   476                           
   477                           ; 1 bytes @ 0x1
   478  0021                     	ds	1
   479  0022                     spiInit@sTransmitEdge:
   480                           
   481                           ; 1 bytes @ 0x2
   482  0022                     	ds	1
   483  0023                     spiInit@sType:
   484                           
   485                           ; 1 bytes @ 0x3
   486  0023                     	ds	1
   487  0024                     ??_main:
   488                           
   489                           ; 1 bytes @ 0x4
   490  0024                     	ds	2
   491                           
   492                           	psect	maintext
   493  0017                     __pmaintext:	
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 53 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : B00/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          0       2       0       0       0
   516 ;;      Totals:         0       2       0       0       0
   517 ;;Total ram usage:        2 bytes
   518 ;; Hardware stack levels required when called:    4
   519 ;; This function calls:
   520 ;;		_confADC
   521 ;;		_conf_but
   522 ;;		_conf_ch
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  0017                     _main:
   531  0017                     l898:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   534                           
   535                           
   536                           ;main.c: 54:     conf_but();
   537  0017  120A  118A  20B5  120A  118A  	fcall	_conf_but
   538  001C                     l900:
   539                           
   540                           ;main.c: 55:     adc_fin=0;
   541  001C  01F5               	clrf	_adc_fin
   542  001D  01F6               	clrf	_adc_fin+1
   543  001E                     l902:
   544                           
   545                           ;main.c: 56:     confADC();
   546  001E  120A  118A  2106  120A  118A  	fcall	_confADC
   547                           
   548                           ;main.c: 57:     term = 0;
   549  0023  01F7               	clrf	_term
   550  0024  01F8               	clrf	_term+1
   551  0025                     l904:
   552                           
   553                           ;main.c: 58:     conf_ch(0);
   554  0025  3000               	movlw	0
   555  0026  1283               	bcf	3,5	;RP0=0, select bank0
   556  0027  1303               	bcf	3,6	;RP1=0, select bank0
   557  0028  00A0               	movwf	conf_ch@sel
   558  0029  00A1               	movwf	conf_ch@sel+1
   559  002A  120A  118A  20F1  120A  118A  	fcall	_conf_ch
   560  002F                     l906:
   561                           
   562                           ;main.c: 61:         if (adc_fin == 0) {
   563  002F  0875               	movf	_adc_fin,w
   564  0030  0476               	iorwf	_adc_fin+1,w
   565  0031  1D03               	btfss	3,2
   566  0032  2834               	goto	u231
   567  0033  2835               	goto	u230
   568  0034                     u231:
   569  0034  2847               	goto	l912
   570  0035                     u230:
   571  0035                     l908:
   572                           
   573                           ;main.c: 62:             adc_fin = 1;
   574  0035  3001               	movlw	1
   575  0036  00F5               	movwf	_adc_fin
   576  0037  3000               	movlw	0
   577  0038  00F6               	movwf	_adc_fin+1
   578                           
   579                           ;main.c: 63:             _delay((unsigned long)((10)*((8000000)/4000.0)));
   580  0039  301A               	movlw	26
   581  003A  1283               	bcf	3,5	;RP0=0, select bank0
   582  003B  1303               	bcf	3,6	;RP1=0, select bank0
   583  003C  00A5               	movwf	??_main+1
   584  003D  30F7               	movlw	247
   585  003E  00A4               	movwf	??_main
   586  003F                     u287:
   587  003F  0BA4               	decfsz	??_main,f
   588  0040  283F               	goto	u287
   589  0041  0BA5               	decfsz	??_main+1,f
   590  0042  283F               	goto	u287
   591  0043  2844               	nop2
   592  0044                     l910:
   593                           
   594                           ;main.c: 64:             ADCON0bits.GO = 1;
   595  0044  1283               	bcf	3,5	;RP0=0, select bank0
   596  0045  1303               	bcf	3,6	;RP1=0, select bank0
   597  0046  149F               	bsf	31,1	;volatile
   598  0047                     l912:
   599                           
   600                           ;main.c: 67:         if (term < 100){
   601  0047  0878               	movf	_term+1,w
   602  0048  3A80               	xorlw	128
   603  0049  00FF               	movwf	btemp+1
   604  004A  3080               	movlw	128
   605  004B  027F               	subwf	btemp+1,w
   606  004C  1D03               	skipz
   607  004D  2850               	goto	u245
   608  004E  3064               	movlw	100
   609  004F  0277               	subwf	_term,w
   610  0050                     u245:
   611  0050  1803               	skipnc
   612  0051  2853               	goto	u241
   613  0052  2854               	goto	u240
   614  0053                     u241:
   615  0053  285A               	goto	l916
   616  0054                     u240:
   617  0054                     l914:
   618                           
   619                           ;main.c: 68:             RD0 = 1;
   620  0054  1283               	bcf	3,5	;RP0=0, select bank0
   621  0055  1303               	bcf	3,6	;RP1=0, select bank0
   622  0056  1408               	bsf	8,0	;volatile
   623                           
   624                           ;main.c: 69:             RD1 = 0;
   625  0057  1088               	bcf	8,1	;volatile
   626                           
   627                           ;main.c: 70:             RD2 = 0;
   628  0058  1108               	bcf	8,2	;volatile
   629                           
   630                           ;main.c: 71:         }
   631  0059  282F               	goto	l906
   632  005A                     l916:
   633  005A  0878               	movf	_term+1,w
   634  005B  3A80               	xorlw	128
   635  005C  00FF               	movwf	btemp+1
   636  005D  3080               	movlw	128
   637  005E  027F               	subwf	btemp+1,w
   638  005F  1D03               	skipz
   639  0060  2863               	goto	u255
   640  0061  3065               	movlw	101
   641  0062  0277               	subwf	_term,w
   642  0063                     u255:
   643  0063  1C03               	skipc
   644  0064  2866               	goto	u251
   645  0065  2867               	goto	u250
   646  0066                     u251:
   647  0066  287A               	goto	l922
   648  0067                     u250:
   649  0067                     l918:
   650  0067  0878               	movf	_term+1,w
   651  0068  3A80               	xorlw	128
   652  0069  00FF               	movwf	btemp+1
   653  006A  3080               	movlw	128
   654  006B  027F               	subwf	btemp+1,w
   655  006C  1D03               	skipz
   656  006D  2870               	goto	u265
   657  006E  3072               	movlw	114
   658  006F  0277               	subwf	_term,w
   659  0070                     u265:
   660  0070  1803               	skipnc
   661  0071  2873               	goto	u261
   662  0072  2874               	goto	u260
   663  0073                     u261:
   664  0073  287A               	goto	l922
   665  0074                     u260:
   666  0074                     l920:
   667                           
   668                           ;main.c: 73:             RD1 = 1;
   669  0074  1283               	bcf	3,5	;RP0=0, select bank0
   670  0075  1303               	bcf	3,6	;RP1=0, select bank0
   671  0076  1488               	bsf	8,1	;volatile
   672                           
   673                           ;main.c: 74:             RD0 = 0;
   674  0077  1008               	bcf	8,0	;volatile
   675                           
   676                           ;main.c: 75:             RD2 = 0;
   677  0078  1108               	bcf	8,2	;volatile
   678                           
   679                           ;main.c: 76:         }
   680  0079  282F               	goto	l906
   681  007A                     l922:
   682  007A  0878               	movf	_term+1,w
   683  007B  3A80               	xorlw	128
   684  007C  00FF               	movwf	btemp+1
   685  007D  3080               	movlw	128
   686  007E  027F               	subwf	btemp+1,w
   687  007F  1D03               	skipz
   688  0080  2883               	goto	u275
   689  0081  3073               	movlw	115
   690  0082  0277               	subwf	_term,w
   691  0083                     u275:
   692  0083  1C03               	skipc
   693  0084  2886               	goto	u271
   694  0085  2887               	goto	u270
   695  0086                     u271:
   696  0086  288D               	goto	l64
   697  0087                     u270:
   698  0087                     l924:
   699                           
   700                           ;main.c: 78:             RD1 = 0;
   701  0087  1283               	bcf	3,5	;RP0=0, select bank0
   702  0088  1303               	bcf	3,6	;RP1=0, select bank0
   703  0089  1088               	bcf	8,1	;volatile
   704                           
   705                           ;main.c: 79:             RD0 = 0;
   706  008A  1008               	bcf	8,0	;volatile
   707                           
   708                           ;main.c: 80:             RD2 = 1;
   709  008B  1508               	bsf	8,2	;volatile
   710  008C  282F               	goto	l906
   711  008D                     l64:
   712  008D  282F               	goto	l906
   713  008E  120A  118A  280C   	ljmp	start
   714  0091                     __end_of_main:
   715                           
   716                           	psect	text1
   717  00F1                     __ptext1:	
   718 ;; *************** function _conf_ch *****************
   719 ;; Defined at:
   720 ;;		line 18 in file "Adc_int_.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  sel             2    0[BANK0 ] int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       2       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0
   737 ;;      Totals:         0       2       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    2
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _conf_ch
   750  00F1                     _conf_ch:
   751  00F1                     l892:	
   752                           ;incstack = 0
   753                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
   754                           
   755                           
   756                           ;Adc_int_.c: 19:     if (sel == 0){
   757  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   758  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   759  00F3  0820               	movf	conf_ch@sel,w
   760  00F4  0421               	iorwf	conf_ch@sel+1,w
   761  00F5  1D03               	btfss	3,2
   762  00F6  28F8               	goto	u211
   763  00F7  28F9               	goto	u210
   764  00F8                     u211:
   765  00F8  28FB               	goto	l94
   766  00F9                     u210:
   767  00F9                     l894:
   768                           
   769                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
   770  00F9  30C3               	movlw	-61
   771  00FA  059F               	andwf	31,f	;volatile
   772  00FB                     l94:	
   773                           ;Adc_int_.c: 21:     }
   774                           
   775                           
   776                           ;Adc_int_.c: 22:     if (sel == 1){
   777  00FB  0320               	decf	conf_ch@sel,w
   778  00FC  0421               	iorwf	conf_ch@sel+1,w
   779  00FD  1D03               	btfss	3,2
   780  00FE  2900               	goto	u221
   781  00FF  2901               	goto	u220
   782  0100                     u221:
   783  0100  2905               	goto	l96
   784  0101                     u220:
   785  0101                     l896:
   786                           
   787                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
   788  0101  081F               	movf	31,w	;volatile
   789  0102  39C3               	andlw	-61
   790  0103  3804               	iorlw	4
   791  0104  009F               	movwf	31	;volatile
   792  0105                     l96:
   793  0105  0008               	return
   794  0106                     __end_of_conf_ch:
   795                           
   796                           	psect	text2
   797  00B5                     __ptext2:	
   798 ;; *************** function _conf_but *****************
   799 ;; Defined at:
   800 ;;		line 89 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    3
   821 ;; This function calls:
   822 ;;		_spiInit
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _conf_but
   830  00B5                     _conf_but:
   831  00B5                     l882:	
   832                           ;incstack = 0
   833                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   834                           
   835                           
   836                           ;main.c: 91:     INTCONbits.GIE = 1;
   837  00B5  178B               	bsf	11,7	;volatile
   838                           
   839                           ;main.c: 92:     INTCONbits.PEIE = 1;
   840  00B6  170B               	bsf	11,6	;volatile
   841  00B7                     l884:
   842                           
   843                           ;main.c: 93:     ANSEL = 0;
   844  00B7  1683               	bsf	3,5	;RP0=1, select bank3
   845  00B8  1703               	bsf	3,6	;RP1=1, select bank3
   846  00B9  0188               	clrf	8	;volatile
   847                           
   848                           ;main.c: 94:     ANSELH = 0;
   849  00BA  0189               	clrf	9	;volatile
   850  00BB                     l886:
   851                           
   852                           ;main.c: 95:     ANSELbits.ANS0 = 1;
   853  00BB  1408               	bsf	8,0	;volatile
   854                           
   855                           ;main.c: 96:     TRISB=0x00;
   856  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   857  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   858  00BE  0186               	clrf	6	;volatile
   859                           
   860                           ;main.c: 97:     TRISD=0x00;
   861  00BF  0188               	clrf	8	;volatile
   862                           
   863                           ;main.c: 98:     TRISE=0x00;
   864  00C0  0189               	clrf	9	;volatile
   865                           
   866                           ;main.c: 99:     TRISA=0;
   867  00C1  0185               	clrf	5	;volatile
   868  00C2                     l888:
   869                           
   870                           ;main.c: 100:     TRISAbits.TRISA0 = 1;
   871  00C2  1405               	bsf	5,0	;volatile
   872                           
   873                           ;main.c: 101:     PORTD = 0;
   874  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   875  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   876  00C5  0188               	clrf	8	;volatile
   877                           
   878                           ;main.c: 102:     PORTB = 0;
   879  00C6  0186               	clrf	6	;volatile
   880                           
   881                           ;main.c: 103:     PORTC = 0;
   882  00C7  0187               	clrf	7	;volatile
   883                           
   884                           ;main.c: 104:     PORTE = 0;
   885  00C8  0189               	clrf	9	;volatile
   886  00C9                     l890:
   887                           
   888                           ;main.c: 105:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   889  00C9  01A0               	clrf	spiInit@sDataSample
   890  00CA  01A1               	clrf	spiInit@sClockIdle
   891  00CB  01A2               	clrf	spiInit@sTransmitEdge
   892  00CC  3024               	movlw	36
   893  00CD  120A  118A  20D3  120A  118A  	fcall	_spiInit
   894  00D2                     l73:
   895  00D2  0008               	return
   896  00D3                     __end_of_conf_but:
   897                           
   898                           	psect	text3
   899  00D3                     __ptext3:	
   900 ;; *************** function _spiInit *****************
   901 ;; Defined at:
   902 ;;		line 12 in file "SPI.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  sType           1    wreg     enum E1264
   905 ;;  sDataSample     1    0[BANK0 ] enum E1272
   906 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   907 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  sType           1    3[BANK0 ] enum E1264
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       3       0       0       0
   920 ;;      Locals:         0       1       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       4       0       0       0
   923 ;;Total ram usage:        4 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_conf_but
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _spiInit
   935  00D3                     _spiInit:
   936                           
   937                           ;incstack = 0
   938                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   939                           ;spiInit@sType stored from wreg
   940  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   941  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   942  00D5  00A3               	movwf	spiInit@sType
   943  00D6                     l872:
   944                           
   945                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   946  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   947  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   948  00D8  1287               	bcf	7,5	;volatile
   949                           
   950                           ;SPI.c: 15:     if(sType & 0b00000100)
   951  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   952  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   953  00DB  1D23               	btfss	spiInit@sType,2
   954  00DC  28DE               	goto	u201
   955  00DD  28DF               	goto	u200
   956  00DE                     u201:
   957  00DE  28E5               	goto	l878
   958  00DF                     u200:
   959  00DF                     l874:
   960                           
   961                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   962  00DF  0822               	movf	spiInit@sTransmitEdge,w
   963  00E0  1683               	bsf	3,5	;RP0=1, select bank1
   964  00E1  1303               	bcf	3,6	;RP1=0, select bank1
   965  00E2  0094               	movwf	20	;volatile
   966  00E3                     l876:
   967                           
   968                           ;SPI.c: 18:         TRISC3 = 1;
   969  00E3  1587               	bsf	7,3	;volatile
   970                           
   971                           ;SPI.c: 19:     }
   972  00E4  28EB               	goto	l112
   973  00E5                     l878:
   974                           
   975                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   976  00E5  0820               	movf	spiInit@sDataSample,w
   977  00E6  0422               	iorwf	spiInit@sTransmitEdge,w
   978  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   979  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   980  00E9  0094               	movwf	20	;volatile
   981  00EA                     l880:
   982                           
   983                           ;SPI.c: 23:         TRISC3 = 0;
   984  00EA  1187               	bcf	7,3	;volatile
   985  00EB                     l112:	
   986                           ;SPI.c: 24:     }
   987                           
   988                           
   989                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   990  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   991  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   992  00ED  0823               	movf	spiInit@sType,w
   993  00EE  0421               	iorwf	spiInit@sClockIdle,w
   994  00EF  0094               	movwf	20	;volatile
   995  00F0                     l113:
   996  00F0  0008               	return
   997  00F1                     __end_of_spiInit:
   998                           
   999                           	psect	text4
  1000  0106                     __ptext4:	
  1001 ;; *************** function _confADC *****************
  1002 ;; Defined at:
  1003 ;;		line 3 in file "Adc_int_.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _confADC
  1033  0106                     _confADC:
  1034  0106                     l742:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _confADC: [wreg+status,2+status,0]
  1037                           
  1038                           
  1039                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
  1040  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0108  171F               	bsf	31,6	;volatile
  1043                           
  1044                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
  1045  0109  139F               	bcf	31,7	;volatile
  1046  010A                     l744:
  1047                           
  1048                           ;Adc_int_.c: 8:     ADCON1 = 0b00110000;
  1049  010A  3030               	movlw	48
  1050  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1051  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1052  010D  009F               	movwf	31	;volatile
  1053  010E                     l746:
  1054                           
  1055                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
  1056  010E  30C3               	movlw	-61
  1057  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0111  059F               	andwf	31,f	;volatile
  1060  0112                     l748:
  1061                           
  1062                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
  1063  0112  141F               	bsf	31,0	;volatile
  1064  0113                     l750:
  1065                           
  1066                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
  1067  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1068  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1069  0115  170C               	bsf	12,6	;volatile
  1070  0116                     l752:
  1071                           
  1072                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
  1073  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0118  130C               	bcf	12,6	;volatile
  1076  0119                     l91:
  1077  0119  0008               	return
  1078  011A                     __end_of_confADC:
  1079                           
  1080                           	psect	text5
  1081  0091                     __ptext5:	
  1082 ;; *************** function _ISR *****************
  1083 ;; Defined at:
  1084 ;;		line 112 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0
  1100 ;;      Temps:          4       0       0       0       0
  1101 ;;      Totals:         4       0       0       0       0
  1102 ;;Total ram usage:        4 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    1
  1105 ;; This function calls:
  1106 ;;		_spiWrite
  1107 ;; This function is called by:
  1108 ;;		Interrupt level 1
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _ISR
  1114  0091                     _ISR:
  1115  0091                     i1l792:
  1116                           
  1117                           ;main.c: 114:     if (PIR1bits.ADIF == 1) {
  1118  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0093  1F0C               	btfss	12,6	;volatile
  1121  0094  2896               	goto	u10_21
  1122  0095  2897               	goto	u10_20
  1123  0096                     u10_21:
  1124  0096  28A0               	goto	i1l798
  1125  0097                     u10_20:
  1126  0097                     i1l794:
  1127                           
  1128                           ;main.c: 116:         term = ADRESH;
  1129  0097  081E               	movf	30,w	;volatile
  1130  0098  00F1               	movwf	??_ISR
  1131  0099  01F2               	clrf	??_ISR+1
  1132  009A  0871               	movf	??_ISR,w
  1133  009B  00F7               	movwf	_term
  1134  009C  0872               	movf	??_ISR+1,w
  1135  009D  00F8               	movwf	_term+1
  1136  009E                     i1l796:
  1137                           
  1138                           ;main.c: 117:         adc_fin = 0;
  1139  009E  01F5               	clrf	_adc_fin
  1140  009F  01F6               	clrf	_adc_fin+1
  1141  00A0                     i1l798:
  1142                           
  1143                           ;main.c: 120:     PIR1bits.ADIF = 0;
  1144  00A0  130C               	bcf	12,6	;volatile
  1145  00A1                     i1l800:
  1146                           
  1147                           ;main.c: 122:     if (SSPIF == 1) {
  1148  00A1  1D8C               	btfss	12,3	;volatile
  1149  00A2  28A4               	goto	u11_21
  1150  00A3  28A5               	goto	u11_20
  1151  00A4                     u11_21:
  1152  00A4  28AE               	goto	i1l80
  1153  00A5                     u11_20:
  1154  00A5                     i1l802:
  1155                           
  1156                           ;main.c: 123:         spiWrite(term);
  1157  00A5  0877               	movf	_term,w
  1158  00A6  120A  118A  211A  120A  118A  	fcall	_spiWrite
  1159  00AB                     i1l804:
  1160                           
  1161                           ;main.c: 124:         SSPIF = 0;
  1162  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1163  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1164  00AD  118C               	bcf	12,3	;volatile
  1165  00AE                     i1l80:
  1166  00AE  0874               	movf	??_ISR+3,w
  1167  00AF  008A               	movwf	10
  1168  00B0  0E73               	swapf	??_ISR+2,w
  1169  00B1  0083               	movwf	3
  1170  00B2  0EFE               	swapf	btemp,f
  1171  00B3  0E7E               	swapf	btemp,w
  1172  00B4  0009               	retfie
  1173  00B5                     __end_of_ISR:
  1174                           
  1175                           	psect	intentry
  1176  0004                     __pintentry:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1179                           
  1180  0004                     interrupt_function:
  1181  007E                     saved_w	set	btemp
  1182  0004  00FE               	movwf	btemp
  1183  0005  0E03               	swapf	3,w
  1184  0006  00F3               	movwf	??_ISR+2
  1185  0007  080A               	movf	10,w
  1186  0008  00F4               	movwf	??_ISR+3
  1187  0009  120A  118A  2891   	ljmp	_ISR
  1188                           
  1189                           	psect	text6
  1190  011A                     __ptext6:	
  1191 ;; *************** function _spiWrite *****************
  1192 ;; Defined at:
  1193 ;;		line 34 in file "SPI.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  dat             1    wreg     unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  dat             1    0[COMMON] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         1       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         1       0       0       0       0
  1211 ;;Total ram usage:        1 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_ISR
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _spiWrite
  1222  011A                     _spiWrite:
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _spiWrite: [wreg]
  1226                           ;spiWrite@dat stored from wreg
  1227  011A  00F0               	movwf	spiWrite@dat
  1228  011B                     i1l760:
  1229                           
  1230                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1231  011B  0870               	movf	spiWrite@dat,w
  1232  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1233  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1234  011E  0093               	movwf	19	;volatile
  1235  011F                     i1l122:
  1236  011F  0008               	return
  1237  0120                     __end_of_spiWrite:
  1238  007E                     btemp	set	126	;btemp
  1239  007E                     wtemp0	set	126
  1240                           
  1241                           	psect	config
  1242                           
  1243                           ;Config register CONFIG1 @ 0x2007
  1244                           ;	Oscillator Selection bits
  1245                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1246                           ;	Watchdog Timer Enable bit
  1247                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1248                           ;	Power-up Timer Enable bit
  1249                           ;	PWRTE = OFF, PWRT disabled
  1250                           ;	RE3/MCLR pin function select bit
  1251                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1252                           ;	Code Protection bit
  1253                           ;	CP = OFF, Program memory code protection is disabled
  1254                           ;	Data Code Protection bit
  1255                           ;	CPD = OFF, Data memory code protection is disabled
  1256                           ;	Brown Out Reset Selection bits
  1257                           ;	BOREN = ON, BOR enabled
  1258                           ;	Internal External Switchover bit
  1259                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1260                           ;	Fail-Safe Clock Monitor Enabled bit
  1261                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1262                           ;	Low Voltage Programming Enable bit
  1263                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1264                           ;	In-Circuit Debugger Mode bit
  1265                           ;	DEBUG = 0x1, unprogrammed default
  1266  2007                     	org	8199
  1267  2007  23D4               	dw	9172
  1268                           
  1269                           ;Config register CONFIG2 @ 0x2008
  1270                           ;	Brown-out Reset Selection bit
  1271                           ;	BOR4V = 0x1, unprogrammed default
  1272                           ;	Flash Program Memory Self Write Enable bits
  1273                           ;	WRT = OFF, Write protection off
  1274  2008                     	org	8200
  1275  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     608
                                              4 BANK0      2     2      0
                            _confADC
                           _conf_but
                            _conf_ch
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0      15
                                              1 COMMON     4     4      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but
     _spiInit
   _conf_ch

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 19:51:38 2021

            _SSPSTATbits 0094                       l64 008D                       l73 00D2  
                     l91 0119                       l94 00FB                       l96 0105  
                    l112 00EB                      l113 00F0                      l900 001C  
                    l750 0113                      l742 0106                      l910 0044  
                    l902 001E                      l752 0116                      l744 010A  
                    l920 0074                      l912 0047                      l904 0025  
                    l746 010E                      l922 007A                      l914 0054  
                    l906 002F                      l748 0112                      l924 0087  
                    l916 005A                      l908 0035                      l918 0067  
                    l880 00EA                      l872 00D6                      l874 00DF  
                    l890 00C9                      l882 00B5                      l876 00E3  
                    l884 00B7                      l892 00F1                      l878 00E5  
                    l886 00BB                      l894 00F9                      l888 00C2  
                    l896 0101                      l898 0017                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u200 00DF  
                    u201 00DE                      u210 00F9                      u211 00F8  
                    u220 0101                      u221 0100                      u230 0035  
                    u231 0034                      u240 0054                      u241 0053  
                    u250 0067                      u251 0066                      u260 0074  
                    u261 0073                      u245 0050                      u270 0087  
                    u271 0086                      u255 0063                      u265 0070  
                    u275 0083                      _ISR 0091                      u287 003F  
                   ?_ISR 0070                     i1l80 00AE                     _main 0017  
                   _term 0077                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l122 011F                    i1l800 00A1                    i1l802 00A5  
                  i1l804 00AB                    i1l760 011B                    i1l792 0091  
                  i1l794 0097                    i1l796 009E                    i1l798 00A0  
                  u10_20 0097                    u10_21 0096                    u11_20 00A5  
                  u11_21 00A4                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063          __end_of_confADC 011A          __end_of_conf_ch 0106  
                  pclath 000A          __end_of_spiInit 00F1                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0091  
                 ??_main 0024                   _ADCON1 009F                   _ADRESH 001E  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_conf_but 00D3  
              ??_confADC 0075                ??_conf_ch 0075                   saved_w 007E  
       __end_of_spiWrite 0120                ??_spiInit 0075  __end_of__initialization 0013  
         __pcstackCOMMON 0070               __pmaintext 0017               __pintentry 0004  
              ?_conf_but 0070                  _SSPSTAT 0094                ?_spiWrite 0070  
                _adc_fin 0075                _ANSELbits 0188                  _confADC 0106  
                __ptext1 00F1                  __ptext2 00B5                  __ptext3 00D3  
                __ptext4 0106                  __ptext5 0091                  __ptext6 011A  
                _conf_ch 00F1             __size_of_ISR 0024                  _spiInit 00D3  
             ??_conf_but 0075     end_of_initialization 0013               ??_spiWrite 0070  
              _TRISAbits 0085               conf_ch@sel 0020              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 00B5              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_conf_but 001E  
      __size_of_spiWrite 0006                 ?_confADC 0070                 ?_conf_ch 0020  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_confADC 0014         __size_of_conf_ch 0015  
       __size_of_spiInit 001E                 _conf_but 00B5            __size_of_main 007A  
               _spiWrite 011A             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000  
