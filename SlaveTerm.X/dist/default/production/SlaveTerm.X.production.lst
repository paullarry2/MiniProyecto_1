

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 00:33:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  001E                     _ADRESH	set	30
   368  000C                     _PIR1bits	set	12
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  000B                     _INTCONbits	set	11
   374  001F                     _ADCON0bits	set	31
   375  0063                     _SSPIF	set	99
   376  0042                     _RD2	set	66
   377  0041                     _RD1	set	65
   378  0040                     _RD0	set	64
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008C                     _PIE1bits	set	140
   382  009F                     _ADCON1	set	159
   383  0085                     _TRISAbits	set	133
   384  0087                     _TRISC	set	135
   385  0085                     _TRISA	set	133
   386  0089                     _TRISE	set	137
   387  0088                     _TRISD	set	136
   388  0086                     _TRISB	set	134
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  043C                     _TRISC4	set	1084
   392  0188                     _ANSELbits	set	392
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   406  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   407  0013                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0013                     __end_of__initialization:
   411  0013  0183               	clrf	3
   412  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0075                     __pbssCOMMON:
   416  0075                     _adc_fin:
   417  0075                     	ds	2
   418  0077                     _term:
   419  0077                     	ds	2
   420                           
   421                           	psect	cstackCOMMON
   422  0070                     __pcstackCOMMON:
   423  0070                     ?_conf_but:
   424  0070                     ?_confADC:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiWrite:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_ISR:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     ??_ISR:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	4
   449  0075                     ??_conf_but:
   450  0075                     ??_confADC:	
   451                           ; 1 bytes @ 0x5
   452                           
   453  0075                     ??_conf_ch:	
   454                           ; 1 bytes @ 0x5
   455                           
   456  0075                     ??_spiInit:	
   457                           ; 1 bytes @ 0x5
   458                           
   459                           
   460                           	psect	cstackBANK0
   461  0020                     __pcstackBANK0:	
   462                           ; 1 bytes @ 0x5
   463                           
   464  0020                     ?_conf_ch:
   465  0020                     ?_spiInit:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0020                     spiInit@sDataSample:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0020                     conf_ch@sel:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     spiInit@sClockIdle:
   478                           
   479                           ; 1 bytes @ 0x1
   480  0021                     	ds	1
   481  0022                     spiInit@sTransmitEdge:
   482                           
   483                           ; 1 bytes @ 0x2
   484  0022                     	ds	1
   485  0023                     spiInit@sType:
   486                           
   487                           ; 1 bytes @ 0x3
   488  0023                     	ds	1
   489  0024                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x4
   492  0024                     	ds	2
   493                           
   494                           	psect	maintext
   495  0017                     __pmaintext:	
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 53 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : B00/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       2       0       0       0
   518 ;;      Totals:         0       2       0       0       0
   519 ;;Total ram usage:        2 bytes
   520 ;; Hardware stack levels required when called:    4
   521 ;; This function calls:
   522 ;;		_confADC
   523 ;;		_conf_but
   524 ;;		_conf_ch
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           
   531                           ;psect for function _main
   532  0017                     _main:
   533  0017                     l908:	
   534                           ;incstack = 0
   535                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   536                           
   537                           
   538                           ;main.c: 54:     conf_but();
   539  0017  120A  118A  20B5  120A  118A  	fcall	_conf_but
   540  001C                     l910:
   541                           
   542                           ;main.c: 55:     adc_fin=0;
   543  001C  01F5               	clrf	_adc_fin
   544  001D  01F6               	clrf	_adc_fin+1
   545  001E                     l912:
   546                           
   547                           ;main.c: 56:     confADC();
   548  001E  120A  118A  2108  120A  118A  	fcall	_confADC
   549                           
   550                           ;main.c: 57:     term = 0;
   551  0023  01F7               	clrf	_term
   552  0024  01F8               	clrf	_term+1
   553  0025                     l914:
   554                           
   555                           ;main.c: 58:     conf_ch(0);
   556  0025  3000               	movlw	0
   557  0026  1283               	bcf	3,5	;RP0=0, select bank0
   558  0027  1303               	bcf	3,6	;RP1=0, select bank0
   559  0028  00A0               	movwf	conf_ch@sel
   560  0029  00A1               	movwf	conf_ch@sel+1
   561  002A  120A  118A  20F3  120A  118A  	fcall	_conf_ch
   562  002F                     l916:
   563                           
   564                           ;main.c: 61:         if (adc_fin == 0) {
   565  002F  0875               	movf	_adc_fin,w
   566  0030  0476               	iorwf	_adc_fin+1,w
   567  0031  1D03               	btfss	3,2
   568  0032  2834               	goto	u231
   569  0033  2835               	goto	u230
   570  0034                     u231:
   571  0034  2847               	goto	l922
   572  0035                     u230:
   573  0035                     l918:
   574                           
   575                           ;main.c: 62:             adc_fin = 1;
   576  0035  3001               	movlw	1
   577  0036  00F5               	movwf	_adc_fin
   578  0037  3000               	movlw	0
   579  0038  00F6               	movwf	_adc_fin+1
   580                           
   581                           ;main.c: 63:             _delay((unsigned long)((10)*((8000000)/4000.0)));
   582  0039  301A               	movlw	26
   583  003A  1283               	bcf	3,5	;RP0=0, select bank0
   584  003B  1303               	bcf	3,6	;RP1=0, select bank0
   585  003C  00A5               	movwf	??_main+1
   586  003D  30F7               	movlw	247
   587  003E  00A4               	movwf	??_main
   588  003F                     u287:
   589  003F  0BA4               	decfsz	??_main,f
   590  0040  283F               	goto	u287
   591  0041  0BA5               	decfsz	??_main+1,f
   592  0042  283F               	goto	u287
   593  0043  2844               	nop2
   594  0044                     l920:
   595                           
   596                           ;main.c: 64:             ADCON0bits.GO = 1;
   597  0044  1283               	bcf	3,5	;RP0=0, select bank0
   598  0045  1303               	bcf	3,6	;RP1=0, select bank0
   599  0046  149F               	bsf	31,1	;volatile
   600  0047                     l922:
   601                           
   602                           ;main.c: 67:         if (term < 100){
   603  0047  0878               	movf	_term+1,w
   604  0048  3A80               	xorlw	128
   605  0049  00FF               	movwf	btemp+1
   606  004A  3080               	movlw	128
   607  004B  027F               	subwf	btemp+1,w
   608  004C  1D03               	skipz
   609  004D  2850               	goto	u245
   610  004E  3064               	movlw	100
   611  004F  0277               	subwf	_term,w
   612  0050                     u245:
   613  0050  1803               	skipnc
   614  0051  2853               	goto	u241
   615  0052  2854               	goto	u240
   616  0053                     u241:
   617  0053  285A               	goto	l926
   618  0054                     u240:
   619  0054                     l924:
   620                           
   621                           ;main.c: 68:             RD0 = 1;
   622  0054  1283               	bcf	3,5	;RP0=0, select bank0
   623  0055  1303               	bcf	3,6	;RP1=0, select bank0
   624  0056  1408               	bsf	8,0	;volatile
   625                           
   626                           ;main.c: 69:             RD1 = 0;
   627  0057  1088               	bcf	8,1	;volatile
   628                           
   629                           ;main.c: 70:             RD2 = 0;
   630  0058  1108               	bcf	8,2	;volatile
   631                           
   632                           ;main.c: 71:         }
   633  0059  282F               	goto	l916
   634  005A                     l926:
   635  005A  0878               	movf	_term+1,w
   636  005B  3A80               	xorlw	128
   637  005C  00FF               	movwf	btemp+1
   638  005D  3080               	movlw	128
   639  005E  027F               	subwf	btemp+1,w
   640  005F  1D03               	skipz
   641  0060  2863               	goto	u255
   642  0061  3065               	movlw	101
   643  0062  0277               	subwf	_term,w
   644  0063                     u255:
   645  0063  1C03               	skipc
   646  0064  2866               	goto	u251
   647  0065  2867               	goto	u250
   648  0066                     u251:
   649  0066  287A               	goto	l932
   650  0067                     u250:
   651  0067                     l928:
   652  0067  0878               	movf	_term+1,w
   653  0068  3A80               	xorlw	128
   654  0069  00FF               	movwf	btemp+1
   655  006A  3080               	movlw	128
   656  006B  027F               	subwf	btemp+1,w
   657  006C  1D03               	skipz
   658  006D  2870               	goto	u265
   659  006E  3072               	movlw	114
   660  006F  0277               	subwf	_term,w
   661  0070                     u265:
   662  0070  1803               	skipnc
   663  0071  2873               	goto	u261
   664  0072  2874               	goto	u260
   665  0073                     u261:
   666  0073  287A               	goto	l932
   667  0074                     u260:
   668  0074                     l930:
   669                           
   670                           ;main.c: 73:             RD1 = 1;
   671  0074  1283               	bcf	3,5	;RP0=0, select bank0
   672  0075  1303               	bcf	3,6	;RP1=0, select bank0
   673  0076  1488               	bsf	8,1	;volatile
   674                           
   675                           ;main.c: 74:             RD0 = 0;
   676  0077  1008               	bcf	8,0	;volatile
   677                           
   678                           ;main.c: 75:             RD2 = 0;
   679  0078  1108               	bcf	8,2	;volatile
   680                           
   681                           ;main.c: 76:         }
   682  0079  282F               	goto	l916
   683  007A                     l932:
   684  007A  0878               	movf	_term+1,w
   685  007B  3A80               	xorlw	128
   686  007C  00FF               	movwf	btemp+1
   687  007D  3080               	movlw	128
   688  007E  027F               	subwf	btemp+1,w
   689  007F  1D03               	skipz
   690  0080  2883               	goto	u275
   691  0081  3073               	movlw	115
   692  0082  0277               	subwf	_term,w
   693  0083                     u275:
   694  0083  1C03               	skipc
   695  0084  2886               	goto	u271
   696  0085  2887               	goto	u270
   697  0086                     u271:
   698  0086  288D               	goto	l68
   699  0087                     u270:
   700  0087                     l934:
   701                           
   702                           ;main.c: 78:             RD1 = 0;
   703  0087  1283               	bcf	3,5	;RP0=0, select bank0
   704  0088  1303               	bcf	3,6	;RP1=0, select bank0
   705  0089  1088               	bcf	8,1	;volatile
   706                           
   707                           ;main.c: 79:             RD0 = 0;
   708  008A  1008               	bcf	8,0	;volatile
   709                           
   710                           ;main.c: 80:             RD2 = 1;
   711  008B  1508               	bsf	8,2	;volatile
   712  008C  282F               	goto	l916
   713  008D                     l68:
   714  008D  282F               	goto	l916
   715  008E  120A  118A  280C   	ljmp	start
   716  0091                     __end_of_main:
   717                           
   718                           	psect	text1
   719  00F3                     __ptext1:	
   720 ;; *************** function _conf_ch *****************
   721 ;; Defined at:
   722 ;;		line 18 in file "Adc_int_.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  sel             2    0[BANK0 ] int 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       2       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       2       0       0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    2
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _conf_ch
   752  00F3                     _conf_ch:
   753  00F3                     l902:	
   754                           ;incstack = 0
   755                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
   756                           
   757                           
   758                           ;Adc_int_.c: 19:     if (sel == 0){
   759  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   760  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   761  00F5  0820               	movf	conf_ch@sel,w
   762  00F6  0421               	iorwf	conf_ch@sel+1,w
   763  00F7  1D03               	btfss	3,2
   764  00F8  28FA               	goto	u211
   765  00F9  28FB               	goto	u210
   766  00FA                     u211:
   767  00FA  28FD               	goto	l98
   768  00FB                     u210:
   769  00FB                     l904:
   770                           
   771                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
   772  00FB  30C3               	movlw	-61
   773  00FC  059F               	andwf	31,f	;volatile
   774  00FD                     l98:	
   775                           ;Adc_int_.c: 21:     }
   776                           
   777                           
   778                           ;Adc_int_.c: 22:     if (sel == 1){
   779  00FD  0320               	decf	conf_ch@sel,w
   780  00FE  0421               	iorwf	conf_ch@sel+1,w
   781  00FF  1D03               	btfss	3,2
   782  0100  2902               	goto	u221
   783  0101  2903               	goto	u220
   784  0102                     u221:
   785  0102  2907               	goto	l100
   786  0103                     u220:
   787  0103                     l906:
   788                           
   789                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
   790  0103  081F               	movf	31,w	;volatile
   791  0104  39C3               	andlw	-61
   792  0105  3804               	iorlw	4
   793  0106  009F               	movwf	31	;volatile
   794  0107                     l100:
   795  0107  0008               	return
   796  0108                     __end_of_conf_ch:
   797                           
   798                           	psect	text2
   799  00B5                     __ptext2:	
   800 ;; *************** function _conf_but *****************
   801 ;; Defined at:
   802 ;;		line 89 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    3
   823 ;; This function calls:
   824 ;;		_spiInit
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _conf_but
   832  00B5                     _conf_but:
   833  00B5                     l890:	
   834                           ;incstack = 0
   835                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   836                           
   837                           
   838                           ;main.c: 91:     INTCONbits.GIE = 1;
   839  00B5  178B               	bsf	11,7	;volatile
   840                           
   841                           ;main.c: 92:     INTCONbits.PEIE = 1;
   842  00B6  170B               	bsf	11,6	;volatile
   843  00B7                     l892:
   844                           
   845                           ;main.c: 93:     ANSEL = 0;
   846  00B7  1683               	bsf	3,5	;RP0=1, select bank3
   847  00B8  1703               	bsf	3,6	;RP1=1, select bank3
   848  00B9  0188               	clrf	8	;volatile
   849                           
   850                           ;main.c: 94:     ANSELH = 0;
   851  00BA  0189               	clrf	9	;volatile
   852  00BB                     l894:
   853                           
   854                           ;main.c: 95:     ANSELbits.ANS0 = 1;
   855  00BB  1408               	bsf	8,0	;volatile
   856                           
   857                           ;main.c: 96:     TRISB=0x00;
   858  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   859  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   860  00BE  0186               	clrf	6	;volatile
   861                           
   862                           ;main.c: 97:     TRISD=0x00;
   863  00BF  0188               	clrf	8	;volatile
   864                           
   865                           ;main.c: 98:     TRISE=0x00;
   866  00C0  0189               	clrf	9	;volatile
   867                           
   868                           ;main.c: 99:     TRISA=0;
   869  00C1  0185               	clrf	5	;volatile
   870                           
   871                           ;main.c: 100:     TRISC = 0;
   872  00C2  0187               	clrf	7	;volatile
   873  00C3                     l896:
   874                           
   875                           ;main.c: 101:     TRISC4 = 1;
   876  00C3  1607               	bsf	7,4	;volatile
   877  00C4                     l898:
   878                           
   879                           ;main.c: 102:     TRISAbits.TRISA0 = 1;
   880  00C4  1405               	bsf	5,0	;volatile
   881                           
   882                           ;main.c: 103:     PORTD = 0;
   883  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   884  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   885  00C7  0188               	clrf	8	;volatile
   886                           
   887                           ;main.c: 104:     PORTB = 0;
   888  00C8  0186               	clrf	6	;volatile
   889                           
   890                           ;main.c: 105:     PORTC = 0;
   891  00C9  0187               	clrf	7	;volatile
   892                           
   893                           ;main.c: 106:     PORTE = 0;
   894  00CA  0189               	clrf	9	;volatile
   895  00CB                     l900:
   896                           
   897                           ;main.c: 107:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   898  00CB  01A0               	clrf	spiInit@sDataSample
   899  00CC  01A1               	clrf	spiInit@sClockIdle
   900  00CD  01A2               	clrf	spiInit@sTransmitEdge
   901  00CE  3024               	movlw	36
   902  00CF  120A  118A  20D5  120A  118A  	fcall	_spiInit
   903  00D4                     l77:
   904  00D4  0008               	return
   905  00D5                     __end_of_conf_but:
   906                           
   907                           	psect	text3
   908  00D5                     __ptext3:	
   909 ;; *************** function _spiInit *****************
   910 ;; Defined at:
   911 ;;		line 12 in file "SPI.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  sType           1    wreg     enum E1264
   914 ;;  sDataSample     1    0[BANK0 ] enum E1272
   915 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   916 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  sType           1    3[BANK0 ] enum E1264
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       3       0       0       0
   929 ;;      Locals:         0       1       0       0       0
   930 ;;      Temps:          0       0       0       0       0
   931 ;;      Totals:         0       4       0       0       0
   932 ;;Total ram usage:        4 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_conf_but
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _spiInit
   944  00D5                     _spiInit:
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   948                           ;spiInit@sType stored from wreg
   949  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   950  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   951  00D7  00A3               	movwf	spiInit@sType
   952  00D8                     l880:
   953                           
   954                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   955  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   956  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   957  00DA  1287               	bcf	7,5	;volatile
   958                           
   959                           ;SPI.c: 15:     if(sType & 0b00000100)
   960  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   961  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   962  00DD  1D23               	btfss	spiInit@sType,2
   963  00DE  28E0               	goto	u201
   964  00DF  28E1               	goto	u200
   965  00E0                     u201:
   966  00E0  28E7               	goto	l886
   967  00E1                     u200:
   968  00E1                     l882:
   969                           
   970                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   971  00E1  0822               	movf	spiInit@sTransmitEdge,w
   972  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   973  00E3  1303               	bcf	3,6	;RP1=0, select bank1
   974  00E4  0094               	movwf	20	;volatile
   975  00E5                     l884:
   976                           
   977                           ;SPI.c: 18:         TRISC3 = 1;
   978  00E5  1587               	bsf	7,3	;volatile
   979                           
   980                           ;SPI.c: 19:     }
   981  00E6  28ED               	goto	l116
   982  00E7                     l886:
   983                           
   984                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   985  00E7  0820               	movf	spiInit@sDataSample,w
   986  00E8  0422               	iorwf	spiInit@sTransmitEdge,w
   987  00E9  1683               	bsf	3,5	;RP0=1, select bank1
   988  00EA  1303               	bcf	3,6	;RP1=0, select bank1
   989  00EB  0094               	movwf	20	;volatile
   990  00EC                     l888:
   991                           
   992                           ;SPI.c: 23:         TRISC3 = 0;
   993  00EC  1187               	bcf	7,3	;volatile
   994  00ED                     l116:	
   995                           ;SPI.c: 24:     }
   996                           
   997                           
   998                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   999  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1000  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1001  00EF  0823               	movf	spiInit@sType,w
  1002  00F0  0421               	iorwf	spiInit@sClockIdle,w
  1003  00F1  0094               	movwf	20	;volatile
  1004  00F2                     l117:
  1005  00F2  0008               	return
  1006  00F3                     __end_of_spiInit:
  1007                           
  1008                           	psect	text4
  1009  0108                     __ptext4:	
  1010 ;; *************** function _confADC *****************
  1011 ;; Defined at:
  1012 ;;		line 3 in file "Adc_int_.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _confADC
  1042  0108                     _confADC:
  1043  0108                     l748:	
  1044                           ;incstack = 0
  1045                           ; Regs used in _confADC: [wreg+status,2+status,0]
  1046                           
  1047                           
  1048                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
  1049  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1051  010A  171F               	bsf	31,6	;volatile
  1052                           
  1053                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
  1054  010B  139F               	bcf	31,7	;volatile
  1055  010C                     l750:
  1056                           
  1057                           ;Adc_int_.c: 8:     ADCON1 = 0b00110000;
  1058  010C  3030               	movlw	48
  1059  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1060  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1061  010F  009F               	movwf	31	;volatile
  1062  0110                     l752:
  1063                           
  1064                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
  1065  0110  30C3               	movlw	-61
  1066  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0113  059F               	andwf	31,f	;volatile
  1069  0114                     l754:
  1070                           
  1071                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
  1072  0114  141F               	bsf	31,0	;volatile
  1073  0115                     l756:
  1074                           
  1075                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
  1076  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0117  170C               	bsf	12,6	;volatile
  1079  0118                     l758:
  1080                           
  1081                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
  1082  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1084  011A  130C               	bcf	12,6	;volatile
  1085  011B                     l95:
  1086  011B  0008               	return
  1087  011C                     __end_of_confADC:
  1088                           
  1089                           	psect	text5
  1090  0091                     __ptext5:	
  1091 ;; *************** function _ISR *****************
  1092 ;; Defined at:
  1093 ;;		line 114 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          4       0       0       0       0
  1110 ;;      Totals:         4       0       0       0       0
  1111 ;;Total ram usage:        4 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		_spiWrite
  1116 ;; This function is called by:
  1117 ;;		Interrupt level 1
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _ISR
  1123  0091                     _ISR:
  1124  0091                     i1l798:
  1125                           
  1126                           ;main.c: 116:     if (PIR1bits.ADIF == 1) {
  1127  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0093  1F0C               	btfss	12,6	;volatile
  1130  0094  2896               	goto	u10_21
  1131  0095  2897               	goto	u10_20
  1132  0096                     u10_21:
  1133  0096  28A0               	goto	i1l804
  1134  0097                     u10_20:
  1135  0097                     i1l800:
  1136                           
  1137                           ;main.c: 118:         term = ADRESH;
  1138  0097  081E               	movf	30,w	;volatile
  1139  0098  00F1               	movwf	??_ISR
  1140  0099  01F2               	clrf	??_ISR+1
  1141  009A  0871               	movf	??_ISR,w
  1142  009B  00F7               	movwf	_term
  1143  009C  0872               	movf	??_ISR+1,w
  1144  009D  00F8               	movwf	_term+1
  1145  009E                     i1l802:
  1146                           
  1147                           ;main.c: 119:         adc_fin = 0;
  1148  009E  01F5               	clrf	_adc_fin
  1149  009F  01F6               	clrf	_adc_fin+1
  1150  00A0                     i1l804:
  1151                           
  1152                           ;main.c: 122:     PIR1bits.ADIF = 0;
  1153  00A0  130C               	bcf	12,6	;volatile
  1154  00A1                     i1l806:
  1155                           
  1156                           ;main.c: 124:     if (SSPIF == 1) {
  1157  00A1  1D8C               	btfss	12,3	;volatile
  1158  00A2  28A4               	goto	u11_21
  1159  00A3  28A5               	goto	u11_20
  1160  00A4                     u11_21:
  1161  00A4  28AE               	goto	i1l84
  1162  00A5                     u11_20:
  1163  00A5                     i1l808:
  1164                           
  1165                           ;main.c: 125:         spiWrite(term);
  1166  00A5  0877               	movf	_term,w
  1167  00A6  120A  118A  211C  120A  118A  	fcall	_spiWrite
  1168  00AB                     i1l810:
  1169                           
  1170                           ;main.c: 126:         SSPIF = 0;
  1171  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1173  00AD  118C               	bcf	12,3	;volatile
  1174  00AE                     i1l84:
  1175  00AE  0874               	movf	??_ISR+3,w
  1176  00AF  008A               	movwf	10
  1177  00B0  0E73               	swapf	??_ISR+2,w
  1178  00B1  0083               	movwf	3
  1179  00B2  0EFE               	swapf	btemp,f
  1180  00B3  0E7E               	swapf	btemp,w
  1181  00B4  0009               	retfie
  1182  00B5                     __end_of_ISR:
  1183                           
  1184                           	psect	intentry
  1185  0004                     __pintentry:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1188                           
  1189  0004                     interrupt_function:
  1190  007E                     saved_w	set	btemp
  1191  0004  00FE               	movwf	btemp
  1192  0005  0E03               	swapf	3,w
  1193  0006  00F3               	movwf	??_ISR+2
  1194  0007  080A               	movf	10,w
  1195  0008  00F4               	movwf	??_ISR+3
  1196  0009  120A  118A  2891   	ljmp	_ISR
  1197                           
  1198                           	psect	text6
  1199  011C                     __ptext6:	
  1200 ;; *************** function _spiWrite *****************
  1201 ;; Defined at:
  1202 ;;		line 34 in file "SPI.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  dat             1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  dat             1    0[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         1       0       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_ISR
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _spiWrite
  1231  011C                     _spiWrite:
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in _spiWrite: [wreg]
  1235                           ;spiWrite@dat stored from wreg
  1236  011C  00F0               	movwf	spiWrite@dat
  1237  011D                     i1l766:
  1238                           
  1239                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1240  011D  0870               	movf	spiWrite@dat,w
  1241  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1242  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0120  0093               	movwf	19	;volatile
  1244  0121                     i1l126:
  1245  0121  0008               	return
  1246  0122                     __end_of_spiWrite:
  1247  007E                     btemp	set	126	;btemp
  1248  007E                     wtemp0	set	126
  1249                           
  1250                           	psect	config
  1251                           
  1252                           ;Config register CONFIG1 @ 0x2007
  1253                           ;	Oscillator Selection bits
  1254                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1255                           ;	Watchdog Timer Enable bit
  1256                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1257                           ;	Power-up Timer Enable bit
  1258                           ;	PWRTE = OFF, PWRT disabled
  1259                           ;	RE3/MCLR pin function select bit
  1260                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1261                           ;	Code Protection bit
  1262                           ;	CP = OFF, Program memory code protection is disabled
  1263                           ;	Data Code Protection bit
  1264                           ;	CPD = OFF, Data memory code protection is disabled
  1265                           ;	Brown Out Reset Selection bits
  1266                           ;	BOREN = ON, BOR enabled
  1267                           ;	Internal External Switchover bit
  1268                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1269                           ;	Fail-Safe Clock Monitor Enabled bit
  1270                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1271                           ;	Low Voltage Programming Enable bit
  1272                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1273                           ;	In-Circuit Debugger Mode bit
  1274                           ;	DEBUG = 0x1, unprogrammed default
  1275  2007                     	org	8199
  1276  2007  23D4               	dw	9172
  1277                           
  1278                           ;Config register CONFIG2 @ 0x2008
  1279                           ;	Brown-out Reset Selection bit
  1280                           ;	BOR4V = 0x1, unprogrammed default
  1281                           ;	Flash Program Memory Self Write Enable bits
  1282                           ;	WRT = OFF, Write protection off
  1283  2008                     	org	8200
  1284  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     608
                                              4 BANK0      2     2      0
                            _confADC
                           _conf_but
                            _conf_ch
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0      15
                                              1 COMMON     4     4      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but
     _spiInit
   _conf_ch

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 00:33:45 2021

            _SSPSTATbits 0094                       l68 008D                       l77 00D4  
                     l95 011B                       l98 00FD                      l100 0107  
                    l116 00ED                      l117 00F2                      l900 00CB  
                    l750 010C                      l902 00F3                      l910 001C  
                    l752 0110                      l904 00FB                      l920 0044  
                    l912 001E                      l754 0114                      l906 0103  
                    l930 0074                      l922 0047                      l914 0025  
                    l756 0115                      l748 0108                      l932 007A  
                    l924 0054                      l916 002F                      l908 0017  
                    l758 0118                      l934 0087                      l926 005A  
                    l918 0035                      l880 00D8                      l928 0067  
                    l882 00E1                      l890 00B5                      l884 00E5  
                    l892 00B7                      l886 00E7                      l894 00BB  
                    l888 00EC                      l896 00C3                      l898 00C4  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u200 00E1                      u201 00E0                      u210 00FB  
                    u211 00FA                      u220 0103                      u221 0102  
                    u230 0035                      u231 0034                      u240 0054  
                    u241 0053                      u250 0067                      u251 0066  
                    u260 0074                      u261 0073                      u245 0050  
                    u270 0087                      u271 0086                      u255 0063  
                    u265 0070                      u275 0083                      _ISR 0091  
                    u287 003F                     ?_ISR 0070                     i1l84 00AE  
                   _main 0017                     _term 0077                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l126 0121                    i1l800 0097  
                  i1l810 00AB                    i1l802 009E                    i1l804 00A0  
                  i1l806 00A1                    i1l808 00A5                    i1l766 011D  
                  i1l798 0091                    u10_20 0097                    u10_21 0096  
                  u11_20 00A5                    u11_21 00A4                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
        __end_of_confADC 011C          __end_of_conf_ch 0108                    pclath 000A  
        __end_of_spiInit 00F3                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0091                   ??_main 0024  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_conf_but 00D5  
              ??_confADC 0075                ??_conf_ch 0075                   saved_w 007E  
       __end_of_spiWrite 0122                ??_spiInit 0075  __end_of__initialization 0013  
         __pcstackCOMMON 0070               __pmaintext 0017               __pintentry 0004  
              ?_conf_but 0070                  _SSPSTAT 0094                ?_spiWrite 0070  
                _adc_fin 0075                _ANSELbits 0188                  _confADC 0108  
                __ptext1 00F3                  __ptext2 00B5                  __ptext3 00D5  
                __ptext4 0108                  __ptext5 0091                  __ptext6 011C  
                _conf_ch 00F3             __size_of_ISR 0024                  _spiInit 00D5  
             ??_conf_but 0075     end_of_initialization 0013               ??_spiWrite 0070  
              _TRISAbits 0085               conf_ch@sel 0020              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 00B5              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_conf_but 0020  
      __size_of_spiWrite 0006                 ?_confADC 0070                 ?_conf_ch 0020  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_confADC 0014         __size_of_conf_ch 0015  
       __size_of_spiInit 001E                 _conf_but 00B5            __size_of_main 007A  
               _spiWrite 011C             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000  
