

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:15:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0006                     _PORTB	set	6
   364  0008                     _PORTD	set	8
   365  0006                     _PORTBbits	set	6
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  0049                     _RE1	set	73
   369  0048                     _RE0	set	72
   370  0088                     _TRISD	set	136
   371  0086                     _TRISB	set	134
   372  0087                     _TRISCbits	set	135
   373  0087                     _TRISC	set	135
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  043B                     _TRISC3	set	1083
   377  043D                     _TRISC5	set	1085
   378  0189                     _ANSELH	set	393
   379  0188                     _ANSEL	set	392
   380                           
   381                           	psect	cinit
   382  07F8                     start_initialization:	
   383                           ; #config settings
   384                           
   385  07F8                     __initialization:
   386                           
   387                           ; Clear objects allocated to COMMON
   388  07F8  01F9               	clrf	__pbssCOMMON& (0+127)
   389  07F9  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   390  07FA  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   391  07FB  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   392  07FC                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FC                     __end_of__initialization:
   396  07FC  0183               	clrf	3
   397  07FD  120A  118A  2FB3   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMMON
   400  0079                     __pbssCOMMON:
   401  0079                     _temp:
   402  0079                     	ds	1
   403  007A                     _contador:
   404  007A                     	ds	1
   405  007B                     _termometro:
   406  007B                     	ds	1
   407  007C                     _pot:
   408  007C                     	ds	1
   409                           
   410                           	psect	cstackCOMMON
   411  0070                     __pcstackCOMMON:
   412  0070                     ?_setup:
   413  0070                     ?_spiInit:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_spiReceiveWait:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_spiReceiveWait:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_spiWrite:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_spiRead:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_spiRead:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     spiInit@sDataSample:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     spiWrite@dat:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	1
   446  0071                     ?_get_spi:
   447  0071                     spiInit@sClockIdle:	
   448                           ; 1 bytes @ 0x1
   449                           
   450  0071                     get_spi@SS:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 2 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     spiInit@sTransmitEdge:
   457                           
   458                           ; 1 bytes @ 0x2
   459  0072                     	ds	1
   460  0073                     ??_get_spi:
   461  0073                     ??_spiInit:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     spiInit@sType:	
   465                           ; 1 bytes @ 0x3
   466                           
   467                           
   468                           ; 1 bytes @ 0x3
   469  0073                     	ds	1
   470  0074                     ??_setup:
   471                           
   472                           ; 1 bytes @ 0x4
   473  0074                     	ds	1
   474  0075                     ??_main:
   475                           
   476                           ; 1 bytes @ 0x5
   477  0075                     	ds	4
   478                           
   479                           	psect	maintext
   480  07B3                     __pmaintext:	
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 56 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : B00/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          4       0       0       0       0
   503 ;;      Totals:         4       0       0       0       0
   504 ;;Total ram usage:        4 bytes
   505 ;; Hardware stack levels required when called:    3
   506 ;; This function calls:
   507 ;;		_get_spi
   508 ;;		_setup
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  07B3                     _main:
   517  07B3                     l877:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main.c: 57:     setup();
   523  07B3  120A  118A  2776  120A  118A  	fcall	_setup
   524  07B8                     l77:	
   525                           ;main.c: 58:     while (1) {
   526                           
   527                           
   528                           ;main.c: 59:         pot = get_spi(PORTBbits.RB0);
   529  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   530  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   531  07BA  0806               	movf	6,w	;volatile
   532  07BB  3901               	andlw	1
   533  07BC  00F5               	movwf	??_main
   534  07BD  01F6               	clrf	??_main+1
   535  07BE  0875               	movf	??_main,w
   536  07BF  00F1               	movwf	get_spi@SS
   537  07C0  0876               	movf	??_main+1,w
   538  07C1  00F2               	movwf	get_spi@SS+1
   539  07C2  120A  118A  2791  120A  118A  	fcall	_get_spi
   540  07C7  00F7               	movwf	??_main+2
   541  07C8  0877               	movf	??_main+2,w
   542  07C9  00FC               	movwf	_pot
   543                           
   544                           ;main.c: 60:         contador = get_spi(PORTBbits.RB1);
   545  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   546  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   547  07CC  0C06               	rrf	6,w	;volatile
   548  07CD  3901               	andlw	1
   549  07CE  00F5               	movwf	??_main
   550  07CF  01F6               	clrf	??_main+1
   551  07D0  0875               	movf	??_main,w
   552  07D1  00F1               	movwf	get_spi@SS
   553  07D2  0876               	movf	??_main+1,w
   554  07D3  00F2               	movwf	get_spi@SS+1
   555  07D4  120A  118A  2791  120A  118A  	fcall	_get_spi
   556  07D9  00F7               	movwf	??_main+2
   557  07DA  0877               	movf	??_main+2,w
   558  07DB  00FA               	movwf	_contador
   559                           
   560                           ;main.c: 61:         termometro = get_spi(PORTBbits.RB2);
   561  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   562  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   563  07DE  0C06               	rrf	6,w	;volatile
   564  07DF  00F5               	movwf	??_main
   565  07E0  0C75               	rrf	??_main,w
   566  07E1  3901               	andlw	1
   567  07E2  00F6               	movwf	??_main+1
   568  07E3  01F7               	clrf	??_main+2
   569  07E4  0876               	movf	??_main+1,w
   570  07E5  00F1               	movwf	get_spi@SS
   571  07E6  0877               	movf	??_main+2,w
   572  07E7  00F2               	movwf	get_spi@SS+1
   573  07E8  120A  118A  2791  120A  118A  	fcall	_get_spi
   574  07ED  00F8               	movwf	??_main+3
   575  07EE  0878               	movf	??_main+3,w
   576  07EF  00FB               	movwf	_termometro
   577  07F0                     l879:
   578                           
   579                           ;main.c: 62:         PORTD = termometro;
   580  07F0  087B               	movf	_termometro,w
   581  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   582  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   583  07F3  0088               	movwf	8	;volatile
   584  07F4  2FB8               	goto	l77
   585  07F5  120A  118A  2800   	ljmp	start
   586  07F8                     __end_of_main:
   587                           
   588                           	psect	text1
   589  0776                     __ptext1:	
   590 ;; *************** function _setup *****************
   591 ;; Defined at:
   592 ;;		line 71 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    1
   613 ;; This function calls:
   614 ;;		_spiInit
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _setup
   622  0776                     _setup:
   623  0776                     l849:	
   624                           ;incstack = 0
   625                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   626                           
   627                           
   628                           ;main.c: 72:     ANSEL = 0;
   629  0776  1683               	bsf	3,5	;RP0=1, select bank3
   630  0777  1703               	bsf	3,6	;RP1=1, select bank3
   631  0778  0188               	clrf	8	;volatile
   632                           
   633                           ;main.c: 73:     ANSELH = 0;
   634  0779  0189               	clrf	9	;volatile
   635                           
   636                           ;main.c: 74:     TRISC = 0;
   637  077A  1683               	bsf	3,5	;RP0=1, select bank1
   638  077B  1303               	bcf	3,6	;RP1=0, select bank1
   639  077C  0187               	clrf	7	;volatile
   640  077D                     l851:
   641                           
   642                           ;main.c: 75:     TRISCbits.TRISC4 = 1;
   643  077D  1607               	bsf	7,4	;volatile
   644                           
   645                           ;main.c: 76:     TRISB = 0;
   646  077E  0186               	clrf	6	;volatile
   647                           
   648                           ;main.c: 77:     TRISD = 0;
   649  077F  0188               	clrf	8	;volatile
   650                           
   651                           ;main.c: 78:     PORTB = 0;
   652  0780  1283               	bcf	3,5	;RP0=0, select bank0
   653  0781  1303               	bcf	3,6	;RP1=0, select bank0
   654  0782  0186               	clrf	6	;volatile
   655                           
   656                           ;main.c: 79:     PORTD = 0;
   657  0783  0188               	clrf	8	;volatile
   658  0784                     l853:
   659                           
   660                           ;main.c: 80:     PORTBbits.RB0 = 1;
   661  0784  1406               	bsf	6,0	;volatile
   662  0785                     l855:
   663                           
   664                           ;main.c: 81:     PORTBbits.RB1 = 1;
   665  0785  1486               	bsf	6,1	;volatile
   666  0786                     l857:
   667                           
   668                           ;main.c: 82:     PORTBbits.RB2 = 1;
   669  0786  1506               	bsf	6,2	;volatile
   670  0787                     l859:
   671                           
   672                           ;main.c: 83:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   673  0787  01F0               	clrf	spiInit@sDataSample
   674  0788  01F1               	clrf	spiInit@sClockIdle
   675  0789  01F2               	clrf	spiInit@sTransmitEdge
   676  078A  3020               	movlw	32
   677  078B  120A  118A  2760  120A  118A  	fcall	_spiInit
   678  0790                     l83:
   679  0790  0008               	return
   680  0791                     __end_of_setup:
   681                           
   682                           	psect	text2
   683  0760                     __ptext2:	
   684 ;; *************** function _spiInit *****************
   685 ;; Defined at:
   686 ;;		line 12 in file "SPI.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  sType           1    wreg     enum E1264
   689 ;;  sDataSample     1    0[COMMON] enum E1272
   690 ;;  sClockIdle      1    1[COMMON] enum E1276
   691 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  sType           1    3[COMMON] enum E1264
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         3       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0
   706 ;;      Totals:         4       0       0       0       0
   707 ;;Total ram usage:        4 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_setup
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _spiInit
   718  0760                     _spiInit:
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   722                           ;spiInit@sType stored from wreg
   723  0760  00F3               	movwf	spiInit@sType
   724  0761                     l839:
   725                           
   726                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   727  0761  1683               	bsf	3,5	;RP0=1, select bank1
   728  0762  1303               	bcf	3,6	;RP1=0, select bank1
   729  0763  1287               	bcf	7,5	;volatile
   730                           
   731                           ;SPI.c: 15:     if(sType & 0b00000100)
   732  0764  1D73               	btfss	spiInit@sType,2
   733  0765  2F67               	goto	u61
   734  0766  2F68               	goto	u60
   735  0767                     u61:
   736  0767  2F6C               	goto	l845
   737  0768                     u60:
   738  0768                     l841:
   739                           
   740                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   741  0768  0872               	movf	spiInit@sTransmitEdge,w
   742  0769  0094               	movwf	20	;volatile
   743  076A                     l843:
   744                           
   745                           ;SPI.c: 18:         TRISC3 = 1;
   746  076A  1587               	bsf	7,3	;volatile
   747                           
   748                           ;SPI.c: 19:     }
   749  076B  2F70               	goto	l16
   750  076C                     l845:
   751                           
   752                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   753  076C  0870               	movf	spiInit@sDataSample,w
   754  076D  0472               	iorwf	spiInit@sTransmitEdge,w
   755  076E  0094               	movwf	20	;volatile
   756  076F                     l847:
   757                           
   758                           ;SPI.c: 23:         TRISC3 = 0;
   759  076F  1187               	bcf	7,3	;volatile
   760  0770                     l16:	
   761                           ;SPI.c: 24:     }
   762                           
   763                           
   764                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   765  0770  0873               	movf	spiInit@sType,w
   766  0771  0471               	iorwf	spiInit@sClockIdle,w
   767  0772  1283               	bcf	3,5	;RP0=0, select bank0
   768  0773  1303               	bcf	3,6	;RP1=0, select bank0
   769  0774  0094               	movwf	20	;volatile
   770  0775                     l17:
   771  0775  0008               	return
   772  0776                     __end_of_spiInit:
   773                           
   774                           	psect	text3
   775  0791                     __ptext3:	
   776 ;; *************** function _get_spi *****************
   777 ;; Defined at:
   778 ;;		line 86 in file "main.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  SS              2    1[COMMON] unsigned int 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         2       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0
   794 ;;      Temps:          2       0       0       0       0
   795 ;;      Totals:         4       0       0       0       0
   796 ;;Total ram usage:        4 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    2
   799 ;; This function calls:
   800 ;;		_spiRead
   801 ;;		_spiWrite
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _get_spi
   809  0791                     _get_spi:
   810  0791                     l861:	
   811                           ;incstack = 0
   812                           ; Regs used in _get_spi: [wreg+status,2+status,0+pclath+cstack]
   813                           
   814  0791                     l863:
   815                           
   816                           ;main.c: 88:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   817  0791  3003               	movlw	3
   818  0792  00F4               	movwf	??_get_spi+1
   819  0793  3097               	movlw	151
   820  0794  00F3               	movwf	??_get_spi
   821  0795                     u77:
   822  0795  0BF3               	decfsz	??_get_spi,f
   823  0796  2F95               	goto	u77
   824  0797  0BF4               	decfsz	??_get_spi+1,f
   825  0798  2F95               	goto	u77
   826  0799  2F9A               	nop2
   827  079A                     l865:
   828                           
   829                           ;main.c: 89:         spiWrite(1);
   830  079A  3001               	movlw	1
   831  079B  120A  118A  274A  120A  118A  	fcall	_spiWrite
   832  07A0                     l867:
   833                           
   834                           ;main.c: 90:         temp = spiRead();
   835  07A0  120A  118A  2757  120A  118A  	fcall	_spiRead
   836  07A5  00F3               	movwf	??_get_spi
   837  07A6  0873               	movf	??_get_spi,w
   838  07A7  00F9               	movwf	_temp
   839  07A8                     l869:
   840                           
   841                           ;main.c: 91:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   842  07A8  3003               	movlw	3
   843  07A9  00F4               	movwf	??_get_spi+1
   844  07AA  3097               	movlw	151
   845  07AB  00F3               	movwf	??_get_spi
   846  07AC                     u87:
   847  07AC  0BF3               	decfsz	??_get_spi,f
   848  07AD  2FAC               	goto	u87
   849  07AE  0BF4               	decfsz	??_get_spi+1,f
   850  07AF  2FAC               	goto	u87
   851  07B0  2FB1               	nop2
   852  07B1                     l871:
   853  07B1                     l873:
   854                           
   855                           ;main.c: 93:         return (temp);
   856  07B1  0879               	movf	_temp,w
   857  07B2                     l86:
   858  07B2  0008               	return
   859  07B3                     __end_of_get_spi:
   860                           
   861                           	psect	text4
   862  074A                     __ptext4:	
   863 ;; *************** function _spiWrite *****************
   864 ;; Defined at:
   865 ;;		line 34 in file "SPI.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  dat             1    wreg     unsigned char 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  dat             1    0[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         1       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         1       0       0       0       0
   883 ;;Total ram usage:        1 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_get_spi
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _spiWrite
   894  074A                     _spiWrite:
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _spiWrite: [wreg]
   898                           ;spiWrite@dat stored from wreg
   899  074A  00F0               	movwf	spiWrite@dat
   900  074B                     l731:
   901                           
   902                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   903  074B  0870               	movf	spiWrite@dat,w
   904  074C  1283               	bcf	3,5	;RP0=0, select bank0
   905  074D  1303               	bcf	3,6	;RP1=0, select bank0
   906  074E  0093               	movwf	19	;volatile
   907  074F                     l26:
   908  074F  0008               	return
   909  0750                     __end_of_spiWrite:
   910                           
   911                           	psect	text5
   912  0757                     __ptext5:	
   913 ;; *************** function _spiRead *****************
   914 ;; Defined at:
   915 ;;		line 47 in file "SPI.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      unsigned char 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		_spiReceiveWait
   938 ;; This function is called by:
   939 ;;		_get_spi
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _spiRead
   945  0757                     _spiRead:
   946  0757                     l733:	
   947                           ;incstack = 0
   948                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   949                           
   950                           
   951                           ;SPI.c: 49:     spiReceiveWait();
   952  0757  120A  118A  2750  120A  118A  	fcall	_spiReceiveWait
   953  075C                     l735:
   954                           
   955                           ;SPI.c: 50:     return(SSPBUF);
   956  075C  1283               	bcf	3,5	;RP0=0, select bank0
   957  075D  1303               	bcf	3,6	;RP1=0, select bank0
   958  075E  0813               	movf	19,w	;volatile
   959  075F                     l34:
   960  075F  0008               	return
   961  0760                     __end_of_spiRead:
   962                           
   963                           	psect	text6
   964  0750                     __ptext6:	
   965 ;; *************** function _spiReceiveWait *****************
   966 ;; Defined at:
   967 ;;		line 29 in file "SPI.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		None
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_spiRead
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           
   995                           ;psect for function _spiReceiveWait
   996  0750                     _spiReceiveWait:
   997  0750                     l719:	
   998                           ;incstack = 0
   999                           ; Regs used in _spiReceiveWait: []
  1000                           
  1001  0750                     l20:	
  1002                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1003                           
  1004  0750  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0751  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0752  1C14               	btfss	20,0	;volatile
  1007  0753  2F55               	goto	u11
  1008  0754  2F56               	goto	u10
  1009  0755                     u11:
  1010  0755  2F50               	goto	l20
  1011  0756                     u10:
  1012  0756                     l23:
  1013  0756  0008               	return
  1014  0757                     __end_of_spiReceiveWait:
  1015  007E                     btemp	set	126	;btemp
  1016  007E                     wtemp0	set	126
  1017                           
  1018                           	psect	config
  1019                           
  1020                           ;Config register CONFIG1 @ 0x2007
  1021                           ;	Oscillator Selection bits
  1022                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1023                           ;	Watchdog Timer Enable bit
  1024                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1025                           ;	Power-up Timer Enable bit
  1026                           ;	PWRTE = OFF, PWRT disabled
  1027                           ;	RE3/MCLR pin function select bit
  1028                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1029                           ;	Code Protection bit
  1030                           ;	CP = OFF, Program memory code protection is disabled
  1031                           ;	Data Code Protection bit
  1032                           ;	CPD = OFF, Data memory code protection is disabled
  1033                           ;	Brown Out Reset Selection bits
  1034                           ;	BOREN = ON, BOR enabled
  1035                           ;	Internal External Switchover bit
  1036                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1037                           ;	Fail-Safe Clock Monitor Enabled bit
  1038                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1039                           ;	Low Voltage Programming Enable bit
  1040                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1041                           ;	In-Circuit Debugger Mode bit
  1042                           ;	DEBUG = 0x1, unprogrammed default
  1043  2007                     	org	8199
  1044  2007  23D4               	dw	9172
  1045                           
  1046                           ;Config register CONFIG2 @ 0x2008
  1047                           ;	Brown-out Reset Selection bit
  1048                           ;	BOR4V = 0x1, unprogrammed default
  1049                           ;	Flash Program Memory Self Write Enable bits
  1050                           ;	WRT = OFF, Write protection off
  1051  2008                     	org	8200
  1052  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_get_spi
    _setup->_spiInit
    _get_spi->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     605
                                              5 COMMON     4     4      0
                            _get_spi
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _get_spi                                              4     2      2     245
                                              1 COMMON     4     2      2
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_spi
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _spiInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:15:22 2021

            _SSPSTATbits 0094                       l20 0750                       l23 0756  
                     l16 0770                       l17 0775                       l34 075F  
                     l26 074F                       l83 0790                       l77 07B8  
                     l86 07B2                       u10 0756                       u11 0755  
                     u60 0768                       u61 0767                       u77 0795  
                     u87 07AC                      l731 074B                      l733 0757  
                    l719 0750                      l735 075C                      l841 0768  
                    l843 076A                      l851 077D                      l861 0791  
                    l845 076C                      l853 0784                      l871 07B1  
                    l863 0791                      l847 076F                      l839 0761  
                    l855 0785                      l873 07B1                      l865 079A  
                    l857 0786                      l849 0776                      l867 07A0  
                    l859 0787                      l869 07A8                      l877 07B3  
                    l879 07F0                      _RE0 0048                      _RE1 0049  
                    _pot 007C                     _main 07B3                     _temp 0079  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_get_spi 07B3                    _setup 0776          __end_of_spiInit 0776  
        __end_of_spiRead 0760                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07F8                   ??_main 0075  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??_get_spi 0073         __end_of_spiWrite 0750                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 0791                  ??_setup 0074               __pmaintext 07B3  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0776                  __ptext2 0760                  __ptext3 0791  
                __ptext4 074A                  __ptext5 0757                  __ptext6 0750  
                _get_spi 0791                  _spiInit 0760                  _spiRead 0757  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTBbits 0006  
             _termometro 007B                _TRISCbits 0087              spiWrite@dat 0070  
         _spiReceiveWait 0750      start_initialization 07F8   __end_of_spiReceiveWait 0757  
            __pbssCOMMON 0079                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_get_spi 0071                 ?_spiInit 0070  
               ?_spiRead 0070           __size_of_setup 001B     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070                get_spi@SS 0071         __size_of_get_spi 0022  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _contador 007A  
          __size_of_main 0045                 _spiWrite 074A             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
