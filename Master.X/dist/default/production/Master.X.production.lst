

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 19:52:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0008                     _PORTD	set	8
   380  0006                     _PORTB	set	6
   381  0006                     _PORTBbits	set	6
   382  0013                     _SSPBUF	set	19
   383  0014                     _SSPCON	set	20
   384  0049                     _RE1	set	73
   385  0048                     _RE0	set	72
   386  0088                     _TRISD	set	136
   387  0089                     _TRISE	set	137
   388  0086                     _TRISB	set	134
   389  0087                     _TRISC	set	135
   390  0094                     _SSPSTATbits	set	148
   391  0094                     _SSPSTAT	set	148
   392  043C                     _TRISC4	set	1084
   393  043B                     _TRISC3	set	1083
   394  043D                     _TRISC5	set	1085
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	strings
   399  0003                     __pstrings:
   400  0003                     stringtab:
   401  0003                     __stringtab:
   402  0003                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405  0003                     stringdir:
   406  0003  3000               	movlw	high stringdir
   407  0004  008A               	movwf	10
   408  0005  0804               	movf	4,w
   409  0006  0A84               	incf	4,f
   410  0007  0782               	addwf	2,f
   411  0008                     __stringbase:
   412  0008  3400               	retlw	0
   413  0009                     __end_of__stringtab:
   414  0009                     STR_1:
   415  0009  3453               	retlw	83	;'S'
   416  000A  3431               	retlw	49	;'1'
   417  000B  343A               	retlw	58	;':'
   418  000C  3400               	retlw	0
   419  000D                     STR_2:
   420  000D  3453               	retlw	83	;'S'
   421  000E  3432               	retlw	50	;'2'
   422  000F  343A               	retlw	58	;':'
   423  0010  3400               	retlw	0
   424  0011                     STR_3:
   425  0011  3453               	retlw	83	;'S'
   426  0012  3433               	retlw	51	;'3'
   427  0013  343A               	retlw	58	;':'
   428  0014  3400               	retlw	0
   429  000B                     
   430                           	psect	cinit
   431  07EC                     start_initialization:	
   432                           ; #config settings
   433                           
   434  07EC                     __initialization:
   435                           
   436                           ; Clear objects allocated to BANK0
   437  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   438  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   439  07EE  01C9               	clrf	__pbssBANK0& (0+127)
   440  07EF  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   441  07F0  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   442  07F1  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   443  07F2  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   444  07F3  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   445  07F4  01CF               	clrf	(__pbssBANK0+6)& (0+127)
   446  07F5  01D0               	clrf	(__pbssBANK0+7)& (0+127)
   447  07F6  01D1               	clrf	(__pbssBANK0+8)& (0+127)
   448  07F7  01D2               	clrf	(__pbssBANK0+9)& (0+127)
   449  07F8  01D3               	clrf	(__pbssBANK0+10)& (0+127)
   450  07F9  01D4               	clrf	(__pbssBANK0+11)& (0+127)
   451  07FA  01D5               	clrf	(__pbssBANK0+12)& (0+127)
   452  07FB  01D6               	clrf	(__pbssBANK0+13)& (0+127)
   453  07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456  07FC                     __end_of__initialization:
   457  07FC  0183               	clrf	3
   458  07FD  120A  118A  2AC4   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	bssBANK0
   461  0049                     __pbssBANK0:
   462  0049                     _temp:
   463  0049                     	ds	2
   464  004B                     _cenCV:
   465  004B                     	ds	1
   466  004C                     _decCV:
   467  004C                     	ds	1
   468  004D                     _uniCV:
   469  004D                     	ds	1
   470  004E                     _cenTV:
   471  004E                     	ds	1
   472  004F                     _decTV:
   473  004F                     	ds	1
   474  0050                     _uniTV:
   475  0050                     	ds	1
   476  0051                     _cenPV:
   477  0051                     	ds	1
   478  0052                     _decPV:
   479  0052                     	ds	1
   480  0053                     _uniPV:
   481  0053                     	ds	1
   482  0054                     _contador:
   483  0054                     	ds	1
   484  0055                     _termometro:
   485  0055                     	ds	1
   486  0056                     _pot:
   487  0056                     	ds	1
   488                           
   489                           	psect	cstackCOMMON
   490  0070                     __pcstackCOMMON:
   491  0070                     ?_setup:
   492  0070                     ?_Lcd_Init:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_Lcd_Clear:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_Lcd_Write_String:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_Lcd_Write_Char:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_spiInit:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_spiReceiveWait:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_spiReceiveWait:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_spiWrite:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ??_spiWrite:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_spiRead:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_spiRead:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_Lcd_Port:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_Lcd_Port:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_Lcd_Cmd:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?__Umul8_16:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?___wmul:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ?___lwdiv:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0070                     ?___xxtofl:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0070                     spiInit@sDataSample:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0070                     spiWrite@dat:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     Lcd_Port@a:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     __Umul8_16@multiplicand:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ___wmul@multiplier:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ___lwdiv@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___xxtofl@val:	
   568                           ; 2 bytes @ 0x0
   569                           
   570                           
   571                           ; 4 bytes @ 0x0
   572  0070                     	ds	1
   573  0071                     ??_Lcd_Write_Char:
   574  0071                     ??_Lcd_Cmd:	
   575                           ; 1 bytes @ 0x1
   576                           
   577  0071                     spiInit@sClockIdle:	
   578                           ; 1 bytes @ 0x1
   579                           
   580                           
   581                           ; 1 bytes @ 0x1
   582  0071                     	ds	1
   583  0072                     ??__Umul8_16:
   584  0072                     spiInit@sTransmitEdge:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0072                     Lcd_Write_Char@a:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ___wmul@multiplicand:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     ___lwdiv@dividend:	
   594                           ; 2 bytes @ 0x2
   595                           
   596                           
   597                           ; 2 bytes @ 0x2
   598  0072                     	ds	1
   599  0073                     ??_Lcd_Write_String:
   600  0073                     ??_spiInit:	
   601                           ; 1 bytes @ 0x3
   602                           
   603  0073                     spiInit@sType:	
   604                           ; 1 bytes @ 0x3
   605                           
   606  0073                     Lcd_Cmd@a:	
   607                           ; 1 bytes @ 0x3
   608                           
   609  0073                     Lcd_Write_String@i:	
   610                           ; 1 bytes @ 0x3
   611                           
   612                           
   613                           ; 2 bytes @ 0x3
   614  0073                     	ds	1
   615  0074                     ??_setup:
   616  0074                     ??_Lcd_Init:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0074                     ??_Lcd_Clear:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     ?_Lcd_Set_Cursor:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ??___wmul:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??___lwdiv:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ??___xxtofl:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     Lcd_Set_Cursor@b:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ___wmul@product:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     __Umul8_16@product:	
   641                           ; 2 bytes @ 0x4
   642                           
   643                           
   644                           ; 2 bytes @ 0x4
   645  0074                     	ds	1
   646  0075                     ??_Lcd_Set_Cursor:
   647  0075                     Lcd_Write_String@a:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     ___lwdiv@quotient:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 2 bytes @ 0x5
   655  0075                     	ds	1
   656  0076                     Lcd_Set_Cursor@a:
   657  0076                     __Umul8_16@word_mpld:	
   658                           ; 1 bytes @ 0x6
   659                           
   660                           
   661                           ; 2 bytes @ 0x6
   662  0076                     	ds	1
   663  0077                     Lcd_Set_Cursor@temp:
   664  0077                     ___lwdiv@counter:	
   665                           ; 1 bytes @ 0x7
   666                           
   667                           
   668                           ; 1 bytes @ 0x7
   669  0077                     	ds	1
   670  0078                     ?_impr_Pot:
   671  0078                     ?_impr_cont:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0078                     impr_cont@dec:	
   675                           ; 1 bytes @ 0x8
   676                           
   677  0078                     impr_Pot@dec:	
   678                           ; 1 bytes @ 0x8
   679                           
   680  0078                     __Umul8_16@multiplier:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0078                     ___xxtofl@sign:	
   684                           ; 1 bytes @ 0x8
   685                           
   686                           
   687                           ; 1 bytes @ 0x8
   688  0078                     	ds	1
   689  0079                     impr_cont@cen:
   690  0079                     impr_Pot@cen:	
   691                           ; 1 bytes @ 0x9
   692                           
   693  0079                     ___xxtofl@exp:	
   694                           ; 1 bytes @ 0x9
   695                           
   696                           
   697                           ; 1 bytes @ 0x9
   698  0079                     	ds	1
   699  007A                     impr_cont@val:
   700  007A                     impr_Pot@val:	
   701                           ; 1 bytes @ 0xA
   702                           
   703  007A                     ___xxtofl@arg:	
   704                           ; 1 bytes @ 0xA
   705                           
   706                           
   707                           ; 4 bytes @ 0xA
   708  007A                     	ds	1
   709  007B                     impr_cont@fact:
   710  007B                     impr_Pot@fact:	
   711                           ; 2 bytes @ 0xB
   712                           
   713                           
   714                           ; 2 bytes @ 0xB
   715  007B                     	ds	2
   716  007D                     impr_cont@uni:
   717  007D                     impr_Pot@uni:	
   718                           ; 1 bytes @ 0xD
   719                           
   720                           
   721                           ; 1 bytes @ 0xD
   722  007D                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:
   726  0020                     ??_impr_Pot:
   727  0020                     ??_impr_cont:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     ?___flmul:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___flmul@b:	
   734                           ; 4 bytes @ 0x0
   735                           
   736                           
   737                           ; 4 bytes @ 0x0
   738  0020                     	ds	4
   739  0024                     ___flmul@a:
   740                           
   741                           ; 4 bytes @ 0x4
   742  0024                     	ds	4
   743  0028                     ??___flmul:
   744                           
   745                           ; 1 bytes @ 0x8
   746  0028                     	ds	5
   747  002D                     ___flmul@sign:
   748                           
   749                           ; 1 bytes @ 0xD
   750  002D                     	ds	1
   751  002E                     ___flmul@grs:
   752                           
   753                           ; 4 bytes @ 0xE
   754  002E                     	ds	4
   755  0032                     ___flmul@aexp:
   756                           
   757                           ; 1 bytes @ 0x12
   758  0032                     	ds	1
   759  0033                     ___flmul@bexp:
   760                           
   761                           ; 1 bytes @ 0x13
   762  0033                     	ds	1
   763  0034                     ___flmul@prod:
   764                           
   765                           ; 4 bytes @ 0x14
   766  0034                     	ds	4
   767  0038                     ___flmul@temp:
   768                           
   769                           ; 2 bytes @ 0x18
   770  0038                     	ds	2
   771  003A                     ?___fltol:
   772  003A                     ___fltol@f1:	
   773                           ; 4 bytes @ 0x1A
   774                           
   775                           
   776                           ; 4 bytes @ 0x1A
   777  003A                     	ds	4
   778  003E                     ??___fltol:
   779                           
   780                           ; 1 bytes @ 0x1E
   781  003E                     	ds	5
   782  0043                     ___fltol@sign1:
   783                           
   784                           ; 1 bytes @ 0x23
   785  0043                     	ds	1
   786  0044                     ___fltol@exp1:
   787                           
   788                           ; 1 bytes @ 0x24
   789  0044                     	ds	1
   790  0045                     ??_main:
   791                           
   792                           ; 1 bytes @ 0x25
   793  0045                     	ds	4
   794                           
   795                           	psect	maintext
   796  02C4                     __pmaintext:	
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 68 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : B00/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       4       0       0       0
   819 ;;      Totals:         0       4       0       0       0
   820 ;;Total ram usage:        4 bytes
   821 ;; Hardware stack levels required when called:    4
   822 ;; This function calls:
   823 ;;		_Lcd_Clear
   824 ;;		_Lcd_Init
   825 ;;		_Lcd_Set_Cursor
   826 ;;		_Lcd_Write_String
   827 ;;		___flmul
   828 ;;		___fltol
   829 ;;		___lwdiv
   830 ;;		___wmul
   831 ;;		___xxtofl
   832 ;;		_impr_Pot
   833 ;;		_impr_cont
   834 ;;		_setup
   835 ;;		_spiRead
   836 ;;		_spiWrite
   837 ;; This function is called by:
   838 ;;		Startup code after reset
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _main
   844  02C4                     _main:
   845  02C4                     l1657:	
   846                           ;incstack = 0
   847                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   848                           
   849                           
   850                           ;main.c: 69:     setup();
   851  02C4  120A  158A  268F  120A  118A  	fcall	_setup
   852                           
   853                           ;main.c: 70:     Lcd_Init();
   854  02C9  120A  118A  2017  120A  118A  	fcall	_Lcd_Init
   855                           
   856                           ;main.c: 71:     Lcd_Clear();
   857  02CE  120A  158A  263C  120A  118A  	fcall	_Lcd_Clear
   858  02D3                     l1659:
   859                           
   860                           ;main.c: 74:         PORTBbits.RB0 = 0;
   861  02D3  1283               	bcf	3,5	;RP0=0, select bank0
   862  02D4  1303               	bcf	3,6	;RP1=0, select bank0
   863  02D5  1006               	bcf	6,0	;volatile
   864  02D6                     l1661:
   865                           
   866                           ;main.c: 75:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   867  02D6  300D               	movlw	13
   868  02D7  1283               	bcf	3,5	;RP0=0, select bank0
   869  02D8  1303               	bcf	3,6	;RP1=0, select bank0
   870  02D9  00C6               	movwf	??_main+1
   871  02DA  30FB               	movlw	251
   872  02DB  00C5               	movwf	??_main
   873  02DC                     u1637:
   874  02DC  0BC5               	decfsz	??_main,f
   875  02DD  2ADC               	goto	u1637
   876  02DE  0BC6               	decfsz	??_main+1,f
   877  02DF  2ADC               	goto	u1637
   878  02E0                     l1663:
   879                           
   880                           ;main.c: 76:         spiWrite(1);
   881  02E0  3001               	movlw	1
   882  02E1  120A  158A  2626  120A  118A  	fcall	_spiWrite
   883  02E6                     l1665:
   884                           
   885                           ;main.c: 77:         pot = spiRead();
   886  02E6  120A  158A  2633  120A  118A  	fcall	_spiRead
   887  02EB  1283               	bcf	3,5	;RP0=0, select bank0
   888  02EC  1303               	bcf	3,6	;RP1=0, select bank0
   889  02ED  00C5               	movwf	??_main
   890  02EE  0845               	movf	??_main,w
   891  02EF  00D6               	movwf	_pot
   892  02F0                     l1667:
   893                           
   894                           ;main.c: 78:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   895  02F0  300D               	movlw	13
   896  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   897  02F2  1303               	bcf	3,6	;RP1=0, select bank0
   898  02F3  00C6               	movwf	??_main+1
   899  02F4  30FB               	movlw	251
   900  02F5  00C5               	movwf	??_main
   901  02F6                     u1647:
   902  02F6  0BC5               	decfsz	??_main,f
   903  02F7  2AF6               	goto	u1647
   904  02F8  0BC6               	decfsz	??_main+1,f
   905  02F9  2AF6               	goto	u1647
   906  02FA                     l1669:
   907                           
   908                           ;main.c: 79:         PORTBbits.RB0 = 1;
   909  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   910  02FB  1303               	bcf	3,6	;RP1=0, select bank0
   911  02FC  1406               	bsf	6,0	;volatile
   912  02FD                     l1671:
   913                           
   914                           ;main.c: 81:         PORTBbits.RB1 = 0;
   915  02FD  1086               	bcf	6,1	;volatile
   916  02FE                     l1673:
   917                           
   918                           ;main.c: 82:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   919  02FE  300D               	movlw	13
   920  02FF  1283               	bcf	3,5	;RP0=0, select bank0
   921  0300  1303               	bcf	3,6	;RP1=0, select bank0
   922  0301  00C6               	movwf	??_main+1
   923  0302  30FB               	movlw	251
   924  0303  00C5               	movwf	??_main
   925  0304                     u1657:
   926  0304  0BC5               	decfsz	??_main,f
   927  0305  2B04               	goto	u1657
   928  0306  0BC6               	decfsz	??_main+1,f
   929  0307  2B04               	goto	u1657
   930  0308                     l1675:
   931                           
   932                           ;main.c: 83:         spiWrite(1);
   933  0308  3001               	movlw	1
   934  0309  120A  158A  2626  120A  118A  	fcall	_spiWrite
   935  030E                     l1677:
   936                           
   937                           ;main.c: 84:         contador = spiRead();
   938  030E  120A  158A  2633  120A  118A  	fcall	_spiRead
   939  0313  1283               	bcf	3,5	;RP0=0, select bank0
   940  0314  1303               	bcf	3,6	;RP1=0, select bank0
   941  0315  00C5               	movwf	??_main
   942  0316  0845               	movf	??_main,w
   943  0317  00D4               	movwf	_contador
   944  0318                     l1679:
   945                           
   946                           ;main.c: 85:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   947  0318  300D               	movlw	13
   948  0319  1283               	bcf	3,5	;RP0=0, select bank0
   949  031A  1303               	bcf	3,6	;RP1=0, select bank0
   950  031B  00C6               	movwf	??_main+1
   951  031C  30FB               	movlw	251
   952  031D  00C5               	movwf	??_main
   953  031E                     u1667:
   954  031E  0BC5               	decfsz	??_main,f
   955  031F  2B1E               	goto	u1667
   956  0320  0BC6               	decfsz	??_main+1,f
   957  0321  2B1E               	goto	u1667
   958  0322                     l1681:
   959                           
   960                           ;main.c: 86:         PORTBbits.RB1 = 1;
   961  0322  1283               	bcf	3,5	;RP0=0, select bank0
   962  0323  1303               	bcf	3,6	;RP1=0, select bank0
   963  0324  1486               	bsf	6,1	;volatile
   964  0325                     l1683:
   965                           
   966                           ;main.c: 88:         PORTBbits.RB2 = 0;
   967  0325  1106               	bcf	6,2	;volatile
   968  0326                     l1685:
   969                           
   970                           ;main.c: 89:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   971  0326  300D               	movlw	13
   972  0327  1283               	bcf	3,5	;RP0=0, select bank0
   973  0328  1303               	bcf	3,6	;RP1=0, select bank0
   974  0329  00C6               	movwf	??_main+1
   975  032A  30FB               	movlw	251
   976  032B  00C5               	movwf	??_main
   977  032C                     u1677:
   978  032C  0BC5               	decfsz	??_main,f
   979  032D  2B2C               	goto	u1677
   980  032E  0BC6               	decfsz	??_main+1,f
   981  032F  2B2C               	goto	u1677
   982  0330                     l1687:
   983                           
   984                           ;main.c: 90:         spiWrite(1);
   985  0330  3001               	movlw	1
   986  0331  120A  158A  2626  120A  118A  	fcall	_spiWrite
   987  0336                     l1689:
   988                           
   989                           ;main.c: 91:         termometro = spiRead();
   990  0336  120A  158A  2633  120A  118A  	fcall	_spiRead
   991  033B  1283               	bcf	3,5	;RP0=0, select bank0
   992  033C  1303               	bcf	3,6	;RP1=0, select bank0
   993  033D  00C5               	movwf	??_main
   994  033E  0845               	movf	??_main,w
   995  033F  00D5               	movwf	_termometro
   996  0340                     l1691:
   997                           
   998                           ;main.c: 92:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   999  0340  300D               	movlw	13
  1000  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0343  00C6               	movwf	??_main+1
  1003  0344  30FB               	movlw	251
  1004  0345  00C5               	movwf	??_main
  1005  0346                     u1687:
  1006  0346  0BC5               	decfsz	??_main,f
  1007  0347  2B46               	goto	u1687
  1008  0348  0BC6               	decfsz	??_main+1,f
  1009  0349  2B46               	goto	u1687
  1010  034A                     l1693:
  1011                           
  1012                           ;main.c: 93:         PORTBbits.RB2 = 1;
  1013  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1014  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1015  034C  1506               	bsf	6,2	;volatile
  1016                           
  1017                           ;main.c: 96:         Lcd_Set_Cursor(1,1);
  1018  034D  01F4               	clrf	Lcd_Set_Cursor@b
  1019  034E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1020  034F  3001               	movlw	1
  1021  0350  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1022  0355                     l1695:
  1023                           
  1024                           ;main.c: 97:         Lcd_Write_String("S1:");
  1025  0355  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1026  0356  120A  158A  26CF  120A  118A  	fcall	_Lcd_Write_String
  1027  035B                     l1697:
  1028                           
  1029                           ;main.c: 98:         Lcd_Set_Cursor(1,7);
  1030  035B  3007               	movlw	7
  1031  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1032  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1033  035E  00C5               	movwf	??_main
  1034  035F  0845               	movf	??_main,w
  1035  0360  00F4               	movwf	Lcd_Set_Cursor@b
  1036  0361  3001               	movlw	1
  1037  0362  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1038                           
  1039                           ;main.c: 99:         Lcd_Write_String("S2:");
  1040  0367  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1041  0368  120A  158A  26CF  120A  118A  	fcall	_Lcd_Write_String
  1042  036D                     l1699:
  1043                           
  1044                           ;main.c: 100:         Lcd_Set_Cursor(1,13);
  1045  036D  300D               	movlw	13
  1046  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1047  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0370  00C5               	movwf	??_main
  1049  0371  0845               	movf	??_main,w
  1050  0372  00F4               	movwf	Lcd_Set_Cursor@b
  1051  0373  3001               	movlw	1
  1052  0374  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1053  0379                     l1701:
  1054                           
  1055                           ;main.c: 101:         Lcd_Write_String("S3:");
  1056  0379  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1057  037A  120A  158A  26CF  120A  118A  	fcall	_Lcd_Write_String
  1058  037F                     l1703:
  1059                           
  1060                           ;main.c: 103:         impr_Pot(uniPV, decPV, cenPV, pot, 2);
  1061  037F  01F8               	clrf	impr_Pot@dec
  1062  0380  01F9               	clrf	impr_Pot@cen
  1063  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0383  0856               	movf	_pot,w
  1066  0384  00C5               	movwf	??_main
  1067  0385  0845               	movf	??_main,w
  1068  0386  00FA               	movwf	impr_Pot@val
  1069  0387  3002               	movlw	2
  1070  0388  00FB               	movwf	impr_Pot@fact
  1071  0389  3000               	movlw	0
  1072  038A  00FC               	movwf	impr_Pot@fact+1
  1073  038B  3000               	movlw	0
  1074  038C  120A  118A  21ED  120A  118A  	fcall	_impr_Pot
  1075  0391                     l1705:
  1076                           
  1077                           ;main.c: 104:         impr_cont(uniCV, decCV, cenCV, contador, 1);
  1078  0391  01F8               	clrf	impr_cont@dec
  1079  0392  01F9               	clrf	impr_cont@cen
  1080  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0395  0854               	movf	_contador,w
  1083  0396  00C5               	movwf	??_main
  1084  0397  0845               	movf	??_main,w
  1085  0398  00FA               	movwf	impr_cont@val
  1086  0399  3001               	movlw	1
  1087  039A  00FB               	movwf	impr_cont@fact
  1088  039B  3000               	movlw	0
  1089  039C  00FC               	movwf	impr_cont@fact+1
  1090  039D  3000               	movlw	0
  1091  039E  120A  118A  212D  120A  118A  	fcall	_impr_cont
  1092  03A3                     l1707:
  1093                           
  1094                           ;main.c: 106:         if (termometro < 69){
  1095  03A3  3045               	movlw	69
  1096  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1097  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1098  03A6  0255               	subwf	_termometro,w
  1099  03A7  1803               	skipnc
  1100  03A8  2BAA               	goto	u1621
  1101  03A9  2BAB               	goto	u1620
  1102  03AA                     u1621:
  1103  03AA  2BEA               	goto	l110
  1104  03AB                     u1620:
  1105  03AB                     l1709:
  1106                           
  1107                           ;main.c: 107:             temp = termometro * 0.489;
  1108  03AB  0855               	movf	_termometro,w
  1109  03AC  00C5               	movwf	??_main
  1110  03AD  01C6               	clrf	??_main+1
  1111  03AE  01C7               	clrf	??_main+2
  1112  03AF  01C8               	clrf	??_main+3
  1113  03B0  0848               	movf	??_main+3,w
  1114  03B1  00F3               	movwf	___xxtofl@val+3
  1115  03B2  0847               	movf	??_main+2,w
  1116  03B3  00F2               	movwf	___xxtofl@val+2
  1117  03B4  0846               	movf	??_main+1,w
  1118  03B5  00F1               	movwf	___xxtofl@val+1
  1119  03B6  0845               	movf	??_main,w
  1120  03B7  00F0               	movwf	___xxtofl@val
  1121  03B8  3001               	movlw	1
  1122  03B9  120A  118A  2073  120A  118A  	fcall	___xxtofl
  1123  03BE  0873               	movf	?___xxtofl+3,w
  1124  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1125  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1126  03C1  00A7               	movwf	___flmul@a+3
  1127  03C2  0872               	movf	?___xxtofl+2,w
  1128  03C3  00A6               	movwf	___flmul@a+2
  1129  03C4  0871               	movf	?___xxtofl+1,w
  1130  03C5  00A5               	movwf	___flmul@a+1
  1131  03C6  0870               	movf	?___xxtofl,w
  1132  03C7  00A4               	movwf	___flmul@a
  1133  03C8  303E               	movlw	62
  1134  03C9  00A3               	movwf	___flmul@b+3
  1135  03CA  30FA               	movlw	250
  1136  03CB  00A2               	movwf	___flmul@b+2
  1137  03CC  305E               	movlw	94
  1138  03CD  00A1               	movwf	___flmul@b+1
  1139  03CE  3035               	movlw	53
  1140  03CF  00A0               	movwf	___flmul@b
  1141  03D0  120A  118A  248B  120A  118A  	fcall	___flmul
  1142  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1143  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1144  03D7  0823               	movf	?___flmul+3,w
  1145  03D8  00BD               	movwf	___fltol@f1+3
  1146  03D9  0822               	movf	?___flmul+2,w
  1147  03DA  00BC               	movwf	___fltol@f1+2
  1148  03DB  0821               	movf	?___flmul+1,w
  1149  03DC  00BB               	movwf	___fltol@f1+1
  1150  03DD  0820               	movf	?___flmul,w
  1151  03DE  00BA               	movwf	___fltol@f1
  1152  03DF  120A  158A  2784  120A  118A  	fcall	___fltol
  1153  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1154  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1155  03E6  083B               	movf	?___fltol+1,w
  1156  03E7  00CA               	movwf	_temp+1
  1157  03E8  083A               	movf	?___fltol,w
  1158  03E9  00C9               	movwf	_temp
  1159  03EA                     l110:	
  1160                           ;main.c: 108:         }
  1161                           
  1162                           
  1163                           ;main.c: 111:         temp = termometro * 0.489;
  1164  03EA  0855               	movf	_termometro,w
  1165  03EB  00C5               	movwf	??_main
  1166  03EC  01C6               	clrf	??_main+1
  1167  03ED  01C7               	clrf	??_main+2
  1168  03EE  01C8               	clrf	??_main+3
  1169  03EF  0848               	movf	??_main+3,w
  1170  03F0  00F3               	movwf	___xxtofl@val+3
  1171  03F1  0847               	movf	??_main+2,w
  1172  03F2  00F2               	movwf	___xxtofl@val+2
  1173  03F3  0846               	movf	??_main+1,w
  1174  03F4  00F1               	movwf	___xxtofl@val+1
  1175  03F5  0845               	movf	??_main,w
  1176  03F6  00F0               	movwf	___xxtofl@val
  1177  03F7  3001               	movlw	1
  1178  03F8  120A  118A  2073  120A  118A  	fcall	___xxtofl
  1179  03FD  0873               	movf	?___xxtofl+3,w
  1180  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1181  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0400  00A7               	movwf	___flmul@a+3
  1183  0401  0872               	movf	?___xxtofl+2,w
  1184  0402  00A6               	movwf	___flmul@a+2
  1185  0403  0871               	movf	?___xxtofl+1,w
  1186  0404  00A5               	movwf	___flmul@a+1
  1187  0405  0870               	movf	?___xxtofl,w
  1188  0406  00A4               	movwf	___flmul@a
  1189  0407  303E               	movlw	62
  1190  0408  00A3               	movwf	___flmul@b+3
  1191  0409  30FA               	movlw	250
  1192  040A  00A2               	movwf	___flmul@b+2
  1193  040B  305E               	movlw	94
  1194  040C  00A1               	movwf	___flmul@b+1
  1195  040D  3035               	movlw	53
  1196  040E  00A0               	movwf	___flmul@b
  1197  040F  120A  118A  248B  120A  118A  	fcall	___flmul
  1198  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0416  0823               	movf	?___flmul+3,w
  1201  0417  00BD               	movwf	___fltol@f1+3
  1202  0418  0822               	movf	?___flmul+2,w
  1203  0419  00BC               	movwf	___fltol@f1+2
  1204  041A  0821               	movf	?___flmul+1,w
  1205  041B  00BB               	movwf	___fltol@f1+1
  1206  041C  0820               	movf	?___flmul,w
  1207  041D  00BA               	movwf	___fltol@f1
  1208  041E  120A  158A  2784  120A  118A  	fcall	___fltol
  1209  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0425  083B               	movf	?___fltol+1,w
  1212  0426  00CA               	movwf	_temp+1
  1213  0427  083A               	movf	?___fltol,w
  1214  0428  00C9               	movwf	_temp
  1215  0429                     l1711:
  1216                           
  1217                           ;main.c: 112:         uniTV = temp / 100;
  1218  0429  3064               	movlw	100
  1219  042A  00F0               	movwf	___lwdiv@divisor
  1220  042B  3000               	movlw	0
  1221  042C  00F1               	movwf	___lwdiv@divisor+1
  1222  042D  084A               	movf	_temp+1,w
  1223  042E  00F3               	movwf	___lwdiv@dividend+1
  1224  042F  0849               	movf	_temp,w
  1225  0430  00F2               	movwf	___lwdiv@dividend
  1226  0431  120A  158A  2740  120A  118A  	fcall	___lwdiv
  1227  0436  0870               	movf	?___lwdiv,w
  1228  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0439  00C5               	movwf	??_main
  1231  043A  0845               	movf	??_main,w
  1232  043B  00D0               	movwf	_uniTV
  1233  043C                     l1713:
  1234                           
  1235                           ;main.c: 113:         temp = temp - (uniTV * 100);
  1236  043C  0850               	movf	_uniTV,w
  1237  043D  00C5               	movwf	??_main
  1238  043E  01C6               	clrf	??_main+1
  1239  043F  0845               	movf	??_main,w
  1240  0440  00F0               	movwf	___wmul@multiplier
  1241  0441  0846               	movf	??_main+1,w
  1242  0442  00F1               	movwf	___wmul@multiplier+1
  1243  0443  309C               	movlw	156
  1244  0444  00F2               	movwf	___wmul@multiplicand
  1245  0445  30FF               	movlw	255
  1246  0446  00F3               	movwf	___wmul@multiplicand+1
  1247  0447  120A  158A  26F4  120A  118A  	fcall	___wmul
  1248  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1249  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1250  044E  0849               	movf	_temp,w
  1251  044F  0770               	addwf	?___wmul,w
  1252  0450  00C9               	movwf	_temp
  1253  0451  084A               	movf	_temp+1,w
  1254  0452  1803               	skipnc
  1255  0453  0A4A               	incf	_temp+1,w
  1256  0454  0771               	addwf	?___wmul+1,w
  1257  0455  00CA               	movwf	_temp+1
  1258  0456                     l1715:
  1259                           
  1260                           ;main.c: 114:         decTV = temp / 10;
  1261  0456  300A               	movlw	10
  1262  0457  00F0               	movwf	___lwdiv@divisor
  1263  0458  3000               	movlw	0
  1264  0459  00F1               	movwf	___lwdiv@divisor+1
  1265  045A  084A               	movf	_temp+1,w
  1266  045B  00F3               	movwf	___lwdiv@dividend+1
  1267  045C  0849               	movf	_temp,w
  1268  045D  00F2               	movwf	___lwdiv@dividend
  1269  045E  120A  158A  2740  120A  118A  	fcall	___lwdiv
  1270  0463  0870               	movf	?___lwdiv,w
  1271  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0466  00C5               	movwf	??_main
  1274  0467  0845               	movf	??_main,w
  1275  0468  00CF               	movwf	_decTV
  1276  0469                     l1717:
  1277                           
  1278                           ;main.c: 115:         temp = temp - (decTV * 10);
  1279  0469  084F               	movf	_decTV,w
  1280  046A  00C5               	movwf	??_main
  1281  046B  01C6               	clrf	??_main+1
  1282  046C  0845               	movf	??_main,w
  1283  046D  00F0               	movwf	___wmul@multiplier
  1284  046E  0846               	movf	??_main+1,w
  1285  046F  00F1               	movwf	___wmul@multiplier+1
  1286  0470  30F6               	movlw	246
  1287  0471  00F2               	movwf	___wmul@multiplicand
  1288  0472  30FF               	movlw	255
  1289  0473  00F3               	movwf	___wmul@multiplicand+1
  1290  0474  120A  158A  26F4  120A  118A  	fcall	___wmul
  1291  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1292  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1293  047B  0849               	movf	_temp,w
  1294  047C  0770               	addwf	?___wmul,w
  1295  047D  00C9               	movwf	_temp
  1296  047E  084A               	movf	_temp+1,w
  1297  047F  1803               	skipnc
  1298  0480  0A4A               	incf	_temp+1,w
  1299  0481  0771               	addwf	?___wmul+1,w
  1300  0482  00CA               	movwf	_temp+1
  1301  0483                     l1719:
  1302                           
  1303                           ;main.c: 116:         cenTV = temp;
  1304  0483  0849               	movf	_temp,w
  1305  0484  00C5               	movwf	??_main
  1306  0485  0845               	movf	??_main,w
  1307  0486  00CE               	movwf	_cenTV
  1308  0487  2AD3               	goto	l1659
  1309  0488  120A  118A  2800   	ljmp	start
  1310  048B                     __end_of_main:
  1311                           
  1312                           	psect	text1
  1313  0E26                     __ptext1:	
  1314 ;; *************** function _spiWrite *****************
  1315 ;; Defined at:
  1316 ;;		line 34 in file "SPI.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  dat             1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  dat             1    0[COMMON] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         1       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0
  1333 ;;      Totals:         1       0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _spiWrite
  1345  0E26                     _spiWrite:
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _spiWrite: [wreg]
  1349                           ;spiWrite@dat stored from wreg
  1350  0E26  00F0               	movwf	spiWrite@dat
  1351  0E27                     l1351:
  1352                           
  1353                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1354  0E27  0870               	movf	spiWrite@dat,w
  1355  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0E2A  0093               	movwf	19	;volatile
  1358  0E2B                     l26:
  1359  0E2B  0008               	return
  1360  0E2C                     __end_of_spiWrite:
  1361                           
  1362                           	psect	text2
  1363  0E33                     __ptext2:	
  1364 ;; *************** function _spiRead *****************
  1365 ;; Defined at:
  1366 ;;		line 47 in file "SPI.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		_spiReceiveWait
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _spiRead
  1396  0E33                     _spiRead:
  1397  0E33                     l1353:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1400                           
  1401                           
  1402                           ;SPI.c: 49:     spiReceiveWait();
  1403  0E33  120A  158A  262C  120A  158A  	fcall	_spiReceiveWait
  1404  0E38                     l1355:
  1405                           
  1406                           ;SPI.c: 50:     return(SSPBUF);
  1407  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0E3A  0813               	movf	19,w	;volatile
  1410  0E3B                     l34:
  1411  0E3B  0008               	return
  1412  0E3C                     __end_of_spiRead:
  1413                           
  1414                           	psect	text3
  1415  0E2C                     __ptext3:	
  1416 ;; *************** function _spiReceiveWait *****************
  1417 ;; Defined at:
  1418 ;;		line 29 in file "SPI.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		None
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_spiRead
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _spiReceiveWait
  1447  0E2C                     _spiReceiveWait:
  1448  0E2C                     l1275:	
  1449                           ;incstack = 0
  1450                           ; Regs used in _spiReceiveWait: []
  1451                           
  1452  0E2C                     l20:	
  1453                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1454                           
  1455  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0E2E  1C14               	btfss	20,0	;volatile
  1458  0E2F  2E31               	goto	u831
  1459  0E30  2E32               	goto	u830
  1460  0E31                     u831:
  1461  0E31  2E2C               	goto	l20
  1462  0E32                     u830:
  1463  0E32                     l23:
  1464  0E32  0008               	return
  1465  0E33                     __end_of_spiReceiveWait:
  1466                           
  1467                           	psect	text4
  1468  0E8F                     __ptext4:	
  1469 ;; *************** function _setup *****************
  1470 ;; Defined at:
  1471 ;;		line 127 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    1
  1492 ;; This function calls:
  1493 ;;		_spiInit
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _setup
  1501  0E8F                     _setup:
  1502  0E8F                     l1359:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1505                           
  1506                           
  1507                           ;main.c: 128:     ANSEL = 0;
  1508  0E8F  1683               	bsf	3,5	;RP0=1, select bank3
  1509  0E90  1703               	bsf	3,6	;RP1=1, select bank3
  1510  0E91  0188               	clrf	8	;volatile
  1511                           
  1512                           ;main.c: 129:     ANSELH = 0;
  1513  0E92  0189               	clrf	9	;volatile
  1514                           
  1515                           ;main.c: 130:     TRISC = 0;
  1516  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0E94  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0E95  0187               	clrf	7	;volatile
  1519  0E96                     l1361:
  1520                           
  1521                           ;main.c: 131:     TRISC4 = 1;
  1522  0E96  1607               	bsf	7,4	;volatile
  1523                           
  1524                           ;main.c: 132:     TRISB = 0;
  1525  0E97  0186               	clrf	6	;volatile
  1526                           
  1527                           ;main.c: 133:     TRISE = 0x00;
  1528  0E98  0189               	clrf	9	;volatile
  1529                           
  1530                           ;main.c: 134:     TRISD = 0;
  1531  0E99  0188               	clrf	8	;volatile
  1532                           
  1533                           ;main.c: 135:     PORTB = 0;
  1534  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0E9C  0186               	clrf	6	;volatile
  1537                           
  1538                           ;main.c: 136:     PORTD = 0;
  1539  0E9D  0188               	clrf	8	;volatile
  1540  0E9E                     l1363:
  1541                           
  1542                           ;main.c: 137:     PORTBbits.RB0 = 1;
  1543  0E9E  1406               	bsf	6,0	;volatile
  1544  0E9F                     l1365:
  1545                           
  1546                           ;main.c: 138:     PORTBbits.RB1 = 1;
  1547  0E9F  1486               	bsf	6,1	;volatile
  1548  0EA0                     l1367:
  1549                           
  1550                           ;main.c: 139:     PORTBbits.RB2 = 1;
  1551  0EA0  1506               	bsf	6,2	;volatile
  1552  0EA1                     l1369:
  1553                           
  1554                           ;main.c: 140:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1555  0EA1  01F0               	clrf	spiInit@sDataSample
  1556  0EA2  01F1               	clrf	spiInit@sClockIdle
  1557  0EA3  01F2               	clrf	spiInit@sTransmitEdge
  1558  0EA4  3020               	movlw	32
  1559  0EA5  120A  158A  265F  120A  158A  	fcall	_spiInit
  1560  0EAA                     l116:
  1561  0EAA  0008               	return
  1562  0EAB                     __end_of_setup:
  1563                           
  1564                           	psect	text5
  1565  0E5F                     __ptext5:	
  1566 ;; *************** function _spiInit *****************
  1567 ;; Defined at:
  1568 ;;		line 12 in file "SPI.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  sType           1    wreg     enum E1264
  1571 ;;  sDataSample     1    0[COMMON] enum E1272
  1572 ;;  sClockIdle      1    1[COMMON] enum E1276
  1573 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  sType           1    3[COMMON] enum E1264
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         3       0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0
  1588 ;;      Totals:         4       0       0       0       0
  1589 ;;Total ram usage:        4 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_setup
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _spiInit
  1600  0E5F                     _spiInit:
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1604                           ;spiInit@sType stored from wreg
  1605  0E5F  00F3               	movwf	spiInit@sType
  1606  0E60                     l1265:
  1607                           
  1608                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1609  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0E62  1287               	bcf	7,5	;volatile
  1612                           
  1613                           ;SPI.c: 15:     if(sType & 0b00000100)
  1614  0E63  1D73               	btfss	spiInit@sType,2
  1615  0E64  2E66               	goto	u821
  1616  0E65  2E67               	goto	u820
  1617  0E66                     u821:
  1618  0E66  2E6B               	goto	l1271
  1619  0E67                     u820:
  1620  0E67                     l1267:
  1621                           
  1622                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1623  0E67  0872               	movf	spiInit@sTransmitEdge,w
  1624  0E68  0094               	movwf	20	;volatile
  1625  0E69                     l1269:
  1626                           
  1627                           ;SPI.c: 18:         TRISC3 = 1;
  1628  0E69  1587               	bsf	7,3	;volatile
  1629                           
  1630                           ;SPI.c: 19:     }
  1631  0E6A  2E6F               	goto	l16
  1632  0E6B                     l1271:
  1633                           
  1634                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1635  0E6B  0870               	movf	spiInit@sDataSample,w
  1636  0E6C  0472               	iorwf	spiInit@sTransmitEdge,w
  1637  0E6D  0094               	movwf	20	;volatile
  1638  0E6E                     l1273:
  1639                           
  1640                           ;SPI.c: 23:         TRISC3 = 0;
  1641  0E6E  1187               	bcf	7,3	;volatile
  1642  0E6F                     l16:	
  1643                           ;SPI.c: 24:     }
  1644                           
  1645                           
  1646                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1647  0E6F  0873               	movf	spiInit@sType,w
  1648  0E70  0471               	iorwf	spiInit@sClockIdle,w
  1649  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0E73  0094               	movwf	20	;volatile
  1652  0E74                     l17:
  1653  0E74  0008               	return
  1654  0E75                     __end_of_spiInit:
  1655                           
  1656                           	psect	text6
  1657  012D                     __ptext6:	
  1658 ;; *************** function _impr_cont *****************
  1659 ;; Defined at:
  1660 ;;		line 142 in file "main.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  uni             1    wreg     unsigned char 
  1663 ;;  dec             1    8[COMMON] unsigned char 
  1664 ;;  cen             1    9[COMMON] unsigned char 
  1665 ;;  val             1   10[COMMON] unsigned char 
  1666 ;;  fact            2   11[COMMON] int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  uni             1   13[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         5       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          0       2       0       0       0
  1681 ;;      Totals:         6       2       0       0       0
  1682 ;;Total ram usage:        8 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		_Lcd_Set_Cursor
  1687 ;;		_Lcd_Write_Char
  1688 ;;		___lwdiv
  1689 ;;		___wmul
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _impr_cont
  1697  012D                     _impr_cont:
  1698  012D                     l1415:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _impr_cont: [wreg+status,2+status,0+pclath+cstack]
  1701                           
  1702                           
  1703                           ;main.c: 143:         temp = val * fact;
  1704  012D  087A               	movf	impr_cont@val,w
  1705  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1706  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0130  00A0               	movwf	??_impr_cont
  1708  0131  01A1               	clrf	??_impr_cont+1
  1709  0132  0820               	movf	??_impr_cont,w
  1710  0133  00F0               	movwf	___wmul@multiplier
  1711  0134  0821               	movf	??_impr_cont+1,w
  1712  0135  00F1               	movwf	___wmul@multiplier+1
  1713  0136  087C               	movf	impr_cont@fact+1,w
  1714  0137  00F3               	movwf	___wmul@multiplicand+1
  1715  0138  087B               	movf	impr_cont@fact,w
  1716  0139  00F2               	movwf	___wmul@multiplicand
  1717  013A  120A  158A  26F4  120A  118A  	fcall	___wmul
  1718  013F  0871               	movf	?___wmul+1,w
  1719  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0142  00CA               	movwf	_temp+1
  1722  0143  0870               	movf	?___wmul,w
  1723  0144  00C9               	movwf	_temp
  1724                           
  1725                           ;main.c: 144:         uni = temp / 100;
  1726  0145  3064               	movlw	100
  1727  0146  00F0               	movwf	___lwdiv@divisor
  1728  0147  3000               	movlw	0
  1729  0148  00F1               	movwf	___lwdiv@divisor+1
  1730  0149  084A               	movf	_temp+1,w
  1731  014A  00F3               	movwf	___lwdiv@dividend+1
  1732  014B  0849               	movf	_temp,w
  1733  014C  00F2               	movwf	___lwdiv@dividend
  1734  014D  120A  158A  2740  120A  118A  	fcall	___lwdiv
  1735  0152  0870               	movf	?___lwdiv,w
  1736  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0155  00A0               	movwf	??_impr_cont
  1739  0156  0820               	movf	??_impr_cont,w
  1740  0157  00FD               	movwf	impr_cont@uni
  1741                           
  1742                           ;main.c: 145:         temp = temp - (uni * 100);
  1743  0158  087D               	movf	impr_cont@uni,w
  1744  0159  00A0               	movwf	??_impr_cont
  1745  015A  01A1               	clrf	??_impr_cont+1
  1746  015B  0820               	movf	??_impr_cont,w
  1747  015C  00F0               	movwf	___wmul@multiplier
  1748  015D  0821               	movf	??_impr_cont+1,w
  1749  015E  00F1               	movwf	___wmul@multiplier+1
  1750  015F  309C               	movlw	156
  1751  0160  00F2               	movwf	___wmul@multiplicand
  1752  0161  30FF               	movlw	255
  1753  0162  00F3               	movwf	___wmul@multiplicand+1
  1754  0163  120A  158A  26F4  120A  118A  	fcall	___wmul
  1755  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1757  016A  0849               	movf	_temp,w
  1758  016B  0770               	addwf	?___wmul,w
  1759  016C  00C9               	movwf	_temp
  1760  016D  084A               	movf	_temp+1,w
  1761  016E  1803               	skipnc
  1762  016F  0A4A               	incf	_temp+1,w
  1763  0170  0771               	addwf	?___wmul+1,w
  1764  0171  00CA               	movwf	_temp+1
  1765                           
  1766                           ;main.c: 146:         dec = temp / 10;
  1767  0172  300A               	movlw	10
  1768  0173  00F0               	movwf	___lwdiv@divisor
  1769  0174  3000               	movlw	0
  1770  0175  00F1               	movwf	___lwdiv@divisor+1
  1771  0176  084A               	movf	_temp+1,w
  1772  0177  00F3               	movwf	___lwdiv@dividend+1
  1773  0178  0849               	movf	_temp,w
  1774  0179  00F2               	movwf	___lwdiv@dividend
  1775  017A  120A  158A  2740  120A  118A  	fcall	___lwdiv
  1776  017F  0870               	movf	?___lwdiv,w
  1777  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0182  00A0               	movwf	??_impr_cont
  1780  0183  0820               	movf	??_impr_cont,w
  1781  0184  00F8               	movwf	impr_cont@dec
  1782                           
  1783                           ;main.c: 147:         temp = temp - (dec * 10);
  1784  0185  0878               	movf	impr_cont@dec,w
  1785  0186  00A0               	movwf	??_impr_cont
  1786  0187  01A1               	clrf	??_impr_cont+1
  1787  0188  0820               	movf	??_impr_cont,w
  1788  0189  00F0               	movwf	___wmul@multiplier
  1789  018A  0821               	movf	??_impr_cont+1,w
  1790  018B  00F1               	movwf	___wmul@multiplier+1
  1791  018C  30F6               	movlw	246
  1792  018D  00F2               	movwf	___wmul@multiplicand
  1793  018E  30FF               	movlw	255
  1794  018F  00F3               	movwf	___wmul@multiplicand+1
  1795  0190  120A  158A  26F4  120A  118A  	fcall	___wmul
  1796  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0197  0849               	movf	_temp,w
  1799  0198  0770               	addwf	?___wmul,w
  1800  0199  00C9               	movwf	_temp
  1801  019A  084A               	movf	_temp+1,w
  1802  019B  1803               	skipnc
  1803  019C  0A4A               	incf	_temp+1,w
  1804  019D  0771               	addwf	?___wmul+1,w
  1805  019E  00CA               	movwf	_temp+1
  1806  019F                     l1417:
  1807                           
  1808                           ;main.c: 148:         cen = temp;
  1809  019F  0849               	movf	_temp,w
  1810  01A0  00A0               	movwf	??_impr_cont
  1811  01A1  0820               	movf	??_impr_cont,w
  1812  01A2  00F9               	movwf	impr_cont@cen
  1813  01A3                     l1419:
  1814                           
  1815                           ;main.c: 151:         Lcd_Set_Cursor(2,7);
  1816  01A3  3007               	movlw	7
  1817  01A4  00A0               	movwf	??_impr_cont
  1818  01A5  0820               	movf	??_impr_cont,w
  1819  01A6  00F4               	movwf	Lcd_Set_Cursor@b
  1820  01A7  3002               	movlw	2
  1821  01A8  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1822  01AD                     l1421:
  1823                           
  1824                           ;main.c: 152:         uni = uni + 48;
  1825  01AD  087D               	movf	impr_cont@uni,w
  1826  01AE  3E30               	addlw	48
  1827  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1828  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1829  01B1  00A0               	movwf	??_impr_cont
  1830  01B2  0820               	movf	??_impr_cont,w
  1831  01B3  00FD               	movwf	impr_cont@uni
  1832  01B4                     l1423:
  1833                           
  1834                           ;main.c: 153:         Lcd_Write_Char(uni);
  1835  01B4  087D               	movf	impr_cont@uni,w
  1836  01B5  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  1837  01BA                     l1425:
  1838                           
  1839                           ;main.c: 155:         Lcd_Set_Cursor(2,8);
  1840  01BA  3008               	movlw	8
  1841  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1842  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1843  01BD  00A0               	movwf	??_impr_cont
  1844  01BE  0820               	movf	??_impr_cont,w
  1845  01BF  00F4               	movwf	Lcd_Set_Cursor@b
  1846  01C0  3002               	movlw	2
  1847  01C1  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1848  01C6                     l1427:
  1849                           
  1850                           ;main.c: 156:         dec = dec + 48;
  1851  01C6  0878               	movf	impr_cont@dec,w
  1852  01C7  3E30               	addlw	48
  1853  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1854  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1855  01CA  00A0               	movwf	??_impr_cont
  1856  01CB  0820               	movf	??_impr_cont,w
  1857  01CC  00F8               	movwf	impr_cont@dec
  1858  01CD                     l1429:
  1859                           
  1860                           ;main.c: 157:         Lcd_Write_Char(dec);
  1861  01CD  0878               	movf	impr_cont@dec,w
  1862  01CE  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  1863  01D3                     l1431:
  1864                           
  1865                           ;main.c: 159:         Lcd_Set_Cursor(2,9);
  1866  01D3  3009               	movlw	9
  1867  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1868  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1869  01D6  00A0               	movwf	??_impr_cont
  1870  01D7  0820               	movf	??_impr_cont,w
  1871  01D8  00F4               	movwf	Lcd_Set_Cursor@b
  1872  01D9  3002               	movlw	2
  1873  01DA  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  1874  01DF                     l1433:
  1875                           
  1876                           ;main.c: 160:         cen = cen + 48;
  1877  01DF  0879               	movf	impr_cont@cen,w
  1878  01E0  3E30               	addlw	48
  1879  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1880  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1881  01E3  00A0               	movwf	??_impr_cont
  1882  01E4  0820               	movf	??_impr_cont,w
  1883  01E5  00F9               	movwf	impr_cont@cen
  1884  01E6                     l1435:
  1885                           
  1886                           ;main.c: 161:         Lcd_Write_Char(cen);
  1887  01E6  0879               	movf	impr_cont@cen,w
  1888  01E7  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  1889  01EC                     l119:
  1890  01EC  0008               	return
  1891  01ED                     __end_of_impr_cont:
  1892                           
  1893                           	psect	text7
  1894  01ED                     __ptext7:	
  1895 ;; *************** function _impr_Pot *****************
  1896 ;; Defined at:
  1897 ;;		line 164 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  uni             1    wreg     unsigned char 
  1900 ;;  dec             1    8[COMMON] unsigned char 
  1901 ;;  cen             1    9[COMMON] unsigned char 
  1902 ;;  val             1   10[COMMON] unsigned char 
  1903 ;;  fact            2   11[COMMON] int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  uni             1   13[COMMON] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         5       0       0       0       0
  1916 ;;      Locals:         1       0       0       0       0
  1917 ;;      Temps:          0       2       0       0       0
  1918 ;;      Totals:         6       2       0       0       0
  1919 ;;Total ram usage:        8 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		_Lcd_Set_Cursor
  1924 ;;		_Lcd_Write_Char
  1925 ;;		_Lcd_Write_String
  1926 ;;		___lwdiv
  1927 ;;		___wmul
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _impr_Pot
  1935  01ED                     _impr_Pot:
  1936  01ED                     l1387:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _impr_Pot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939                           
  1940                           
  1941                           ;main.c: 165:         temp = val * fact;
  1942  01ED  087A               	movf	impr_Pot@val,w
  1943  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1944  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1945  01F0  00A0               	movwf	??_impr_Pot
  1946  01F1  01A1               	clrf	??_impr_Pot+1
  1947  01F2  0820               	movf	??_impr_Pot,w
  1948  01F3  00F0               	movwf	___wmul@multiplier
  1949  01F4  0821               	movf	??_impr_Pot+1,w
  1950  01F5  00F1               	movwf	___wmul@multiplier+1
  1951  01F6  087C               	movf	impr_Pot@fact+1,w
  1952  01F7  00F3               	movwf	___wmul@multiplicand+1
  1953  01F8  087B               	movf	impr_Pot@fact,w
  1954  01F9  00F2               	movwf	___wmul@multiplicand
  1955  01FA  120A  158A  26F4  120A  118A  	fcall	___wmul
  1956  01FF  0871               	movf	?___wmul+1,w
  1957  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0202  00CA               	movwf	_temp+1
  1960  0203  0870               	movf	?___wmul,w
  1961  0204  00C9               	movwf	_temp
  1962                           
  1963                           ;main.c: 166:         uni = temp / 100;
  1964  0205  3064               	movlw	100
  1965  0206  00F0               	movwf	___lwdiv@divisor
  1966  0207  3000               	movlw	0
  1967  0208  00F1               	movwf	___lwdiv@divisor+1
  1968  0209  084A               	movf	_temp+1,w
  1969  020A  00F3               	movwf	___lwdiv@dividend+1
  1970  020B  0849               	movf	_temp,w
  1971  020C  00F2               	movwf	___lwdiv@dividend
  1972  020D  120A  158A  2740  120A  118A  	fcall	___lwdiv
  1973  0212  0870               	movf	?___lwdiv,w
  1974  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0215  00A0               	movwf	??_impr_Pot
  1977  0216  0820               	movf	??_impr_Pot,w
  1978  0217  00FD               	movwf	impr_Pot@uni
  1979                           
  1980                           ;main.c: 167:         temp = temp - (uni * 100);
  1981  0218  087D               	movf	impr_Pot@uni,w
  1982  0219  00A0               	movwf	??_impr_Pot
  1983  021A  01A1               	clrf	??_impr_Pot+1
  1984  021B  0820               	movf	??_impr_Pot,w
  1985  021C  00F0               	movwf	___wmul@multiplier
  1986  021D  0821               	movf	??_impr_Pot+1,w
  1987  021E  00F1               	movwf	___wmul@multiplier+1
  1988  021F  309C               	movlw	156
  1989  0220  00F2               	movwf	___wmul@multiplicand
  1990  0221  30FF               	movlw	255
  1991  0222  00F3               	movwf	___wmul@multiplicand+1
  1992  0223  120A  158A  26F4  120A  118A  	fcall	___wmul
  1993  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1995  022A  0849               	movf	_temp,w
  1996  022B  0770               	addwf	?___wmul,w
  1997  022C  00C9               	movwf	_temp
  1998  022D  084A               	movf	_temp+1,w
  1999  022E  1803               	skipnc
  2000  022F  0A4A               	incf	_temp+1,w
  2001  0230  0771               	addwf	?___wmul+1,w
  2002  0231  00CA               	movwf	_temp+1
  2003                           
  2004                           ;main.c: 168:         dec = temp / 10;
  2005  0232  300A               	movlw	10
  2006  0233  00F0               	movwf	___lwdiv@divisor
  2007  0234  3000               	movlw	0
  2008  0235  00F1               	movwf	___lwdiv@divisor+1
  2009  0236  084A               	movf	_temp+1,w
  2010  0237  00F3               	movwf	___lwdiv@dividend+1
  2011  0238  0849               	movf	_temp,w
  2012  0239  00F2               	movwf	___lwdiv@dividend
  2013  023A  120A  158A  2740  120A  118A  	fcall	___lwdiv
  2014  023F  0870               	movf	?___lwdiv,w
  2015  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0242  00A0               	movwf	??_impr_Pot
  2018  0243  0820               	movf	??_impr_Pot,w
  2019  0244  00F8               	movwf	impr_Pot@dec
  2020                           
  2021                           ;main.c: 169:         temp = temp - (dec * 10);
  2022  0245  0878               	movf	impr_Pot@dec,w
  2023  0246  00A0               	movwf	??_impr_Pot
  2024  0247  01A1               	clrf	??_impr_Pot+1
  2025  0248  0820               	movf	??_impr_Pot,w
  2026  0249  00F0               	movwf	___wmul@multiplier
  2027  024A  0821               	movf	??_impr_Pot+1,w
  2028  024B  00F1               	movwf	___wmul@multiplier+1
  2029  024C  30F6               	movlw	246
  2030  024D  00F2               	movwf	___wmul@multiplicand
  2031  024E  30FF               	movlw	255
  2032  024F  00F3               	movwf	___wmul@multiplicand+1
  2033  0250  120A  158A  26F4  120A  118A  	fcall	___wmul
  2034  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0257  0849               	movf	_temp,w
  2037  0258  0770               	addwf	?___wmul,w
  2038  0259  00C9               	movwf	_temp
  2039  025A  084A               	movf	_temp+1,w
  2040  025B  1803               	skipnc
  2041  025C  0A4A               	incf	_temp+1,w
  2042  025D  0771               	addwf	?___wmul+1,w
  2043  025E  00CA               	movwf	_temp+1
  2044  025F                     l1389:
  2045                           
  2046                           ;main.c: 170:         cen = temp;
  2047  025F  0849               	movf	_temp,w
  2048  0260  00A0               	movwf	??_impr_Pot
  2049  0261  0820               	movf	??_impr_Pot,w
  2050  0262  00F9               	movwf	impr_Pot@cen
  2051  0263                     l1391:
  2052                           
  2053                           ;main.c: 173:         Lcd_Set_Cursor(2,1);
  2054  0263  01F4               	clrf	Lcd_Set_Cursor@b
  2055  0264  0AF4               	incf	Lcd_Set_Cursor@b,f
  2056  0265  3002               	movlw	2
  2057  0266  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  2058  026B                     l1393:
  2059                           
  2060                           ;main.c: 174:         uni = uni + 48;
  2061  026B  087D               	movf	impr_Pot@uni,w
  2062  026C  3E30               	addlw	48
  2063  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2064  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2065  026F  00A0               	movwf	??_impr_Pot
  2066  0270  0820               	movf	??_impr_Pot,w
  2067  0271  00FD               	movwf	impr_Pot@uni
  2068  0272                     l1395:
  2069                           
  2070                           ;main.c: 175:         Lcd_Write_Char(uni);
  2071  0272  087D               	movf	impr_Pot@uni,w
  2072  0273  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  2073  0278                     l1397:
  2074                           
  2075                           ;main.c: 177:         Lcd_Set_Cursor(2,2);
  2076  0278  3002               	movlw	2
  2077  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2078  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2079  027B  00A0               	movwf	??_impr_Pot
  2080  027C  0820               	movf	??_impr_Pot,w
  2081  027D  00F4               	movwf	Lcd_Set_Cursor@b
  2082  027E  3002               	movlw	2
  2083  027F  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  2084  0284                     l1399:
  2085                           
  2086                           ;main.c: 178:         uni = uni + 48;
  2087  0284  087D               	movf	impr_Pot@uni,w
  2088  0285  3E30               	addlw	48
  2089  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0288  00A0               	movwf	??_impr_Pot
  2092  0289  0820               	movf	??_impr_Pot,w
  2093  028A  00FD               	movwf	impr_Pot@uni
  2094  028B                     l1401:
  2095                           
  2096                           ;main.c: 179:         Lcd_Write_String(":");
  2097  028B  3003               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  2098  028C  120A  158A  26CF  120A  118A  	fcall	_Lcd_Write_String
  2099  0291                     l1403:
  2100                           
  2101                           ;main.c: 181:         Lcd_Set_Cursor(2,3);
  2102  0291  3003               	movlw	3
  2103  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0294  00A0               	movwf	??_impr_Pot
  2106  0295  0820               	movf	??_impr_Pot,w
  2107  0296  00F4               	movwf	Lcd_Set_Cursor@b
  2108  0297  3002               	movlw	2
  2109  0298  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  2110  029D                     l1405:
  2111                           
  2112                           ;main.c: 182:         dec = dec + 48;
  2113  029D  0878               	movf	impr_Pot@dec,w
  2114  029E  3E30               	addlw	48
  2115  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2116  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2117  02A1  00A0               	movwf	??_impr_Pot
  2118  02A2  0820               	movf	??_impr_Pot,w
  2119  02A3  00F8               	movwf	impr_Pot@dec
  2120  02A4                     l1407:
  2121                           
  2122                           ;main.c: 183:         Lcd_Write_Char(dec);
  2123  02A4  0878               	movf	impr_Pot@dec,w
  2124  02A5  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  2125  02AA                     l1409:
  2126                           
  2127                           ;main.c: 185:         Lcd_Set_Cursor(2,4);
  2128  02AA  3004               	movlw	4
  2129  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2130  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2131  02AD  00A0               	movwf	??_impr_Pot
  2132  02AE  0820               	movf	??_impr_Pot,w
  2133  02AF  00F4               	movwf	Lcd_Set_Cursor@b
  2134  02B0  3002               	movlw	2
  2135  02B1  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor
  2136  02B6                     l1411:
  2137                           
  2138                           ;main.c: 186:         cen = cen + 48;
  2139  02B6  0879               	movf	impr_Pot@cen,w
  2140  02B7  3E30               	addlw	48
  2141  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2142  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2143  02BA  00A0               	movwf	??_impr_Pot
  2144  02BB  0820               	movf	??_impr_Pot,w
  2145  02BC  00F9               	movwf	impr_Pot@cen
  2146  02BD                     l1413:
  2147                           
  2148                           ;main.c: 187:         Lcd_Write_Char(cen);
  2149  02BD  0879               	movf	impr_Pot@cen,w
  2150  02BE  120A  158A  2649  120A  118A  	fcall	_Lcd_Write_Char
  2151  02C3                     l122:
  2152  02C3  0008               	return
  2153  02C4                     __end_of_impr_Pot:
  2154                           
  2155                           	psect	text8
  2156  0EF4                     __ptext8:	
  2157 ;; *************** function ___wmul *****************
  2158 ;; Defined at:
  2159 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  multiplier      2    0[COMMON] unsigned int 
  2162 ;;  multiplicand    2    2[COMMON] unsigned int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  product         2    4[COMMON] unsigned int 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  2    0[COMMON] unsigned int 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         4       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0
  2177 ;;      Totals:         6       0       0       0       0
  2178 ;;Total ram usage:        6 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;;		_impr_cont
  2185 ;;		_impr_Pot
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function ___wmul
  2191  0EF4                     ___wmul:
  2192  0EF4                     l1297:	
  2193                           ;incstack = 0
  2194                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2195                           
  2196  0EF4  01F4               	clrf	___wmul@product
  2197  0EF5  01F5               	clrf	___wmul@product+1
  2198  0EF6                     l1299:
  2199  0EF6  1C70               	btfss	___wmul@multiplier,0
  2200  0EF7  2EF9               	goto	u871
  2201  0EF8  2EFA               	goto	u870
  2202  0EF9                     u871:
  2203  0EF9  2F00               	goto	l249
  2204  0EFA                     u870:
  2205  0EFA                     l1301:
  2206  0EFA  0872               	movf	___wmul@multiplicand,w
  2207  0EFB  07F4               	addwf	___wmul@product,f
  2208  0EFC  1803               	skipnc
  2209  0EFD  0AF5               	incf	___wmul@product+1,f
  2210  0EFE  0873               	movf	___wmul@multiplicand+1,w
  2211  0EFF  07F5               	addwf	___wmul@product+1,f
  2212  0F00                     l249:
  2213  0F00  3001               	movlw	1
  2214  0F01                     u885:
  2215  0F01  1003               	clrc
  2216  0F02  0DF2               	rlf	___wmul@multiplicand,f
  2217  0F03  0DF3               	rlf	___wmul@multiplicand+1,f
  2218  0F04  3EFF               	addlw	-1
  2219  0F05  1D03               	skipz
  2220  0F06  2F01               	goto	u885
  2221  0F07                     l1303:
  2222  0F07  3001               	movlw	1
  2223  0F08                     u895:
  2224  0F08  1003               	clrc
  2225  0F09  0CF1               	rrf	___wmul@multiplier+1,f
  2226  0F0A  0CF0               	rrf	___wmul@multiplier,f
  2227  0F0B  3EFF               	addlw	-1
  2228  0F0C  1D03               	skipz
  2229  0F0D  2F08               	goto	u895
  2230  0F0E                     l1305:
  2231  0F0E  0870               	movf	___wmul@multiplier,w
  2232  0F0F  0471               	iorwf	___wmul@multiplier+1,w
  2233  0F10  1D03               	btfss	3,2
  2234  0F11  2F13               	goto	u901
  2235  0F12  2F14               	goto	u900
  2236  0F13                     u901:
  2237  0F13  2EF6               	goto	l1299
  2238  0F14                     u900:
  2239  0F14                     l1307:
  2240  0F14  0875               	movf	___wmul@product+1,w
  2241  0F15  00F1               	movwf	?___wmul+1
  2242  0F16  0874               	movf	___wmul@product,w
  2243  0F17  00F0               	movwf	?___wmul
  2244  0F18                     l251:
  2245  0F18  0008               	return
  2246  0F19                     __end_of___wmul:
  2247                           
  2248                           	psect	text9
  2249  0F40                     __ptext9:	
  2250 ;; *************** function ___lwdiv *****************
  2251 ;; Defined at:
  2252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  divisor         2    0[COMMON] unsigned int 
  2255 ;;  dividend        2    2[COMMON] unsigned int 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  quotient        2    5[COMMON] unsigned int 
  2258 ;;  counter         1    7[COMMON] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    0[COMMON] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         4       0       0       0       0
  2269 ;;      Locals:         3       0       0       0       0
  2270 ;;      Temps:          1       0       0       0       0
  2271 ;;      Totals:         8       0       0       0       0
  2272 ;;Total ram usage:        8 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;;		_impr_cont
  2279 ;;		_impr_Pot
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___lwdiv
  2285  0F40                     ___lwdiv:
  2286  0F40                     l1311:	
  2287                           ;incstack = 0
  2288                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2289                           
  2290  0F40  01F5               	clrf	___lwdiv@quotient
  2291  0F41  01F6               	clrf	___lwdiv@quotient+1
  2292  0F42                     l1313:
  2293  0F42  0870               	movf	___lwdiv@divisor,w
  2294  0F43  0471               	iorwf	___lwdiv@divisor+1,w
  2295  0F44  1903               	btfsc	3,2
  2296  0F45  2F47               	goto	u911
  2297  0F46  2F48               	goto	u910
  2298  0F47                     u911:
  2299  0F47  2F7F               	goto	l1333
  2300  0F48                     u910:
  2301  0F48                     l1315:
  2302  0F48  01F7               	clrf	___lwdiv@counter
  2303  0F49  0AF7               	incf	___lwdiv@counter,f
  2304  0F4A  2F56               	goto	l1321
  2305  0F4B                     l1317:
  2306  0F4B  3001               	movlw	1
  2307  0F4C                     u925:
  2308  0F4C  1003               	clrc
  2309  0F4D  0DF0               	rlf	___lwdiv@divisor,f
  2310  0F4E  0DF1               	rlf	___lwdiv@divisor+1,f
  2311  0F4F  3EFF               	addlw	-1
  2312  0F50  1D03               	skipz
  2313  0F51  2F4C               	goto	u925
  2314  0F52                     l1319:
  2315  0F52  3001               	movlw	1
  2316  0F53  00F4               	movwf	??___lwdiv
  2317  0F54  0874               	movf	??___lwdiv,w
  2318  0F55  07F7               	addwf	___lwdiv@counter,f
  2319  0F56                     l1321:
  2320  0F56  1FF1               	btfss	___lwdiv@divisor+1,7
  2321  0F57  2F59               	goto	u931
  2322  0F58  2F5A               	goto	u930
  2323  0F59                     u931:
  2324  0F59  2F4B               	goto	l1317
  2325  0F5A                     u930:
  2326  0F5A                     l1323:
  2327  0F5A  3001               	movlw	1
  2328  0F5B                     u945:
  2329  0F5B  1003               	clrc
  2330  0F5C  0DF5               	rlf	___lwdiv@quotient,f
  2331  0F5D  0DF6               	rlf	___lwdiv@quotient+1,f
  2332  0F5E  3EFF               	addlw	-1
  2333  0F5F  1D03               	skipz
  2334  0F60  2F5B               	goto	u945
  2335  0F61  0871               	movf	___lwdiv@divisor+1,w
  2336  0F62  0273               	subwf	___lwdiv@dividend+1,w
  2337  0F63  1D03               	skipz
  2338  0F64  2F67               	goto	u955
  2339  0F65  0870               	movf	___lwdiv@divisor,w
  2340  0F66  0272               	subwf	___lwdiv@dividend,w
  2341  0F67                     u955:
  2342  0F67  1C03               	skipc
  2343  0F68  2F6A               	goto	u951
  2344  0F69  2F6B               	goto	u950
  2345  0F6A                     u951:
  2346  0F6A  2F72               	goto	l1329
  2347  0F6B                     u950:
  2348  0F6B                     l1325:
  2349  0F6B  0870               	movf	___lwdiv@divisor,w
  2350  0F6C  02F2               	subwf	___lwdiv@dividend,f
  2351  0F6D  0871               	movf	___lwdiv@divisor+1,w
  2352  0F6E  1C03               	skipc
  2353  0F6F  03F3               	decf	___lwdiv@dividend+1,f
  2354  0F70  02F3               	subwf	___lwdiv@dividend+1,f
  2355  0F71                     l1327:
  2356  0F71  1475               	bsf	___lwdiv@quotient,0
  2357  0F72                     l1329:
  2358  0F72  3001               	movlw	1
  2359  0F73                     u965:
  2360  0F73  1003               	clrc
  2361  0F74  0CF1               	rrf	___lwdiv@divisor+1,f
  2362  0F75  0CF0               	rrf	___lwdiv@divisor,f
  2363  0F76  3EFF               	addlw	-1
  2364  0F77  1D03               	skipz
  2365  0F78  2F73               	goto	u965
  2366  0F79                     l1331:
  2367  0F79  3001               	movlw	1
  2368  0F7A  02F7               	subwf	___lwdiv@counter,f
  2369  0F7B  1D03               	btfss	3,2
  2370  0F7C  2F7E               	goto	u971
  2371  0F7D  2F7F               	goto	u970
  2372  0F7E                     u971:
  2373  0F7E  2F5A               	goto	l1323
  2374  0F7F                     u970:
  2375  0F7F                     l1333:
  2376  0F7F  0876               	movf	___lwdiv@quotient+1,w
  2377  0F80  00F1               	movwf	?___lwdiv+1
  2378  0F81  0875               	movf	___lwdiv@quotient,w
  2379  0F82  00F0               	movwf	?___lwdiv
  2380  0F83                     l521:
  2381  0F83  0008               	return
  2382  0F84                     __end_of___lwdiv:
  2383                           
  2384                           	psect	text10
  2385  0ECF                     __ptext10:	
  2386 ;; *************** function _Lcd_Write_String *****************
  2387 ;; Defined at:
  2388 ;;		line 62 in file "lcd.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  a               1    wreg     PTR unsigned char 
  2391 ;;		 -> STR_4(2), STR_3(4), STR_2(4), STR_1(4), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  a               1    5[COMMON] PTR unsigned char 
  2394 ;;		 -> STR_4(2), STR_3(4), STR_2(4), STR_1(4), 
  2395 ;;  i               2    3[COMMON] int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       0       0       0       0
  2406 ;;      Locals:         3       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0
  2408 ;;      Totals:         3       0       0       0       0
  2409 ;;Total ram usage:        3 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    2
  2412 ;; This function calls:
  2413 ;;		_Lcd_Write_Char
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;;		_impr_Pot
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _Lcd_Write_String
  2422  0ECF                     _Lcd_Write_String:
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2426                           ;Lcd_Write_String@a stored from wreg
  2427  0ECF  00F5               	movwf	Lcd_Write_String@a
  2428  0ED0                     l1289:
  2429                           
  2430                           ;lcd.c: 63:     int i;;lcd.c: 64:     for (i = 0; a[i] != '\0'; i++)
  2431  0ED0  01F3               	clrf	Lcd_Write_String@i
  2432  0ED1  01F4               	clrf	Lcd_Write_String@i+1
  2433  0ED2  2EE6               	goto	l1295
  2434  0ED3                     l1291:
  2435                           
  2436                           ;lcd.c: 65:         Lcd_Write_Char(a[i]);
  2437  0ED3  0873               	movf	Lcd_Write_String@i,w
  2438  0ED4  0775               	addwf	Lcd_Write_String@a,w
  2439  0ED5  0084               	movwf	4
  2440  0ED6  120A  118A  2003  120A  158A  	fcall	stringdir
  2441  0EDB  120A  158A  2649  120A  158A  	fcall	_Lcd_Write_Char
  2442  0EE0                     l1293:
  2443  0EE0  3001               	movlw	1
  2444  0EE1  07F3               	addwf	Lcd_Write_String@i,f
  2445  0EE2  1803               	skipnc
  2446  0EE3  0AF4               	incf	Lcd_Write_String@i+1,f
  2447  0EE4  3000               	movlw	0
  2448  0EE5  07F4               	addwf	Lcd_Write_String@i+1,f
  2449  0EE6                     l1295:
  2450  0EE6  0873               	movf	Lcd_Write_String@i,w
  2451  0EE7  0775               	addwf	Lcd_Write_String@a,w
  2452  0EE8  0084               	movwf	4
  2453  0EE9  120A  118A  2003  120A  158A  	fcall	stringdir
  2454  0EEE  3A00               	xorlw	0
  2455  0EEF  1D03               	skipz
  2456  0EF0  2EF2               	goto	u861
  2457  0EF1  2EF3               	goto	u860
  2458  0EF2                     u861:
  2459  0EF2  2ED3               	goto	l1291
  2460  0EF3                     u860:
  2461  0EF3                     l157:
  2462  0EF3  0008               	return
  2463  0EF4                     __end_of_Lcd_Write_String:
  2464                           
  2465                           	psect	text11
  2466  0E49                     __ptext11:	
  2467 ;; *************** function _Lcd_Write_Char *****************
  2468 ;; Defined at:
  2469 ;;		line 54 in file "lcd.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  a               1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  a               1    2[COMMON] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         1       0       0       0       0
  2485 ;;      Temps:          1       0       0       0       0
  2486 ;;      Totals:         2       0       0       0       0
  2487 ;;Total ram usage:        2 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		_Lcd_Port
  2492 ;; This function is called by:
  2493 ;;		_impr_cont
  2494 ;;		_impr_Pot
  2495 ;;		_Lcd_Write_String
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _Lcd_Write_Char
  2501  0E49                     _Lcd_Write_Char:
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2505                           ;Lcd_Write_Char@a stored from wreg
  2506  0E49  00F2               	movwf	Lcd_Write_Char@a
  2507  0E4A                     l1245:
  2508                           
  2509                           ;lcd.c: 55:     RE0 = 1;
  2510  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0E4C  1409               	bsf	9,0	;volatile
  2513  0E4D                     l1247:
  2514                           
  2515                           ;lcd.c: 56:     Lcd_Port(a);
  2516  0E4D  0872               	movf	Lcd_Write_Char@a,w
  2517  0E4E  120A  158A  2620  120A  158A  	fcall	_Lcd_Port
  2518  0E53                     l1249:
  2519                           
  2520                           ;lcd.c: 57:     RE1 = 1;
  2521  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0E55  1489               	bsf	9,1	;volatile
  2524  0E56                     l1251:
  2525                           
  2526                           ;lcd.c: 58:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2527  0E56  301A               	movlw	26
  2528  0E57  00F1               	movwf	??_Lcd_Write_Char
  2529  0E58                     u1697:
  2530  0E58  0BF1               	decfsz	??_Lcd_Write_Char,f
  2531  0E59  2E58               	goto	u1697
  2532  0E5A  0000               	nop
  2533  0E5B                     l1253:
  2534                           
  2535                           ;lcd.c: 59:     RE1 = 0;
  2536  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0E5D  1089               	bcf	9,1	;volatile
  2539  0E5E                     l151:
  2540  0E5E  0008               	return
  2541  0E5F                     __end_of_Lcd_Write_Char:
  2542                           
  2543                           	psect	text12
  2544  0EAB                     __ptext12:	
  2545 ;; *************** function _Lcd_Set_Cursor *****************
  2546 ;; Defined at:
  2547 ;;		line 25 in file "lcd.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  a               1    wreg     unsigned char 
  2550 ;;  b               1    4[COMMON] unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  a               1    6[COMMON] unsigned char 
  2553 ;;  temp            1    7[COMMON] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         1       0       0       0       0
  2564 ;;      Locals:         2       0       0       0       0
  2565 ;;      Temps:          1       0       0       0       0
  2566 ;;      Totals:         4       0       0       0       0
  2567 ;;Total ram usage:        4 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    2
  2570 ;; This function calls:
  2571 ;;		_Lcd_Cmd
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;;		_impr_cont
  2575 ;;		_impr_Pot
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _Lcd_Set_Cursor
  2581  0EAB                     _Lcd_Set_Cursor:
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2585                           ;Lcd_Set_Cursor@a stored from wreg
  2586  0EAB  00F6               	movwf	Lcd_Set_Cursor@a
  2587  0EAC                     l1277:
  2588                           
  2589                           ;lcd.c: 26:     char temp;;lcd.c: 27:     if (a == 1) {
  2590  0EAC  0376               	decf	Lcd_Set_Cursor@a,w
  2591  0EAD  1D03               	btfss	3,2
  2592  0EAE  2EB0               	goto	u841
  2593  0EAF  2EB1               	goto	u840
  2594  0EB0                     u841:
  2595  0EB0  2EBD               	goto	l1283
  2596  0EB1                     u840:
  2597  0EB1                     l1279:
  2598                           
  2599                           ;lcd.c: 28:         temp = 0x80 + b - 1;
  2600  0EB1  0874               	movf	Lcd_Set_Cursor@b,w
  2601  0EB2  3E7F               	addlw	127
  2602  0EB3  00F5               	movwf	??_Lcd_Set_Cursor
  2603  0EB4  0875               	movf	??_Lcd_Set_Cursor,w
  2604  0EB5  00F7               	movwf	Lcd_Set_Cursor@temp
  2605  0EB6                     l1281:
  2606                           
  2607                           ;lcd.c: 29:         Lcd_Cmd(temp);
  2608  0EB6  0877               	movf	Lcd_Set_Cursor@temp,w
  2609  0EB7  120A  158A  2675  120A  158A  	fcall	_Lcd_Cmd
  2610                           
  2611                           ;lcd.c: 30:     } else if (a == 2) {
  2612  0EBC  2ECE               	goto	l145
  2613  0EBD                     l1283:
  2614  0EBD  3002               	movlw	2
  2615  0EBE  0676               	xorwf	Lcd_Set_Cursor@a,w
  2616  0EBF  1D03               	btfss	3,2
  2617  0EC0  2EC2               	goto	u851
  2618  0EC1  2EC3               	goto	u850
  2619  0EC2                     u851:
  2620  0EC2  2ECE               	goto	l145
  2621  0EC3                     u850:
  2622  0EC3                     l1285:
  2623                           
  2624                           ;lcd.c: 31:         temp = 0xC0 + b - 1;
  2625  0EC3  0874               	movf	Lcd_Set_Cursor@b,w
  2626  0EC4  3EBF               	addlw	191
  2627  0EC5  00F5               	movwf	??_Lcd_Set_Cursor
  2628  0EC6  0875               	movf	??_Lcd_Set_Cursor,w
  2629  0EC7  00F7               	movwf	Lcd_Set_Cursor@temp
  2630  0EC8                     l1287:
  2631                           
  2632                           ;lcd.c: 32:         Lcd_Cmd(temp);
  2633  0EC8  0877               	movf	Lcd_Set_Cursor@temp,w
  2634  0EC9  120A  158A  2675  120A  158A  	fcall	_Lcd_Cmd
  2635  0ECE                     l145:
  2636  0ECE  0008               	return
  2637  0ECF                     __end_of_Lcd_Set_Cursor:
  2638                           
  2639                           	psect	text13
  2640  0073                     __ptext13:	
  2641 ;; *************** function ___xxtofl *****************
  2642 ;; Defined at:
  2643 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  sign            1    wreg     unsigned char 
  2646 ;;  val             4    0[COMMON] long 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  sign            1    8[COMMON] unsigned char 
  2649 ;;  arg             4   10[COMMON] unsigned long 
  2650 ;;  exp             1    9[COMMON] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  4    0[COMMON] unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         4       0       0       0       0
  2661 ;;      Locals:         6       0       0       0       0
  2662 ;;      Temps:          4       0       0       0       0
  2663 ;;      Totals:        14       0       0       0       0
  2664 ;;Total ram usage:       14 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function ___xxtofl
  2675  0073                     ___xxtofl:
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2679                           ;___xxtofl@sign stored from wreg
  2680  0073  00F8               	movwf	___xxtofl@sign
  2681  0074                     l1613:
  2682  0074  0878               	movf	___xxtofl@sign,w
  2683  0075  1903               	btfsc	3,2
  2684  0076  2878               	goto	u1481
  2685  0077  2879               	goto	u1480
  2686  0078                     u1481:
  2687  0078  288D               	goto	l1619
  2688  0079                     u1480:
  2689  0079                     l1615:
  2690  0079  1FF3               	btfss	___xxtofl@val+3,7
  2691  007A  287C               	goto	u1491
  2692  007B  287D               	goto	u1490
  2693  007C                     u1491:
  2694  007C  288D               	goto	l1619
  2695  007D                     u1490:
  2696  007D                     l1617:
  2697  007D  0970               	comf	___xxtofl@val,w
  2698  007E  00FA               	movwf	___xxtofl@arg
  2699  007F  0971               	comf	___xxtofl@val+1,w
  2700  0080  00FB               	movwf	___xxtofl@arg+1
  2701  0081  0972               	comf	___xxtofl@val+2,w
  2702  0082  00FC               	movwf	___xxtofl@arg+2
  2703  0083  0973               	comf	___xxtofl@val+3,w
  2704  0084  00FD               	movwf	___xxtofl@arg+3
  2705  0085  0AFA               	incf	___xxtofl@arg,f
  2706  0086  1903               	skipnz
  2707  0087  0AFB               	incf	___xxtofl@arg+1,f
  2708  0088  1903               	skipnz
  2709  0089  0AFC               	incf	___xxtofl@arg+2,f
  2710  008A  1903               	skipnz
  2711  008B  0AFD               	incf	___xxtofl@arg+3,f
  2712  008C  2895               	goto	l682
  2713  008D                     l1619:
  2714  008D  0873               	movf	___xxtofl@val+3,w
  2715  008E  00FD               	movwf	___xxtofl@arg+3
  2716  008F  0872               	movf	___xxtofl@val+2,w
  2717  0090  00FC               	movwf	___xxtofl@arg+2
  2718  0091  0871               	movf	___xxtofl@val+1,w
  2719  0092  00FB               	movwf	___xxtofl@arg+1
  2720  0093  0870               	movf	___xxtofl@val,w
  2721  0094  00FA               	movwf	___xxtofl@arg
  2722  0095                     l682:
  2723  0095  0873               	movf	___xxtofl@val+3,w
  2724  0096  0472               	iorwf	___xxtofl@val+2,w
  2725  0097  0471               	iorwf	___xxtofl@val+1,w
  2726  0098  0470               	iorwf	___xxtofl@val,w
  2727  0099  1D03               	skipz
  2728  009A  289C               	goto	u1501
  2729  009B  289D               	goto	u1500
  2730  009C                     u1501:
  2731  009C  28A6               	goto	l1625
  2732  009D                     u1500:
  2733  009D                     l1621:
  2734  009D  3000               	movlw	0
  2735  009E  00F3               	movwf	?___xxtofl+3
  2736  009F  3000               	movlw	0
  2737  00A0  00F2               	movwf	?___xxtofl+2
  2738  00A1  3000               	movlw	0
  2739  00A2  00F1               	movwf	?___xxtofl+1
  2740  00A3  3000               	movlw	0
  2741  00A4  00F0               	movwf	?___xxtofl
  2742  00A5  292C               	goto	l684
  2743  00A6                     l1625:
  2744  00A6  3096               	movlw	150
  2745  00A7  00F4               	movwf	??___xxtofl
  2746  00A8  0874               	movf	??___xxtofl,w
  2747  00A9  00F9               	movwf	___xxtofl@exp
  2748  00AA  28B8               	goto	l1629
  2749  00AB                     l1627:
  2750  00AB  3001               	movlw	1
  2751  00AC  00F4               	movwf	??___xxtofl
  2752  00AD  0874               	movf	??___xxtofl,w
  2753  00AE  07F9               	addwf	___xxtofl@exp,f
  2754  00AF  3001               	movlw	1
  2755  00B0                     u1515:
  2756  00B0  1003               	clrc
  2757  00B1  0CFD               	rrf	___xxtofl@arg+3,f
  2758  00B2  0CFC               	rrf	___xxtofl@arg+2,f
  2759  00B3  0CFB               	rrf	___xxtofl@arg+1,f
  2760  00B4  0CFA               	rrf	___xxtofl@arg,f
  2761  00B5  3EFF               	addlw	-1
  2762  00B6  1D03               	skipz
  2763  00B7  28B0               	goto	u1515
  2764  00B8                     l1629:
  2765  00B8  30FE               	movlw	254
  2766  00B9  057D               	andwf	___xxtofl@arg+3,w
  2767  00BA  1D03               	btfss	3,2
  2768  00BB  28BD               	goto	u1521
  2769  00BC  28BE               	goto	u1520
  2770  00BD                     u1521:
  2771  00BD  28AB               	goto	l1627
  2772  00BE                     u1520:
  2773  00BE  28DA               	goto	l688
  2774  00BF                     l1631:
  2775  00BF  3001               	movlw	1
  2776  00C0  00F4               	movwf	??___xxtofl
  2777  00C1  0874               	movf	??___xxtofl,w
  2778  00C2  07F9               	addwf	___xxtofl@exp,f
  2779  00C3                     l1633:
  2780  00C3  3001               	movlw	1
  2781  00C4  07FA               	addwf	___xxtofl@arg,f
  2782  00C5  3000               	movlw	0
  2783  00C6  1803               	skipnc
  2784  00C7  3001               	movlw	1
  2785  00C8  07FB               	addwf	___xxtofl@arg+1,f
  2786  00C9  3000               	movlw	0
  2787  00CA  1803               	skipnc
  2788  00CB  3001               	movlw	1
  2789  00CC  07FC               	addwf	___xxtofl@arg+2,f
  2790  00CD  3000               	movlw	0
  2791  00CE  1803               	skipnc
  2792  00CF  3001               	movlw	1
  2793  00D0  07FD               	addwf	___xxtofl@arg+3,f
  2794  00D1                     l1635:
  2795  00D1  3001               	movlw	1
  2796  00D2                     u1535:
  2797  00D2  1003               	clrc
  2798  00D3  0CFD               	rrf	___xxtofl@arg+3,f
  2799  00D4  0CFC               	rrf	___xxtofl@arg+2,f
  2800  00D5  0CFB               	rrf	___xxtofl@arg+1,f
  2801  00D6  0CFA               	rrf	___xxtofl@arg,f
  2802  00D7  3EFF               	addlw	-1
  2803  00D8  1D03               	skipz
  2804  00D9  28D2               	goto	u1535
  2805  00DA                     l688:
  2806  00DA  30FF               	movlw	255
  2807  00DB  057D               	andwf	___xxtofl@arg+3,w
  2808  00DC  1D03               	btfss	3,2
  2809  00DD  28DF               	goto	u1541
  2810  00DE  28E0               	goto	u1540
  2811  00DF                     u1541:
  2812  00DF  28BF               	goto	l1631
  2813  00E0                     u1540:
  2814  00E0  28EC               	goto	l1639
  2815  00E1                     l1637:
  2816  00E1  3001               	movlw	1
  2817  00E2  02F9               	subwf	___xxtofl@exp,f
  2818  00E3  3001               	movlw	1
  2819  00E4  00F4               	movwf	??___xxtofl
  2820  00E5                     u1555:
  2821  00E5  1003               	clrc
  2822  00E6  0DFA               	rlf	___xxtofl@arg,f
  2823  00E7  0DFB               	rlf	___xxtofl@arg+1,f
  2824  00E8  0DFC               	rlf	___xxtofl@arg+2,f
  2825  00E9  0DFD               	rlf	___xxtofl@arg+3,f
  2826  00EA  0BF4               	decfsz	??___xxtofl,f
  2827  00EB  28E5               	goto	u1555
  2828  00EC                     l1639:
  2829  00EC  1BFC               	btfsc	___xxtofl@arg+2,7
  2830  00ED  28EF               	goto	u1561
  2831  00EE  28F0               	goto	u1560
  2832  00EF                     u1561:
  2833  00EF  28F6               	goto	l695
  2834  00F0                     u1560:
  2835  00F0                     l1641:
  2836  00F0  3002               	movlw	2
  2837  00F1  0279               	subwf	___xxtofl@exp,w
  2838  00F2  1803               	skipnc
  2839  00F3  28F5               	goto	u1571
  2840  00F4  28F6               	goto	u1570
  2841  00F5                     u1571:
  2842  00F5  28E1               	goto	l1637
  2843  00F6                     u1570:
  2844  00F6                     l695:
  2845  00F6  1879               	btfsc	___xxtofl@exp,0
  2846  00F7  28F9               	goto	u1581
  2847  00F8  28FA               	goto	u1580
  2848  00F9                     u1581:
  2849  00F9  2902               	goto	l696
  2850  00FA                     u1580:
  2851  00FA                     l1643:
  2852  00FA  30FF               	movlw	255
  2853  00FB  05FA               	andwf	___xxtofl@arg,f
  2854  00FC  30FF               	movlw	255
  2855  00FD  05FB               	andwf	___xxtofl@arg+1,f
  2856  00FE  307F               	movlw	127
  2857  00FF  05FC               	andwf	___xxtofl@arg+2,f
  2858  0100  30FF               	movlw	255
  2859  0101  05FD               	andwf	___xxtofl@arg+3,f
  2860  0102                     l696:
  2861  0102  1003               	clrc
  2862  0103  0CF9               	rrf	___xxtofl@exp,f
  2863  0104                     l1645:
  2864  0104  0879               	movf	___xxtofl@exp,w
  2865  0105  00F4               	movwf	??___xxtofl
  2866  0106  01F5               	clrf	??___xxtofl+1
  2867  0107  01F6               	clrf	??___xxtofl+2
  2868  0108  01F7               	clrf	??___xxtofl+3
  2869  0109  3018               	movlw	24
  2870  010A                     u1595:
  2871  010A  1003               	clrc
  2872  010B  0DF4               	rlf	??___xxtofl,f
  2873  010C  0DF5               	rlf	??___xxtofl+1,f
  2874  010D  0DF6               	rlf	??___xxtofl+2,f
  2875  010E  0DF7               	rlf	??___xxtofl+3,f
  2876  010F                     u1590:
  2877  010F  3EFF               	addlw	-1
  2878  0110  1D03               	skipz
  2879  0111  290A               	goto	u1595
  2880  0112  0874               	movf	??___xxtofl,w
  2881  0113  04FA               	iorwf	___xxtofl@arg,f
  2882  0114  0875               	movf	??___xxtofl+1,w
  2883  0115  04FB               	iorwf	___xxtofl@arg+1,f
  2884  0116  0876               	movf	??___xxtofl+2,w
  2885  0117  04FC               	iorwf	___xxtofl@arg+2,f
  2886  0118  0877               	movf	??___xxtofl+3,w
  2887  0119  04FD               	iorwf	___xxtofl@arg+3,f
  2888  011A                     l1647:
  2889  011A  0878               	movf	___xxtofl@sign,w
  2890  011B  1903               	btfsc	3,2
  2891  011C  291E               	goto	u1601
  2892  011D  291F               	goto	u1600
  2893  011E                     u1601:
  2894  011E  2924               	goto	l1653
  2895  011F                     u1600:
  2896  011F                     l1649:
  2897  011F  1FF3               	btfss	___xxtofl@val+3,7
  2898  0120  2922               	goto	u1611
  2899  0121  2923               	goto	u1610
  2900  0122                     u1611:
  2901  0122  2924               	goto	l1653
  2902  0123                     u1610:
  2903  0123                     l1651:
  2904  0123  17FD               	bsf	___xxtofl@arg+3,7
  2905  0124                     l1653:
  2906  0124  087D               	movf	___xxtofl@arg+3,w
  2907  0125  00F3               	movwf	?___xxtofl+3
  2908  0126  087C               	movf	___xxtofl@arg+2,w
  2909  0127  00F2               	movwf	?___xxtofl+2
  2910  0128  087B               	movf	___xxtofl@arg+1,w
  2911  0129  00F1               	movwf	?___xxtofl+1
  2912  012A  087A               	movf	___xxtofl@arg,w
  2913  012B  00F0               	movwf	?___xxtofl
  2914  012C                     l684:
  2915  012C  0008               	return
  2916  012D                     __end_of___xxtofl:
  2917                           
  2918                           	psect	text14
  2919  0F84                     __ptext14:	
  2920 ;; *************** function ___fltol *****************
  2921 ;; Defined at:
  2922 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  f1              4   26[BANK0 ] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  exp1            1   36[BANK0 ] unsigned char 
  2927 ;;  sign1           1   35[BANK0 ] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  4   26[BANK0 ] long 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       4       0       0       0
  2938 ;;      Locals:         0       2       0       0       0
  2939 ;;      Temps:          0       5       0       0       0
  2940 ;;      Totals:         0      11       0       0       0
  2941 ;;Total ram usage:       11 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function ___fltol
  2952  0F84                     ___fltol:
  2953  0F84                     l1437:	
  2954                           ;incstack = 0
  2955                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2956                           
  2957  0F84  1003               	clrc
  2958  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0F87  0D3C               	rlf	___fltol@f1+2,w
  2961  0F88  0D3D               	rlf	___fltol@f1+3,w
  2962  0F89  00BE               	movwf	??___fltol
  2963  0F8A  083E               	movf	??___fltol,w
  2964  0F8B  00C4               	movwf	___fltol@exp1
  2965  0F8C  0844               	movf	___fltol@exp1,w
  2966  0F8D  1D03               	btfss	3,2
  2967  0F8E  2F90               	goto	u1011
  2968  0F8F  2F91               	goto	u1010
  2969  0F90                     u1011:
  2970  0F90  2F9A               	goto	l1443
  2971  0F91                     u1010:
  2972  0F91                     l1439:
  2973  0F91  3000               	movlw	0
  2974  0F92  00BD               	movwf	?___fltol+3
  2975  0F93  3000               	movlw	0
  2976  0F94  00BC               	movwf	?___fltol+2
  2977  0F95  3000               	movlw	0
  2978  0F96  00BB               	movwf	?___fltol+1
  2979  0F97  3000               	movlw	0
  2980  0F98  00BA               	movwf	?___fltol
  2981  0F99  2FFF               	goto	l435
  2982  0F9A                     l1443:
  2983  0F9A  083A               	movf	___fltol@f1,w
  2984  0F9B  00BE               	movwf	??___fltol
  2985  0F9C  083B               	movf	___fltol@f1+1,w
  2986  0F9D  00BF               	movwf	??___fltol+1
  2987  0F9E  083C               	movf	___fltol@f1+2,w
  2988  0F9F  00C0               	movwf	??___fltol+2
  2989  0FA0  083D               	movf	___fltol@f1+3,w
  2990  0FA1  00C1               	movwf	??___fltol+3
  2991  0FA2  301F               	movlw	31
  2992  0FA3                     u1025:
  2993  0FA3  1003               	clrc
  2994  0FA4  0CC1               	rrf	??___fltol+3,f
  2995  0FA5  0CC0               	rrf	??___fltol+2,f
  2996  0FA6  0CBF               	rrf	??___fltol+1,f
  2997  0FA7  0CBE               	rrf	??___fltol,f
  2998  0FA8                     u1020:
  2999  0FA8  3EFF               	addlw	-1
  3000  0FA9  1D03               	skipz
  3001  0FAA  2FA3               	goto	u1025
  3002  0FAB  083E               	movf	??___fltol,w
  3003  0FAC  00C2               	movwf	??___fltol+4
  3004  0FAD  0842               	movf	??___fltol+4,w
  3005  0FAE  00C3               	movwf	___fltol@sign1
  3006  0FAF                     l1445:
  3007  0FAF  17BC               	bsf	___fltol@f1+2,7
  3008  0FB0                     l1447:
  3009  0FB0  30FF               	movlw	255
  3010  0FB1  05BA               	andwf	___fltol@f1,f
  3011  0FB2  30FF               	movlw	255
  3012  0FB3  05BB               	andwf	___fltol@f1+1,f
  3013  0FB4  30FF               	movlw	255
  3014  0FB5  05BC               	andwf	___fltol@f1+2,f
  3015  0FB6  3000               	movlw	0
  3016  0FB7  05BD               	andwf	___fltol@f1+3,f
  3017  0FB8                     l1449:
  3018  0FB8  3096               	movlw	150
  3019  0FB9  02C4               	subwf	___fltol@exp1,f
  3020  0FBA                     l1451:
  3021  0FBA  1FC4               	btfss	___fltol@exp1,7
  3022  0FBB  2FBD               	goto	u1031
  3023  0FBC  2FBE               	goto	u1030
  3024  0FBD                     u1031:
  3025  0FBD  2FD8               	goto	l1461
  3026  0FBE                     u1030:
  3027  0FBE                     l1453:
  3028  0FBE  0844               	movf	___fltol@exp1,w
  3029  0FBF  3A80               	xorlw	128
  3030  0FC0  3E97               	addlw	151
  3031  0FC1  1803               	skipnc
  3032  0FC2  2FC4               	goto	u1041
  3033  0FC3  2FC5               	goto	u1040
  3034  0FC4                     u1041:
  3035  0FC4  2FC6               	goto	l1459
  3036  0FC5                     u1040:
  3037  0FC5  2F91               	goto	l1439
  3038  0FC6                     l1459:
  3039  0FC6  3001               	movlw	1
  3040  0FC7                     u1055:
  3041  0FC7  1003               	clrc
  3042  0FC8  0CBD               	rrf	___fltol@f1+3,f
  3043  0FC9  0CBC               	rrf	___fltol@f1+2,f
  3044  0FCA  0CBB               	rrf	___fltol@f1+1,f
  3045  0FCB  0CBA               	rrf	___fltol@f1,f
  3046  0FCC  3EFF               	addlw	-1
  3047  0FCD  1D03               	skipz
  3048  0FCE  2FC7               	goto	u1055
  3049  0FCF  3001               	movlw	1
  3050  0FD0  00BE               	movwf	??___fltol
  3051  0FD1  083E               	movf	??___fltol,w
  3052  0FD2  07C4               	addwf	___fltol@exp1,f
  3053  0FD3  1D03               	btfss	3,2
  3054  0FD4  2FD6               	goto	u1061
  3055  0FD5  2FD7               	goto	u1060
  3056  0FD6                     u1061:
  3057  0FD6  2FC6               	goto	l1459
  3058  0FD7                     u1060:
  3059  0FD7  2FEF               	goto	l1469
  3060  0FD8                     l1461:
  3061  0FD8  3020               	movlw	32
  3062  0FD9  0244               	subwf	___fltol@exp1,w
  3063  0FDA  1C03               	skipc
  3064  0FDB  2FDD               	goto	u1071
  3065  0FDC  2FDE               	goto	u1070
  3066  0FDD                     u1071:
  3067  0FDD  2FEA               	goto	l442
  3068  0FDE                     u1070:
  3069  0FDE  2F91               	goto	l1439
  3070  0FDF                     l1467:
  3071  0FDF  3001               	movlw	1
  3072  0FE0  00BE               	movwf	??___fltol
  3073  0FE1                     u1085:
  3074  0FE1  1003               	clrc
  3075  0FE2  0DBA               	rlf	___fltol@f1,f
  3076  0FE3  0DBB               	rlf	___fltol@f1+1,f
  3077  0FE4  0DBC               	rlf	___fltol@f1+2,f
  3078  0FE5  0DBD               	rlf	___fltol@f1+3,f
  3079  0FE6  0BBE               	decfsz	??___fltol,f
  3080  0FE7  2FE1               	goto	u1085
  3081  0FE8  3001               	movlw	1
  3082  0FE9  02C4               	subwf	___fltol@exp1,f
  3083  0FEA                     l442:
  3084  0FEA  0844               	movf	___fltol@exp1,w
  3085  0FEB  1D03               	btfss	3,2
  3086  0FEC  2FEE               	goto	u1091
  3087  0FED  2FEF               	goto	u1090
  3088  0FEE                     u1091:
  3089  0FEE  2FDF               	goto	l1467
  3090  0FEF                     u1090:
  3091  0FEF                     l1469:
  3092  0FEF  0843               	movf	___fltol@sign1,w
  3093  0FF0  1903               	btfsc	3,2
  3094  0FF1  2FF3               	goto	u1101
  3095  0FF2  2FF4               	goto	u1100
  3096  0FF3                     u1101:
  3097  0FF3  2FFF               	goto	l445
  3098  0FF4                     u1100:
  3099  0FF4                     l1471:
  3100  0FF4  09BA               	comf	___fltol@f1,f
  3101  0FF5  09BB               	comf	___fltol@f1+1,f
  3102  0FF6  09BC               	comf	___fltol@f1+2,f
  3103  0FF7  09BD               	comf	___fltol@f1+3,f
  3104  0FF8  0ABA               	incf	___fltol@f1,f
  3105  0FF9  1903               	skipnz
  3106  0FFA  0ABB               	incf	___fltol@f1+1,f
  3107  0FFB  1903               	skipnz
  3108  0FFC  0ABC               	incf	___fltol@f1+2,f
  3109  0FFD  1903               	skipnz
  3110  0FFE  0ABD               	incf	___fltol@f1+3,f
  3111  0FFF                     l445:
  3112  0FFF                     l435:
  3113  0FFF  0008               	return
  3114  1000                     __end_of___fltol:
  3115                           
  3116                           	psect	text15
  3117  048B                     __ptext15:	
  3118 ;; *************** function ___flmul *****************
  3119 ;; Defined at:
  3120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  b               4    0[BANK0 ] long 
  3123 ;;  a               4    4[BANK0 ] long 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  prod            4   20[BANK0 ] struct .
  3126 ;;  grs             4   14[BANK0 ] unsigned long 
  3127 ;;  temp            2   24[BANK0 ] struct .
  3128 ;;  bexp            1   19[BANK0 ] unsigned char 
  3129 ;;  aexp            1   18[BANK0 ] unsigned char 
  3130 ;;  sign            1   13[BANK0 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  4    0[BANK0 ] unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       8       0       0       0
  3141 ;;      Locals:         0      13       0       0       0
  3142 ;;      Temps:          0       5       0       0       0
  3143 ;;      Totals:         0      26       0       0       0
  3144 ;;Total ram usage:       26 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		__Umul8_16
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function ___flmul
  3156  048B                     ___flmul:
  3157  048B                     l1473:	
  3158                           ;incstack = 0
  3159                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3160                           
  3161  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3162  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3163  048D  0823               	movf	___flmul@b+3,w
  3164  048E  3980               	andlw	128
  3165  048F  00A8               	movwf	??___flmul
  3166  0490  0828               	movf	??___flmul,w
  3167  0491  00AD               	movwf	___flmul@sign
  3168  0492                     l1475:
  3169  0492  0823               	movf	___flmul@b+3,w
  3170  0493  00A8               	movwf	??___flmul
  3171  0494  0728               	addwf	??___flmul,w
  3172  0495  00A9               	movwf	??___flmul+1
  3173  0496  0829               	movf	??___flmul+1,w
  3174  0497  00B3               	movwf	___flmul@bexp
  3175  0498                     l1477:
  3176  0498  1FA2               	btfss	___flmul@b+2,7
  3177  0499  2C9B               	goto	u1111
  3178  049A  2C9C               	goto	u1110
  3179  049B                     u1111:
  3180  049B  2C9D               	goto	l1481
  3181  049C                     u1110:
  3182  049C                     l1479:
  3183  049C  1433               	bsf	___flmul@bexp,0
  3184  049D                     l1481:
  3185  049D  0833               	movf	___flmul@bexp,w
  3186  049E  1903               	btfsc	3,2
  3187  049F  2CA1               	goto	u1121
  3188  04A0  2CA2               	goto	u1120
  3189  04A1                     u1121:
  3190  04A1  2CB1               	goto	l1489
  3191  04A2                     u1120:
  3192  04A2                     l1483:
  3193  04A2  0A33               	incf	___flmul@bexp,w
  3194  04A3  1D03               	btfss	3,2
  3195  04A4  2CA6               	goto	u1131
  3196  04A5  2CA7               	goto	u1130
  3197  04A6                     u1131:
  3198  04A6  2CAF               	goto	l1487
  3199  04A7                     u1130:
  3200  04A7                     l1485:
  3201  04A7  3000               	movlw	0
  3202  04A8  00A3               	movwf	___flmul@b+3
  3203  04A9  3000               	movlw	0
  3204  04AA  00A2               	movwf	___flmul@b+2
  3205  04AB  3000               	movlw	0
  3206  04AC  00A1               	movwf	___flmul@b+1
  3207  04AD  3000               	movlw	0
  3208  04AE  00A0               	movwf	___flmul@b
  3209  04AF                     l1487:
  3210  04AF  17A2               	bsf	___flmul@b+2,7
  3211  04B0  2CB9               	goto	l1491
  3212  04B1                     l1489:
  3213  04B1  3000               	movlw	0
  3214  04B2  00A3               	movwf	___flmul@b+3
  3215  04B3  3000               	movlw	0
  3216  04B4  00A2               	movwf	___flmul@b+2
  3217  04B5  3000               	movlw	0
  3218  04B6  00A1               	movwf	___flmul@b+1
  3219  04B7  3000               	movlw	0
  3220  04B8  00A0               	movwf	___flmul@b
  3221  04B9                     l1491:
  3222  04B9  0827               	movf	___flmul@a+3,w
  3223  04BA  3980               	andlw	128
  3224  04BB  00A8               	movwf	??___flmul
  3225  04BC  0828               	movf	??___flmul,w
  3226  04BD  06AD               	xorwf	___flmul@sign,f
  3227  04BE                     l1493:
  3228  04BE  0827               	movf	___flmul@a+3,w
  3229  04BF  00A8               	movwf	??___flmul
  3230  04C0  0728               	addwf	??___flmul,w
  3231  04C1  00A9               	movwf	??___flmul+1
  3232  04C2  0829               	movf	??___flmul+1,w
  3233  04C3  00B2               	movwf	___flmul@aexp
  3234  04C4                     l1495:
  3235  04C4  1FA6               	btfss	___flmul@a+2,7
  3236  04C5  2CC7               	goto	u1141
  3237  04C6  2CC8               	goto	u1140
  3238  04C7                     u1141:
  3239  04C7  2CC9               	goto	l1499
  3240  04C8                     u1140:
  3241  04C8                     l1497:
  3242  04C8  1432               	bsf	___flmul@aexp,0
  3243  04C9                     l1499:
  3244  04C9  0832               	movf	___flmul@aexp,w
  3245  04CA  1903               	btfsc	3,2
  3246  04CB  2CCD               	goto	u1151
  3247  04CC  2CCE               	goto	u1150
  3248  04CD                     u1151:
  3249  04CD  2CDD               	goto	l1507
  3250  04CE                     u1150:
  3251  04CE                     l1501:
  3252  04CE  0A32               	incf	___flmul@aexp,w
  3253  04CF  1D03               	btfss	3,2
  3254  04D0  2CD2               	goto	u1161
  3255  04D1  2CD3               	goto	u1160
  3256  04D2                     u1161:
  3257  04D2  2CDB               	goto	l1505
  3258  04D3                     u1160:
  3259  04D3                     l1503:
  3260  04D3  3000               	movlw	0
  3261  04D4  00A7               	movwf	___flmul@a+3
  3262  04D5  3000               	movlw	0
  3263  04D6  00A6               	movwf	___flmul@a+2
  3264  04D7  3000               	movlw	0
  3265  04D8  00A5               	movwf	___flmul@a+1
  3266  04D9  3000               	movlw	0
  3267  04DA  00A4               	movwf	___flmul@a
  3268  04DB                     l1505:
  3269  04DB  17A6               	bsf	___flmul@a+2,7
  3270  04DC  2CE5               	goto	l1509
  3271  04DD                     l1507:
  3272  04DD  3000               	movlw	0
  3273  04DE  00A7               	movwf	___flmul@a+3
  3274  04DF  3000               	movlw	0
  3275  04E0  00A6               	movwf	___flmul@a+2
  3276  04E1  3000               	movlw	0
  3277  04E2  00A5               	movwf	___flmul@a+1
  3278  04E3  3000               	movlw	0
  3279  04E4  00A4               	movwf	___flmul@a
  3280  04E5                     l1509:
  3281  04E5  0832               	movf	___flmul@aexp,w
  3282  04E6  1903               	btfsc	3,2
  3283  04E7  2CE9               	goto	u1171
  3284  04E8  2CEA               	goto	u1170
  3285  04E9                     u1171:
  3286  04E9  2CEF               	goto	l1513
  3287  04EA                     u1170:
  3288  04EA                     l1511:
  3289  04EA  0833               	movf	___flmul@bexp,w
  3290  04EB  1D03               	btfss	3,2
  3291  04EC  2CEE               	goto	u1181
  3292  04ED  2CEF               	goto	u1180
  3293  04EE                     u1181:
  3294  04EE  2CF8               	goto	l1517
  3295  04EF                     u1180:
  3296  04EF                     l1513:
  3297  04EF  3000               	movlw	0
  3298  04F0  00A3               	movwf	?___flmul+3
  3299  04F1  3000               	movlw	0
  3300  04F2  00A2               	movwf	?___flmul+2
  3301  04F3  3000               	movlw	0
  3302  04F4  00A1               	movwf	?___flmul+1
  3303  04F5  3000               	movlw	0
  3304  04F6  00A0               	movwf	?___flmul
  3305  04F7  2FEB               	goto	l638
  3306  04F8                     l1517:
  3307  04F8  0820               	movf	___flmul@b,w
  3308  04F9  00A8               	movwf	??___flmul
  3309  04FA  0828               	movf	??___flmul,w
  3310  04FB  00F0               	movwf	__Umul8_16@multiplicand
  3311  04FC  0826               	movf	___flmul@a+2,w
  3312  04FD  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3313  0502  0871               	movf	?__Umul8_16+1,w
  3314  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0505  00B9               	movwf	___flmul@temp+1
  3317  0506  0870               	movf	?__Umul8_16,w
  3318  0507  00B8               	movwf	___flmul@temp
  3319  0508                     l1519:
  3320  0508  0838               	movf	___flmul@temp,w
  3321  0509  00A8               	movwf	??___flmul
  3322  050A  01A9               	clrf	??___flmul+1
  3323  050B  01AA               	clrf	??___flmul+2
  3324  050C  01AB               	clrf	??___flmul+3
  3325  050D  082B               	movf	??___flmul+3,w
  3326  050E  00B1               	movwf	___flmul@grs+3
  3327  050F  082A               	movf	??___flmul+2,w
  3328  0510  00B0               	movwf	___flmul@grs+2
  3329  0511  0829               	movf	??___flmul+1,w
  3330  0512  00AF               	movwf	___flmul@grs+1
  3331  0513  0828               	movf	??___flmul,w
  3332  0514  00AE               	movwf	___flmul@grs
  3333  0515                     l1521:
  3334  0515  0839               	movf	___flmul@temp+1,w
  3335  0516  00A8               	movwf	??___flmul
  3336  0517  01A9               	clrf	??___flmul+1
  3337  0518  01AA               	clrf	??___flmul+2
  3338  0519  01AB               	clrf	??___flmul+3
  3339  051A  082B               	movf	??___flmul+3,w
  3340  051B  00B7               	movwf	___flmul@prod+3
  3341  051C  082A               	movf	??___flmul+2,w
  3342  051D  00B6               	movwf	___flmul@prod+2
  3343  051E  0829               	movf	??___flmul+1,w
  3344  051F  00B5               	movwf	___flmul@prod+1
  3345  0520  0828               	movf	??___flmul,w
  3346  0521  00B4               	movwf	___flmul@prod
  3347  0522  0821               	movf	___flmul@b+1,w
  3348  0523  00A8               	movwf	??___flmul
  3349  0524  0828               	movf	??___flmul,w
  3350  0525  00F0               	movwf	__Umul8_16@multiplicand
  3351  0526  0825               	movf	___flmul@a+1,w
  3352  0527  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3353  052C  0871               	movf	?__Umul8_16+1,w
  3354  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3355  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3356  052F  00B9               	movwf	___flmul@temp+1
  3357  0530  0870               	movf	?__Umul8_16,w
  3358  0531  00B8               	movwf	___flmul@temp
  3359  0532                     l1523:
  3360  0532  0838               	movf	___flmul@temp,w
  3361  0533  00A8               	movwf	??___flmul
  3362  0534  01A9               	clrf	??___flmul+1
  3363  0535  01AA               	clrf	??___flmul+2
  3364  0536  01AB               	clrf	??___flmul+3
  3365  0537  0828               	movf	??___flmul,w
  3366  0538  07AE               	addwf	___flmul@grs,f
  3367  0539  0829               	movf	??___flmul+1,w
  3368  053A  1103               	clrz
  3369  053B  1803               	skipnc
  3370  053C  3E01               	addlw	1
  3371  053D  1903               	skipnz
  3372  053E  2D40               	goto	u1191
  3373  053F  07AF               	addwf	___flmul@grs+1,f
  3374  0540                     u1191:
  3375  0540  082A               	movf	??___flmul+2,w
  3376  0541  1103               	clrz
  3377  0542  1803               	skipnc
  3378  0543  3E01               	addlw	1
  3379  0544  1903               	skipnz
  3380  0545  2D47               	goto	u1192
  3381  0546  07B0               	addwf	___flmul@grs+2,f
  3382  0547                     u1192:
  3383  0547  082B               	movf	??___flmul+3,w
  3384  0548  1103               	clrz
  3385  0549  1803               	skipnc
  3386  054A  3E01               	addlw	1
  3387  054B  1903               	skipnz
  3388  054C  2D4E               	goto	u1193
  3389  054D  07B1               	addwf	___flmul@grs+3,f
  3390  054E                     u1193:
  3391  054E                     l1525:
  3392  054E  0839               	movf	___flmul@temp+1,w
  3393  054F  00A8               	movwf	??___flmul
  3394  0550  01A9               	clrf	??___flmul+1
  3395  0551  01AA               	clrf	??___flmul+2
  3396  0552  01AB               	clrf	??___flmul+3
  3397  0553  0828               	movf	??___flmul,w
  3398  0554  07B4               	addwf	___flmul@prod,f
  3399  0555  0829               	movf	??___flmul+1,w
  3400  0556  1103               	clrz
  3401  0557  1803               	skipnc
  3402  0558  3E01               	addlw	1
  3403  0559  1903               	skipnz
  3404  055A  2D5C               	goto	u1201
  3405  055B  07B5               	addwf	___flmul@prod+1,f
  3406  055C                     u1201:
  3407  055C  082A               	movf	??___flmul+2,w
  3408  055D  1103               	clrz
  3409  055E  1803               	skipnc
  3410  055F  3E01               	addlw	1
  3411  0560  1903               	skipnz
  3412  0561  2D63               	goto	u1202
  3413  0562  07B6               	addwf	___flmul@prod+2,f
  3414  0563                     u1202:
  3415  0563  082B               	movf	??___flmul+3,w
  3416  0564  1103               	clrz
  3417  0565  1803               	skipnc
  3418  0566  3E01               	addlw	1
  3419  0567  1903               	skipnz
  3420  0568  2D6A               	goto	u1203
  3421  0569  07B7               	addwf	___flmul@prod+3,f
  3422  056A                     u1203:
  3423  056A  0822               	movf	___flmul@b+2,w
  3424  056B  00A8               	movwf	??___flmul
  3425  056C  0828               	movf	??___flmul,w
  3426  056D  00F0               	movwf	__Umul8_16@multiplicand
  3427  056E  0824               	movf	___flmul@a,w
  3428  056F  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3429  0574  0871               	movf	?__Umul8_16+1,w
  3430  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0577  00B9               	movwf	___flmul@temp+1
  3433  0578  0870               	movf	?__Umul8_16,w
  3434  0579  00B8               	movwf	___flmul@temp
  3435  057A                     l1527:
  3436  057A  0838               	movf	___flmul@temp,w
  3437  057B  00A8               	movwf	??___flmul
  3438  057C  01A9               	clrf	??___flmul+1
  3439  057D  01AA               	clrf	??___flmul+2
  3440  057E  01AB               	clrf	??___flmul+3
  3441  057F  0828               	movf	??___flmul,w
  3442  0580  07AE               	addwf	___flmul@grs,f
  3443  0581  0829               	movf	??___flmul+1,w
  3444  0582  1103               	clrz
  3445  0583  1803               	skipnc
  3446  0584  3E01               	addlw	1
  3447  0585  1903               	skipnz
  3448  0586  2D88               	goto	u1211
  3449  0587  07AF               	addwf	___flmul@grs+1,f
  3450  0588                     u1211:
  3451  0588  082A               	movf	??___flmul+2,w
  3452  0589  1103               	clrz
  3453  058A  1803               	skipnc
  3454  058B  3E01               	addlw	1
  3455  058C  1903               	skipnz
  3456  058D  2D8F               	goto	u1212
  3457  058E  07B0               	addwf	___flmul@grs+2,f
  3458  058F                     u1212:
  3459  058F  082B               	movf	??___flmul+3,w
  3460  0590  1103               	clrz
  3461  0591  1803               	skipnc
  3462  0592  3E01               	addlw	1
  3463  0593  1903               	skipnz
  3464  0594  2D96               	goto	u1213
  3465  0595  07B1               	addwf	___flmul@grs+3,f
  3466  0596                     u1213:
  3467  0596                     l1529:
  3468  0596  0839               	movf	___flmul@temp+1,w
  3469  0597  00A8               	movwf	??___flmul
  3470  0598  01A9               	clrf	??___flmul+1
  3471  0599  01AA               	clrf	??___flmul+2
  3472  059A  01AB               	clrf	??___flmul+3
  3473  059B  0828               	movf	??___flmul,w
  3474  059C  07B4               	addwf	___flmul@prod,f
  3475  059D  0829               	movf	??___flmul+1,w
  3476  059E  1103               	clrz
  3477  059F  1803               	skipnc
  3478  05A0  3E01               	addlw	1
  3479  05A1  1903               	skipnz
  3480  05A2  2DA4               	goto	u1221
  3481  05A3  07B5               	addwf	___flmul@prod+1,f
  3482  05A4                     u1221:
  3483  05A4  082A               	movf	??___flmul+2,w
  3484  05A5  1103               	clrz
  3485  05A6  1803               	skipnc
  3486  05A7  3E01               	addlw	1
  3487  05A8  1903               	skipnz
  3488  05A9  2DAB               	goto	u1222
  3489  05AA  07B6               	addwf	___flmul@prod+2,f
  3490  05AB                     u1222:
  3491  05AB  082B               	movf	??___flmul+3,w
  3492  05AC  1103               	clrz
  3493  05AD  1803               	skipnc
  3494  05AE  3E01               	addlw	1
  3495  05AF  1903               	skipnz
  3496  05B0  2DB2               	goto	u1223
  3497  05B1  07B7               	addwf	___flmul@prod+3,f
  3498  05B2                     u1223:
  3499  05B2                     l1531:
  3500  05B2  3008               	movlw	8
  3501  05B3  00A8               	movwf	??___flmul
  3502  05B4                     u1235:
  3503  05B4  1003               	clrc
  3504  05B5  0DAE               	rlf	___flmul@grs,f
  3505  05B6  0DAF               	rlf	___flmul@grs+1,f
  3506  05B7  0DB0               	rlf	___flmul@grs+2,f
  3507  05B8  0DB1               	rlf	___flmul@grs+3,f
  3508  05B9  0BA8               	decfsz	??___flmul,f
  3509  05BA  2DB4               	goto	u1235
  3510  05BB                     l1533:
  3511  05BB  0821               	movf	___flmul@b+1,w
  3512  05BC  00A8               	movwf	??___flmul
  3513  05BD  0828               	movf	??___flmul,w
  3514  05BE  00F0               	movwf	__Umul8_16@multiplicand
  3515  05BF  0824               	movf	___flmul@a,w
  3516  05C0  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3517  05C5  0871               	movf	?__Umul8_16+1,w
  3518  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3519  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3520  05C8  00B9               	movwf	___flmul@temp+1
  3521  05C9  0870               	movf	?__Umul8_16,w
  3522  05CA  00B8               	movwf	___flmul@temp
  3523  05CB                     l1535:
  3524  05CB  0838               	movf	___flmul@temp,w
  3525  05CC  00A8               	movwf	??___flmul
  3526  05CD  0839               	movf	___flmul@temp+1,w
  3527  05CE  00A9               	movwf	??___flmul+1
  3528  05CF  01AA               	clrf	??___flmul+2
  3529  05D0  01AB               	clrf	??___flmul+3
  3530  05D1  0828               	movf	??___flmul,w
  3531  05D2  07AE               	addwf	___flmul@grs,f
  3532  05D3  0829               	movf	??___flmul+1,w
  3533  05D4  1103               	clrz
  3534  05D5  1803               	skipnc
  3535  05D6  3E01               	addlw	1
  3536  05D7  1903               	skipnz
  3537  05D8  2DDA               	goto	u1241
  3538  05D9  07AF               	addwf	___flmul@grs+1,f
  3539  05DA                     u1241:
  3540  05DA  082A               	movf	??___flmul+2,w
  3541  05DB  1103               	clrz
  3542  05DC  1803               	skipnc
  3543  05DD  3E01               	addlw	1
  3544  05DE  1903               	skipnz
  3545  05DF  2DE1               	goto	u1242
  3546  05E0  07B0               	addwf	___flmul@grs+2,f
  3547  05E1                     u1242:
  3548  05E1  082B               	movf	??___flmul+3,w
  3549  05E2  1103               	clrz
  3550  05E3  1803               	skipnc
  3551  05E4  3E01               	addlw	1
  3552  05E5  1903               	skipnz
  3553  05E6  2DE8               	goto	u1243
  3554  05E7  07B1               	addwf	___flmul@grs+3,f
  3555  05E8                     u1243:
  3556  05E8                     l1537:
  3557  05E8  0820               	movf	___flmul@b,w
  3558  05E9  00A8               	movwf	??___flmul
  3559  05EA  0828               	movf	??___flmul,w
  3560  05EB  00F0               	movwf	__Umul8_16@multiplicand
  3561  05EC  0825               	movf	___flmul@a+1,w
  3562  05ED  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3563  05F2  0871               	movf	?__Umul8_16+1,w
  3564  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3565  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3566  05F5  00B9               	movwf	___flmul@temp+1
  3567  05F6  0870               	movf	?__Umul8_16,w
  3568  05F7  00B8               	movwf	___flmul@temp
  3569  05F8                     l1539:
  3570  05F8  0838               	movf	___flmul@temp,w
  3571  05F9  00A8               	movwf	??___flmul
  3572  05FA  0839               	movf	___flmul@temp+1,w
  3573  05FB  00A9               	movwf	??___flmul+1
  3574  05FC  01AA               	clrf	??___flmul+2
  3575  05FD  01AB               	clrf	??___flmul+3
  3576  05FE  0828               	movf	??___flmul,w
  3577  05FF  07AE               	addwf	___flmul@grs,f
  3578  0600  0829               	movf	??___flmul+1,w
  3579  0601  1103               	clrz
  3580  0602  1803               	skipnc
  3581  0603  3E01               	addlw	1
  3582  0604  1903               	skipnz
  3583  0605  2E07               	goto	u1251
  3584  0606  07AF               	addwf	___flmul@grs+1,f
  3585  0607                     u1251:
  3586  0607  082A               	movf	??___flmul+2,w
  3587  0608  1103               	clrz
  3588  0609  1803               	skipnc
  3589  060A  3E01               	addlw	1
  3590  060B  1903               	skipnz
  3591  060C  2E0E               	goto	u1252
  3592  060D  07B0               	addwf	___flmul@grs+2,f
  3593  060E                     u1252:
  3594  060E  082B               	movf	??___flmul+3,w
  3595  060F  1103               	clrz
  3596  0610  1803               	skipnc
  3597  0611  3E01               	addlw	1
  3598  0612  1903               	skipnz
  3599  0613  2E15               	goto	u1253
  3600  0614  07B1               	addwf	___flmul@grs+3,f
  3601  0615                     u1253:
  3602  0615                     l1541:
  3603  0615  3008               	movlw	8
  3604  0616  00A8               	movwf	??___flmul
  3605  0617                     u1265:
  3606  0617  1003               	clrc
  3607  0618  0DAE               	rlf	___flmul@grs,f
  3608  0619  0DAF               	rlf	___flmul@grs+1,f
  3609  061A  0DB0               	rlf	___flmul@grs+2,f
  3610  061B  0DB1               	rlf	___flmul@grs+3,f
  3611  061C  0BA8               	decfsz	??___flmul,f
  3612  061D  2E17               	goto	u1265
  3613  061E  0820               	movf	___flmul@b,w
  3614  061F  00A8               	movwf	??___flmul
  3615  0620  0828               	movf	??___flmul,w
  3616  0621  00F0               	movwf	__Umul8_16@multiplicand
  3617  0622  0824               	movf	___flmul@a,w
  3618  0623  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3619  0628  0871               	movf	?__Umul8_16+1,w
  3620  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3621  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3622  062B  00B9               	movwf	___flmul@temp+1
  3623  062C  0870               	movf	?__Umul8_16,w
  3624  062D  00B8               	movwf	___flmul@temp
  3625  062E                     l1543:
  3626  062E  0838               	movf	___flmul@temp,w
  3627  062F  00A8               	movwf	??___flmul
  3628  0630  0839               	movf	___flmul@temp+1,w
  3629  0631  00A9               	movwf	??___flmul+1
  3630  0632  01AA               	clrf	??___flmul+2
  3631  0633  01AB               	clrf	??___flmul+3
  3632  0634  0828               	movf	??___flmul,w
  3633  0635  07AE               	addwf	___flmul@grs,f
  3634  0636  0829               	movf	??___flmul+1,w
  3635  0637  1103               	clrz
  3636  0638  1803               	skipnc
  3637  0639  3E01               	addlw	1
  3638  063A  1903               	skipnz
  3639  063B  2E3D               	goto	u1271
  3640  063C  07AF               	addwf	___flmul@grs+1,f
  3641  063D                     u1271:
  3642  063D  082A               	movf	??___flmul+2,w
  3643  063E  1103               	clrz
  3644  063F  1803               	skipnc
  3645  0640  3E01               	addlw	1
  3646  0641  1903               	skipnz
  3647  0642  2E44               	goto	u1272
  3648  0643  07B0               	addwf	___flmul@grs+2,f
  3649  0644                     u1272:
  3650  0644  082B               	movf	??___flmul+3,w
  3651  0645  1103               	clrz
  3652  0646  1803               	skipnc
  3653  0647  3E01               	addlw	1
  3654  0648  1903               	skipnz
  3655  0649  2E4B               	goto	u1273
  3656  064A  07B1               	addwf	___flmul@grs+3,f
  3657  064B                     u1273:
  3658  064B                     l1545:
  3659  064B  0821               	movf	___flmul@b+1,w
  3660  064C  00A8               	movwf	??___flmul
  3661  064D  0828               	movf	??___flmul,w
  3662  064E  00F0               	movwf	__Umul8_16@multiplicand
  3663  064F  0826               	movf	___flmul@a+2,w
  3664  0650  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3665  0655  0871               	movf	?__Umul8_16+1,w
  3666  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0658  00B9               	movwf	___flmul@temp+1
  3669  0659  0870               	movf	?__Umul8_16,w
  3670  065A  00B8               	movwf	___flmul@temp
  3671  065B  0838               	movf	___flmul@temp,w
  3672  065C  00A8               	movwf	??___flmul
  3673  065D  0839               	movf	___flmul@temp+1,w
  3674  065E  00A9               	movwf	??___flmul+1
  3675  065F  01AA               	clrf	??___flmul+2
  3676  0660  01AB               	clrf	??___flmul+3
  3677  0661  0828               	movf	??___flmul,w
  3678  0662  07B4               	addwf	___flmul@prod,f
  3679  0663  0829               	movf	??___flmul+1,w
  3680  0664  1103               	clrz
  3681  0665  1803               	skipnc
  3682  0666  3E01               	addlw	1
  3683  0667  1903               	skipnz
  3684  0668  2E6A               	goto	u1281
  3685  0669  07B5               	addwf	___flmul@prod+1,f
  3686  066A                     u1281:
  3687  066A  082A               	movf	??___flmul+2,w
  3688  066B  1103               	clrz
  3689  066C  1803               	skipnc
  3690  066D  3E01               	addlw	1
  3691  066E  1903               	skipnz
  3692  066F  2E71               	goto	u1282
  3693  0670  07B6               	addwf	___flmul@prod+2,f
  3694  0671                     u1282:
  3695  0671  082B               	movf	??___flmul+3,w
  3696  0672  1103               	clrz
  3697  0673  1803               	skipnc
  3698  0674  3E01               	addlw	1
  3699  0675  1903               	skipnz
  3700  0676  2E78               	goto	u1283
  3701  0677  07B7               	addwf	___flmul@prod+3,f
  3702  0678                     u1283:
  3703  0678                     l1547:
  3704  0678  0822               	movf	___flmul@b+2,w
  3705  0679  00A8               	movwf	??___flmul
  3706  067A  0828               	movf	??___flmul,w
  3707  067B  00F0               	movwf	__Umul8_16@multiplicand
  3708  067C  0825               	movf	___flmul@a+1,w
  3709  067D  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3710  0682  0871               	movf	?__Umul8_16+1,w
  3711  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0685  00B9               	movwf	___flmul@temp+1
  3714  0686  0870               	movf	?__Umul8_16,w
  3715  0687  00B8               	movwf	___flmul@temp
  3716  0688                     l1549:
  3717  0688  0838               	movf	___flmul@temp,w
  3718  0689  00A8               	movwf	??___flmul
  3719  068A  0839               	movf	___flmul@temp+1,w
  3720  068B  00A9               	movwf	??___flmul+1
  3721  068C  01AA               	clrf	??___flmul+2
  3722  068D  01AB               	clrf	??___flmul+3
  3723  068E  0828               	movf	??___flmul,w
  3724  068F  07B4               	addwf	___flmul@prod,f
  3725  0690  0829               	movf	??___flmul+1,w
  3726  0691  1103               	clrz
  3727  0692  1803               	skipnc
  3728  0693  3E01               	addlw	1
  3729  0694  1903               	skipnz
  3730  0695  2E97               	goto	u1291
  3731  0696  07B5               	addwf	___flmul@prod+1,f
  3732  0697                     u1291:
  3733  0697  082A               	movf	??___flmul+2,w
  3734  0698  1103               	clrz
  3735  0699  1803               	skipnc
  3736  069A  3E01               	addlw	1
  3737  069B  1903               	skipnz
  3738  069C  2E9E               	goto	u1292
  3739  069D  07B6               	addwf	___flmul@prod+2,f
  3740  069E                     u1292:
  3741  069E  082B               	movf	??___flmul+3,w
  3742  069F  1103               	clrz
  3743  06A0  1803               	skipnc
  3744  06A1  3E01               	addlw	1
  3745  06A2  1903               	skipnz
  3746  06A3  2EA5               	goto	u1293
  3747  06A4  07B7               	addwf	___flmul@prod+3,f
  3748  06A5                     u1293:
  3749  06A5  0822               	movf	___flmul@b+2,w
  3750  06A6  00A8               	movwf	??___flmul
  3751  06A7  0828               	movf	??___flmul,w
  3752  06A8  00F0               	movwf	__Umul8_16@multiplicand
  3753  06A9  0826               	movf	___flmul@a+2,w
  3754  06AA  120A  158A  2719  120A  118A  	fcall	__Umul8_16
  3755  06AF  0871               	movf	?__Umul8_16+1,w
  3756  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3757  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3758  06B2  00B9               	movwf	___flmul@temp+1
  3759  06B3  0870               	movf	?__Umul8_16,w
  3760  06B4  00B8               	movwf	___flmul@temp
  3761  06B5                     l1551:
  3762  06B5  0838               	movf	___flmul@temp,w
  3763  06B6  00A8               	movwf	??___flmul
  3764  06B7  0839               	movf	___flmul@temp+1,w
  3765  06B8  00A9               	movwf	??___flmul+1
  3766  06B9  01AA               	clrf	??___flmul+2
  3767  06BA  01AB               	clrf	??___flmul+3
  3768  06BB  3008               	movlw	8
  3769  06BC                     u1305:
  3770  06BC  1003               	clrc
  3771  06BD  0DA8               	rlf	??___flmul,f
  3772  06BE  0DA9               	rlf	??___flmul+1,f
  3773  06BF  0DAA               	rlf	??___flmul+2,f
  3774  06C0  0DAB               	rlf	??___flmul+3,f
  3775  06C1                     u1300:
  3776  06C1  3EFF               	addlw	-1
  3777  06C2  1D03               	skipz
  3778  06C3  2EBC               	goto	u1305
  3779  06C4  0828               	movf	??___flmul,w
  3780  06C5  07B4               	addwf	___flmul@prod,f
  3781  06C6  0829               	movf	??___flmul+1,w
  3782  06C7  1103               	clrz
  3783  06C8  1803               	skipnc
  3784  06C9  3E01               	addlw	1
  3785  06CA  1903               	skipnz
  3786  06CB  2ECD               	goto	u1311
  3787  06CC  07B5               	addwf	___flmul@prod+1,f
  3788  06CD                     u1311:
  3789  06CD  082A               	movf	??___flmul+2,w
  3790  06CE  1103               	clrz
  3791  06CF  1803               	skipnc
  3792  06D0  3E01               	addlw	1
  3793  06D1  1903               	skipnz
  3794  06D2  2ED4               	goto	u1312
  3795  06D3  07B6               	addwf	___flmul@prod+2,f
  3796  06D4                     u1312:
  3797  06D4  082B               	movf	??___flmul+3,w
  3798  06D5  1103               	clrz
  3799  06D6  1803               	skipnc
  3800  06D7  3E01               	addlw	1
  3801  06D8  1903               	skipnz
  3802  06D9  2EDB               	goto	u1313
  3803  06DA  07B7               	addwf	___flmul@prod+3,f
  3804  06DB                     u1313:
  3805  06DB                     l1553:
  3806  06DB  082E               	movf	___flmul@grs,w
  3807  06DC  00A8               	movwf	??___flmul
  3808  06DD  082F               	movf	___flmul@grs+1,w
  3809  06DE  00A9               	movwf	??___flmul+1
  3810  06DF  0830               	movf	___flmul@grs+2,w
  3811  06E0  00AA               	movwf	??___flmul+2
  3812  06E1  0831               	movf	___flmul@grs+3,w
  3813  06E2  00AB               	movwf	??___flmul+3
  3814  06E3  3018               	movlw	24
  3815  06E4                     u1325:
  3816  06E4  1003               	clrc
  3817  06E5  0CAB               	rrf	??___flmul+3,f
  3818  06E6  0CAA               	rrf	??___flmul+2,f
  3819  06E7  0CA9               	rrf	??___flmul+1,f
  3820  06E8  0CA8               	rrf	??___flmul,f
  3821  06E9                     u1320:
  3822  06E9  3EFF               	addlw	-1
  3823  06EA  1D03               	skipz
  3824  06EB  2EE4               	goto	u1325
  3825  06EC  0828               	movf	??___flmul,w
  3826  06ED  07B4               	addwf	___flmul@prod,f
  3827  06EE  0829               	movf	??___flmul+1,w
  3828  06EF  1103               	clrz
  3829  06F0  1803               	skipnc
  3830  06F1  3E01               	addlw	1
  3831  06F2  1903               	skipnz
  3832  06F3  2EF5               	goto	u1331
  3833  06F4  07B5               	addwf	___flmul@prod+1,f
  3834  06F5                     u1331:
  3835  06F5  082A               	movf	??___flmul+2,w
  3836  06F6  1103               	clrz
  3837  06F7  1803               	skipnc
  3838  06F8  3E01               	addlw	1
  3839  06F9  1903               	skipnz
  3840  06FA  2EFC               	goto	u1332
  3841  06FB  07B6               	addwf	___flmul@prod+2,f
  3842  06FC                     u1332:
  3843  06FC  082B               	movf	??___flmul+3,w
  3844  06FD  1103               	clrz
  3845  06FE  1803               	skipnc
  3846  06FF  3E01               	addlw	1
  3847  0700  1903               	skipnz
  3848  0701  2F03               	goto	u1333
  3849  0702  07B7               	addwf	___flmul@prod+3,f
  3850  0703                     u1333:
  3851  0703                     l1555:
  3852  0703  3008               	movlw	8
  3853  0704  00A8               	movwf	??___flmul
  3854  0705                     u1345:
  3855  0705  1003               	clrc
  3856  0706  0DAE               	rlf	___flmul@grs,f
  3857  0707  0DAF               	rlf	___flmul@grs+1,f
  3858  0708  0DB0               	rlf	___flmul@grs+2,f
  3859  0709  0DB1               	rlf	___flmul@grs+3,f
  3860  070A  0BA8               	decfsz	??___flmul,f
  3861  070B  2F05               	goto	u1345
  3862  070C                     l1557:
  3863  070C  0833               	movf	___flmul@bexp,w
  3864  070D  0732               	addwf	___flmul@aexp,w
  3865  070E  00A8               	movwf	??___flmul
  3866  070F  01A9               	clrf	??___flmul+1
  3867  0710  0DA9               	rlf	??___flmul+1,f
  3868  0711  0828               	movf	??___flmul,w
  3869  0712  3E82               	addlw	130
  3870  0713  00B8               	movwf	___flmul@temp
  3871  0714  0829               	movf	??___flmul+1,w
  3872  0715  1803               	skipnc
  3873  0716  3E01               	addlw	1
  3874  0717  3EFF               	addlw	255
  3875  0718  00B9               	movwf	___flmul@temp+1
  3876  0719  2F37               	goto	l1569
  3877  071A                     l1559:
  3878  071A  3001               	movlw	1
  3879  071B  00A8               	movwf	??___flmul
  3880  071C                     u1355:
  3881  071C  1003               	clrc
  3882  071D  0DB4               	rlf	___flmul@prod,f
  3883  071E  0DB5               	rlf	___flmul@prod+1,f
  3884  071F  0DB6               	rlf	___flmul@prod+2,f
  3885  0720  0DB7               	rlf	___flmul@prod+3,f
  3886  0721  0BA8               	decfsz	??___flmul,f
  3887  0722  2F1C               	goto	u1355
  3888  0723                     l1561:
  3889  0723  1FB1               	btfss	___flmul@grs+3,7
  3890  0724  2F26               	goto	u1361
  3891  0725  2F27               	goto	u1360
  3892  0726                     u1361:
  3893  0726  2F28               	goto	l1565
  3894  0727                     u1360:
  3895  0727                     l1563:
  3896  0727  1434               	bsf	___flmul@prod,0
  3897  0728                     l1565:
  3898  0728  3001               	movlw	1
  3899  0729  00A8               	movwf	??___flmul
  3900  072A                     u1375:
  3901  072A  1003               	clrc
  3902  072B  0DAE               	rlf	___flmul@grs,f
  3903  072C  0DAF               	rlf	___flmul@grs+1,f
  3904  072D  0DB0               	rlf	___flmul@grs+2,f
  3905  072E  0DB1               	rlf	___flmul@grs+3,f
  3906  072F  0BA8               	decfsz	??___flmul,f
  3907  0730  2F2A               	goto	u1375
  3908  0731                     l1567:
  3909  0731  30FF               	movlw	255
  3910  0732  07B8               	addwf	___flmul@temp,f
  3911  0733  1803               	skipnc
  3912  0734  0AB9               	incf	___flmul@temp+1,f
  3913  0735  30FF               	movlw	255
  3914  0736  07B9               	addwf	___flmul@temp+1,f
  3915  0737                     l1569:
  3916  0737  1FB6               	btfss	___flmul@prod+2,7
  3917  0738  2F3A               	goto	u1381
  3918  0739  2F3B               	goto	u1380
  3919  073A                     u1381:
  3920  073A  2F1A               	goto	l1559
  3921  073B                     u1380:
  3922  073B                     l1571:
  3923  073B  01B2               	clrf	___flmul@aexp
  3924  073C                     l1573:
  3925  073C  1FB1               	btfss	___flmul@grs+3,7
  3926  073D  2F3F               	goto	u1391
  3927  073E  2F40               	goto	u1390
  3928  073F                     u1391:
  3929  073F  2F5C               	goto	l1581
  3930  0740                     u1390:
  3931  0740                     l1575:
  3932  0740  30FF               	movlw	255
  3933  0741  052E               	andwf	___flmul@grs,w
  3934  0742  00A8               	movwf	??___flmul
  3935  0743  30FF               	movlw	255
  3936  0744  052F               	andwf	___flmul@grs+1,w
  3937  0745  00A9               	movwf	??___flmul+1
  3938  0746  30FF               	movlw	255
  3939  0747  0530               	andwf	___flmul@grs+2,w
  3940  0748  00AA               	movwf	??___flmul+2
  3941  0749  307F               	movlw	127
  3942  074A  0531               	andwf	___flmul@grs+3,w
  3943  074B  00AB               	movwf	??___flmul+3
  3944  074C  082B               	movf	??___flmul+3,w
  3945  074D  042A               	iorwf	??___flmul+2,w
  3946  074E  0429               	iorwf	??___flmul+1,w
  3947  074F  0428               	iorwf	??___flmul,w
  3948  0750  1903               	skipnz
  3949  0751  2F53               	goto	u1401
  3950  0752  2F54               	goto	u1400
  3951  0753                     u1401:
  3952  0753  2F57               	goto	l644
  3953  0754                     u1400:
  3954  0754                     l1577:
  3955  0754  01B2               	clrf	___flmul@aexp
  3956  0755  0AB2               	incf	___flmul@aexp,f
  3957  0756  2F5C               	goto	l1581
  3958  0757                     l644:
  3959  0757  1C34               	btfss	___flmul@prod,0
  3960  0758  2F5A               	goto	u1411
  3961  0759  2F5B               	goto	u1410
  3962  075A                     u1411:
  3963  075A  2F5C               	goto	l1581
  3964  075B                     u1410:
  3965  075B  2F54               	goto	l1577
  3966  075C                     l1581:
  3967  075C  0832               	movf	___flmul@aexp,w
  3968  075D  1903               	btfsc	3,2
  3969  075E  2F60               	goto	u1421
  3970  075F  2F61               	goto	u1420
  3971  0760                     u1421:
  3972  0760  2F92               	goto	l1591
  3973  0761                     u1420:
  3974  0761                     l1583:
  3975  0761  3001               	movlw	1
  3976  0762  07B4               	addwf	___flmul@prod,f
  3977  0763  3000               	movlw	0
  3978  0764  1803               	skipnc
  3979  0765  3001               	movlw	1
  3980  0766  07B5               	addwf	___flmul@prod+1,f
  3981  0767  3000               	movlw	0
  3982  0768  1803               	skipnc
  3983  0769  3001               	movlw	1
  3984  076A  07B6               	addwf	___flmul@prod+2,f
  3985  076B  3000               	movlw	0
  3986  076C  1803               	skipnc
  3987  076D  3001               	movlw	1
  3988  076E  07B7               	addwf	___flmul@prod+3,f
  3989  076F                     l1585:
  3990  076F  1C37               	btfss	___flmul@prod+3,0
  3991  0770  2F72               	goto	u1431
  3992  0771  2F73               	goto	u1430
  3993  0772                     u1431:
  3994  0772  2F92               	goto	l1591
  3995  0773                     u1430:
  3996  0773                     l1587:
  3997  0773  0834               	movf	___flmul@prod,w
  3998  0774  00A8               	movwf	??___flmul
  3999  0775  0835               	movf	___flmul@prod+1,w
  4000  0776  00A9               	movwf	??___flmul+1
  4001  0777  0836               	movf	___flmul@prod+2,w
  4002  0778  00AA               	movwf	??___flmul+2
  4003  0779  0837               	movf	___flmul@prod+3,w
  4004  077A  00AB               	movwf	??___flmul+3
  4005  077B  3001               	movlw	1
  4006  077C  00AC               	movwf	??___flmul+4
  4007  077D                     u1445:
  4008  077D  0D2B               	rlf	??___flmul+3,w
  4009  077E  0CAB               	rrf	??___flmul+3,f
  4010  077F  0CAA               	rrf	??___flmul+2,f
  4011  0780  0CA9               	rrf	??___flmul+1,f
  4012  0781  0CA8               	rrf	??___flmul,f
  4013  0782                     u1440:
  4014  0782  0BAC               	decfsz	??___flmul+4,f
  4015  0783  2F7D               	goto	u1445
  4016  0784  082B               	movf	??___flmul+3,w
  4017  0785  00B7               	movwf	___flmul@prod+3
  4018  0786  082A               	movf	??___flmul+2,w
  4019  0787  00B6               	movwf	___flmul@prod+2
  4020  0788  0829               	movf	??___flmul+1,w
  4021  0789  00B5               	movwf	___flmul@prod+1
  4022  078A  0828               	movf	??___flmul,w
  4023  078B  00B4               	movwf	___flmul@prod
  4024  078C                     l1589:
  4025  078C  3001               	movlw	1
  4026  078D  07B8               	addwf	___flmul@temp,f
  4027  078E  1803               	skipnc
  4028  078F  0AB9               	incf	___flmul@temp+1,f
  4029  0790  3000               	movlw	0
  4030  0791  07B9               	addwf	___flmul@temp+1,f
  4031  0792                     l1591:
  4032  0792  0839               	movf	___flmul@temp+1,w
  4033  0793  3A80               	xorlw	128
  4034  0794  00FF               	movwf	btemp+1
  4035  0795  3080               	movlw	128
  4036  0796  027F               	subwf	btemp+1,w
  4037  0797  1D03               	skipz
  4038  0798  2F9B               	goto	u1455
  4039  0799  30FF               	movlw	255
  4040  079A  0238               	subwf	___flmul@temp,w
  4041  079B                     u1455:
  4042  079B  1C03               	skipc
  4043  079C  2F9E               	goto	u1451
  4044  079D  2F9F               	goto	u1450
  4045  079E                     u1451:
  4046  079E  2FAA               	goto	l1595
  4047  079F                     u1450:
  4048  079F                     l1593:
  4049  079F  307F               	movlw	127
  4050  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4051  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4052  07A2  00B7               	movwf	___flmul@prod+3
  4053  07A3  3080               	movlw	128
  4054  07A4  00B6               	movwf	___flmul@prod+2
  4055  07A5  3000               	movlw	0
  4056  07A6  00B5               	movwf	___flmul@prod+1
  4057  07A7  3000               	movlw	0
  4058  07A8  00B4               	movwf	___flmul@prod
  4059  07A9  2FDF               	goto	l650
  4060  07AA                     l1595:
  4061  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4062  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4063  07AC  0839               	movf	___flmul@temp+1,w
  4064  07AD  3A80               	xorlw	128
  4065  07AE  00FF               	movwf	btemp+1
  4066  07AF  3080               	movlw	128
  4067  07B0  027F               	subwf	btemp+1,w
  4068  07B1  1D03               	skipz
  4069  07B2  2FB5               	goto	u1465
  4070  07B3  3001               	movlw	1
  4071  07B4  0238               	subwf	___flmul@temp,w
  4072  07B5                     u1465:
  4073  07B5  1803               	skipnc
  4074  07B6  2FB8               	goto	u1461
  4075  07B7  2FB9               	goto	u1460
  4076  07B8                     u1461:
  4077  07B8  2FC5               	goto	l1601
  4078  07B9                     u1460:
  4079  07B9                     l1597:
  4080  07B9  3000               	movlw	0
  4081  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4082  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4083  07BC  00B7               	movwf	___flmul@prod+3
  4084  07BD  3000               	movlw	0
  4085  07BE  00B6               	movwf	___flmul@prod+2
  4086  07BF  3000               	movlw	0
  4087  07C0  00B5               	movwf	___flmul@prod+1
  4088  07C1  3000               	movlw	0
  4089  07C2  00B4               	movwf	___flmul@prod
  4090  07C3                     l1599:
  4091  07C3  01AD               	clrf	___flmul@sign
  4092  07C4  2FDF               	goto	l650
  4093  07C5                     l1601:
  4094  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4095  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4096  07C7  0838               	movf	___flmul@temp,w
  4097  07C8  00A8               	movwf	??___flmul
  4098  07C9  0828               	movf	??___flmul,w
  4099  07CA  00B3               	movwf	___flmul@bexp
  4100  07CB  30FF               	movlw	255
  4101  07CC  05B4               	andwf	___flmul@prod,f
  4102  07CD  30FF               	movlw	255
  4103  07CE  05B5               	andwf	___flmul@prod+1,f
  4104  07CF  307F               	movlw	127
  4105  07D0  05B6               	andwf	___flmul@prod+2,f
  4106  07D1  3000               	movlw	0
  4107  07D2  05B7               	andwf	___flmul@prod+3,f
  4108  07D3                     l1603:
  4109  07D3  1C33               	btfss	___flmul@bexp,0
  4110  07D4  2FD6               	goto	u1471
  4111  07D5  2FD7               	goto	u1470
  4112  07D6                     u1471:
  4113  07D6  2FD8               	goto	l1607
  4114  07D7                     u1470:
  4115  07D7                     l1605:
  4116  07D7  17B6               	bsf	___flmul@prod+2,7
  4117  07D8                     l1607:
  4118  07D8  0833               	movf	___flmul@bexp,w
  4119  07D9  00A8               	movwf	??___flmul
  4120  07DA  1003               	clrc
  4121  07DB  0C28               	rrf	??___flmul,w
  4122  07DC  00A9               	movwf	??___flmul+1
  4123  07DD  0829               	movf	??___flmul+1,w
  4124  07DE  00B7               	movwf	___flmul@prod+3
  4125  07DF                     l650:
  4126  07DF  082D               	movf	___flmul@sign,w
  4127  07E0  00A8               	movwf	??___flmul
  4128  07E1  0828               	movf	??___flmul,w
  4129  07E2  04B7               	iorwf	___flmul@prod+3,f
  4130  07E3                     l1609:
  4131  07E3  0837               	movf	___flmul@prod+3,w
  4132  07E4  00A3               	movwf	?___flmul+3
  4133  07E5  0836               	movf	___flmul@prod+2,w
  4134  07E6  00A2               	movwf	?___flmul+2
  4135  07E7  0835               	movf	___flmul@prod+1,w
  4136  07E8  00A1               	movwf	?___flmul+1
  4137  07E9  0834               	movf	___flmul@prod,w
  4138  07EA  00A0               	movwf	?___flmul
  4139  07EB                     l638:
  4140  07EB  0008               	return
  4141  07EC                     __end_of___flmul:
  4142                           
  4143                           	psect	text16
  4144  0F19                     __ptext16:	
  4145 ;; *************** function __Umul8_16 *****************
  4146 ;; Defined at:
  4147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  multiplier      1    wreg     unsigned char 
  4150 ;;  multiplicand    1    0[COMMON] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  multiplier      1    8[COMMON] unsigned char 
  4153 ;;  word_mpld       2    6[COMMON] unsigned int 
  4154 ;;  product         2    4[COMMON] unsigned int 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  2    0[COMMON] unsigned int 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         2       0       0       0       0
  4165 ;;      Locals:         5       0       0       0       0
  4166 ;;      Temps:          2       0       0       0       0
  4167 ;;      Totals:         9       0       0       0       0
  4168 ;;Total ram usage:        9 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		___flmul
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function __Umul8_16
  4179  0F19                     __Umul8_16:
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4183                           ;__Umul8_16@multiplier stored from wreg
  4184  0F19  00F8               	movwf	__Umul8_16@multiplier
  4185  0F1A                     l1337:
  4186  0F1A  01F4               	clrf	__Umul8_16@product
  4187  0F1B  01F5               	clrf	__Umul8_16@product+1
  4188  0F1C                     l1339:
  4189  0F1C  0870               	movf	__Umul8_16@multiplicand,w
  4190  0F1D  00F2               	movwf	??__Umul8_16
  4191  0F1E  01F3               	clrf	??__Umul8_16+1
  4192  0F1F  0872               	movf	??__Umul8_16,w
  4193  0F20  00F6               	movwf	__Umul8_16@word_mpld
  4194  0F21  0873               	movf	??__Umul8_16+1,w
  4195  0F22  00F7               	movwf	__Umul8_16@word_mpld+1
  4196  0F23                     l1341:
  4197  0F23  1C78               	btfss	__Umul8_16@multiplier,0
  4198  0F24  2F26               	goto	u981
  4199  0F25  2F27               	goto	u980
  4200  0F26                     u981:
  4201  0F26  2F2D               	goto	l657
  4202  0F27                     u980:
  4203  0F27                     l1343:
  4204  0F27  0876               	movf	__Umul8_16@word_mpld,w
  4205  0F28  07F4               	addwf	__Umul8_16@product,f
  4206  0F29  1803               	skipnc
  4207  0F2A  0AF5               	incf	__Umul8_16@product+1,f
  4208  0F2B  0877               	movf	__Umul8_16@word_mpld+1,w
  4209  0F2C  07F5               	addwf	__Umul8_16@product+1,f
  4210  0F2D                     l657:
  4211  0F2D  3001               	movlw	1
  4212  0F2E                     u995:
  4213  0F2E  1003               	clrc
  4214  0F2F  0DF6               	rlf	__Umul8_16@word_mpld,f
  4215  0F30  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4216  0F31  3EFF               	addlw	-1
  4217  0F32  1D03               	skipz
  4218  0F33  2F2E               	goto	u995
  4219  0F34  1003               	clrc
  4220  0F35  0CF8               	rrf	__Umul8_16@multiplier,f
  4221  0F36                     l1345:
  4222  0F36  0878               	movf	__Umul8_16@multiplier,w
  4223  0F37  1D03               	btfss	3,2
  4224  0F38  2F3A               	goto	u1001
  4225  0F39  2F3B               	goto	u1000
  4226  0F3A                     u1001:
  4227  0F3A  2F23               	goto	l1341
  4228  0F3B                     u1000:
  4229  0F3B                     l1347:
  4230  0F3B  0875               	movf	__Umul8_16@product+1,w
  4231  0F3C  00F1               	movwf	?__Umul8_16+1
  4232  0F3D  0874               	movf	__Umul8_16@product,w
  4233  0F3E  00F0               	movwf	?__Umul8_16
  4234  0F3F                     l659:
  4235  0F3F  0008               	return
  4236  0F40                     __end_of__Umul8_16:
  4237                           
  4238                           	psect	text17
  4239  0017                     __ptext17:	
  4240 ;; *************** function _Lcd_Init *****************
  4241 ;; Defined at:
  4242 ;;		line 36 in file "lcd.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          3       0       0       0       0
  4259 ;;      Totals:         3       0       0       0       0
  4260 ;;Total ram usage:        3 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    2
  4263 ;; This function calls:
  4264 ;;		_Lcd_Cmd
  4265 ;;		_Lcd_Port
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Lcd_Init
  4273  0017                     _Lcd_Init:
  4274  0017                     l1371:	
  4275                           ;incstack = 0
  4276                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4277                           
  4278                           
  4279                           ;lcd.c: 37:     _delay((unsigned long)((200)*(8000000/4000.0)));
  4280  0017  3003               	movlw	3
  4281  0018  00F6               	movwf	??_Lcd_Init+2
  4282  0019  3008               	movlw	8
  4283  001A  00F5               	movwf	??_Lcd_Init+1
  4284  001B  3077               	movlw	119
  4285  001C  00F4               	movwf	??_Lcd_Init
  4286  001D                     u1707:
  4287  001D  0BF4               	decfsz	??_Lcd_Init,f
  4288  001E  281D               	goto	u1707
  4289  001F  0BF5               	decfsz	??_Lcd_Init+1,f
  4290  0020  281D               	goto	u1707
  4291  0021  0BF6               	decfsz	??_Lcd_Init+2,f
  4292  0022  281D               	goto	u1707
  4293  0023                     l1373:
  4294                           
  4295                           ;lcd.c: 38:     Lcd_Port(0x00);
  4296  0023  3000               	movlw	0
  4297  0024  120A  158A  2620  120A  118A  	fcall	_Lcd_Port
  4298  0029                     l1375:
  4299                           
  4300                           ;lcd.c: 39:     _delay((unsigned long)((25)*(8000000/4000.0)));
  4301  0029  3041               	movlw	65
  4302  002A  00F5               	movwf	??_Lcd_Init+1
  4303  002B  30EE               	movlw	238
  4304  002C  00F4               	movwf	??_Lcd_Init
  4305  002D                     u1717:
  4306  002D  0BF4               	decfsz	??_Lcd_Init,f
  4307  002E  282D               	goto	u1717
  4308  002F  0BF5               	decfsz	??_Lcd_Init+1,f
  4309  0030  282D               	goto	u1717
  4310  0031  0000               	nop
  4311                           
  4312                           ;lcd.c: 40:     Lcd_Cmd(0x30);
  4313  0032  3030               	movlw	48
  4314  0033  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4315  0038                     l1377:
  4316                           
  4317                           ;lcd.c: 41:     _delay((unsigned long)((7)*(8000000/4000.0)));
  4318  0038  3013               	movlw	19
  4319  0039  00F5               	movwf	??_Lcd_Init+1
  4320  003A  302D               	movlw	45
  4321  003B  00F4               	movwf	??_Lcd_Init
  4322  003C                     u1727:
  4323  003C  0BF4               	decfsz	??_Lcd_Init,f
  4324  003D  283C               	goto	u1727
  4325  003E  0BF5               	decfsz	??_Lcd_Init+1,f
  4326  003F  283C               	goto	u1727
  4327  0040                     l1379:
  4328                           
  4329                           ;lcd.c: 42:     Lcd_Cmd(0x30);
  4330  0040  3030               	movlw	48
  4331  0041  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4332                           
  4333                           ;lcd.c: 43:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4334  0046  3085               	movlw	133
  4335  0047  00F4               	movwf	??_Lcd_Init
  4336  0048                     u1737:
  4337  0048  0BF4               	decfsz	??_Lcd_Init,f
  4338  0049  2848               	goto	u1737
  4339  004A                     l1381:
  4340                           
  4341                           ;lcd.c: 44:     Lcd_Cmd(0x30);
  4342  004A  3030               	movlw	48
  4343  004B  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4344  0050                     l1383:
  4345                           
  4346                           ;lcd.c: 45:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4347  0050  3085               	movlw	133
  4348  0051  00F4               	movwf	??_Lcd_Init
  4349  0052                     u1747:
  4350  0052  0BF4               	decfsz	??_Lcd_Init,f
  4351  0053  2852               	goto	u1747
  4352                           
  4353                           ;lcd.c: 47:     Lcd_Cmd(0x38);
  4354  0054  3038               	movlw	56
  4355  0055  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4356                           
  4357                           ;lcd.c: 48:     Lcd_Cmd(0x10);
  4358  005A  3010               	movlw	16
  4359  005B  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4360                           
  4361                           ;lcd.c: 49:     Lcd_Cmd(0x01);
  4362  0060  3001               	movlw	1
  4363  0061  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4364                           
  4365                           ;lcd.c: 50:     Lcd_Cmd(0x06);
  4366  0066  3006               	movlw	6
  4367  0067  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4368                           
  4369                           ;lcd.c: 51:     Lcd_Cmd(0x0C);
  4370  006C  300C               	movlw	12
  4371  006D  120A  158A  2675  120A  118A  	fcall	_Lcd_Cmd
  4372  0072                     l148:
  4373  0072  0008               	return
  4374  0073                     __end_of_Lcd_Init:
  4375                           
  4376                           	psect	text18
  4377  0E3C                     __ptext18:	
  4378 ;; *************** function _Lcd_Clear *****************
  4379 ;; Defined at:
  4380 ;;		line 20 in file "lcd.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		_Lcd_Cmd
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _Lcd_Clear
  4410  0E3C                     _Lcd_Clear:
  4411  0E3C                     l1385:	
  4412                           ;incstack = 0
  4413                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4414                           
  4415                           
  4416                           ;lcd.c: 21:     Lcd_Cmd(0);
  4417  0E3C  3000               	movlw	0
  4418  0E3D  120A  158A  2675  120A  158A  	fcall	_Lcd_Cmd
  4419                           
  4420                           ;lcd.c: 22:     Lcd_Cmd(1);
  4421  0E42  3001               	movlw	1
  4422  0E43  120A  158A  2675  120A  158A  	fcall	_Lcd_Cmd
  4423  0E48                     l139:
  4424  0E48  0008               	return
  4425  0E49                     __end_of_Lcd_Clear:
  4426                           
  4427                           	psect	text19
  4428  0E75                     __ptext19:	
  4429 ;; *************** function _Lcd_Cmd *****************
  4430 ;; Defined at:
  4431 ;;		line 12 in file "lcd.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  a               1    3[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0
  4447 ;;      Temps:          2       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    1
  4452 ;; This function calls:
  4453 ;;		_Lcd_Port
  4454 ;; This function is called by:
  4455 ;;		_Lcd_Clear
  4456 ;;		_Lcd_Set_Cursor
  4457 ;;		_Lcd_Init
  4458 ;;		_Lcd_Shift_Right
  4459 ;;		_Lcd_Shift_Left
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _Lcd_Cmd
  4465  0E75                     _Lcd_Cmd:
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4469                           ;Lcd_Cmd@a stored from wreg
  4470  0E75  00F3               	movwf	Lcd_Cmd@a
  4471  0E76                     l1255:
  4472                           
  4473                           ;lcd.c: 13:     RE0 = 0;
  4474  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0E78  1009               	bcf	9,0	;volatile
  4477  0E79                     l1257:
  4478                           
  4479                           ;lcd.c: 14:     Lcd_Port(a);
  4480  0E79  0873               	movf	Lcd_Cmd@a,w
  4481  0E7A  120A  158A  2620  120A  158A  	fcall	_Lcd_Port
  4482  0E7F                     l1259:
  4483                           
  4484                           ;lcd.c: 15:     RE1 = 1;
  4485  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0E81  1489               	bsf	9,1	;volatile
  4488  0E82                     l1261:
  4489                           
  4490                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4491  0E82  300B               	movlw	11
  4492  0E83  00F2               	movwf	??_Lcd_Cmd+1
  4493  0E84  3062               	movlw	98
  4494  0E85  00F1               	movwf	??_Lcd_Cmd
  4495  0E86                     u1757:
  4496  0E86  0BF1               	decfsz	??_Lcd_Cmd,f
  4497  0E87  2E86               	goto	u1757
  4498  0E88  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4499  0E89  2E86               	goto	u1757
  4500  0E8A  0000               	nop
  4501  0E8B                     l1263:
  4502                           
  4503                           ;lcd.c: 17:     RE1 = 0;
  4504  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  4506  0E8D  1089               	bcf	9,1	;volatile
  4507  0E8E                     l136:
  4508  0E8E  0008               	return
  4509  0E8F                     __end_of_Lcd_Cmd:
  4510                           
  4511                           	psect	text20
  4512  0E20                     __ptext20:	
  4513 ;; *************** function _Lcd_Port *****************
  4514 ;; Defined at:
  4515 ;;		line 8 in file "lcd.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  a               1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  a               1    0[COMMON] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       0       0       0       0
  4530 ;;      Locals:         1       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0
  4532 ;;      Totals:         1       0       0       0       0
  4533 ;;Total ram usage:        1 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_Lcd_Cmd
  4539 ;;		_Lcd_Init
  4540 ;;		_Lcd_Write_Char
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _Lcd_Port
  4546  0E20                     _Lcd_Port:
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in _Lcd_Port: [wreg]
  4550                           ;Lcd_Port@a stored from wreg
  4551  0E20  00F0               	movwf	Lcd_Port@a
  4552  0E21                     l1243:
  4553                           
  4554                           ;lcd.c: 9:     PORTD = a;
  4555  0E21  0870               	movf	Lcd_Port@a,w
  4556  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0E24  0088               	movwf	8	;volatile
  4559  0E25                     l133:
  4560  0E25  0008               	return
  4561  0E26                     __end_of_Lcd_Port:
  4562  007E                     btemp	set	126	;btemp
  4563  007E                     wtemp0	set	126
  4564                           
  4565                           	psect	config
  4566                           
  4567                           ;Config register CONFIG1 @ 0x2007
  4568                           ;	Oscillator Selection bits
  4569                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4570                           ;	Watchdog Timer Enable bit
  4571                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4572                           ;	Power-up Timer Enable bit
  4573                           ;	PWRTE = OFF, PWRT disabled
  4574                           ;	RE3/MCLR pin function select bit
  4575                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4576                           ;	Code Protection bit
  4577                           ;	CP = OFF, Program memory code protection is disabled
  4578                           ;	Data Code Protection bit
  4579                           ;	CPD = OFF, Data memory code protection is disabled
  4580                           ;	Brown Out Reset Selection bits
  4581                           ;	BOREN = ON, BOR enabled
  4582                           ;	Internal External Switchover bit
  4583                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4584                           ;	Fail-Safe Clock Monitor Enabled bit
  4585                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4586                           ;	Low Voltage Programming Enable bit
  4587                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4588                           ;	In-Circuit Debugger Mode bit
  4589                           ;	DEBUG = 0x1, unprogrammed default
  4590  2007                     	org	8199
  4591  2007  23D4               	dw	9172
  4592                           
  4593                           ;Config register CONFIG2 @ 0x2008
  4594                           ;	Brown-out Reset Selection bit
  4595                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4596                           ;	Flash Program Memory Self Write Enable bits
  4597                           ;	WRT = OFF, Write protection off
  4598  2008                     	org	8200
  4599  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_impr_Pot
    _main->_impr_cont
    _setup->_spiInit
    _impr_cont->_Lcd_Set_Cursor
    _impr_cont->___lwdiv
    _impr_Pot->_Lcd_Set_Cursor
    _impr_Pot->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15579
                                             37 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                           _impr_Pot
                          _impr_cont
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _impr_cont                                            8     3      5    3894
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _impr_Pot                                             8     3      5    4183
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1308
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1074
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     266
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     938
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      66
                                              4 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___wmul
   ___xxtofl
   _impr_Pot
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lwdiv
     ___wmul
   _impr_cont
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     ___lwdiv
     ___wmul
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 19:52:20 2021

                        pc 0002                _SSPSTATbits 0094                         l20 0E2C  
                       l23 0E32                         l16 0E6F                         l17 0E74  
                       l34 0E3B                         l26 0E2B                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l110 03EA  
                      l122 02C3                        l116 0EAA                        l133 0E25  
                      l151 0E5E                        l119 01EC                        l136 0E8E  
                      l145 0ECE                        l139 0E48                        l251 0F18  
                      l148 0072                        l157 0EF3                        l521 0F83  
                      l249 0F00                        l442 0FEA                        l435 0FFF  
                      l445 0FFF                        l650 07DF                        l644 0757  
                      l638 07EB                        l657 0F2D                        l682 0095  
                      l659 0F3F                        l684 012C                        l695 00F6  
                      l696 0102                        l688 00DA                        _RE0 0048  
                      _RE1 0049                        u900 0F14                        u820 0E67  
                      u901 0F13                        u821 0E66                        u910 0F48  
                      u830 0E32                        u911 0F47                        u831 0E31  
                      u840 0EB1                        u841 0EB0                        u850 0EC3  
                      u930 0F5A                        u851 0EC2                        u931 0F59  
                      u860 0EF3                        u861 0EF2                        u925 0F4C  
                      u950 0F6B                        u870 0EFA                        u951 0F6A  
                      u871 0EF9                        u945 0F5B                        u970 0F7F  
                      u971 0F7E                        u955 0F67                        u980 0F27  
                      u981 0F26                        u965 0F73                        u885 0F01  
                      u895 0F08                        u995 0F2E                        _pot 0056  
                      fsr0 0004               ___flmul@aexp 0032               ___flmul@bexp 0033  
             ___flmul@sign 002D               ___flmul@temp 0038               ___flmul@prod 0034  
             ___fltol@exp1 0044                       l1301 0EFA                       l1311 0F40  
                     l1303 0F07                       l1321 0F56                       l1313 0F42  
                     l1305 0F0E                       l1401 028B                       l1243 0E21  
                     l1251 0E56                       l1331 0F79                       l1323 0F5A  
                     l1315 0F48                       l1307 0F14                       l1411 02B6  
                     l1403 0291                       l1261 0E82                       l1341 0F23  
                     l1501 04CE                       l1253 0E5B                       l1245 0E4A  
                     l1325 0F6B                       l1317 0F4B                       l1333 0F7F  
                     l1413 02BD                       l1405 029D                       l1421 01AD  
                     l1263 0E8B                       l1255 0E76                       l1343 0F27  
                     l1511 04EA                       l1503 04D3                       l1247 0E4D  
                     l1327 0F71                       l1319 0F52                       l1407 02A4  
                     l1431 01D3                       l1423 01B4                       l1415 012D  
                     l1271 0E6B                       l1351 0E27                       l1257 0E79  
                     l1345 0F36                       l1337 0F1A                       l1601 07C5  
                     l1521 0515                       l1513 04EF                       l1505 04DB  
                     l1281 0EB6                       l1249 0E53                       l1329 0F72  
                     l1409 02AA                       l1433 01DF                       l1425 01BA  
                     l1417 019F                       l1273 0E6E                       l1265 0E60  
                     l1361 0E96                       l1353 0E33                       l1259 0E7F  
                     l1371 0017                       l1347 0F3B                       l1339 0F1C  
                     l1603 07D3                       l1531 05B2                       l1523 0532  
                     l1507 04DD                       l1451 0FBA                       l1443 0F9A  
                     l1283 0EBD                       l1291 0ED3                       l1435 01E6  
                     l1427 01C6                       l1419 01A3                       l1267 0E67  
                     l1363 0E9E                       l1275 0E2C                       l1355 0E38  
                     l1381 004A                       l1373 0023                       l1605 07D7  
                     l1541 0615                       l1533 05BB                       l1525 054E  
                     l1517 04F8                       l1509 04E5                       l1453 0FBE  
                     l1461 0FD8                       l1445 0FAF                       l1437 0F84  
                     l1621 009D                       l1613 0074                       l1285 0EC3  
                     l1277 0EAC                       l1293 0EE0                       l1429 01CD  
                     l1269 0E69                       l1365 0E9F                       l1701 0379  
                     l1383 0050                       l1375 0029                       l1607 07D8  
                     l1551 06B5                       l1543 062E                       l1535 05CB  
                     l1527 057A                       l1519 0508                       l1471 0FF4  
                     l1447 0FB0                       l1439 0F91                       l1631 00BF  
                     l1615 0079                       l1287 0EC8                       l1279 0EB1  
                     l1295 0EE6                       l1391 0263                       l1367 0EA0  
                     l1359 0E8F                       l1711 0429                       l1703 037F  
                     l1385 0E3C                       l1377 0038                       l1609 07E3  
                     l1561 0723                       l1553 06DB                       l1545 064B  
                     l1537 05E8                       l1529 0596                       l1481 049D  
                     l1473 048B                       l1449 0FB8                       l1641 00F0  
                     l1633 00C3                       l1625 00A6                       l1617 007D  
                     l1289 0ED0                       l1297 0EF4                       l1393 026B  
                     l1369 0EA1                       l1713 043C                       l1705 0391  
                     l1379 0040                       l1571 073B                       l1563 0727  
                     l1555 0703                       l1547 0678                       l1539 05F8  
                     l1491 04B9                       l1483 04A2                       l1475 0492  
                     l1467 0FDF                       l1459 0FC6                       l1651 0123  
                     l1643 00FA                       l1635 00D1                       l1627 00AB  
                     l1619 008D                       l1299 0EF6                       l1395 0272  
                     l1387 01ED                       l1715 0456                       l1707 03A3  
                     l1581 075C                       l1573 073C                       l1565 0728  
                     l1557 070C                       l1549 0688                       l1493 04BE  
                     l1485 04A7                       l1477 0498                       l1469 0FEF  
                     l1653 0124                       l1645 0104                       l1637 00E1  
                     l1629 00B8                       l1397 0278                       l1389 025F  
                     l1717 0469                       l1709 03AB                       l1661 02D6  
                     l1583 0761                       l1591 0792                       l1575 0740  
                     l1567 0731                       l1559 071A                       l1495 04C4  
                     l1487 04AF                       l1479 049C                       l1647 011A  
                     l1639 00EC                       l1399 0284                       l1719 0483  
                     l1671 02FD                       l1663 02E0                       l1593 079F  
                     l1585 076F                       l1577 0754                       l1569 0737  
                     l1497 04C8                       l1489 04B1                       l1649 011F  
                     l1681 0322                       l1673 02FE                       l1665 02E6  
                     l1657 02C4                       l1595 07AA                       l1587 0773  
                     l1499 04C9                       l1691 0340                       l1683 0325  
                     l1675 0308                       l1667 02F0                       l1659 02D3  
                     l1597 07B9                       l1589 078C                       l1693 034A  
                     l1685 0326                       l1677 030E                       l1669 02FA  
                     l1599 07C3                       l1695 0355                       l1687 0330  
                     l1679 0318                       l1697 035B                       l1689 0336  
                     l1699 036D                       STR_1 0009                       STR_2 000D  
                     STR_3 0011                       STR_4 000B                       u1000 0F3B  
                     u1001 0F3A                       u1010 0F91                       u1011 0F90  
                     u1100 0FF4                       u1020 0FA8                       u1101 0FF3  
                     u1110 049C                       u1030 0FBE                       u1111 049B  
                     u1031 0FBD                       u1120 04A2                       u1040 0FC5  
                     u1201 055C                       u1121 04A1                       u1041 0FC4  
                     u1025 0FA3                       u1202 0563                       u1130 04A7  
                     u1211 0588                       u1203 056A                       u1131 04A6  
                     u1300 06C1                       u1212 058F                       u1140 04C8  
                     u1060 0FD7                       u1221 05A4                       u1213 0596  
                     u1141 04C7                       u1061 0FD6                       u1222 05AB  
                     u1150 04CE                       u1070 0FDE                       u1311 06CD  
                     u1223 05B2                       u1151 04CD                       u1071 0FDD  
                     u1055 0FC7                       u1400 0754                       u1320 06E9  
                     u1312 06D4                       u1160 04D3                       u1401 0753  
                     u1313 06DB                       u1305 06BC                       u1241 05DA  
                     u1161 04D2                       u1410 075B                       u1242 05E1  
                     u1170 04EA                       u1090 0FEF                       u1411 075A  
                     u1331 06F5                       u1251 0607                       u1243 05E8  
                     u1235 05B4                       u1171 04E9                       u1091 0FEE  
                     u1420 0761                       u1332 06FC                       u1252 060E  
                     u1180 04EF                       u1500 009D                       u1421 0760  
                     u1333 0703                       u1325 06E4                       u1253 0615  
                     u1181 04EE                       u1085 0FE1                       u1501 009C  
                     u1430 0773                       u1431 0772                       u1271 063D  
                     u1191 0540                       u1440 0782                       u1360 0727  
                     u1272 0644                       u1192 0547                       u1600 011F  
                     u1520 00BE                       u1361 0726                       u1345 0705  
                     u1281 066A                       u1273 064B                       u1265 0617  
                     u1193 054E                       u1601 011E                       u1521 00BD  
                     u1450 079F                       u1282 0671                       u1610 0123  
                     u1451 079E                       u1355 071C                       u1291 0697  
                     u1283 0678                       u1611 0122                       u1515 00B0  
                     u1460 07B9                       u1380 073B                       u1292 069E  
                     u1540 00E0                       u1620 03AB                       u1461 07B8  
                     u1445 077D                       u1381 073A                       u1293 06A5  
                     u1541 00DF                       u1621 03AA                       u1470 07D7  
                     u1390 0740                       u1471 07D6                       u1455 079B  
                     u1391 073F                       u1375 072A                       u1535 00D2  
                     u1560 00F0                       u1480 0079                       u1465 07B5  
                     u1561 00EF                       u1481 0078                       u1570 00F6  
                     u1490 007D                       u1707 001D                       u1571 00F5  
                     u1555 00E5                       u1491 007C                       u1580 00FA  
                     u1717 002D                       u1581 00F9                       u1637 02DC  
                     u1590 010F                       u1727 003C                       u1647 02F6  
                     u1737 0048                       u1657 0304                       u1747 0052  
                     u1595 010A                       u1667 031E                       u1757 0E86  
                     u1677 032C                       u1687 0346                       u1697 0E58  
        ?_Lcd_Write_String 0070                       _main 02C4                       _temp 0049  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
          __end_of_Lcd_Cmd 0E8F              ___fltol@sign1 0043                      ?_main 0070  
          __end_of___flmul 07EC            __end_of___fltol 1000                      _ANSEL 0188  
          __end_of___lwdiv 0F84                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _decCV 004C  
                    _decPV 0052                      _cenCV 004B                      _decTV 004F  
                    _cenPV 0051                      _cenTV 004E                      _uniCV 004D  
                    _uniPV 0053                      _uniTV 0050                      _setup 0E8F  
                    pclath 000A            __end_of_spiInit 0E75            __end_of_spiRead 0E3C  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0073  
         __end_of_Lcd_Port 0E26            __initialization 07EC               __end_of_main 048B  
                   ??_main 0045         __size_of_Lcd_Clear 000D                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 012D  
                   ___wmul 0EF4                  ??___flmul 0028                  ??___fltol 003E  
                ??___lwdiv 0074           __end_of_impr_Pot 02C4                impr_Pot@dec 0078  
              impr_Pot@cen 0079                impr_Pot@val 007A         __size_of__Umul8_16 0027  
              impr_Pot@uni 007D           __end_of_spiWrite 0E2C                  ??_spiInit 0073  
                ??_spiRead 0070            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 0E49                 ___fltol@f1 003A  
           __pcstackCOMMON 0070              __end_of_setup 0EAB             _Lcd_Set_Cursor 0EAB  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0074  
               __pbssBANK0 0049         __size_of_impr_cont 00C0          __end_of__Umul8_16 0F40  
               __pmaintext 02C4                    ?___wmul 0070    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0ECF                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 0E49                    _Lcd_Cmd 0E75  
                ?_impr_Pot 0078                  ?_spiWrite 0070                    ___flmul 048B  
                  ___fltol 0F84            __size_of___wmul 0025                    ___lwdiv 0F40  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0E26                    __ptext2 0E33  
                  __ptext3 0E2C                    __ptext4 0E8F                    __ptext5 0E5F  
                  __ptext6 012D                    __ptext7 01ED                    __ptext8 0EF4  
                  __ptext9 0F40                 ??___xxtofl 0074          __end_of_impr_cont 01ED  
                  _spiInit 0E5F                    _spiRead 0E33     __end_of_Lcd_Write_Char 0E5F  
     end_of_initialization 07FC                 ??_impr_Pot 0020               impr_Pot@fact 007B  
               ??_spiWrite 0070                  Lcd_Port@a 0070                  _PORTBbits 0006  
               _termometro 0055              ___xxtofl@sign 0078               impr_cont@dec 0078  
             impr_cont@cen 0079               impr_cont@val 007A               impr_cont@uni 007D  
              spiWrite@dat 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0073                ___flmul@grs 002E                  _Lcd_Clear 0E3C  
           _spiReceiveWait 0E2C             __end_of___wmul 0F19           _Lcd_Write_String 0ECF  
      start_initialization 07EC          __size_of_Lcd_Init 005C          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0E33                 ?_Lcd_Clear 0070                   ??___wmul 0074  
                __Umul8_16 0F19            Lcd_Write_Char@a 0072                  ___flmul@a 0024  
                ___flmul@b 0020                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070          __size_of_impr_Pot 00D7  
         ___lwdiv@dividend 0072            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075  
                 ?___flmul 0020                   ?___fltol 003A                 ?__Umul8_16 0070  
                 ?___lwdiv 0070          __size_of_spiWrite 0006                  __pstrings 0003  
                 ?_spiInit 0070                   ?_spiRead 0070           ___lwdiv@quotient 0075  
           __size_of_setup 001C                  _impr_cont 012D       spiInit@sTransmitEdge 0072  
           ___wmul@product 0074         spiInit@sDataSample 0070                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 0017                   _Lcd_Port 0E20  
               ?_impr_cont 0078   __end_of_Lcd_Write_String 0EF4           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0044         __end_of__stringtab 0009                   ___xxtofl 0073  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0ECF  
                 __ptext11 0E49                   __ptext20 0E20                   __ptext12 0EAB  
                 __ptext13 0073                   __ptext14 0F84                   __ptext15 048B  
                 __ptext16 0F19                   __ptext17 0017                   __ptext18 0E3C  
                 __ptext19 0E75           __size_of_spiInit 0016           __size_of_spiRead 0009  
                 _contador 0054              __size_of_main 01C7                   _impr_Pot 01ED  
                 _spiWrite 0E26               spiInit@sType 0073          spiInit@sClockIdle 0071  
              ??_impr_cont 0020           ??_spiReceiveWait 0070                  stringcode 0003  
       Lcd_Set_Cursor@temp 0077     __Umul8_16@multiplicand 0070                   stringdir 0003  
                 stringtab 0003       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
            impr_cont@fact 007B  
