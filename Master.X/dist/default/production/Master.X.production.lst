

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:24:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0006                     _PORTB	set	6
   363  0008                     _PORTD	set	8
   364  0006                     _PORTBbits	set	6
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0049                     _RE1	set	73
   368  0048                     _RE0	set	72
   369  0088                     _TRISD	set	136
   370  0086                     _TRISB	set	134
   371  0087                     _TRISC	set	135
   372  0085                     _TRISA	set	133
   373  0094                     _SSPSTATbits	set	148
   374  0094                     _SSPSTAT	set	148
   375  043B                     _TRISC3	set	1083
   376  043D                     _TRISC5	set	1085
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379                           
   380                           	psect	cinit
   381  07F8                     start_initialization:	
   382                           ; #config settings
   383                           
   384  07F8                     __initialization:
   385                           
   386                           ; Clear objects allocated to COMMON
   387  07F8  01F8               	clrf	__pbssCOMMON& (0+127)
   388  07F9  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   389  07FA  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   390  07FB  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   391  07FC                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  07FC                     __end_of__initialization:
   395  07FC  0183               	clrf	3
   396  07FD  120A  118A  2FB3   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  0078                     __pbssCOMMON:
   400  0078                     _temp:
   401  0078                     	ds	1
   402  0079                     _contador:
   403  0079                     	ds	1
   404  007A                     _termometro:
   405  007A                     	ds	1
   406  007B                     _pot:
   407  007B                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_setup:
   412  0070                     ?_get_spi:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiInit:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_spiReceiveWait:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_spiReceiveWait:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_spiRead:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_spiRead:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     spiInit@sDataSample:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     get_spi@SS:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 2 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     spiInit@sClockIdle:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	1
   446  0072                     ??_get_spi:
   447  0072                     spiInit@sTransmitEdge:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     ??_spiInit:
   454  0073                     spiInit@sType:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459  0073                     	ds	1
   460  0074                     ??_setup:
   461  0074                     ??_main:	
   462                           ; 1 bytes @ 0x4
   463                           
   464                           
   465                           ; 1 bytes @ 0x4
   466  0074                     	ds	4
   467                           
   468                           	psect	maintext
   469  07B3                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 56 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          4       0       0       0       0
   492 ;;      Totals:         4       0       0       0       0
   493 ;;Total ram usage:        4 bytes
   494 ;; Hardware stack levels required when called:    3
   495 ;; This function calls:
   496 ;;		_get_spi
   497 ;;		_setup
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  07B3                     _main:
   506  07B3                     l867:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   509                           
   510                           
   511                           ;main.c: 57:     setup();
   512  07B3  120A  118A  277C  120A  118A  	fcall	_setup
   513  07B8                     l75:	
   514                           ;main.c: 58:     while (1) {
   515                           
   516                           
   517                           ;main.c: 59:         pot = get_spi(PORTBbits.RB0);
   518  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   519  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   520  07BA  0806               	movf	6,w	;volatile
   521  07BB  3901               	andlw	1
   522  07BC  00F4               	movwf	??_main
   523  07BD  01F5               	clrf	??_main+1
   524  07BE  0874               	movf	??_main,w
   525  07BF  00F0               	movwf	get_spi@SS
   526  07C0  0875               	movf	??_main+1,w
   527  07C1  00F1               	movwf	get_spi@SS+1
   528  07C2  120A  118A  2797  120A  118A  	fcall	_get_spi
   529  07C7  00F6               	movwf	??_main+2
   530  07C8  0876               	movf	??_main+2,w
   531  07C9  00FB               	movwf	_pot
   532                           
   533                           ;main.c: 60:         contador = get_spi(PORTBbits.RB1);
   534  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   535  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   536  07CC  0C06               	rrf	6,w	;volatile
   537  07CD  3901               	andlw	1
   538  07CE  00F4               	movwf	??_main
   539  07CF  01F5               	clrf	??_main+1
   540  07D0  0874               	movf	??_main,w
   541  07D1  00F0               	movwf	get_spi@SS
   542  07D2  0875               	movf	??_main+1,w
   543  07D3  00F1               	movwf	get_spi@SS+1
   544  07D4  120A  118A  2797  120A  118A  	fcall	_get_spi
   545  07D9  00F6               	movwf	??_main+2
   546  07DA  0876               	movf	??_main+2,w
   547  07DB  00F9               	movwf	_contador
   548                           
   549                           ;main.c: 61:         termometro = get_spi(PORTBbits.RB2);
   550  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   551  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   552  07DE  0C06               	rrf	6,w	;volatile
   553  07DF  00F4               	movwf	??_main
   554  07E0  0C74               	rrf	??_main,w
   555  07E1  3901               	andlw	1
   556  07E2  00F5               	movwf	??_main+1
   557  07E3  01F6               	clrf	??_main+2
   558  07E4  0875               	movf	??_main+1,w
   559  07E5  00F0               	movwf	get_spi@SS
   560  07E6  0876               	movf	??_main+2,w
   561  07E7  00F1               	movwf	get_spi@SS+1
   562  07E8  120A  118A  2797  120A  118A  	fcall	_get_spi
   563  07ED  00F7               	movwf	??_main+3
   564  07EE  0877               	movf	??_main+3,w
   565  07EF  00FA               	movwf	_termometro
   566  07F0                     l869:
   567                           
   568                           ;main.c: 62:         PORTD = pot;
   569  07F0  087B               	movf	_pot,w
   570  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   571  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   572  07F3  0088               	movwf	8	;volatile
   573  07F4  2FB8               	goto	l75
   574  07F5  120A  118A  2800   	ljmp	start
   575  07F8                     __end_of_main:
   576                           
   577                           	psect	text1
   578  077C                     __ptext1:	
   579 ;; *************** function _setup *****************
   580 ;; Defined at:
   581 ;;		line 71 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    1
   602 ;; This function calls:
   603 ;;		_spiInit
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _setup
   611  077C                     _setup:
   612  077C                     l843:	
   613                           ;incstack = 0
   614                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;main.c: 72:     ANSEL = 0;
   618  077C  1683               	bsf	3,5	;RP0=1, select bank3
   619  077D  1703               	bsf	3,6	;RP1=1, select bank3
   620  077E  0188               	clrf	8	;volatile
   621                           
   622                           ;main.c: 73:     ANSELH = 0;
   623  077F  0189               	clrf	9	;volatile
   624                           
   625                           ;main.c: 74:     TRISA = 0;
   626  0780  1683               	bsf	3,5	;RP0=1, select bank1
   627  0781  1303               	bcf	3,6	;RP1=0, select bank1
   628  0782  0185               	clrf	5	;volatile
   629                           
   630                           ;main.c: 75:     TRISC = 0;
   631  0783  0187               	clrf	7	;volatile
   632                           
   633                           ;main.c: 76:     TRISB = 0;
   634  0784  0186               	clrf	6	;volatile
   635                           
   636                           ;main.c: 77:     TRISD = 0;
   637  0785  0188               	clrf	8	;volatile
   638                           
   639                           ;main.c: 78:     PORTB = 0;
   640  0786  1283               	bcf	3,5	;RP0=0, select bank0
   641  0787  1303               	bcf	3,6	;RP1=0, select bank0
   642  0788  0186               	clrf	6	;volatile
   643                           
   644                           ;main.c: 79:     PORTD = 0;
   645  0789  0188               	clrf	8	;volatile
   646  078A                     l845:
   647                           
   648                           ;main.c: 80:     PORTBbits.RB0 = 1;
   649  078A  1406               	bsf	6,0	;volatile
   650  078B                     l847:
   651                           
   652                           ;main.c: 81:     PORTBbits.RB1 = 1;
   653  078B  1486               	bsf	6,1	;volatile
   654  078C                     l849:
   655                           
   656                           ;main.c: 82:     PORTBbits.RB2 = 1;
   657  078C  1506               	bsf	6,2	;volatile
   658  078D                     l851:
   659                           
   660                           ;main.c: 83:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   661  078D  01F0               	clrf	spiInit@sDataSample
   662  078E  01F1               	clrf	spiInit@sClockIdle
   663  078F  01F2               	clrf	spiInit@sTransmitEdge
   664  0790  3020               	movlw	32
   665  0791  120A  118A  2766  120A  118A  	fcall	_spiInit
   666  0796                     l81:
   667  0796  0008               	return
   668  0797                     __end_of_setup:
   669                           
   670                           	psect	text2
   671  0766                     __ptext2:	
   672 ;; *************** function _spiInit *****************
   673 ;; Defined at:
   674 ;;		line 12 in file "SPI.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  sType           1    wreg     enum E1264
   677 ;;  sDataSample     1    0[COMMON] enum E1272
   678 ;;  sClockIdle      1    1[COMMON] enum E1276
   679 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  sType           1    3[COMMON] enum E1264
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         3       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         4       0       0       0       0
   695 ;;Total ram usage:        4 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_setup
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _spiInit
   706  0766                     _spiInit:
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   710                           ;spiInit@sType stored from wreg
   711  0766  00F3               	movwf	spiInit@sType
   712  0767                     l833:
   713                           
   714                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   715  0767  1683               	bsf	3,5	;RP0=1, select bank1
   716  0768  1303               	bcf	3,6	;RP1=0, select bank1
   717  0769  1287               	bcf	7,5	;volatile
   718                           
   719                           ;SPI.c: 15:     if(sType & 0b00000100)
   720  076A  1D73               	btfss	spiInit@sType,2
   721  076B  2F6D               	goto	u61
   722  076C  2F6E               	goto	u60
   723  076D                     u61:
   724  076D  2F72               	goto	l839
   725  076E                     u60:
   726  076E                     l835:
   727                           
   728                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   729  076E  0872               	movf	spiInit@sTransmitEdge,w
   730  076F  0094               	movwf	20	;volatile
   731  0770                     l837:
   732                           
   733                           ;SPI.c: 18:         TRISC3 = 1;
   734  0770  1587               	bsf	7,3	;volatile
   735                           
   736                           ;SPI.c: 19:     }
   737  0771  2F76               	goto	l16
   738  0772                     l839:
   739                           
   740                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   741  0772  0870               	movf	spiInit@sDataSample,w
   742  0773  0472               	iorwf	spiInit@sTransmitEdge,w
   743  0774  0094               	movwf	20	;volatile
   744  0775                     l841:
   745                           
   746                           ;SPI.c: 23:         TRISC3 = 0;
   747  0775  1187               	bcf	7,3	;volatile
   748  0776                     l16:	
   749                           ;SPI.c: 24:     }
   750                           
   751                           
   752                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   753  0776  0873               	movf	spiInit@sType,w
   754  0777  0471               	iorwf	spiInit@sClockIdle,w
   755  0778  1283               	bcf	3,5	;RP0=0, select bank0
   756  0779  1303               	bcf	3,6	;RP1=0, select bank0
   757  077A  0094               	movwf	20	;volatile
   758  077B                     l17:
   759  077B  0008               	return
   760  077C                     __end_of_spiInit:
   761                           
   762                           	psect	text3
   763  0797                     __ptext3:	
   764 ;; *************** function _get_spi *****************
   765 ;; Defined at:
   766 ;;		line 86 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  SS              2    0[COMMON] unsigned int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      unsigned char 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         2       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          2       0       0       0       0
   783 ;;      Totals:         4       0       0       0       0
   784 ;;Total ram usage:        4 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		_spiRead
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _get_spi
   796  0797                     _get_spi:
   797  0797                     l853:	
   798                           ;incstack = 0
   799                           ; Regs used in _get_spi: [wreg+status,2+status,0+pclath+cstack]
   800                           
   801  0797                     l855:
   802                           
   803                           ;main.c: 88:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   804  0797  3003               	movlw	3
   805  0798  00F3               	movwf	??_get_spi+1
   806  0799  3097               	movlw	151
   807  079A  00F2               	movwf	??_get_spi
   808  079B                     u77:
   809  079B  0BF2               	decfsz	??_get_spi,f
   810  079C  2F9B               	goto	u77
   811  079D  0BF3               	decfsz	??_get_spi+1,f
   812  079E  2F9B               	goto	u77
   813  079F  2FA0               	nop2
   814  07A0                     l857:
   815                           
   816                           ;main.c: 89:         temp = spiRead();
   817  07A0  120A  118A  275D  120A  118A  	fcall	_spiRead
   818  07A5  00F2               	movwf	??_get_spi
   819  07A6  0872               	movf	??_get_spi,w
   820  07A7  00F8               	movwf	_temp
   821  07A8                     l859:
   822                           
   823                           ;main.c: 90:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   824  07A8  3003               	movlw	3
   825  07A9  00F3               	movwf	??_get_spi+1
   826  07AA  3097               	movlw	151
   827  07AB  00F2               	movwf	??_get_spi
   828  07AC                     u87:
   829  07AC  0BF2               	decfsz	??_get_spi,f
   830  07AD  2FAC               	goto	u87
   831  07AE  0BF3               	decfsz	??_get_spi+1,f
   832  07AF  2FAC               	goto	u87
   833  07B0  2FB1               	nop2
   834  07B1                     l861:
   835  07B1                     l863:
   836                           
   837                           ;main.c: 92:         return (temp);
   838  07B1  0878               	movf	_temp,w
   839  07B2                     l84:
   840  07B2  0008               	return
   841  07B3                     __end_of_get_spi:
   842                           
   843                           	psect	text4
   844  075D                     __ptext4:	
   845 ;; *************** function _spiRead *****************
   846 ;; Defined at:
   847 ;;		line 47 in file "SPI.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      unsigned char 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		_spiReceiveWait
   870 ;; This function is called by:
   871 ;;		_get_spi
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _spiRead
   877  075D                     _spiRead:
   878  075D                     l729:	
   879                           ;incstack = 0
   880                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   881                           
   882                           
   883                           ;SPI.c: 49:     spiReceiveWait();
   884  075D  120A  118A  2756  120A  118A  	fcall	_spiReceiveWait
   885  0762                     l731:
   886                           
   887                           ;SPI.c: 50:     return(SSPBUF);
   888  0762  1283               	bcf	3,5	;RP0=0, select bank0
   889  0763  1303               	bcf	3,6	;RP1=0, select bank0
   890  0764  0813               	movf	19,w	;volatile
   891  0765                     l34:
   892  0765  0008               	return
   893  0766                     __end_of_spiRead:
   894                           
   895                           	psect	text5
   896  0756                     __ptext5:	
   897 ;; *************** function _spiReceiveWait *****************
   898 ;; Defined at:
   899 ;;		line 29 in file "SPI.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		None
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_spiRead
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _spiReceiveWait
   928  0756                     _spiReceiveWait:
   929  0756                     l717:	
   930                           ;incstack = 0
   931                           ; Regs used in _spiReceiveWait: []
   932                           
   933  0756                     l20:	
   934                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   935                           
   936  0756  1683               	bsf	3,5	;RP0=1, select bank1
   937  0757  1303               	bcf	3,6	;RP1=0, select bank1
   938  0758  1C14               	btfss	20,0	;volatile
   939  0759  2F5B               	goto	u11
   940  075A  2F5C               	goto	u10
   941  075B                     u11:
   942  075B  2F56               	goto	l20
   943  075C                     u10:
   944  075C                     l23:
   945  075C  0008               	return
   946  075D                     __end_of_spiReceiveWait:
   947  007E                     btemp	set	126	;btemp
   948  007E                     wtemp0	set	126
   949                           
   950                           	psect	config
   951                           
   952                           ;Config register CONFIG1 @ 0x2007
   953                           ;	Oscillator Selection bits
   954                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   955                           ;	Watchdog Timer Enable bit
   956                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   957                           ;	Power-up Timer Enable bit
   958                           ;	PWRTE = OFF, PWRT disabled
   959                           ;	RE3/MCLR pin function select bit
   960                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   961                           ;	Code Protection bit
   962                           ;	CP = OFF, Program memory code protection is disabled
   963                           ;	Data Code Protection bit
   964                           ;	CPD = OFF, Data memory code protection is disabled
   965                           ;	Brown Out Reset Selection bits
   966                           ;	BOREN = ON, BOR enabled
   967                           ;	Internal External Switchover bit
   968                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   969                           ;	Fail-Safe Clock Monitor Enabled bit
   970                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   971                           ;	Low Voltage Programming Enable bit
   972                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   973                           ;	In-Circuit Debugger Mode bit
   974                           ;	DEBUG = 0x1, unprogrammed default
   975  2007                     	org	8199
   976  2007  23D4               	dw	9172
   977                           
   978                           ;Config register CONFIG2 @ 0x2008
   979                           ;	Brown-out Reset Selection bit
   980                           ;	BOR4V = 0x1, unprogrammed default
   981                           ;	Flash Program Memory Self Write Enable bits
   982                           ;	WRT = OFF, Write protection off
   983  2008                     	org	8200
   984  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_get_spi
    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     590
                                              4 COMMON     4     4      0
                            _get_spi
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _get_spi                                              4     2      2     230
                                              0 COMMON     4     2      2
                            _spiRead
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_spi
     _spiRead
       _spiReceiveWait
   _setup
     _spiInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:24:38 2021

            _SSPSTATbits 0094                       l20 0756                       l23 075C  
                     l16 0776                       l17 077B                       l34 0765  
                     l81 0796                       l75 07B8                       l84 07B2  
                     u10 075C                       u11 075B                       u60 076E  
                     u61 076D                       u77 079B                       u87 07AC  
                    l731 0762                      l717 0756                      l729 075D  
                    l841 0775                      l833 0767                      l835 076E  
                    l851 078D                      l843 077C                      l861 07B1  
                    l853 0797                      l837 0770                      l845 078A  
                    l863 07B1                      l855 0797                      l839 0772  
                    l847 078B                      l857 07A0                      l849 078C  
                    l859 07A8                      l867 07B3                      l869 07F0  
                    _RE0 0048                      _RE1 0049                      _pot 007B  
                   _main 07B3                     _temp 0078                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_get_spi 07B3                    _setup 077C          __end_of_spiInit 077C  
        __end_of_spiRead 0766                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07F8                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??_get_spi 0072                ??_spiInit 0073                ??_spiRead 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 0797  
                ??_setup 0074               __pmaintext 07B3  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                  __ptext1 077C                  __ptext2 0766  
                __ptext3 0797                  __ptext4 075D                  __ptext5 0756  
                _get_spi 0797                  _spiInit 0766                  _spiRead 075D  
   end_of_initialization 07FC                _PORTBbits 0006               _termometro 007A  
         _spiReceiveWait 0756      start_initialization 07F8   __end_of_spiReceiveWait 075D  
            __pbssCOMMON 0078                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_get_spi 0070                 ?_spiInit 0070                 ?_spiRead 0070  
         __size_of_setup 001B     spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070  
              get_spi@SS 0070         __size_of_get_spi 001C         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _contador 0079            __size_of_main 0045  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
