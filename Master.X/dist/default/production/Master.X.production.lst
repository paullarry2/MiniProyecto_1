

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:17:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0008                     _PORTD	set	8
   380  0006                     _PORTB	set	6
   381  0006                     _PORTBbits	set	6
   382  0013                     _SSPBUF	set	19
   383  0014                     _SSPCON	set	20
   384  0049                     _RE1	set	73
   385  0048                     _RE0	set	72
   386  0088                     _TRISD	set	136
   387  0089                     _TRISE	set	137
   388  0086                     _TRISB	set	134
   389  0087                     _TRISC	set	135
   390  0094                     _SSPSTATbits	set	148
   391  0094                     _SSPSTAT	set	148
   392  043C                     _TRISC4	set	1084
   393  043B                     _TRISC3	set	1083
   394  043D                     _TRISC5	set	1085
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	strings
   399  0800                     __pstrings:
   400  0800                     stringtab:
   401  0800                     __stringtab:
   402  0800                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405  0800                     stringdir:
   406  0800  3008               	movlw	high stringdir
   407  0801  008A               	movwf	10
   408  0802  0804               	movf	4,w
   409  0803  0A84               	incf	4,f
   410  0804  0782               	addwf	2,f
   411  0805                     __stringbase:
   412  0805  3400               	retlw	0
   413  0806                     __end_of__stringtab:
   414  0806                     STR_1:
   415  0806  3453               	retlw	83	;'S'
   416  0807  3431               	retlw	49	;'1'
   417  0808  343A               	retlw	58	;':'
   418  0809  3400               	retlw	0
   419  080A                     STR_2:
   420  080A  3453               	retlw	83	;'S'
   421  080B  3432               	retlw	50	;'2'
   422  080C  343A               	retlw	58	;':'
   423  080D  3400               	retlw	0
   424  080E                     STR_3:
   425  080E  3453               	retlw	83	;'S'
   426  080F  3433               	retlw	51	;'3'
   427  0810  343A               	retlw	58	;':'
   428  0811  3400               	retlw	0
   429  0812                     STR_6:
   430  0812  342B               	retlw	43	;'+'
   431  0813  3400               	retlw	0
   432  0814                     STR_4:
   433  0814  342D               	retlw	45	;'-'
   434  0815  3400               	retlw	0
   435  0816                     STR_5:
   436  0816  342E               	retlw	46	;'.'
   437  0817  3400               	retlw	0
   438  0816                     
   439                           	psect	cinit
   440  07EC                     start_initialization:	
   441                           ; #config settings
   442                           
   443  07EC                     __initialization:
   444                           
   445                           ; Clear objects allocated to BANK0
   446  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   447  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   448  07EE  01C9               	clrf	__pbssBANK0& (0+127)
   449  07EF  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   450  07F0  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   451  07F1  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   452  07F2  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   453  07F3  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   454  07F4  01CF               	clrf	(__pbssBANK0+6)& (0+127)
   455  07F5  01D0               	clrf	(__pbssBANK0+7)& (0+127)
   456  07F6  01D1               	clrf	(__pbssBANK0+8)& (0+127)
   457  07F7  01D2               	clrf	(__pbssBANK0+9)& (0+127)
   458  07F8  01D3               	clrf	(__pbssBANK0+10)& (0+127)
   459  07F9  01D4               	clrf	(__pbssBANK0+11)& (0+127)
   460  07FA  01D5               	clrf	(__pbssBANK0+12)& (0+127)
   461  07FB  01D6               	clrf	(__pbssBANK0+13)& (0+127)
   462  07FC                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  07FC                     __end_of__initialization:
   466  07FC  0183               	clrf	3
   467  07FD  120A  118A  2954   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0049                     __pbssBANK0:
   471  0049                     _temp:
   472  0049                     	ds	2
   473  004B                     _cenCV:
   474  004B                     	ds	1
   475  004C                     _decCV:
   476  004C                     	ds	1
   477  004D                     _uniCV:
   478  004D                     	ds	1
   479  004E                     _cenTV:
   480  004E                     	ds	1
   481  004F                     _decTV:
   482  004F                     	ds	1
   483  0050                     _uniTV:
   484  0050                     	ds	1
   485  0051                     _cenPV:
   486  0051                     	ds	1
   487  0052                     _decPV:
   488  0052                     	ds	1
   489  0053                     _uniPV:
   490  0053                     	ds	1
   491  0054                     _contador:
   492  0054                     	ds	1
   493  0055                     _termometro:
   494  0055                     	ds	1
   495  0056                     _pot:
   496  0056                     	ds	1
   497                           
   498                           	psect	cstackCOMMON
   499  0070                     __pcstackCOMMON:
   500  0070                     ?_setup:
   501  0070                     ?_Lcd_Init:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_Lcd_Clear:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Lcd_Write_String:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Write_Char:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_spiInit:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_spiReceiveWait:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_spiReceiveWait:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_spiWrite:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_spiWrite:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_spiRead:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_spiRead:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_Lcd_Port:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_Lcd_Port:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_Lcd_Cmd:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?__Umul8_16:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?___wmul:	
   550                           ; 2 bytes @ 0x0
   551                           
   552  0070                     ?___lwdiv:	
   553                           ; 2 bytes @ 0x0
   554                           
   555  0070                     ?___xxtofl:	
   556                           ; 2 bytes @ 0x0
   557                           
   558  0070                     spiInit@sDataSample:	
   559                           ; 4 bytes @ 0x0
   560                           
   561  0070                     spiWrite@dat:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     Lcd_Port@a:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     __Umul8_16@multiplicand:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ___wmul@multiplier:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ___lwdiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     ___xxtofl@val:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 4 bytes @ 0x0
   581  0070                     	ds	1
   582  0071                     ??_Lcd_Write_Char:
   583  0071                     ??_Lcd_Cmd:	
   584                           ; 1 bytes @ 0x1
   585                           
   586  0071                     spiInit@sClockIdle:	
   587                           ; 1 bytes @ 0x1
   588                           
   589                           
   590                           ; 1 bytes @ 0x1
   591  0071                     	ds	1
   592  0072                     ??__Umul8_16:
   593  0072                     spiInit@sTransmitEdge:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     Lcd_Write_Char@a:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ___wmul@multiplicand:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ___lwdiv@dividend:	
   603                           ; 2 bytes @ 0x2
   604                           
   605                           
   606                           ; 2 bytes @ 0x2
   607  0072                     	ds	1
   608  0073                     ??_Lcd_Write_String:
   609  0073                     ??_spiInit:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0073                     spiInit@sType:	
   613                           ; 1 bytes @ 0x3
   614                           
   615  0073                     Lcd_Cmd@a:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     Lcd_Write_String@i:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 2 bytes @ 0x3
   623  0073                     	ds	1
   624  0074                     ??_setup:
   625  0074                     ??_Lcd_Init:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??_Lcd_Clear:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ?_Lcd_Set_Cursor:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??___wmul:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??___lwdiv:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___xxtofl:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     Lcd_Set_Cursor@b:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ___wmul@product:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     __Umul8_16@product:	
   650                           ; 2 bytes @ 0x4
   651                           
   652                           
   653                           ; 2 bytes @ 0x4
   654  0074                     	ds	1
   655  0075                     ??_Lcd_Set_Cursor:
   656  0075                     Lcd_Write_String@a:	
   657                           ; 1 bytes @ 0x5
   658                           
   659  0075                     ___lwdiv@quotient:	
   660                           ; 1 bytes @ 0x5
   661                           
   662                           
   663                           ; 2 bytes @ 0x5
   664  0075                     	ds	1
   665  0076                     Lcd_Set_Cursor@a:
   666  0076                     __Umul8_16@word_mpld:	
   667                           ; 1 bytes @ 0x6
   668                           
   669                           
   670                           ; 2 bytes @ 0x6
   671  0076                     	ds	1
   672  0077                     Lcd_Set_Cursor@temp:
   673  0077                     ___lwdiv@counter:	
   674                           ; 1 bytes @ 0x7
   675                           
   676                           
   677                           ; 1 bytes @ 0x7
   678  0077                     	ds	1
   679  0078                     ?_impr_Pot:
   680  0078                     ?_impr_cont:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0078                     impr_cont@dec:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0078                     impr_Pot@dec:	
   687                           ; 1 bytes @ 0x8
   688                           
   689  0078                     __Umul8_16@multiplier:	
   690                           ; 1 bytes @ 0x8
   691                           
   692  0078                     ___xxtofl@sign:	
   693                           ; 1 bytes @ 0x8
   694                           
   695                           
   696                           ; 1 bytes @ 0x8
   697  0078                     	ds	1
   698  0079                     impr_cont@cen:
   699  0079                     impr_Pot@cen:	
   700                           ; 1 bytes @ 0x9
   701                           
   702  0079                     ___xxtofl@exp:	
   703                           ; 1 bytes @ 0x9
   704                           
   705                           
   706                           ; 1 bytes @ 0x9
   707  0079                     	ds	1
   708  007A                     impr_cont@val:
   709  007A                     impr_Pot@val:	
   710                           ; 1 bytes @ 0xA
   711                           
   712  007A                     ___xxtofl@arg:	
   713                           ; 1 bytes @ 0xA
   714                           
   715                           
   716                           ; 4 bytes @ 0xA
   717  007A                     	ds	1
   718  007B                     impr_cont@fact:
   719  007B                     impr_Pot@fact:	
   720                           ; 2 bytes @ 0xB
   721                           
   722                           
   723                           ; 2 bytes @ 0xB
   724  007B                     	ds	2
   725  007D                     impr_cont@uni:
   726  007D                     impr_Pot@uni:	
   727                           ; 1 bytes @ 0xD
   728                           
   729                           
   730                           ; 1 bytes @ 0xD
   731  007D                     	ds	1
   732                           
   733                           	psect	cstackBANK0
   734  0020                     __pcstackBANK0:
   735  0020                     ??_impr_Pot:
   736  0020                     ??_impr_cont:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ?___flmul:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ___flmul@b:	
   743                           ; 4 bytes @ 0x0
   744                           
   745                           
   746                           ; 4 bytes @ 0x0
   747  0020                     	ds	4
   748  0024                     ___flmul@a:
   749                           
   750                           ; 4 bytes @ 0x4
   751  0024                     	ds	4
   752  0028                     ??___flmul:
   753                           
   754                           ; 1 bytes @ 0x8
   755  0028                     	ds	5
   756  002D                     ___flmul@sign:
   757                           
   758                           ; 1 bytes @ 0xD
   759  002D                     	ds	1
   760  002E                     ___flmul@grs:
   761                           
   762                           ; 4 bytes @ 0xE
   763  002E                     	ds	4
   764  0032                     ___flmul@aexp:
   765                           
   766                           ; 1 bytes @ 0x12
   767  0032                     	ds	1
   768  0033                     ___flmul@bexp:
   769                           
   770                           ; 1 bytes @ 0x13
   771  0033                     	ds	1
   772  0034                     ___flmul@prod:
   773                           
   774                           ; 4 bytes @ 0x14
   775  0034                     	ds	4
   776  0038                     ___flmul@temp:
   777                           
   778                           ; 2 bytes @ 0x18
   779  0038                     	ds	2
   780  003A                     ?___fltol:
   781  003A                     ___fltol@f1:	
   782                           ; 4 bytes @ 0x1A
   783                           
   784                           
   785                           ; 4 bytes @ 0x1A
   786  003A                     	ds	4
   787  003E                     ??___fltol:
   788                           
   789                           ; 1 bytes @ 0x1E
   790  003E                     	ds	5
   791  0043                     ___fltol@sign1:
   792                           
   793                           ; 1 bytes @ 0x23
   794  0043                     	ds	1
   795  0044                     ___fltol@exp1:
   796                           
   797                           ; 1 bytes @ 0x24
   798  0044                     	ds	1
   799  0045                     ??_main:
   800                           
   801                           ; 1 bytes @ 0x25
   802  0045                     	ds	4
   803                           
   804                           	psect	maintext
   805  0154                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 68 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       4       0       0       0
   828 ;;      Totals:         0       4       0       0       0
   829 ;;Total ram usage:        4 bytes
   830 ;; Hardware stack levels required when called:    4
   831 ;; This function calls:
   832 ;;		_Lcd_Clear
   833 ;;		_Lcd_Init
   834 ;;		_Lcd_Set_Cursor
   835 ;;		_Lcd_Write_Char
   836 ;;		_Lcd_Write_String
   837 ;;		___flmul
   838 ;;		___fltol
   839 ;;		___lwdiv
   840 ;;		___wmul
   841 ;;		___xxtofl
   842 ;;		_impr_Pot
   843 ;;		_impr_cont
   844 ;;		_setup
   845 ;;		_spiRead
   846 ;;		_spiWrite
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  0154                     _main:
   855  0154                     l1726:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;main.c: 69:     setup();
   861  0154  120A  158A  2535  120A  118A  	fcall	_setup
   862                           
   863                           ;main.c: 70:     Lcd_Init();
   864  0159  120A  158A  262A  120A  118A  	fcall	_Lcd_Init
   865                           
   866                           ;main.c: 71:     Lcd_Clear();
   867  015E  120A  158A  24E2  120A  118A  	fcall	_Lcd_Clear
   868  0163                     l1728:
   869                           
   870                           ;main.c: 74:         PORTBbits.RB0 = 0;
   871  0163  1283               	bcf	3,5	;RP0=0, select bank0
   872  0164  1303               	bcf	3,6	;RP1=0, select bank0
   873  0165  1006               	bcf	6,0	;volatile
   874  0166                     l1730:
   875                           
   876                           ;main.c: 75:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   877  0166  300D               	movlw	13
   878  0167  1283               	bcf	3,5	;RP0=0, select bank0
   879  0168  1303               	bcf	3,6	;RP1=0, select bank0
   880  0169  00C6               	movwf	??_main+1
   881  016A  30FB               	movlw	251
   882  016B  00C5               	movwf	??_main
   883  016C                     u1637:
   884  016C  0BC5               	decfsz	??_main,f
   885  016D  296C               	goto	u1637
   886  016E  0BC6               	decfsz	??_main+1,f
   887  016F  296C               	goto	u1637
   888  0170                     l1732:
   889                           
   890                           ;main.c: 76:         spiWrite(1);
   891  0170  3001               	movlw	1
   892  0171  120A  158A  24CC  120A  118A  	fcall	_spiWrite
   893  0176                     l1734:
   894                           
   895                           ;main.c: 77:         pot = spiRead();
   896  0176  120A  158A  24D9  120A  118A  	fcall	_spiRead
   897  017B  1283               	bcf	3,5	;RP0=0, select bank0
   898  017C  1303               	bcf	3,6	;RP1=0, select bank0
   899  017D  00C5               	movwf	??_main
   900  017E  0845               	movf	??_main,w
   901  017F  00D6               	movwf	_pot
   902  0180                     l1736:
   903                           
   904                           ;main.c: 78:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   905  0180  300D               	movlw	13
   906  0181  1283               	bcf	3,5	;RP0=0, select bank0
   907  0182  1303               	bcf	3,6	;RP1=0, select bank0
   908  0183  00C6               	movwf	??_main+1
   909  0184  30FB               	movlw	251
   910  0185  00C5               	movwf	??_main
   911  0186                     u1647:
   912  0186  0BC5               	decfsz	??_main,f
   913  0187  2986               	goto	u1647
   914  0188  0BC6               	decfsz	??_main+1,f
   915  0189  2986               	goto	u1647
   916  018A                     l1738:
   917                           
   918                           ;main.c: 79:         PORTBbits.RB0 = 1;
   919  018A  1283               	bcf	3,5	;RP0=0, select bank0
   920  018B  1303               	bcf	3,6	;RP1=0, select bank0
   921  018C  1406               	bsf	6,0	;volatile
   922  018D                     l1740:
   923                           
   924                           ;main.c: 81:         PORTBbits.RB1 = 0;
   925  018D  1086               	bcf	6,1	;volatile
   926  018E                     l1742:
   927                           
   928                           ;main.c: 82:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   929  018E  300D               	movlw	13
   930  018F  1283               	bcf	3,5	;RP0=0, select bank0
   931  0190  1303               	bcf	3,6	;RP1=0, select bank0
   932  0191  00C6               	movwf	??_main+1
   933  0192  30FB               	movlw	251
   934  0193  00C5               	movwf	??_main
   935  0194                     u1657:
   936  0194  0BC5               	decfsz	??_main,f
   937  0195  2994               	goto	u1657
   938  0196  0BC6               	decfsz	??_main+1,f
   939  0197  2994               	goto	u1657
   940  0198                     l1744:
   941                           
   942                           ;main.c: 83:         spiWrite(1);
   943  0198  3001               	movlw	1
   944  0199  120A  158A  24CC  120A  118A  	fcall	_spiWrite
   945  019E                     l1746:
   946                           
   947                           ;main.c: 84:         contador = spiRead();
   948  019E  120A  158A  24D9  120A  118A  	fcall	_spiRead
   949  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   950  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   951  01A5  00C5               	movwf	??_main
   952  01A6  0845               	movf	??_main,w
   953  01A7  00D4               	movwf	_contador
   954  01A8                     l1748:
   955                           
   956                           ;main.c: 85:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   957  01A8  300D               	movlw	13
   958  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   959  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   960  01AB  00C6               	movwf	??_main+1
   961  01AC  30FB               	movlw	251
   962  01AD  00C5               	movwf	??_main
   963  01AE                     u1667:
   964  01AE  0BC5               	decfsz	??_main,f
   965  01AF  29AE               	goto	u1667
   966  01B0  0BC6               	decfsz	??_main+1,f
   967  01B1  29AE               	goto	u1667
   968  01B2                     l1750:
   969                           
   970                           ;main.c: 86:         PORTBbits.RB1 = 1;
   971  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   972  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   973  01B4  1486               	bsf	6,1	;volatile
   974  01B5                     l1752:
   975                           
   976                           ;main.c: 88:         PORTBbits.RB2 = 0;
   977  01B5  1106               	bcf	6,2	;volatile
   978  01B6                     l1754:
   979                           
   980                           ;main.c: 89:         _delay((unsigned long)((5)*((8000000)/4000.0)));
   981  01B6  300D               	movlw	13
   982  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   983  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   984  01B9  00C6               	movwf	??_main+1
   985  01BA  30FB               	movlw	251
   986  01BB  00C5               	movwf	??_main
   987  01BC                     u1677:
   988  01BC  0BC5               	decfsz	??_main,f
   989  01BD  29BC               	goto	u1677
   990  01BE  0BC6               	decfsz	??_main+1,f
   991  01BF  29BC               	goto	u1677
   992  01C0                     l1756:
   993                           
   994                           ;main.c: 90:         spiWrite(1);
   995  01C0  3001               	movlw	1
   996  01C1  120A  158A  24CC  120A  118A  	fcall	_spiWrite
   997  01C6                     l1758:
   998                           
   999                           ;main.c: 91:         termometro = spiRead();
  1000  01C6  120A  158A  24D9  120A  118A  	fcall	_spiRead
  1001  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1002  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1003  01CD  00C5               	movwf	??_main
  1004  01CE  0845               	movf	??_main,w
  1005  01CF  00D5               	movwf	_termometro
  1006  01D0                     l1760:
  1007                           
  1008                           ;main.c: 92:         _delay((unsigned long)((5)*((8000000)/4000.0)));
  1009  01D0  300D               	movlw	13
  1010  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1011  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1012  01D3  00C6               	movwf	??_main+1
  1013  01D4  30FB               	movlw	251
  1014  01D5  00C5               	movwf	??_main
  1015  01D6                     u1687:
  1016  01D6  0BC5               	decfsz	??_main,f
  1017  01D7  29D6               	goto	u1687
  1018  01D8  0BC6               	decfsz	??_main+1,f
  1019  01D9  29D6               	goto	u1687
  1020  01DA                     l1762:
  1021                           
  1022                           ;main.c: 93:         PORTBbits.RB2 = 1;
  1023  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1024  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1025  01DC  1506               	bsf	6,2	;volatile
  1026                           
  1027                           ;main.c: 96:         Lcd_Set_Cursor(1, 1);
  1028  01DD  01F4               	clrf	Lcd_Set_Cursor@b
  1029  01DE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1030  01DF  3001               	movlw	1
  1031  01E0  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1032  01E5                     l1764:
  1033                           
  1034                           ;main.c: 97:         Lcd_Write_String("S1:");
  1035  01E5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1036  01E6  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1037  01EB                     l1766:
  1038                           
  1039                           ;main.c: 98:         Lcd_Set_Cursor(1, 7);
  1040  01EB  3007               	movlw	7
  1041  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1042  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1043  01EE  00C5               	movwf	??_main
  1044  01EF  0845               	movf	??_main,w
  1045  01F0  00F4               	movwf	Lcd_Set_Cursor@b
  1046  01F1  3001               	movlw	1
  1047  01F2  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1048                           
  1049                           ;main.c: 99:         Lcd_Write_String("S2:");
  1050  01F7  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1051  01F8  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1052  01FD                     l1768:
  1053                           
  1054                           ;main.c: 100:         Lcd_Set_Cursor(1, 13);
  1055  01FD  300D               	movlw	13
  1056  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1057  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0200  00C5               	movwf	??_main
  1059  0201  0845               	movf	??_main,w
  1060  0202  00F4               	movwf	Lcd_Set_Cursor@b
  1061  0203  3001               	movlw	1
  1062  0204  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1063  0209                     l1770:
  1064                           
  1065                           ;main.c: 101:         Lcd_Write_String("S3:");
  1066  0209  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1067  020A  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1068  020F                     l1772:
  1069                           
  1070                           ;main.c: 103:         impr_Pot(uniPV, decPV, cenPV, pot, 2);
  1071  020F  01F8               	clrf	impr_Pot@dec
  1072  0210  01F9               	clrf	impr_Pot@cen
  1073  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0213  0856               	movf	_pot,w
  1076  0214  00C5               	movwf	??_main
  1077  0215  0845               	movf	??_main,w
  1078  0216  00FA               	movwf	impr_Pot@val
  1079  0217  3002               	movlw	2
  1080  0218  00FB               	movwf	impr_Pot@fact
  1081  0219  3000               	movlw	0
  1082  021A  00FC               	movwf	impr_Pot@fact+1
  1083  021B  3000               	movlw	0
  1084  021C  120A  118A  2084  120A  118A  	fcall	_impr_Pot
  1085  0221                     l1774:
  1086                           
  1087                           ;main.c: 104:         impr_cont(uniCV, decCV, cenCV, contador, 1);
  1088  0221  01F8               	clrf	impr_cont@dec
  1089  0222  01F9               	clrf	impr_cont@cen
  1090  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0225  0854               	movf	_contador,w
  1093  0226  00C5               	movwf	??_main
  1094  0227  0845               	movf	??_main,w
  1095  0228  00FA               	movwf	impr_cont@val
  1096  0229  3001               	movlw	1
  1097  022A  00FB               	movwf	impr_cont@fact
  1098  022B  3000               	movlw	0
  1099  022C  00FC               	movwf	impr_cont@fact+1
  1100  022D  3000               	movlw	0
  1101  022E  120A  158A  2740  120A  118A  	fcall	_impr_cont
  1102  0233                     l1776:
  1103                           
  1104                           ;main.c: 106:         if (termometro < 69) {
  1105  0233  3045               	movlw	69
  1106  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0236  0255               	subwf	_termometro,w
  1109  0237  1803               	skipnc
  1110  0238  2A3A               	goto	u1621
  1111  0239  2A3B               	goto	u1620
  1112  023A                     u1621:
  1113  023A  2B62               	goto	l1820
  1114  023B                     u1620:
  1115  023B                     l1778:
  1116                           
  1117                           ;main.c: 107:             temp = termometro * 0.81;
  1118  023B  0855               	movf	_termometro,w
  1119  023C  00C5               	movwf	??_main
  1120  023D  01C6               	clrf	??_main+1
  1121  023E  01C7               	clrf	??_main+2
  1122  023F  01C8               	clrf	??_main+3
  1123  0240  0848               	movf	??_main+3,w
  1124  0241  00F3               	movwf	___xxtofl@val+3
  1125  0242  0847               	movf	??_main+2,w
  1126  0243  00F2               	movwf	___xxtofl@val+2
  1127  0244  0846               	movf	??_main+1,w
  1128  0245  00F1               	movwf	___xxtofl@val+1
  1129  0246  0845               	movf	??_main,w
  1130  0247  00F0               	movwf	___xxtofl@val
  1131  0248  3001               	movlw	1
  1132  0249  120A  158A  2686  120A  118A  	fcall	___xxtofl
  1133  024E  0873               	movf	?___xxtofl+3,w
  1134  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0251  00A7               	movwf	___flmul@a+3
  1137  0252  0872               	movf	?___xxtofl+2,w
  1138  0253  00A6               	movwf	___flmul@a+2
  1139  0254  0871               	movf	?___xxtofl+1,w
  1140  0255  00A5               	movwf	___flmul@a+1
  1141  0256  0870               	movf	?___xxtofl,w
  1142  0257  00A4               	movwf	___flmul@a
  1143  0258  303F               	movlw	63
  1144  0259  00A3               	movwf	___flmul@b+3
  1145  025A  304F               	movlw	79
  1146  025B  00A2               	movwf	___flmul@b+2
  1147  025C  305C               	movlw	92
  1148  025D  00A1               	movwf	___flmul@b+1
  1149  025E  3029               	movlw	41
  1150  025F  00A0               	movwf	___flmul@b
  1151  0260  120A  118A  248B  120A  118A  	fcall	___flmul
  1152  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0267  0823               	movf	?___flmul+3,w
  1155  0268  00BD               	movwf	___fltol@f1+3
  1156  0269  0822               	movf	?___flmul+2,w
  1157  026A  00BC               	movwf	___fltol@f1+2
  1158  026B  0821               	movf	?___flmul+1,w
  1159  026C  00BB               	movwf	___fltol@f1+1
  1160  026D  0820               	movf	?___flmul,w
  1161  026E  00BA               	movwf	___fltol@f1
  1162  026F  120A  118A  2008  120A  118A  	fcall	___fltol
  1163  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0276  083B               	movf	?___fltol+1,w
  1166  0277  00CA               	movwf	_temp+1
  1167  0278  083A               	movf	?___fltol,w
  1168  0279  00C9               	movwf	_temp
  1169  027A                     l1780:
  1170                           
  1171                           ;main.c: 108:             temp = 55 - temp;
  1172  027A  3037               	movlw	55
  1173  027B  00C5               	movwf	??_main
  1174  027C  0849               	movf	_temp,w
  1175  027D  0245               	subwf	??_main,w
  1176  027E  00C9               	movwf	_temp
  1177  027F  094A               	comf	_temp+1,w
  1178  0280  1803               	skipnc
  1179  0281  3E01               	addlw	1
  1180  0282  00CA               	movwf	_temp+1
  1181  0283                     l1782:
  1182                           
  1183                           ;main.c: 109:             temp = temp * 10;
  1184  0283  084A               	movf	_temp+1,w
  1185  0284  00F1               	movwf	___wmul@multiplier+1
  1186  0285  0849               	movf	_temp,w
  1187  0286  00F0               	movwf	___wmul@multiplier
  1188  0287  300A               	movlw	10
  1189  0288  00F2               	movwf	___wmul@multiplicand
  1190  0289  3000               	movlw	0
  1191  028A  00F3               	movwf	___wmul@multiplicand+1
  1192  028B  120A  158A  259A  120A  118A  	fcall	___wmul
  1193  0290  0871               	movf	?___wmul+1,w
  1194  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0293  00CA               	movwf	_temp+1
  1197  0294  0870               	movf	?___wmul,w
  1198  0295  00C9               	movwf	_temp
  1199  0296                     l1784:
  1200                           
  1201                           ;main.c: 110:             uniTV = temp / 100;
  1202  0296  3064               	movlw	100
  1203  0297  00F0               	movwf	___lwdiv@divisor
  1204  0298  3000               	movlw	0
  1205  0299  00F1               	movwf	___lwdiv@divisor+1
  1206  029A  084A               	movf	_temp+1,w
  1207  029B  00F3               	movwf	___lwdiv@dividend+1
  1208  029C  0849               	movf	_temp,w
  1209  029D  00F2               	movwf	___lwdiv@dividend
  1210  029E  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  1211  02A3  0870               	movf	?___lwdiv,w
  1212  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1213  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1214  02A6  00C5               	movwf	??_main
  1215  02A7  0845               	movf	??_main,w
  1216  02A8  00D0               	movwf	_uniTV
  1217  02A9                     l1786:
  1218                           
  1219                           ;main.c: 111:             temp = temp - (uniTV * 100);
  1220  02A9  0850               	movf	_uniTV,w
  1221  02AA  00C5               	movwf	??_main
  1222  02AB  01C6               	clrf	??_main+1
  1223  02AC  0845               	movf	??_main,w
  1224  02AD  00F0               	movwf	___wmul@multiplier
  1225  02AE  0846               	movf	??_main+1,w
  1226  02AF  00F1               	movwf	___wmul@multiplier+1
  1227  02B0  309C               	movlw	156
  1228  02B1  00F2               	movwf	___wmul@multiplicand
  1229  02B2  30FF               	movlw	255
  1230  02B3  00F3               	movwf	___wmul@multiplicand+1
  1231  02B4  120A  158A  259A  120A  118A  	fcall	___wmul
  1232  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1233  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1234  02BB  0849               	movf	_temp,w
  1235  02BC  0770               	addwf	?___wmul,w
  1236  02BD  00C9               	movwf	_temp
  1237  02BE  084A               	movf	_temp+1,w
  1238  02BF  1803               	skipnc
  1239  02C0  0A4A               	incf	_temp+1,w
  1240  02C1  0771               	addwf	?___wmul+1,w
  1241  02C2  00CA               	movwf	_temp+1
  1242  02C3                     l1788:
  1243                           
  1244                           ;main.c: 112:             decTV = temp / 10;
  1245  02C3  300A               	movlw	10
  1246  02C4  00F0               	movwf	___lwdiv@divisor
  1247  02C5  3000               	movlw	0
  1248  02C6  00F1               	movwf	___lwdiv@divisor+1
  1249  02C7  084A               	movf	_temp+1,w
  1250  02C8  00F3               	movwf	___lwdiv@dividend+1
  1251  02C9  0849               	movf	_temp,w
  1252  02CA  00F2               	movwf	___lwdiv@dividend
  1253  02CB  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  1254  02D0  0870               	movf	?___lwdiv,w
  1255  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1256  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1257  02D3  00C5               	movwf	??_main
  1258  02D4  0845               	movf	??_main,w
  1259  02D5  00CF               	movwf	_decTV
  1260  02D6                     l1790:
  1261                           
  1262                           ;main.c: 113:             temp = temp - (decTV * 10);
  1263  02D6  084F               	movf	_decTV,w
  1264  02D7  00C5               	movwf	??_main
  1265  02D8  01C6               	clrf	??_main+1
  1266  02D9  0845               	movf	??_main,w
  1267  02DA  00F0               	movwf	___wmul@multiplier
  1268  02DB  0846               	movf	??_main+1,w
  1269  02DC  00F1               	movwf	___wmul@multiplier+1
  1270  02DD  30F6               	movlw	246
  1271  02DE  00F2               	movwf	___wmul@multiplicand
  1272  02DF  30FF               	movlw	255
  1273  02E0  00F3               	movwf	___wmul@multiplicand+1
  1274  02E1  120A  158A  259A  120A  118A  	fcall	___wmul
  1275  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1276  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1277  02E8  0849               	movf	_temp,w
  1278  02E9  0770               	addwf	?___wmul,w
  1279  02EA  00C9               	movwf	_temp
  1280  02EB  084A               	movf	_temp+1,w
  1281  02EC  1803               	skipnc
  1282  02ED  0A4A               	incf	_temp+1,w
  1283  02EE  0771               	addwf	?___wmul+1,w
  1284  02EF  00CA               	movwf	_temp+1
  1285  02F0                     l1792:
  1286                           
  1287                           ;main.c: 114:             cenTV = temp;
  1288  02F0  0849               	movf	_temp,w
  1289  02F1  00C5               	movwf	??_main
  1290  02F2  0845               	movf	??_main,w
  1291  02F3  00CE               	movwf	_cenTV
  1292  02F4                     l1794:
  1293                           
  1294                           ;main.c: 117:             Lcd_Set_Cursor(2, 12);
  1295  02F4  300C               	movlw	12
  1296  02F5  00C5               	movwf	??_main
  1297  02F6  0845               	movf	??_main,w
  1298  02F7  00F4               	movwf	Lcd_Set_Cursor@b
  1299  02F8  3002               	movlw	2
  1300  02F9  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1301  02FE                     l1796:
  1302                           
  1303                           ;main.c: 118:             Lcd_Write_String("-");
  1304  02FE  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1305  02FF  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1306  0304                     l1798:
  1307                           
  1308                           ;main.c: 120:             Lcd_Set_Cursor(2, 13);
  1309  0304  300D               	movlw	13
  1310  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0307  00C5               	movwf	??_main
  1313  0308  0845               	movf	??_main,w
  1314  0309  00F4               	movwf	Lcd_Set_Cursor@b
  1315  030A  3002               	movlw	2
  1316  030B  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1317  0310                     l1800:
  1318                           
  1319                           ;main.c: 121:             uniTV = uniTV + 48;
  1320  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0312  0850               	movf	_uniTV,w
  1323  0313  3E30               	addlw	48
  1324  0314  00C5               	movwf	??_main
  1325  0315  0845               	movf	??_main,w
  1326  0316  00D0               	movwf	_uniTV
  1327  0317                     l1802:
  1328                           
  1329                           ;main.c: 122:             Lcd_Write_Char(uniTV);
  1330  0317  0850               	movf	_uniTV,w
  1331  0318  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1332  031D                     l1804:
  1333                           
  1334                           ;main.c: 124:             Lcd_Set_Cursor(2, 14);
  1335  031D  300E               	movlw	14
  1336  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1337  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0320  00C5               	movwf	??_main
  1339  0321  0845               	movf	??_main,w
  1340  0322  00F4               	movwf	Lcd_Set_Cursor@b
  1341  0323  3002               	movlw	2
  1342  0324  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1343  0329                     l1806:
  1344                           
  1345                           ;main.c: 125:             decTV = decTV + 48;
  1346  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1347  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1348  032B  084F               	movf	_decTV,w
  1349  032C  3E30               	addlw	48
  1350  032D  00C5               	movwf	??_main
  1351  032E  0845               	movf	??_main,w
  1352  032F  00CF               	movwf	_decTV
  1353  0330                     l1808:
  1354                           
  1355                           ;main.c: 126:             Lcd_Write_Char(decTV);
  1356  0330  084F               	movf	_decTV,w
  1357  0331  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1358  0336                     l1810:
  1359                           
  1360                           ;main.c: 128:             Lcd_Set_Cursor(2, 15);
  1361  0336  300F               	movlw	15
  1362  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0339  00C5               	movwf	??_main
  1365  033A  0845               	movf	??_main,w
  1366  033B  00F4               	movwf	Lcd_Set_Cursor@b
  1367  033C  3002               	movlw	2
  1368  033D  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1369  0342                     l1812:
  1370                           
  1371                           ;main.c: 129:             Lcd_Write_String(".");
  1372  0342  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1373  0343  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1374  0348                     l1814:
  1375                           
  1376                           ;main.c: 131:             Lcd_Set_Cursor(2, 16);
  1377  0348  3010               	movlw	16
  1378  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1379  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1380  034B  00C5               	movwf	??_main
  1381  034C  0845               	movf	??_main,w
  1382  034D  00F4               	movwf	Lcd_Set_Cursor@b
  1383  034E  3002               	movlw	2
  1384  034F  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1385  0354                     l1816:
  1386                           
  1387                           ;main.c: 132:             cenTV = cenTV + 48;
  1388  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0356  084E               	movf	_cenTV,w
  1391  0357  3E30               	addlw	48
  1392  0358  00C5               	movwf	??_main
  1393  0359  0845               	movf	??_main,w
  1394  035A  00CE               	movwf	_cenTV
  1395  035B                     l1818:
  1396                           
  1397                           ;main.c: 133:             Lcd_Write_Char(cenTV);
  1398  035B  084E               	movf	_cenTV,w
  1399  035C  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1400                           
  1401                           ;main.c: 134:         }
  1402  0361  2963               	goto	l1728
  1403  0362                     l1820:
  1404                           
  1405                           ;main.c: 136:             temp = termometro * 0.81;
  1406  0362  0855               	movf	_termometro,w
  1407  0363  00C5               	movwf	??_main
  1408  0364  01C6               	clrf	??_main+1
  1409  0365  01C7               	clrf	??_main+2
  1410  0366  01C8               	clrf	??_main+3
  1411  0367  0848               	movf	??_main+3,w
  1412  0368  00F3               	movwf	___xxtofl@val+3
  1413  0369  0847               	movf	??_main+2,w
  1414  036A  00F2               	movwf	___xxtofl@val+2
  1415  036B  0846               	movf	??_main+1,w
  1416  036C  00F1               	movwf	___xxtofl@val+1
  1417  036D  0845               	movf	??_main,w
  1418  036E  00F0               	movwf	___xxtofl@val
  1419  036F  3001               	movlw	1
  1420  0370  120A  158A  2686  120A  118A  	fcall	___xxtofl
  1421  0375  0873               	movf	?___xxtofl+3,w
  1422  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0378  00A7               	movwf	___flmul@a+3
  1425  0379  0872               	movf	?___xxtofl+2,w
  1426  037A  00A6               	movwf	___flmul@a+2
  1427  037B  0871               	movf	?___xxtofl+1,w
  1428  037C  00A5               	movwf	___flmul@a+1
  1429  037D  0870               	movf	?___xxtofl,w
  1430  037E  00A4               	movwf	___flmul@a
  1431  037F  303F               	movlw	63
  1432  0380  00A3               	movwf	___flmul@b+3
  1433  0381  304F               	movlw	79
  1434  0382  00A2               	movwf	___flmul@b+2
  1435  0383  305C               	movlw	92
  1436  0384  00A1               	movwf	___flmul@b+1
  1437  0385  3029               	movlw	41
  1438  0386  00A0               	movwf	___flmul@b
  1439  0387  120A  118A  248B  120A  118A  	fcall	___flmul
  1440  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1441  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1442  038E  0823               	movf	?___flmul+3,w
  1443  038F  00BD               	movwf	___fltol@f1+3
  1444  0390  0822               	movf	?___flmul+2,w
  1445  0391  00BC               	movwf	___fltol@f1+2
  1446  0392  0821               	movf	?___flmul+1,w
  1447  0393  00BB               	movwf	___fltol@f1+1
  1448  0394  0820               	movf	?___flmul,w
  1449  0395  00BA               	movwf	___fltol@f1
  1450  0396  120A  118A  2008  120A  118A  	fcall	___fltol
  1451  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1452  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1453  039D  083B               	movf	?___fltol+1,w
  1454  039E  00CA               	movwf	_temp+1
  1455  039F  083A               	movf	?___fltol,w
  1456  03A0  00C9               	movwf	_temp
  1457  03A1                     l1822:
  1458                           
  1459                           ;main.c: 137:             temp = temp - 55;
  1460  03A1  0849               	movf	_temp,w
  1461  03A2  3EC9               	addlw	201
  1462  03A3  00C9               	movwf	_temp
  1463  03A4  084A               	movf	_temp+1,w
  1464  03A5  1803               	skipnc
  1465  03A6  3E01               	addlw	1
  1466  03A7  3EFF               	addlw	255
  1467  03A8  00CA               	movwf	_temp+1
  1468  03A9                     l1824:
  1469                           
  1470                           ;main.c: 138:             temp = temp*10;
  1471  03A9  084A               	movf	_temp+1,w
  1472  03AA  00F1               	movwf	___wmul@multiplier+1
  1473  03AB  0849               	movf	_temp,w
  1474  03AC  00F0               	movwf	___wmul@multiplier
  1475  03AD  300A               	movlw	10
  1476  03AE  00F2               	movwf	___wmul@multiplicand
  1477  03AF  3000               	movlw	0
  1478  03B0  00F3               	movwf	___wmul@multiplicand+1
  1479  03B1  120A  158A  259A  120A  118A  	fcall	___wmul
  1480  03B6  0871               	movf	?___wmul+1,w
  1481  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1482  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1483  03B9  00CA               	movwf	_temp+1
  1484  03BA  0870               	movf	?___wmul,w
  1485  03BB  00C9               	movwf	_temp
  1486  03BC                     l1826:
  1487                           
  1488                           ;main.c: 139:             uniTV = temp / 100;
  1489  03BC  3064               	movlw	100
  1490  03BD  00F0               	movwf	___lwdiv@divisor
  1491  03BE  3000               	movlw	0
  1492  03BF  00F1               	movwf	___lwdiv@divisor+1
  1493  03C0  084A               	movf	_temp+1,w
  1494  03C1  00F3               	movwf	___lwdiv@dividend+1
  1495  03C2  0849               	movf	_temp,w
  1496  03C3  00F2               	movwf	___lwdiv@dividend
  1497  03C4  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  1498  03C9  0870               	movf	?___lwdiv,w
  1499  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1500  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1501  03CC  00C5               	movwf	??_main
  1502  03CD  0845               	movf	??_main,w
  1503  03CE  00D0               	movwf	_uniTV
  1504  03CF                     l1828:
  1505                           
  1506                           ;main.c: 140:             temp = temp - (uniTV * 100);
  1507  03CF  0850               	movf	_uniTV,w
  1508  03D0  00C5               	movwf	??_main
  1509  03D1  01C6               	clrf	??_main+1
  1510  03D2  0845               	movf	??_main,w
  1511  03D3  00F0               	movwf	___wmul@multiplier
  1512  03D4  0846               	movf	??_main+1,w
  1513  03D5  00F1               	movwf	___wmul@multiplier+1
  1514  03D6  309C               	movlw	156
  1515  03D7  00F2               	movwf	___wmul@multiplicand
  1516  03D8  30FF               	movlw	255
  1517  03D9  00F3               	movwf	___wmul@multiplicand+1
  1518  03DA  120A  158A  259A  120A  118A  	fcall	___wmul
  1519  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1520  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1521  03E1  0849               	movf	_temp,w
  1522  03E2  0770               	addwf	?___wmul,w
  1523  03E3  00C9               	movwf	_temp
  1524  03E4  084A               	movf	_temp+1,w
  1525  03E5  1803               	skipnc
  1526  03E6  0A4A               	incf	_temp+1,w
  1527  03E7  0771               	addwf	?___wmul+1,w
  1528  03E8  00CA               	movwf	_temp+1
  1529  03E9                     l1830:
  1530                           
  1531                           ;main.c: 141:             decTV = temp / 10;
  1532  03E9  300A               	movlw	10
  1533  03EA  00F0               	movwf	___lwdiv@divisor
  1534  03EB  3000               	movlw	0
  1535  03EC  00F1               	movwf	___lwdiv@divisor+1
  1536  03ED  084A               	movf	_temp+1,w
  1537  03EE  00F3               	movwf	___lwdiv@dividend+1
  1538  03EF  0849               	movf	_temp,w
  1539  03F0  00F2               	movwf	___lwdiv@dividend
  1540  03F1  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  1541  03F6  0870               	movf	?___lwdiv,w
  1542  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1543  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1544  03F9  00C5               	movwf	??_main
  1545  03FA  0845               	movf	??_main,w
  1546  03FB  00CF               	movwf	_decTV
  1547  03FC                     l1832:
  1548                           
  1549                           ;main.c: 142:             temp = temp - (decTV * 10);
  1550  03FC  084F               	movf	_decTV,w
  1551  03FD  00C5               	movwf	??_main
  1552  03FE  01C6               	clrf	??_main+1
  1553  03FF  0845               	movf	??_main,w
  1554  0400  00F0               	movwf	___wmul@multiplier
  1555  0401  0846               	movf	??_main+1,w
  1556  0402  00F1               	movwf	___wmul@multiplier+1
  1557  0403  30F6               	movlw	246
  1558  0404  00F2               	movwf	___wmul@multiplicand
  1559  0405  30FF               	movlw	255
  1560  0406  00F3               	movwf	___wmul@multiplicand+1
  1561  0407  120A  158A  259A  120A  118A  	fcall	___wmul
  1562  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1563  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1564  040E  0849               	movf	_temp,w
  1565  040F  0770               	addwf	?___wmul,w
  1566  0410  00C9               	movwf	_temp
  1567  0411  084A               	movf	_temp+1,w
  1568  0412  1803               	skipnc
  1569  0413  0A4A               	incf	_temp+1,w
  1570  0414  0771               	addwf	?___wmul+1,w
  1571  0415  00CA               	movwf	_temp+1
  1572  0416                     l1834:
  1573                           
  1574                           ;main.c: 143:             cenTV = temp;
  1575  0416  0849               	movf	_temp,w
  1576  0417  00C5               	movwf	??_main
  1577  0418  0845               	movf	??_main,w
  1578  0419  00CE               	movwf	_cenTV
  1579  041A                     l1836:
  1580                           
  1581                           ;main.c: 145:             Lcd_Set_Cursor(2, 12);
  1582  041A  300C               	movlw	12
  1583  041B  00C5               	movwf	??_main
  1584  041C  0845               	movf	??_main,w
  1585  041D  00F4               	movwf	Lcd_Set_Cursor@b
  1586  041E  3002               	movlw	2
  1587  041F  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1588  0424                     l1838:
  1589                           
  1590                           ;main.c: 146:             Lcd_Write_String("+");
  1591  0424  300D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1592  0425  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1593  042A                     l1840:
  1594                           
  1595                           ;main.c: 148:             Lcd_Set_Cursor(2, 13);
  1596  042A  300D               	movlw	13
  1597  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1598  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1599  042D  00C5               	movwf	??_main
  1600  042E  0845               	movf	??_main,w
  1601  042F  00F4               	movwf	Lcd_Set_Cursor@b
  1602  0430  3002               	movlw	2
  1603  0431  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1604  0436                     l1842:
  1605                           
  1606                           ;main.c: 149:             uniTV = uniTV + 48;
  1607  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0438  0850               	movf	_uniTV,w
  1610  0439  3E30               	addlw	48
  1611  043A  00C5               	movwf	??_main
  1612  043B  0845               	movf	??_main,w
  1613  043C  00D0               	movwf	_uniTV
  1614  043D                     l1844:
  1615                           
  1616                           ;main.c: 150:             Lcd_Write_Char(uniTV);
  1617  043D  0850               	movf	_uniTV,w
  1618  043E  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1619  0443                     l1846:
  1620                           
  1621                           ;main.c: 152:             Lcd_Set_Cursor(2, 14);
  1622  0443  300E               	movlw	14
  1623  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0446  00C5               	movwf	??_main
  1626  0447  0845               	movf	??_main,w
  1627  0448  00F4               	movwf	Lcd_Set_Cursor@b
  1628  0449  3002               	movlw	2
  1629  044A  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1630  044F                     l1848:
  1631                           
  1632                           ;main.c: 153:             decTV = decTV + 48;
  1633  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0451  084F               	movf	_decTV,w
  1636  0452  3E30               	addlw	48
  1637  0453  00C5               	movwf	??_main
  1638  0454  0845               	movf	??_main,w
  1639  0455  00CF               	movwf	_decTV
  1640  0456                     l1850:
  1641                           
  1642                           ;main.c: 154:             Lcd_Write_Char(decTV);
  1643  0456  084F               	movf	_decTV,w
  1644  0457  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1645  045C                     l1852:
  1646                           
  1647                           ;main.c: 156:             Lcd_Set_Cursor(2, 15);
  1648  045C  300F               	movlw	15
  1649  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1650  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1651  045F  00C5               	movwf	??_main
  1652  0460  0845               	movf	??_main,w
  1653  0461  00F4               	movwf	Lcd_Set_Cursor@b
  1654  0462  3002               	movlw	2
  1655  0463  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1656  0468                     l1854:
  1657                           
  1658                           ;main.c: 157:             Lcd_Write_String(".");
  1659  0468  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1660  0469  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  1661  046E                     l1856:
  1662                           
  1663                           ;main.c: 159:             Lcd_Set_Cursor(2, 16);
  1664  046E  3010               	movlw	16
  1665  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0471  00C5               	movwf	??_main
  1668  0472  0845               	movf	??_main,w
  1669  0473  00F4               	movwf	Lcd_Set_Cursor@b
  1670  0474  3002               	movlw	2
  1671  0475  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  1672  047A                     l1858:
  1673                           
  1674                           ;main.c: 160:             cenTV = cenTV + 48;
  1675  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1676  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1677  047C  084E               	movf	_cenTV,w
  1678  047D  3E30               	addlw	48
  1679  047E  00C5               	movwf	??_main
  1680  047F  0845               	movf	??_main,w
  1681  0480  00CE               	movwf	_cenTV
  1682  0481                     l1860:
  1683                           
  1684                           ;main.c: 161:             Lcd_Write_Char(cenTV);
  1685  0481  084E               	movf	_cenTV,w
  1686  0482  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  1687  0487  2963               	goto	l1728
  1688  0488  120A  118A  2800   	ljmp	start
  1689  048B                     __end_of_main:
  1690                           
  1691                           	psect	text1
  1692  0CCC                     __ptext1:	
  1693 ;; *************** function _spiWrite *****************
  1694 ;; Defined at:
  1695 ;;		line 34 in file "SPI.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  dat             1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  dat             1    0[COMMON] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0
  1712 ;;      Totals:         1       0       0       0       0
  1713 ;;Total ram usage:        1 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _spiWrite
  1724  0CCC                     _spiWrite:
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _spiWrite: [wreg]
  1728                           ;spiWrite@dat stored from wreg
  1729  0CCC  00F0               	movwf	spiWrite@dat
  1730  0CCD                     l1422:
  1731                           
  1732                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1733  0CCD  0870               	movf	spiWrite@dat,w
  1734  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0CD0  0093               	movwf	19	;volatile
  1737  0CD1                     l26:
  1738  0CD1  0008               	return
  1739  0CD2                     __end_of_spiWrite:
  1740                           
  1741                           	psect	text2
  1742  0CD9                     __ptext2:	
  1743 ;; *************** function _spiRead *****************
  1744 ;; Defined at:
  1745 ;;		line 47 in file "SPI.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      unsigned char 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    1
  1766 ;; This function calls:
  1767 ;;		_spiReceiveWait
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _spiRead
  1775  0CD9                     _spiRead:
  1776  0CD9                     l1424:	
  1777                           ;incstack = 0
  1778                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1779                           
  1780                           
  1781                           ;SPI.c: 49:     spiReceiveWait();
  1782  0CD9  120A  158A  24D2  120A  158A  	fcall	_spiReceiveWait
  1783  0CDE                     l1426:
  1784                           
  1785                           ;SPI.c: 50:     return(SSPBUF);
  1786  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0CE0  0813               	movf	19,w	;volatile
  1789  0CE1                     l34:
  1790  0CE1  0008               	return
  1791  0CE2                     __end_of_spiRead:
  1792                           
  1793                           	psect	text3
  1794  0CD2                     __ptext3:	
  1795 ;; *************** function _spiReceiveWait *****************
  1796 ;; Defined at:
  1797 ;;		line 29 in file "SPI.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		None
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_spiRead
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _spiReceiveWait
  1826  0CD2                     _spiReceiveWait:
  1827  0CD2                     l1346:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _spiReceiveWait: []
  1830                           
  1831  0CD2                     l20:	
  1832                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1833                           
  1834  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1835  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1836  0CD4  1C14               	btfss	20,0	;volatile
  1837  0CD5  2CD7               	goto	u831
  1838  0CD6  2CD8               	goto	u830
  1839  0CD7                     u831:
  1840  0CD7  2CD2               	goto	l20
  1841  0CD8                     u830:
  1842  0CD8                     l23:
  1843  0CD8  0008               	return
  1844  0CD9                     __end_of_spiReceiveWait:
  1845                           
  1846                           	psect	text4
  1847  0D35                     __ptext4:	
  1848 ;; *************** function _setup *****************
  1849 ;; Defined at:
  1850 ;;		line 172 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, pclath, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    1
  1871 ;; This function calls:
  1872 ;;		_spiInit
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _setup
  1880  0D35                     _setup:
  1881  0D35                     l1430:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1884                           
  1885                           
  1886                           ;main.c: 173:     ANSEL = 0;
  1887  0D35  1683               	bsf	3,5	;RP0=1, select bank3
  1888  0D36  1703               	bsf	3,6	;RP1=1, select bank3
  1889  0D37  0188               	clrf	8	;volatile
  1890                           
  1891                           ;main.c: 174:     ANSELH = 0;
  1892  0D38  0189               	clrf	9	;volatile
  1893                           
  1894                           ;main.c: 175:     TRISC = 0;
  1895  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0D3B  0187               	clrf	7	;volatile
  1898  0D3C                     l1432:
  1899                           
  1900                           ;main.c: 176:     TRISC4 = 1;
  1901  0D3C  1607               	bsf	7,4	;volatile
  1902                           
  1903                           ;main.c: 177:     TRISB = 0;
  1904  0D3D  0186               	clrf	6	;volatile
  1905                           
  1906                           ;main.c: 178:     TRISE = 0x00;
  1907  0D3E  0189               	clrf	9	;volatile
  1908                           
  1909                           ;main.c: 179:     TRISD = 0;
  1910  0D3F  0188               	clrf	8	;volatile
  1911                           
  1912                           ;main.c: 180:     PORTB = 0;
  1913  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0D42  0186               	clrf	6	;volatile
  1916                           
  1917                           ;main.c: 181:     PORTD = 0;
  1918  0D43  0188               	clrf	8	;volatile
  1919  0D44                     l1434:
  1920                           
  1921                           ;main.c: 182:     PORTBbits.RB0 = 1;
  1922  0D44  1406               	bsf	6,0	;volatile
  1923  0D45                     l1436:
  1924                           
  1925                           ;main.c: 183:     PORTBbits.RB1 = 1;
  1926  0D45  1486               	bsf	6,1	;volatile
  1927  0D46                     l1438:
  1928                           
  1929                           ;main.c: 184:     PORTBbits.RB2 = 1;
  1930  0D46  1506               	bsf	6,2	;volatile
  1931  0D47                     l1440:
  1932                           
  1933                           ;main.c: 185:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1934  0D47  01F0               	clrf	spiInit@sDataSample
  1935  0D48  01F1               	clrf	spiInit@sClockIdle
  1936  0D49  01F2               	clrf	spiInit@sTransmitEdge
  1937  0D4A  3020               	movlw	32
  1938  0D4B  120A  158A  2505  120A  158A  	fcall	_spiInit
  1939  0D50                     l117:
  1940  0D50  0008               	return
  1941  0D51                     __end_of_setup:
  1942                           
  1943                           	psect	text5
  1944  0D05                     __ptext5:	
  1945 ;; *************** function _spiInit *****************
  1946 ;; Defined at:
  1947 ;;		line 12 in file "SPI.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  sType           1    wreg     enum E1264
  1950 ;;  sDataSample     1    0[COMMON] enum E1272
  1951 ;;  sClockIdle      1    1[COMMON] enum E1276
  1952 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  sType           1    3[COMMON] enum E1264
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         3       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0
  1967 ;;      Totals:         4       0       0       0       0
  1968 ;;Total ram usage:        4 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_setup
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _spiInit
  1979  0D05                     _spiInit:
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1983                           ;spiInit@sType stored from wreg
  1984  0D05  00F3               	movwf	spiInit@sType
  1985  0D06                     l1336:
  1986                           
  1987                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1988  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0D08  1287               	bcf	7,5	;volatile
  1991                           
  1992                           ;SPI.c: 15:     if(sType & 0b00000100)
  1993  0D09  1D73               	btfss	spiInit@sType,2
  1994  0D0A  2D0C               	goto	u821
  1995  0D0B  2D0D               	goto	u820
  1996  0D0C                     u821:
  1997  0D0C  2D11               	goto	l1342
  1998  0D0D                     u820:
  1999  0D0D                     l1338:
  2000                           
  2001                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2002  0D0D  0872               	movf	spiInit@sTransmitEdge,w
  2003  0D0E  0094               	movwf	20	;volatile
  2004  0D0F                     l1340:
  2005                           
  2006                           ;SPI.c: 18:         TRISC3 = 1;
  2007  0D0F  1587               	bsf	7,3	;volatile
  2008                           
  2009                           ;SPI.c: 19:     }
  2010  0D10  2D15               	goto	l16
  2011  0D11                     l1342:
  2012                           
  2013                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2014  0D11  0870               	movf	spiInit@sDataSample,w
  2015  0D12  0472               	iorwf	spiInit@sTransmitEdge,w
  2016  0D13  0094               	movwf	20	;volatile
  2017  0D14                     l1344:
  2018                           
  2019                           ;SPI.c: 23:         TRISC3 = 0;
  2020  0D14  1187               	bcf	7,3	;volatile
  2021  0D15                     l16:	
  2022                           ;SPI.c: 24:     }
  2023                           
  2024                           
  2025                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2026  0D15  0873               	movf	spiInit@sType,w
  2027  0D16  0471               	iorwf	spiInit@sClockIdle,w
  2028  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0D19  0094               	movwf	20	;volatile
  2031  0D1A                     l17:
  2032  0D1A  0008               	return
  2033  0D1B                     __end_of_spiInit:
  2034                           
  2035                           	psect	text6
  2036  0F40                     __ptext6:	
  2037 ;; *************** function _impr_cont *****************
  2038 ;; Defined at:
  2039 ;;		line 188 in file "main.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  uni             1    wreg     unsigned char 
  2042 ;;  dec             1    8[COMMON] unsigned char 
  2043 ;;  cen             1    9[COMMON] unsigned char 
  2044 ;;  val             1   10[COMMON] unsigned char 
  2045 ;;  fact            2   11[COMMON] int 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  uni             1   13[COMMON] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         5       0       0       0       0
  2058 ;;      Locals:         1       0       0       0       0
  2059 ;;      Temps:          0       2       0       0       0
  2060 ;;      Totals:         6       2       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    3
  2064 ;; This function calls:
  2065 ;;		_Lcd_Set_Cursor
  2066 ;;		_Lcd_Write_Char
  2067 ;;		___lwdiv
  2068 ;;		___wmul
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _impr_cont
  2076  0F40                     _impr_cont:
  2077  0F40                     l1484:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _impr_cont: [wreg+status,2+status,0+pclath+cstack]
  2080                           
  2081                           
  2082                           ;main.c: 189:     temp = val * fact;
  2083  0F40  087A               	movf	impr_cont@val,w
  2084  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0F43  00A0               	movwf	??_impr_cont
  2087  0F44  01A1               	clrf	??_impr_cont+1
  2088  0F45  0820               	movf	??_impr_cont,w
  2089  0F46  00F0               	movwf	___wmul@multiplier
  2090  0F47  0821               	movf	??_impr_cont+1,w
  2091  0F48  00F1               	movwf	___wmul@multiplier+1
  2092  0F49  087C               	movf	impr_cont@fact+1,w
  2093  0F4A  00F3               	movwf	___wmul@multiplicand+1
  2094  0F4B  087B               	movf	impr_cont@fact,w
  2095  0F4C  00F2               	movwf	___wmul@multiplicand
  2096  0F4D  120A  158A  259A  120A  158A  	fcall	___wmul
  2097  0F52  0871               	movf	?___wmul+1,w
  2098  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0F55  00CA               	movwf	_temp+1
  2101  0F56  0870               	movf	?___wmul,w
  2102  0F57  00C9               	movwf	_temp
  2103                           
  2104                           ;main.c: 190:     uni = temp / 100;
  2105  0F58  3064               	movlw	100
  2106  0F59  00F0               	movwf	___lwdiv@divisor
  2107  0F5A  3000               	movlw	0
  2108  0F5B  00F1               	movwf	___lwdiv@divisor+1
  2109  0F5C  084A               	movf	_temp+1,w
  2110  0F5D  00F3               	movwf	___lwdiv@dividend+1
  2111  0F5E  0849               	movf	_temp,w
  2112  0F5F  00F2               	movwf	___lwdiv@dividend
  2113  0F60  120A  158A  25E6  120A  158A  	fcall	___lwdiv
  2114  0F65  0870               	movf	?___lwdiv,w
  2115  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0F68  00A0               	movwf	??_impr_cont
  2118  0F69  0820               	movf	??_impr_cont,w
  2119  0F6A  00FD               	movwf	impr_cont@uni
  2120                           
  2121                           ;main.c: 191:     temp = temp - (uni * 100);
  2122  0F6B  087D               	movf	impr_cont@uni,w
  2123  0F6C  00A0               	movwf	??_impr_cont
  2124  0F6D  01A1               	clrf	??_impr_cont+1
  2125  0F6E  0820               	movf	??_impr_cont,w
  2126  0F6F  00F0               	movwf	___wmul@multiplier
  2127  0F70  0821               	movf	??_impr_cont+1,w
  2128  0F71  00F1               	movwf	___wmul@multiplier+1
  2129  0F72  309C               	movlw	156
  2130  0F73  00F2               	movwf	___wmul@multiplicand
  2131  0F74  30FF               	movlw	255
  2132  0F75  00F3               	movwf	___wmul@multiplicand+1
  2133  0F76  120A  158A  259A  120A  158A  	fcall	___wmul
  2134  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0F7D  0849               	movf	_temp,w
  2137  0F7E  0770               	addwf	?___wmul,w
  2138  0F7F  00C9               	movwf	_temp
  2139  0F80  084A               	movf	_temp+1,w
  2140  0F81  1803               	skipnc
  2141  0F82  0A4A               	incf	_temp+1,w
  2142  0F83  0771               	addwf	?___wmul+1,w
  2143  0F84  00CA               	movwf	_temp+1
  2144                           
  2145                           ;main.c: 192:     dec = temp / 10;
  2146  0F85  300A               	movlw	10
  2147  0F86  00F0               	movwf	___lwdiv@divisor
  2148  0F87  3000               	movlw	0
  2149  0F88  00F1               	movwf	___lwdiv@divisor+1
  2150  0F89  084A               	movf	_temp+1,w
  2151  0F8A  00F3               	movwf	___lwdiv@dividend+1
  2152  0F8B  0849               	movf	_temp,w
  2153  0F8C  00F2               	movwf	___lwdiv@dividend
  2154  0F8D  120A  158A  25E6  120A  158A  	fcall	___lwdiv
  2155  0F92  0870               	movf	?___lwdiv,w
  2156  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0F95  00A0               	movwf	??_impr_cont
  2159  0F96  0820               	movf	??_impr_cont,w
  2160  0F97  00F8               	movwf	impr_cont@dec
  2161                           
  2162                           ;main.c: 193:     temp = temp - (dec * 10);
  2163  0F98  0878               	movf	impr_cont@dec,w
  2164  0F99  00A0               	movwf	??_impr_cont
  2165  0F9A  01A1               	clrf	??_impr_cont+1
  2166  0F9B  0820               	movf	??_impr_cont,w
  2167  0F9C  00F0               	movwf	___wmul@multiplier
  2168  0F9D  0821               	movf	??_impr_cont+1,w
  2169  0F9E  00F1               	movwf	___wmul@multiplier+1
  2170  0F9F  30F6               	movlw	246
  2171  0FA0  00F2               	movwf	___wmul@multiplicand
  2172  0FA1  30FF               	movlw	255
  2173  0FA2  00F3               	movwf	___wmul@multiplicand+1
  2174  0FA3  120A  158A  259A  120A  158A  	fcall	___wmul
  2175  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0FAA  0849               	movf	_temp,w
  2178  0FAB  0770               	addwf	?___wmul,w
  2179  0FAC  00C9               	movwf	_temp
  2180  0FAD  084A               	movf	_temp+1,w
  2181  0FAE  1803               	skipnc
  2182  0FAF  0A4A               	incf	_temp+1,w
  2183  0FB0  0771               	addwf	?___wmul+1,w
  2184  0FB1  00CA               	movwf	_temp+1
  2185  0FB2                     l1486:
  2186                           
  2187                           ;main.c: 194:     cen = temp;
  2188  0FB2  0849               	movf	_temp,w
  2189  0FB3  00A0               	movwf	??_impr_cont
  2190  0FB4  0820               	movf	??_impr_cont,w
  2191  0FB5  00F9               	movwf	impr_cont@cen
  2192  0FB6                     l1488:
  2193                           
  2194                           ;main.c: 197:     Lcd_Set_Cursor(2, 7);
  2195  0FB6  3007               	movlw	7
  2196  0FB7  00A0               	movwf	??_impr_cont
  2197  0FB8  0820               	movf	??_impr_cont,w
  2198  0FB9  00F4               	movwf	Lcd_Set_Cursor@b
  2199  0FBA  3002               	movlw	2
  2200  0FBB  120A  158A  2551  120A  158A  	fcall	_Lcd_Set_Cursor
  2201  0FC0                     l1490:
  2202                           
  2203                           ;main.c: 198:     uni = uni + 48;
  2204  0FC0  087D               	movf	impr_cont@uni,w
  2205  0FC1  3E30               	addlw	48
  2206  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0FC4  00A0               	movwf	??_impr_cont
  2209  0FC5  0820               	movf	??_impr_cont,w
  2210  0FC6  00FD               	movwf	impr_cont@uni
  2211  0FC7                     l1492:
  2212                           
  2213                           ;main.c: 199:     Lcd_Write_Char(uni);
  2214  0FC7  087D               	movf	impr_cont@uni,w
  2215  0FC8  120A  158A  24EF  120A  158A  	fcall	_Lcd_Write_Char
  2216  0FCD                     l1494:
  2217                           
  2218                           ;main.c: 201:     Lcd_Set_Cursor(2, 8);
  2219  0FCD  3008               	movlw	8
  2220  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0FD0  00A0               	movwf	??_impr_cont
  2223  0FD1  0820               	movf	??_impr_cont,w
  2224  0FD2  00F4               	movwf	Lcd_Set_Cursor@b
  2225  0FD3  3002               	movlw	2
  2226  0FD4  120A  158A  2551  120A  158A  	fcall	_Lcd_Set_Cursor
  2227  0FD9                     l1496:
  2228                           
  2229                           ;main.c: 202:     dec = dec + 48;
  2230  0FD9  0878               	movf	impr_cont@dec,w
  2231  0FDA  3E30               	addlw	48
  2232  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0FDD  00A0               	movwf	??_impr_cont
  2235  0FDE  0820               	movf	??_impr_cont,w
  2236  0FDF  00F8               	movwf	impr_cont@dec
  2237  0FE0                     l1498:
  2238                           
  2239                           ;main.c: 203:     Lcd_Write_Char(dec);
  2240  0FE0  0878               	movf	impr_cont@dec,w
  2241  0FE1  120A  158A  24EF  120A  158A  	fcall	_Lcd_Write_Char
  2242  0FE6                     l1500:
  2243                           
  2244                           ;main.c: 205:     Lcd_Set_Cursor(2, 9);
  2245  0FE6  3009               	movlw	9
  2246  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0FE9  00A0               	movwf	??_impr_cont
  2249  0FEA  0820               	movf	??_impr_cont,w
  2250  0FEB  00F4               	movwf	Lcd_Set_Cursor@b
  2251  0FEC  3002               	movlw	2
  2252  0FED  120A  158A  2551  120A  158A  	fcall	_Lcd_Set_Cursor
  2253  0FF2                     l1502:
  2254                           
  2255                           ;main.c: 206:     cen = cen + 48;
  2256  0FF2  0879               	movf	impr_cont@cen,w
  2257  0FF3  3E30               	addlw	48
  2258  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0FF6  00A0               	movwf	??_impr_cont
  2261  0FF7  0820               	movf	??_impr_cont,w
  2262  0FF8  00F9               	movwf	impr_cont@cen
  2263  0FF9                     l1504:
  2264                           
  2265                           ;main.c: 207:     Lcd_Write_Char(cen);
  2266  0FF9  0879               	movf	impr_cont@cen,w
  2267  0FFA  120A  158A  24EF  120A  158A  	fcall	_Lcd_Write_Char
  2268  0FFF                     l120:
  2269  0FFF  0008               	return
  2270  1000                     __end_of_impr_cont:
  2271                           
  2272                           	psect	text7
  2273  0084                     __ptext7:	
  2274 ;; *************** function _impr_Pot *****************
  2275 ;; Defined at:
  2276 ;;		line 210 in file "main.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  uni             1    wreg     unsigned char 
  2279 ;;  dec             1    8[COMMON] unsigned char 
  2280 ;;  cen             1    9[COMMON] unsigned char 
  2281 ;;  val             1   10[COMMON] unsigned char 
  2282 ;;  fact            2   11[COMMON] int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  uni             1   13[COMMON] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         5       0       0       0       0
  2295 ;;      Locals:         1       0       0       0       0
  2296 ;;      Temps:          0       2       0       0       0
  2297 ;;      Totals:         6       2       0       0       0
  2298 ;;Total ram usage:        8 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		_Lcd_Set_Cursor
  2303 ;;		_Lcd_Write_Char
  2304 ;;		_Lcd_Write_String
  2305 ;;		___lwdiv
  2306 ;;		___wmul
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _impr_Pot
  2314  0084                     _impr_Pot:
  2315  0084                     l1458:	
  2316                           ;incstack = 0
  2317                           ; Regs used in _impr_Pot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2318                           
  2319                           
  2320                           ;main.c: 211:     temp = val * fact;
  2321  0084  087A               	movf	impr_Pot@val,w
  2322  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0087  00A0               	movwf	??_impr_Pot
  2325  0088  01A1               	clrf	??_impr_Pot+1
  2326  0089  0820               	movf	??_impr_Pot,w
  2327  008A  00F0               	movwf	___wmul@multiplier
  2328  008B  0821               	movf	??_impr_Pot+1,w
  2329  008C  00F1               	movwf	___wmul@multiplier+1
  2330  008D  087C               	movf	impr_Pot@fact+1,w
  2331  008E  00F3               	movwf	___wmul@multiplicand+1
  2332  008F  087B               	movf	impr_Pot@fact,w
  2333  0090  00F2               	movwf	___wmul@multiplicand
  2334  0091  120A  158A  259A  120A  118A  	fcall	___wmul
  2335  0096  0871               	movf	?___wmul+1,w
  2336  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0099  00CA               	movwf	_temp+1
  2339  009A  0870               	movf	?___wmul,w
  2340  009B  00C9               	movwf	_temp
  2341                           
  2342                           ;main.c: 212:     uni = temp / 100;
  2343  009C  3064               	movlw	100
  2344  009D  00F0               	movwf	___lwdiv@divisor
  2345  009E  3000               	movlw	0
  2346  009F  00F1               	movwf	___lwdiv@divisor+1
  2347  00A0  084A               	movf	_temp+1,w
  2348  00A1  00F3               	movwf	___lwdiv@dividend+1
  2349  00A2  0849               	movf	_temp,w
  2350  00A3  00F2               	movwf	___lwdiv@dividend
  2351  00A4  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  2352  00A9  0870               	movf	?___lwdiv,w
  2353  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2354  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  2355  00AC  00A0               	movwf	??_impr_Pot
  2356  00AD  0820               	movf	??_impr_Pot,w
  2357  00AE  00FD               	movwf	impr_Pot@uni
  2358                           
  2359                           ;main.c: 213:     temp = temp - (uni * 100);
  2360  00AF  087D               	movf	impr_Pot@uni,w
  2361  00B0  00A0               	movwf	??_impr_Pot
  2362  00B1  01A1               	clrf	??_impr_Pot+1
  2363  00B2  0820               	movf	??_impr_Pot,w
  2364  00B3  00F0               	movwf	___wmul@multiplier
  2365  00B4  0821               	movf	??_impr_Pot+1,w
  2366  00B5  00F1               	movwf	___wmul@multiplier+1
  2367  00B6  309C               	movlw	156
  2368  00B7  00F2               	movwf	___wmul@multiplicand
  2369  00B8  30FF               	movlw	255
  2370  00B9  00F3               	movwf	___wmul@multiplicand+1
  2371  00BA  120A  158A  259A  120A  118A  	fcall	___wmul
  2372  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2373  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2374  00C1  0849               	movf	_temp,w
  2375  00C2  0770               	addwf	?___wmul,w
  2376  00C3  00C9               	movwf	_temp
  2377  00C4  084A               	movf	_temp+1,w
  2378  00C5  1803               	skipnc
  2379  00C6  0A4A               	incf	_temp+1,w
  2380  00C7  0771               	addwf	?___wmul+1,w
  2381  00C8  00CA               	movwf	_temp+1
  2382                           
  2383                           ;main.c: 214:     dec = temp / 10;
  2384  00C9  300A               	movlw	10
  2385  00CA  00F0               	movwf	___lwdiv@divisor
  2386  00CB  3000               	movlw	0
  2387  00CC  00F1               	movwf	___lwdiv@divisor+1
  2388  00CD  084A               	movf	_temp+1,w
  2389  00CE  00F3               	movwf	___lwdiv@dividend+1
  2390  00CF  0849               	movf	_temp,w
  2391  00D0  00F2               	movwf	___lwdiv@dividend
  2392  00D1  120A  158A  25E6  120A  118A  	fcall	___lwdiv
  2393  00D6  0870               	movf	?___lwdiv,w
  2394  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2395  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2396  00D9  00A0               	movwf	??_impr_Pot
  2397  00DA  0820               	movf	??_impr_Pot,w
  2398  00DB  00F8               	movwf	impr_Pot@dec
  2399                           
  2400                           ;main.c: 215:     temp = temp - (dec * 10);
  2401  00DC  0878               	movf	impr_Pot@dec,w
  2402  00DD  00A0               	movwf	??_impr_Pot
  2403  00DE  01A1               	clrf	??_impr_Pot+1
  2404  00DF  0820               	movf	??_impr_Pot,w
  2405  00E0  00F0               	movwf	___wmul@multiplier
  2406  00E1  0821               	movf	??_impr_Pot+1,w
  2407  00E2  00F1               	movwf	___wmul@multiplier+1
  2408  00E3  30F6               	movlw	246
  2409  00E4  00F2               	movwf	___wmul@multiplicand
  2410  00E5  30FF               	movlw	255
  2411  00E6  00F3               	movwf	___wmul@multiplicand+1
  2412  00E7  120A  158A  259A  120A  118A  	fcall	___wmul
  2413  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2414  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  2415  00EE  0849               	movf	_temp,w
  2416  00EF  0770               	addwf	?___wmul,w
  2417  00F0  00C9               	movwf	_temp
  2418  00F1  084A               	movf	_temp+1,w
  2419  00F2  1803               	skipnc
  2420  00F3  0A4A               	incf	_temp+1,w
  2421  00F4  0771               	addwf	?___wmul+1,w
  2422  00F5  00CA               	movwf	_temp+1
  2423  00F6                     l1460:
  2424                           
  2425                           ;main.c: 216:     cen = temp;
  2426  00F6  0849               	movf	_temp,w
  2427  00F7  00A0               	movwf	??_impr_Pot
  2428  00F8  0820               	movf	??_impr_Pot,w
  2429  00F9  00F9               	movwf	impr_Pot@cen
  2430  00FA                     l1462:
  2431                           
  2432                           ;main.c: 219:     Lcd_Set_Cursor(2, 1);
  2433  00FA  01F4               	clrf	Lcd_Set_Cursor@b
  2434  00FB  0AF4               	incf	Lcd_Set_Cursor@b,f
  2435  00FC  3002               	movlw	2
  2436  00FD  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  2437  0102                     l1464:
  2438                           
  2439                           ;main.c: 220:     uni = uni + 48;
  2440  0102  087D               	movf	impr_Pot@uni,w
  2441  0103  3E30               	addlw	48
  2442  0104  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0105  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0106  00A0               	movwf	??_impr_Pot
  2445  0107  0820               	movf	??_impr_Pot,w
  2446  0108  00FD               	movwf	impr_Pot@uni
  2447  0109                     l1466:
  2448                           
  2449                           ;main.c: 221:     Lcd_Write_Char(uni);
  2450  0109  087D               	movf	impr_Pot@uni,w
  2451  010A  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  2452  010F                     l1468:
  2453                           
  2454                           ;main.c: 223:     Lcd_Set_Cursor(2, 2);
  2455  010F  3002               	movlw	2
  2456  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0112  00A0               	movwf	??_impr_Pot
  2459  0113  0820               	movf	??_impr_Pot,w
  2460  0114  00F4               	movwf	Lcd_Set_Cursor@b
  2461  0115  3002               	movlw	2
  2462  0116  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  2463  011B                     l1470:
  2464                           
  2465                           ;main.c: 224:     Lcd_Write_String(":");
  2466  011B  3003               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  2467  011C  120A  158A  2575  120A  118A  	fcall	_Lcd_Write_String
  2468  0121                     l1472:
  2469                           
  2470                           ;main.c: 226:     Lcd_Set_Cursor(2, 3);
  2471  0121  3003               	movlw	3
  2472  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0124  00A0               	movwf	??_impr_Pot
  2475  0125  0820               	movf	??_impr_Pot,w
  2476  0126  00F4               	movwf	Lcd_Set_Cursor@b
  2477  0127  3002               	movlw	2
  2478  0128  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  2479  012D                     l1474:
  2480                           
  2481                           ;main.c: 227:     dec = dec + 48;
  2482  012D  0878               	movf	impr_Pot@dec,w
  2483  012E  3E30               	addlw	48
  2484  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0131  00A0               	movwf	??_impr_Pot
  2487  0132  0820               	movf	??_impr_Pot,w
  2488  0133  00F8               	movwf	impr_Pot@dec
  2489  0134                     l1476:
  2490                           
  2491                           ;main.c: 228:     Lcd_Write_Char(dec);
  2492  0134  0878               	movf	impr_Pot@dec,w
  2493  0135  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  2494  013A                     l1478:
  2495                           
  2496                           ;main.c: 230:     Lcd_Set_Cursor(2, 4);
  2497  013A  3004               	movlw	4
  2498  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2499  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2500  013D  00A0               	movwf	??_impr_Pot
  2501  013E  0820               	movf	??_impr_Pot,w
  2502  013F  00F4               	movwf	Lcd_Set_Cursor@b
  2503  0140  3002               	movlw	2
  2504  0141  120A  158A  2551  120A  118A  	fcall	_Lcd_Set_Cursor
  2505  0146                     l1480:
  2506                           
  2507                           ;main.c: 231:     cen = cen + 48;
  2508  0146  0879               	movf	impr_Pot@cen,w
  2509  0147  3E30               	addlw	48
  2510  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2512  014A  00A0               	movwf	??_impr_Pot
  2513  014B  0820               	movf	??_impr_Pot,w
  2514  014C  00F9               	movwf	impr_Pot@cen
  2515  014D                     l1482:
  2516                           
  2517                           ;main.c: 232:     Lcd_Write_Char(cen);
  2518  014D  0879               	movf	impr_Pot@cen,w
  2519  014E  120A  158A  24EF  120A  118A  	fcall	_Lcd_Write_Char
  2520  0153                     l123:
  2521  0153  0008               	return
  2522  0154                     __end_of_impr_Pot:
  2523                           
  2524                           	psect	text8
  2525  0D9A                     __ptext8:	
  2526 ;; *************** function ___wmul *****************
  2527 ;; Defined at:
  2528 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  multiplier      2    0[COMMON] unsigned int 
  2531 ;;  multiplicand    2    2[COMMON] unsigned int 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  product         2    4[COMMON] unsigned int 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMMON] unsigned int 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         4       0       0       0       0
  2544 ;;      Locals:         2       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         6       0       0       0       0
  2547 ;;Total ram usage:        6 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;;		_impr_cont
  2554 ;;		_impr_Pot
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function ___wmul
  2560  0D9A                     ___wmul:
  2561  0D9A                     l1368:	
  2562                           ;incstack = 0
  2563                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2564                           
  2565  0D9A  01F4               	clrf	___wmul@product
  2566  0D9B  01F5               	clrf	___wmul@product+1
  2567  0D9C                     l1370:
  2568  0D9C  1C70               	btfss	___wmul@multiplier,0
  2569  0D9D  2D9F               	goto	u871
  2570  0D9E  2DA0               	goto	u870
  2571  0D9F                     u871:
  2572  0D9F  2DA6               	goto	l250
  2573  0DA0                     u870:
  2574  0DA0                     l1372:
  2575  0DA0  0872               	movf	___wmul@multiplicand,w
  2576  0DA1  07F4               	addwf	___wmul@product,f
  2577  0DA2  1803               	skipnc
  2578  0DA3  0AF5               	incf	___wmul@product+1,f
  2579  0DA4  0873               	movf	___wmul@multiplicand+1,w
  2580  0DA5  07F5               	addwf	___wmul@product+1,f
  2581  0DA6                     l250:
  2582  0DA6  3001               	movlw	1
  2583  0DA7                     u885:
  2584  0DA7  1003               	clrc
  2585  0DA8  0DF2               	rlf	___wmul@multiplicand,f
  2586  0DA9  0DF3               	rlf	___wmul@multiplicand+1,f
  2587  0DAA  3EFF               	addlw	-1
  2588  0DAB  1D03               	skipz
  2589  0DAC  2DA7               	goto	u885
  2590  0DAD                     l1374:
  2591  0DAD  3001               	movlw	1
  2592  0DAE                     u895:
  2593  0DAE  1003               	clrc
  2594  0DAF  0CF1               	rrf	___wmul@multiplier+1,f
  2595  0DB0  0CF0               	rrf	___wmul@multiplier,f
  2596  0DB1  3EFF               	addlw	-1
  2597  0DB2  1D03               	skipz
  2598  0DB3  2DAE               	goto	u895
  2599  0DB4                     l1376:
  2600  0DB4  0870               	movf	___wmul@multiplier,w
  2601  0DB5  0471               	iorwf	___wmul@multiplier+1,w
  2602  0DB6  1D03               	btfss	3,2
  2603  0DB7  2DB9               	goto	u901
  2604  0DB8  2DBA               	goto	u900
  2605  0DB9                     u901:
  2606  0DB9  2D9C               	goto	l1370
  2607  0DBA                     u900:
  2608  0DBA                     l1378:
  2609  0DBA  0875               	movf	___wmul@product+1,w
  2610  0DBB  00F1               	movwf	?___wmul+1
  2611  0DBC  0874               	movf	___wmul@product,w
  2612  0DBD  00F0               	movwf	?___wmul
  2613  0DBE                     l252:
  2614  0DBE  0008               	return
  2615  0DBF                     __end_of___wmul:
  2616                           
  2617                           	psect	text9
  2618  0DE6                     __ptext9:	
  2619 ;; *************** function ___lwdiv *****************
  2620 ;; Defined at:
  2621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  divisor         2    0[COMMON] unsigned int 
  2624 ;;  dividend        2    2[COMMON] unsigned int 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  quotient        2    5[COMMON] unsigned int 
  2627 ;;  counter         1    7[COMMON] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  2    0[COMMON] unsigned int 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         4       0       0       0       0
  2638 ;;      Locals:         3       0       0       0       0
  2639 ;;      Temps:          1       0       0       0       0
  2640 ;;      Totals:         8       0       0       0       0
  2641 ;;Total ram usage:        8 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;;		_impr_cont
  2648 ;;		_impr_Pot
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function ___lwdiv
  2654  0DE6                     ___lwdiv:
  2655  0DE6                     l1382:	
  2656                           ;incstack = 0
  2657                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2658                           
  2659  0DE6  01F5               	clrf	___lwdiv@quotient
  2660  0DE7  01F6               	clrf	___lwdiv@quotient+1
  2661  0DE8                     l1384:
  2662  0DE8  0870               	movf	___lwdiv@divisor,w
  2663  0DE9  0471               	iorwf	___lwdiv@divisor+1,w
  2664  0DEA  1903               	btfsc	3,2
  2665  0DEB  2DED               	goto	u911
  2666  0DEC  2DEE               	goto	u910
  2667  0DED                     u911:
  2668  0DED  2E25               	goto	l1404
  2669  0DEE                     u910:
  2670  0DEE                     l1386:
  2671  0DEE  01F7               	clrf	___lwdiv@counter
  2672  0DEF  0AF7               	incf	___lwdiv@counter,f
  2673  0DF0  2DFC               	goto	l1392
  2674  0DF1                     l1388:
  2675  0DF1  3001               	movlw	1
  2676  0DF2                     u925:
  2677  0DF2  1003               	clrc
  2678  0DF3  0DF0               	rlf	___lwdiv@divisor,f
  2679  0DF4  0DF1               	rlf	___lwdiv@divisor+1,f
  2680  0DF5  3EFF               	addlw	-1
  2681  0DF6  1D03               	skipz
  2682  0DF7  2DF2               	goto	u925
  2683  0DF8                     l1390:
  2684  0DF8  3001               	movlw	1
  2685  0DF9  00F4               	movwf	??___lwdiv
  2686  0DFA  0874               	movf	??___lwdiv,w
  2687  0DFB  07F7               	addwf	___lwdiv@counter,f
  2688  0DFC                     l1392:
  2689  0DFC  1FF1               	btfss	___lwdiv@divisor+1,7
  2690  0DFD  2DFF               	goto	u931
  2691  0DFE  2E00               	goto	u930
  2692  0DFF                     u931:
  2693  0DFF  2DF1               	goto	l1388
  2694  0E00                     u930:
  2695  0E00                     l1394:
  2696  0E00  3001               	movlw	1
  2697  0E01                     u945:
  2698  0E01  1003               	clrc
  2699  0E02  0DF5               	rlf	___lwdiv@quotient,f
  2700  0E03  0DF6               	rlf	___lwdiv@quotient+1,f
  2701  0E04  3EFF               	addlw	-1
  2702  0E05  1D03               	skipz
  2703  0E06  2E01               	goto	u945
  2704  0E07  0871               	movf	___lwdiv@divisor+1,w
  2705  0E08  0273               	subwf	___lwdiv@dividend+1,w
  2706  0E09  1D03               	skipz
  2707  0E0A  2E0D               	goto	u955
  2708  0E0B  0870               	movf	___lwdiv@divisor,w
  2709  0E0C  0272               	subwf	___lwdiv@dividend,w
  2710  0E0D                     u955:
  2711  0E0D  1C03               	skipc
  2712  0E0E  2E10               	goto	u951
  2713  0E0F  2E11               	goto	u950
  2714  0E10                     u951:
  2715  0E10  2E18               	goto	l1400
  2716  0E11                     u950:
  2717  0E11                     l1396:
  2718  0E11  0870               	movf	___lwdiv@divisor,w
  2719  0E12  02F2               	subwf	___lwdiv@dividend,f
  2720  0E13  0871               	movf	___lwdiv@divisor+1,w
  2721  0E14  1C03               	skipc
  2722  0E15  03F3               	decf	___lwdiv@dividend+1,f
  2723  0E16  02F3               	subwf	___lwdiv@dividend+1,f
  2724  0E17                     l1398:
  2725  0E17  1475               	bsf	___lwdiv@quotient,0
  2726  0E18                     l1400:
  2727  0E18  3001               	movlw	1
  2728  0E19                     u965:
  2729  0E19  1003               	clrc
  2730  0E1A  0CF1               	rrf	___lwdiv@divisor+1,f
  2731  0E1B  0CF0               	rrf	___lwdiv@divisor,f
  2732  0E1C  3EFF               	addlw	-1
  2733  0E1D  1D03               	skipz
  2734  0E1E  2E19               	goto	u965
  2735  0E1F                     l1402:
  2736  0E1F  3001               	movlw	1
  2737  0E20  02F7               	subwf	___lwdiv@counter,f
  2738  0E21  1D03               	btfss	3,2
  2739  0E22  2E24               	goto	u971
  2740  0E23  2E25               	goto	u970
  2741  0E24                     u971:
  2742  0E24  2E00               	goto	l1394
  2743  0E25                     u970:
  2744  0E25                     l1404:
  2745  0E25  0876               	movf	___lwdiv@quotient+1,w
  2746  0E26  00F1               	movwf	?___lwdiv+1
  2747  0E27  0875               	movf	___lwdiv@quotient,w
  2748  0E28  00F0               	movwf	?___lwdiv
  2749  0E29                     l522:
  2750  0E29  0008               	return
  2751  0E2A                     __end_of___lwdiv:
  2752                           
  2753                           	psect	text10
  2754  0D75                     __ptext10:	
  2755 ;; *************** function _Lcd_Write_String *****************
  2756 ;; Defined at:
  2757 ;;		line 62 in file "lcd.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  a               1    wreg     PTR unsigned char 
  2760 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  2761 ;;		 -> STR_4(2), STR_3(4), STR_2(4), STR_1(4), 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  a               1    5[COMMON] PTR unsigned char 
  2764 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  2765 ;;		 -> STR_4(2), STR_3(4), STR_2(4), STR_1(4), 
  2766 ;;  i               2    3[COMMON] int 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         3       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         3       0       0       0       0
  2780 ;;Total ram usage:        3 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    2
  2783 ;; This function calls:
  2784 ;;		_Lcd_Write_Char
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;;		_impr_Pot
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _Lcd_Write_String
  2793  0D75                     _Lcd_Write_String:
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2797                           ;Lcd_Write_String@a stored from wreg
  2798  0D75  00F5               	movwf	Lcd_Write_String@a
  2799  0D76                     l1360:
  2800                           
  2801                           ;lcd.c: 63:     int i;;lcd.c: 64:     for (i = 0; a[i] != '\0'; i++)
  2802  0D76  01F3               	clrf	Lcd_Write_String@i
  2803  0D77  01F4               	clrf	Lcd_Write_String@i+1
  2804  0D78  2D8C               	goto	l1366
  2805  0D79                     l1362:
  2806                           
  2807                           ;lcd.c: 65:         Lcd_Write_Char(a[i]);
  2808  0D79  0873               	movf	Lcd_Write_String@i,w
  2809  0D7A  0775               	addwf	Lcd_Write_String@a,w
  2810  0D7B  0084               	movwf	4
  2811  0D7C  120A  158A  2000  120A  158A  	fcall	stringdir
  2812  0D81  120A  158A  24EF  120A  158A  	fcall	_Lcd_Write_Char
  2813  0D86                     l1364:
  2814  0D86  3001               	movlw	1
  2815  0D87  07F3               	addwf	Lcd_Write_String@i,f
  2816  0D88  1803               	skipnc
  2817  0D89  0AF4               	incf	Lcd_Write_String@i+1,f
  2818  0D8A  3000               	movlw	0
  2819  0D8B  07F4               	addwf	Lcd_Write_String@i+1,f
  2820  0D8C                     l1366:
  2821  0D8C  0873               	movf	Lcd_Write_String@i,w
  2822  0D8D  0775               	addwf	Lcd_Write_String@a,w
  2823  0D8E  0084               	movwf	4
  2824  0D8F  120A  158A  2000  120A  158A  	fcall	stringdir
  2825  0D94  3A00               	xorlw	0
  2826  0D95  1D03               	skipz
  2827  0D96  2D98               	goto	u861
  2828  0D97  2D99               	goto	u860
  2829  0D98                     u861:
  2830  0D98  2D79               	goto	l1362
  2831  0D99                     u860:
  2832  0D99                     l158:
  2833  0D99  0008               	return
  2834  0D9A                     __end_of_Lcd_Write_String:
  2835                           
  2836                           	psect	text11
  2837  0CEF                     __ptext11:	
  2838 ;; *************** function _Lcd_Write_Char *****************
  2839 ;; Defined at:
  2840 ;;		line 54 in file "lcd.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  a               1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  a               1    2[COMMON] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0
  2857 ;;      Totals:         2       0       0       0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    1
  2861 ;; This function calls:
  2862 ;;		_Lcd_Port
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;;		_impr_cont
  2866 ;;		_impr_Pot
  2867 ;;		_Lcd_Write_String
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _Lcd_Write_Char
  2873  0CEF                     _Lcd_Write_Char:
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2877                           ;Lcd_Write_Char@a stored from wreg
  2878  0CEF  00F2               	movwf	Lcd_Write_Char@a
  2879  0CF0                     l1316:
  2880                           
  2881                           ;lcd.c: 55:     RE0 = 1;
  2882  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0CF2  1409               	bsf	9,0	;volatile
  2885  0CF3                     l1318:
  2886                           
  2887                           ;lcd.c: 56:     Lcd_Port(a);
  2888  0CF3  0872               	movf	Lcd_Write_Char@a,w
  2889  0CF4  120A  158A  24C6  120A  158A  	fcall	_Lcd_Port
  2890  0CF9                     l1320:
  2891                           
  2892                           ;lcd.c: 57:     RE1 = 1;
  2893  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0CFB  1489               	bsf	9,1	;volatile
  2896  0CFC                     l1322:
  2897                           
  2898                           ;lcd.c: 58:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2899  0CFC  301A               	movlw	26
  2900  0CFD  00F1               	movwf	??_Lcd_Write_Char
  2901  0CFE                     u1697:
  2902  0CFE  0BF1               	decfsz	??_Lcd_Write_Char,f
  2903  0CFF  2CFE               	goto	u1697
  2904  0D00  0000               	nop
  2905  0D01                     l1324:
  2906                           
  2907                           ;lcd.c: 59:     RE1 = 0;
  2908  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0D03  1089               	bcf	9,1	;volatile
  2911  0D04                     l152:
  2912  0D04  0008               	return
  2913  0D05                     __end_of_Lcd_Write_Char:
  2914                           
  2915                           	psect	text12
  2916  0D51                     __ptext12:	
  2917 ;; *************** function _Lcd_Set_Cursor *****************
  2918 ;; Defined at:
  2919 ;;		line 25 in file "lcd.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  a               1    wreg     unsigned char 
  2922 ;;  b               1    4[COMMON] unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  a               1    6[COMMON] unsigned char 
  2925 ;;  temp            1    7[COMMON] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         1       0       0       0       0
  2936 ;;      Locals:         2       0       0       0       0
  2937 ;;      Temps:          1       0       0       0       0
  2938 ;;      Totals:         4       0       0       0       0
  2939 ;;Total ram usage:        4 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    2
  2942 ;; This function calls:
  2943 ;;		_Lcd_Cmd
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;;		_impr_cont
  2947 ;;		_impr_Pot
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _Lcd_Set_Cursor
  2953  0D51                     _Lcd_Set_Cursor:
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2957                           ;Lcd_Set_Cursor@a stored from wreg
  2958  0D51  00F6               	movwf	Lcd_Set_Cursor@a
  2959  0D52                     l1348:
  2960                           
  2961                           ;lcd.c: 26:     char temp;;lcd.c: 27:     if (a == 1) {
  2962  0D52  0376               	decf	Lcd_Set_Cursor@a,w
  2963  0D53  1D03               	btfss	3,2
  2964  0D54  2D56               	goto	u841
  2965  0D55  2D57               	goto	u840
  2966  0D56                     u841:
  2967  0D56  2D63               	goto	l1354
  2968  0D57                     u840:
  2969  0D57                     l1350:
  2970                           
  2971                           ;lcd.c: 28:         temp = 0x80 + b - 1;
  2972  0D57  0874               	movf	Lcd_Set_Cursor@b,w
  2973  0D58  3E7F               	addlw	127
  2974  0D59  00F5               	movwf	??_Lcd_Set_Cursor
  2975  0D5A  0875               	movf	??_Lcd_Set_Cursor,w
  2976  0D5B  00F7               	movwf	Lcd_Set_Cursor@temp
  2977  0D5C                     l1352:
  2978                           
  2979                           ;lcd.c: 29:         Lcd_Cmd(temp);
  2980  0D5C  0877               	movf	Lcd_Set_Cursor@temp,w
  2981  0D5D  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  2982                           
  2983                           ;lcd.c: 30:     } else if (a == 2) {
  2984  0D62  2D74               	goto	l146
  2985  0D63                     l1354:
  2986  0D63  3002               	movlw	2
  2987  0D64  0676               	xorwf	Lcd_Set_Cursor@a,w
  2988  0D65  1D03               	btfss	3,2
  2989  0D66  2D68               	goto	u851
  2990  0D67  2D69               	goto	u850
  2991  0D68                     u851:
  2992  0D68  2D74               	goto	l146
  2993  0D69                     u850:
  2994  0D69                     l1356:
  2995                           
  2996                           ;lcd.c: 31:         temp = 0xC0 + b - 1;
  2997  0D69  0874               	movf	Lcd_Set_Cursor@b,w
  2998  0D6A  3EBF               	addlw	191
  2999  0D6B  00F5               	movwf	??_Lcd_Set_Cursor
  3000  0D6C  0875               	movf	??_Lcd_Set_Cursor,w
  3001  0D6D  00F7               	movwf	Lcd_Set_Cursor@temp
  3002  0D6E                     l1358:
  3003                           
  3004                           ;lcd.c: 32:         Lcd_Cmd(temp);
  3005  0D6E  0877               	movf	Lcd_Set_Cursor@temp,w
  3006  0D6F  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  3007  0D74                     l146:
  3008  0D74  0008               	return
  3009  0D75                     __end_of_Lcd_Set_Cursor:
  3010                           
  3011                           	psect	text13
  3012  0E86                     __ptext13:	
  3013 ;; *************** function ___xxtofl *****************
  3014 ;; Defined at:
  3015 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  sign            1    wreg     unsigned char 
  3018 ;;  val             4    0[COMMON] long 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  sign            1    8[COMMON] unsigned char 
  3021 ;;  arg             4   10[COMMON] unsigned long 
  3022 ;;  exp             1    9[COMMON] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  4    0[COMMON] unsigned char 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         4       0       0       0       0
  3033 ;;      Locals:         6       0       0       0       0
  3034 ;;      Temps:          4       0       0       0       0
  3035 ;;      Totals:        14       0       0       0       0
  3036 ;;Total ram usage:       14 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function ___xxtofl
  3047  0E86                     ___xxtofl:
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3051                           ;___xxtofl@sign stored from wreg
  3052  0E86  00F8               	movwf	___xxtofl@sign
  3053  0E87                     l1682:
  3054  0E87  0878               	movf	___xxtofl@sign,w
  3055  0E88  1903               	btfsc	3,2
  3056  0E89  2E8B               	goto	u1481
  3057  0E8A  2E8C               	goto	u1480
  3058  0E8B                     u1481:
  3059  0E8B  2EA0               	goto	l1688
  3060  0E8C                     u1480:
  3061  0E8C                     l1684:
  3062  0E8C  1FF3               	btfss	___xxtofl@val+3,7
  3063  0E8D  2E8F               	goto	u1491
  3064  0E8E  2E90               	goto	u1490
  3065  0E8F                     u1491:
  3066  0E8F  2EA0               	goto	l1688
  3067  0E90                     u1490:
  3068  0E90                     l1686:
  3069  0E90  0970               	comf	___xxtofl@val,w
  3070  0E91  00FA               	movwf	___xxtofl@arg
  3071  0E92  0971               	comf	___xxtofl@val+1,w
  3072  0E93  00FB               	movwf	___xxtofl@arg+1
  3073  0E94  0972               	comf	___xxtofl@val+2,w
  3074  0E95  00FC               	movwf	___xxtofl@arg+2
  3075  0E96  0973               	comf	___xxtofl@val+3,w
  3076  0E97  00FD               	movwf	___xxtofl@arg+3
  3077  0E98  0AFA               	incf	___xxtofl@arg,f
  3078  0E99  1903               	skipnz
  3079  0E9A  0AFB               	incf	___xxtofl@arg+1,f
  3080  0E9B  1903               	skipnz
  3081  0E9C  0AFC               	incf	___xxtofl@arg+2,f
  3082  0E9D  1903               	skipnz
  3083  0E9E  0AFD               	incf	___xxtofl@arg+3,f
  3084  0E9F  2EA8               	goto	l683
  3085  0EA0                     l1688:
  3086  0EA0  0873               	movf	___xxtofl@val+3,w
  3087  0EA1  00FD               	movwf	___xxtofl@arg+3
  3088  0EA2  0872               	movf	___xxtofl@val+2,w
  3089  0EA3  00FC               	movwf	___xxtofl@arg+2
  3090  0EA4  0871               	movf	___xxtofl@val+1,w
  3091  0EA5  00FB               	movwf	___xxtofl@arg+1
  3092  0EA6  0870               	movf	___xxtofl@val,w
  3093  0EA7  00FA               	movwf	___xxtofl@arg
  3094  0EA8                     l683:
  3095  0EA8  0873               	movf	___xxtofl@val+3,w
  3096  0EA9  0472               	iorwf	___xxtofl@val+2,w
  3097  0EAA  0471               	iorwf	___xxtofl@val+1,w
  3098  0EAB  0470               	iorwf	___xxtofl@val,w
  3099  0EAC  1D03               	skipz
  3100  0EAD  2EAF               	goto	u1501
  3101  0EAE  2EB0               	goto	u1500
  3102  0EAF                     u1501:
  3103  0EAF  2EB9               	goto	l1694
  3104  0EB0                     u1500:
  3105  0EB0                     l1690:
  3106  0EB0  3000               	movlw	0
  3107  0EB1  00F3               	movwf	?___xxtofl+3
  3108  0EB2  3000               	movlw	0
  3109  0EB3  00F2               	movwf	?___xxtofl+2
  3110  0EB4  3000               	movlw	0
  3111  0EB5  00F1               	movwf	?___xxtofl+1
  3112  0EB6  3000               	movlw	0
  3113  0EB7  00F0               	movwf	?___xxtofl
  3114  0EB8  2F3F               	goto	l685
  3115  0EB9                     l1694:
  3116  0EB9  3096               	movlw	150
  3117  0EBA  00F4               	movwf	??___xxtofl
  3118  0EBB  0874               	movf	??___xxtofl,w
  3119  0EBC  00F9               	movwf	___xxtofl@exp
  3120  0EBD  2ECB               	goto	l1698
  3121  0EBE                     l1696:
  3122  0EBE  3001               	movlw	1
  3123  0EBF  00F4               	movwf	??___xxtofl
  3124  0EC0  0874               	movf	??___xxtofl,w
  3125  0EC1  07F9               	addwf	___xxtofl@exp,f
  3126  0EC2  3001               	movlw	1
  3127  0EC3                     u1515:
  3128  0EC3  1003               	clrc
  3129  0EC4  0CFD               	rrf	___xxtofl@arg+3,f
  3130  0EC5  0CFC               	rrf	___xxtofl@arg+2,f
  3131  0EC6  0CFB               	rrf	___xxtofl@arg+1,f
  3132  0EC7  0CFA               	rrf	___xxtofl@arg,f
  3133  0EC8  3EFF               	addlw	-1
  3134  0EC9  1D03               	skipz
  3135  0ECA  2EC3               	goto	u1515
  3136  0ECB                     l1698:
  3137  0ECB  30FE               	movlw	254
  3138  0ECC  057D               	andwf	___xxtofl@arg+3,w
  3139  0ECD  1D03               	btfss	3,2
  3140  0ECE  2ED0               	goto	u1521
  3141  0ECF  2ED1               	goto	u1520
  3142  0ED0                     u1521:
  3143  0ED0  2EBE               	goto	l1696
  3144  0ED1                     u1520:
  3145  0ED1  2EED               	goto	l689
  3146  0ED2                     l1700:
  3147  0ED2  3001               	movlw	1
  3148  0ED3  00F4               	movwf	??___xxtofl
  3149  0ED4  0874               	movf	??___xxtofl,w
  3150  0ED5  07F9               	addwf	___xxtofl@exp,f
  3151  0ED6                     l1702:
  3152  0ED6  3001               	movlw	1
  3153  0ED7  07FA               	addwf	___xxtofl@arg,f
  3154  0ED8  3000               	movlw	0
  3155  0ED9  1803               	skipnc
  3156  0EDA  3001               	movlw	1
  3157  0EDB  07FB               	addwf	___xxtofl@arg+1,f
  3158  0EDC  3000               	movlw	0
  3159  0EDD  1803               	skipnc
  3160  0EDE  3001               	movlw	1
  3161  0EDF  07FC               	addwf	___xxtofl@arg+2,f
  3162  0EE0  3000               	movlw	0
  3163  0EE1  1803               	skipnc
  3164  0EE2  3001               	movlw	1
  3165  0EE3  07FD               	addwf	___xxtofl@arg+3,f
  3166  0EE4                     l1704:
  3167  0EE4  3001               	movlw	1
  3168  0EE5                     u1535:
  3169  0EE5  1003               	clrc
  3170  0EE6  0CFD               	rrf	___xxtofl@arg+3,f
  3171  0EE7  0CFC               	rrf	___xxtofl@arg+2,f
  3172  0EE8  0CFB               	rrf	___xxtofl@arg+1,f
  3173  0EE9  0CFA               	rrf	___xxtofl@arg,f
  3174  0EEA  3EFF               	addlw	-1
  3175  0EEB  1D03               	skipz
  3176  0EEC  2EE5               	goto	u1535
  3177  0EED                     l689:
  3178  0EED  30FF               	movlw	255
  3179  0EEE  057D               	andwf	___xxtofl@arg+3,w
  3180  0EEF  1D03               	btfss	3,2
  3181  0EF0  2EF2               	goto	u1541
  3182  0EF1  2EF3               	goto	u1540
  3183  0EF2                     u1541:
  3184  0EF2  2ED2               	goto	l1700
  3185  0EF3                     u1540:
  3186  0EF3  2EFF               	goto	l1708
  3187  0EF4                     l1706:
  3188  0EF4  3001               	movlw	1
  3189  0EF5  02F9               	subwf	___xxtofl@exp,f
  3190  0EF6  3001               	movlw	1
  3191  0EF7  00F4               	movwf	??___xxtofl
  3192  0EF8                     u1555:
  3193  0EF8  1003               	clrc
  3194  0EF9  0DFA               	rlf	___xxtofl@arg,f
  3195  0EFA  0DFB               	rlf	___xxtofl@arg+1,f
  3196  0EFB  0DFC               	rlf	___xxtofl@arg+2,f
  3197  0EFC  0DFD               	rlf	___xxtofl@arg+3,f
  3198  0EFD  0BF4               	decfsz	??___xxtofl,f
  3199  0EFE  2EF8               	goto	u1555
  3200  0EFF                     l1708:
  3201  0EFF  1BFC               	btfsc	___xxtofl@arg+2,7
  3202  0F00  2F02               	goto	u1561
  3203  0F01  2F03               	goto	u1560
  3204  0F02                     u1561:
  3205  0F02  2F09               	goto	l696
  3206  0F03                     u1560:
  3207  0F03                     l1710:
  3208  0F03  3002               	movlw	2
  3209  0F04  0279               	subwf	___xxtofl@exp,w
  3210  0F05  1803               	skipnc
  3211  0F06  2F08               	goto	u1571
  3212  0F07  2F09               	goto	u1570
  3213  0F08                     u1571:
  3214  0F08  2EF4               	goto	l1706
  3215  0F09                     u1570:
  3216  0F09                     l696:
  3217  0F09  1879               	btfsc	___xxtofl@exp,0
  3218  0F0A  2F0C               	goto	u1581
  3219  0F0B  2F0D               	goto	u1580
  3220  0F0C                     u1581:
  3221  0F0C  2F15               	goto	l697
  3222  0F0D                     u1580:
  3223  0F0D                     l1712:
  3224  0F0D  30FF               	movlw	255
  3225  0F0E  05FA               	andwf	___xxtofl@arg,f
  3226  0F0F  30FF               	movlw	255
  3227  0F10  05FB               	andwf	___xxtofl@arg+1,f
  3228  0F11  307F               	movlw	127
  3229  0F12  05FC               	andwf	___xxtofl@arg+2,f
  3230  0F13  30FF               	movlw	255
  3231  0F14  05FD               	andwf	___xxtofl@arg+3,f
  3232  0F15                     l697:
  3233  0F15  1003               	clrc
  3234  0F16  0CF9               	rrf	___xxtofl@exp,f
  3235  0F17                     l1714:
  3236  0F17  0879               	movf	___xxtofl@exp,w
  3237  0F18  00F4               	movwf	??___xxtofl
  3238  0F19  01F5               	clrf	??___xxtofl+1
  3239  0F1A  01F6               	clrf	??___xxtofl+2
  3240  0F1B  01F7               	clrf	??___xxtofl+3
  3241  0F1C  3018               	movlw	24
  3242  0F1D                     u1595:
  3243  0F1D  1003               	clrc
  3244  0F1E  0DF4               	rlf	??___xxtofl,f
  3245  0F1F  0DF5               	rlf	??___xxtofl+1,f
  3246  0F20  0DF6               	rlf	??___xxtofl+2,f
  3247  0F21  0DF7               	rlf	??___xxtofl+3,f
  3248  0F22                     u1590:
  3249  0F22  3EFF               	addlw	-1
  3250  0F23  1D03               	skipz
  3251  0F24  2F1D               	goto	u1595
  3252  0F25  0874               	movf	??___xxtofl,w
  3253  0F26  04FA               	iorwf	___xxtofl@arg,f
  3254  0F27  0875               	movf	??___xxtofl+1,w
  3255  0F28  04FB               	iorwf	___xxtofl@arg+1,f
  3256  0F29  0876               	movf	??___xxtofl+2,w
  3257  0F2A  04FC               	iorwf	___xxtofl@arg+2,f
  3258  0F2B  0877               	movf	??___xxtofl+3,w
  3259  0F2C  04FD               	iorwf	___xxtofl@arg+3,f
  3260  0F2D                     l1716:
  3261  0F2D  0878               	movf	___xxtofl@sign,w
  3262  0F2E  1903               	btfsc	3,2
  3263  0F2F  2F31               	goto	u1601
  3264  0F30  2F32               	goto	u1600
  3265  0F31                     u1601:
  3266  0F31  2F37               	goto	l1722
  3267  0F32                     u1600:
  3268  0F32                     l1718:
  3269  0F32  1FF3               	btfss	___xxtofl@val+3,7
  3270  0F33  2F35               	goto	u1611
  3271  0F34  2F36               	goto	u1610
  3272  0F35                     u1611:
  3273  0F35  2F37               	goto	l1722
  3274  0F36                     u1610:
  3275  0F36                     l1720:
  3276  0F36  17FD               	bsf	___xxtofl@arg+3,7
  3277  0F37                     l1722:
  3278  0F37  087D               	movf	___xxtofl@arg+3,w
  3279  0F38  00F3               	movwf	?___xxtofl+3
  3280  0F39  087C               	movf	___xxtofl@arg+2,w
  3281  0F3A  00F2               	movwf	?___xxtofl+2
  3282  0F3B  087B               	movf	___xxtofl@arg+1,w
  3283  0F3C  00F1               	movwf	?___xxtofl+1
  3284  0F3D  087A               	movf	___xxtofl@arg,w
  3285  0F3E  00F0               	movwf	?___xxtofl
  3286  0F3F                     l685:
  3287  0F3F  0008               	return
  3288  0F40                     __end_of___xxtofl:
  3289                           
  3290                           	psect	text14
  3291  0008                     __ptext14:	
  3292 ;; *************** function ___fltol *****************
  3293 ;; Defined at:
  3294 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  f1              4   26[BANK0 ] unsigned char 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  exp1            1   36[BANK0 ] unsigned char 
  3299 ;;  sign1           1   35[BANK0 ] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  4   26[BANK0 ] long 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       4       0       0       0
  3310 ;;      Locals:         0       2       0       0       0
  3311 ;;      Temps:          0       5       0       0       0
  3312 ;;      Totals:         0      11       0       0       0
  3313 ;;Total ram usage:       11 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function ___fltol
  3324  0008                     ___fltol:
  3325  0008                     l1506:	
  3326                           ;incstack = 0
  3327                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3328                           
  3329  0008  1003               	clrc
  3330  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3331  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3332  000B  0D3C               	rlf	___fltol@f1+2,w
  3333  000C  0D3D               	rlf	___fltol@f1+3,w
  3334  000D  00BE               	movwf	??___fltol
  3335  000E  083E               	movf	??___fltol,w
  3336  000F  00C4               	movwf	___fltol@exp1
  3337  0010  0844               	movf	___fltol@exp1,w
  3338  0011  1D03               	btfss	3,2
  3339  0012  2814               	goto	u1011
  3340  0013  2815               	goto	u1010
  3341  0014                     u1011:
  3342  0014  281E               	goto	l1512
  3343  0015                     u1010:
  3344  0015                     l1508:
  3345  0015  3000               	movlw	0
  3346  0016  00BD               	movwf	?___fltol+3
  3347  0017  3000               	movlw	0
  3348  0018  00BC               	movwf	?___fltol+2
  3349  0019  3000               	movlw	0
  3350  001A  00BB               	movwf	?___fltol+1
  3351  001B  3000               	movlw	0
  3352  001C  00BA               	movwf	?___fltol
  3353  001D  2883               	goto	l436
  3354  001E                     l1512:
  3355  001E  083A               	movf	___fltol@f1,w
  3356  001F  00BE               	movwf	??___fltol
  3357  0020  083B               	movf	___fltol@f1+1,w
  3358  0021  00BF               	movwf	??___fltol+1
  3359  0022  083C               	movf	___fltol@f1+2,w
  3360  0023  00C0               	movwf	??___fltol+2
  3361  0024  083D               	movf	___fltol@f1+3,w
  3362  0025  00C1               	movwf	??___fltol+3
  3363  0026  301F               	movlw	31
  3364  0027                     u1025:
  3365  0027  1003               	clrc
  3366  0028  0CC1               	rrf	??___fltol+3,f
  3367  0029  0CC0               	rrf	??___fltol+2,f
  3368  002A  0CBF               	rrf	??___fltol+1,f
  3369  002B  0CBE               	rrf	??___fltol,f
  3370  002C                     u1020:
  3371  002C  3EFF               	addlw	-1
  3372  002D  1D03               	skipz
  3373  002E  2827               	goto	u1025
  3374  002F  083E               	movf	??___fltol,w
  3375  0030  00C2               	movwf	??___fltol+4
  3376  0031  0842               	movf	??___fltol+4,w
  3377  0032  00C3               	movwf	___fltol@sign1
  3378  0033                     l1514:
  3379  0033  17BC               	bsf	___fltol@f1+2,7
  3380  0034                     l1516:
  3381  0034  30FF               	movlw	255
  3382  0035  05BA               	andwf	___fltol@f1,f
  3383  0036  30FF               	movlw	255
  3384  0037  05BB               	andwf	___fltol@f1+1,f
  3385  0038  30FF               	movlw	255
  3386  0039  05BC               	andwf	___fltol@f1+2,f
  3387  003A  3000               	movlw	0
  3388  003B  05BD               	andwf	___fltol@f1+3,f
  3389  003C                     l1518:
  3390  003C  3096               	movlw	150
  3391  003D  02C4               	subwf	___fltol@exp1,f
  3392  003E                     l1520:
  3393  003E  1FC4               	btfss	___fltol@exp1,7
  3394  003F  2841               	goto	u1031
  3395  0040  2842               	goto	u1030
  3396  0041                     u1031:
  3397  0041  285C               	goto	l1530
  3398  0042                     u1030:
  3399  0042                     l1522:
  3400  0042  0844               	movf	___fltol@exp1,w
  3401  0043  3A80               	xorlw	128
  3402  0044  3E97               	addlw	151
  3403  0045  1803               	skipnc
  3404  0046  2848               	goto	u1041
  3405  0047  2849               	goto	u1040
  3406  0048                     u1041:
  3407  0048  284A               	goto	l1528
  3408  0049                     u1040:
  3409  0049  2815               	goto	l1508
  3410  004A                     l1528:
  3411  004A  3001               	movlw	1
  3412  004B                     u1055:
  3413  004B  1003               	clrc
  3414  004C  0CBD               	rrf	___fltol@f1+3,f
  3415  004D  0CBC               	rrf	___fltol@f1+2,f
  3416  004E  0CBB               	rrf	___fltol@f1+1,f
  3417  004F  0CBA               	rrf	___fltol@f1,f
  3418  0050  3EFF               	addlw	-1
  3419  0051  1D03               	skipz
  3420  0052  284B               	goto	u1055
  3421  0053  3001               	movlw	1
  3422  0054  00BE               	movwf	??___fltol
  3423  0055  083E               	movf	??___fltol,w
  3424  0056  07C4               	addwf	___fltol@exp1,f
  3425  0057  1D03               	btfss	3,2
  3426  0058  285A               	goto	u1061
  3427  0059  285B               	goto	u1060
  3428  005A                     u1061:
  3429  005A  284A               	goto	l1528
  3430  005B                     u1060:
  3431  005B  2873               	goto	l1538
  3432  005C                     l1530:
  3433  005C  3020               	movlw	32
  3434  005D  0244               	subwf	___fltol@exp1,w
  3435  005E  1C03               	skipc
  3436  005F  2861               	goto	u1071
  3437  0060  2862               	goto	u1070
  3438  0061                     u1071:
  3439  0061  286E               	goto	l443
  3440  0062                     u1070:
  3441  0062  2815               	goto	l1508
  3442  0063                     l1536:
  3443  0063  3001               	movlw	1
  3444  0064  00BE               	movwf	??___fltol
  3445  0065                     u1085:
  3446  0065  1003               	clrc
  3447  0066  0DBA               	rlf	___fltol@f1,f
  3448  0067  0DBB               	rlf	___fltol@f1+1,f
  3449  0068  0DBC               	rlf	___fltol@f1+2,f
  3450  0069  0DBD               	rlf	___fltol@f1+3,f
  3451  006A  0BBE               	decfsz	??___fltol,f
  3452  006B  2865               	goto	u1085
  3453  006C  3001               	movlw	1
  3454  006D  02C4               	subwf	___fltol@exp1,f
  3455  006E                     l443:
  3456  006E  0844               	movf	___fltol@exp1,w
  3457  006F  1D03               	btfss	3,2
  3458  0070  2872               	goto	u1091
  3459  0071  2873               	goto	u1090
  3460  0072                     u1091:
  3461  0072  2863               	goto	l1536
  3462  0073                     u1090:
  3463  0073                     l1538:
  3464  0073  0843               	movf	___fltol@sign1,w
  3465  0074  1903               	btfsc	3,2
  3466  0075  2877               	goto	u1101
  3467  0076  2878               	goto	u1100
  3468  0077                     u1101:
  3469  0077  2883               	goto	l446
  3470  0078                     u1100:
  3471  0078                     l1540:
  3472  0078  09BA               	comf	___fltol@f1,f
  3473  0079  09BB               	comf	___fltol@f1+1,f
  3474  007A  09BC               	comf	___fltol@f1+2,f
  3475  007B  09BD               	comf	___fltol@f1+3,f
  3476  007C  0ABA               	incf	___fltol@f1,f
  3477  007D  1903               	skipnz
  3478  007E  0ABB               	incf	___fltol@f1+1,f
  3479  007F  1903               	skipnz
  3480  0080  0ABC               	incf	___fltol@f1+2,f
  3481  0081  1903               	skipnz
  3482  0082  0ABD               	incf	___fltol@f1+3,f
  3483  0083                     l446:
  3484  0083                     l436:
  3485  0083  0008               	return
  3486  0084                     __end_of___fltol:
  3487                           
  3488                           	psect	text15
  3489  048B                     __ptext15:	
  3490 ;; *************** function ___flmul *****************
  3491 ;; Defined at:
  3492 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  b               4    0[BANK0 ] long 
  3495 ;;  a               4    4[BANK0 ] long 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  prod            4   20[BANK0 ] struct .
  3498 ;;  grs             4   14[BANK0 ] unsigned long 
  3499 ;;  temp            2   24[BANK0 ] struct .
  3500 ;;  bexp            1   19[BANK0 ] unsigned char 
  3501 ;;  aexp            1   18[BANK0 ] unsigned char 
  3502 ;;  sign            1   13[BANK0 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  4    0[BANK0 ] unsigned char 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       8       0       0       0
  3513 ;;      Locals:         0      13       0       0       0
  3514 ;;      Temps:          0       5       0       0       0
  3515 ;;      Totals:         0      26       0       0       0
  3516 ;;Total ram usage:       26 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		__Umul8_16
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function ___flmul
  3528  048B                     ___flmul:
  3529  048B                     l1542:	
  3530                           ;incstack = 0
  3531                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3532                           
  3533  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3534  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3535  048D  0823               	movf	___flmul@b+3,w
  3536  048E  3980               	andlw	128
  3537  048F  00A8               	movwf	??___flmul
  3538  0490  0828               	movf	??___flmul,w
  3539  0491  00AD               	movwf	___flmul@sign
  3540  0492                     l1544:
  3541  0492  0823               	movf	___flmul@b+3,w
  3542  0493  00A8               	movwf	??___flmul
  3543  0494  0728               	addwf	??___flmul,w
  3544  0495  00A9               	movwf	??___flmul+1
  3545  0496  0829               	movf	??___flmul+1,w
  3546  0497  00B3               	movwf	___flmul@bexp
  3547  0498                     l1546:
  3548  0498  1FA2               	btfss	___flmul@b+2,7
  3549  0499  2C9B               	goto	u1111
  3550  049A  2C9C               	goto	u1110
  3551  049B                     u1111:
  3552  049B  2C9D               	goto	l1550
  3553  049C                     u1110:
  3554  049C                     l1548:
  3555  049C  1433               	bsf	___flmul@bexp,0
  3556  049D                     l1550:
  3557  049D  0833               	movf	___flmul@bexp,w
  3558  049E  1903               	btfsc	3,2
  3559  049F  2CA1               	goto	u1121
  3560  04A0  2CA2               	goto	u1120
  3561  04A1                     u1121:
  3562  04A1  2CB1               	goto	l1558
  3563  04A2                     u1120:
  3564  04A2                     l1552:
  3565  04A2  0A33               	incf	___flmul@bexp,w
  3566  04A3  1D03               	btfss	3,2
  3567  04A4  2CA6               	goto	u1131
  3568  04A5  2CA7               	goto	u1130
  3569  04A6                     u1131:
  3570  04A6  2CAF               	goto	l1556
  3571  04A7                     u1130:
  3572  04A7                     l1554:
  3573  04A7  3000               	movlw	0
  3574  04A8  00A3               	movwf	___flmul@b+3
  3575  04A9  3000               	movlw	0
  3576  04AA  00A2               	movwf	___flmul@b+2
  3577  04AB  3000               	movlw	0
  3578  04AC  00A1               	movwf	___flmul@b+1
  3579  04AD  3000               	movlw	0
  3580  04AE  00A0               	movwf	___flmul@b
  3581  04AF                     l1556:
  3582  04AF  17A2               	bsf	___flmul@b+2,7
  3583  04B0  2CB9               	goto	l1560
  3584  04B1                     l1558:
  3585  04B1  3000               	movlw	0
  3586  04B2  00A3               	movwf	___flmul@b+3
  3587  04B3  3000               	movlw	0
  3588  04B4  00A2               	movwf	___flmul@b+2
  3589  04B5  3000               	movlw	0
  3590  04B6  00A1               	movwf	___flmul@b+1
  3591  04B7  3000               	movlw	0
  3592  04B8  00A0               	movwf	___flmul@b
  3593  04B9                     l1560:
  3594  04B9  0827               	movf	___flmul@a+3,w
  3595  04BA  3980               	andlw	128
  3596  04BB  00A8               	movwf	??___flmul
  3597  04BC  0828               	movf	??___flmul,w
  3598  04BD  06AD               	xorwf	___flmul@sign,f
  3599  04BE                     l1562:
  3600  04BE  0827               	movf	___flmul@a+3,w
  3601  04BF  00A8               	movwf	??___flmul
  3602  04C0  0728               	addwf	??___flmul,w
  3603  04C1  00A9               	movwf	??___flmul+1
  3604  04C2  0829               	movf	??___flmul+1,w
  3605  04C3  00B2               	movwf	___flmul@aexp
  3606  04C4                     l1564:
  3607  04C4  1FA6               	btfss	___flmul@a+2,7
  3608  04C5  2CC7               	goto	u1141
  3609  04C6  2CC8               	goto	u1140
  3610  04C7                     u1141:
  3611  04C7  2CC9               	goto	l1568
  3612  04C8                     u1140:
  3613  04C8                     l1566:
  3614  04C8  1432               	bsf	___flmul@aexp,0
  3615  04C9                     l1568:
  3616  04C9  0832               	movf	___flmul@aexp,w
  3617  04CA  1903               	btfsc	3,2
  3618  04CB  2CCD               	goto	u1151
  3619  04CC  2CCE               	goto	u1150
  3620  04CD                     u1151:
  3621  04CD  2CDD               	goto	l1576
  3622  04CE                     u1150:
  3623  04CE                     l1570:
  3624  04CE  0A32               	incf	___flmul@aexp,w
  3625  04CF  1D03               	btfss	3,2
  3626  04D0  2CD2               	goto	u1161
  3627  04D1  2CD3               	goto	u1160
  3628  04D2                     u1161:
  3629  04D2  2CDB               	goto	l1574
  3630  04D3                     u1160:
  3631  04D3                     l1572:
  3632  04D3  3000               	movlw	0
  3633  04D4  00A7               	movwf	___flmul@a+3
  3634  04D5  3000               	movlw	0
  3635  04D6  00A6               	movwf	___flmul@a+2
  3636  04D7  3000               	movlw	0
  3637  04D8  00A5               	movwf	___flmul@a+1
  3638  04D9  3000               	movlw	0
  3639  04DA  00A4               	movwf	___flmul@a
  3640  04DB                     l1574:
  3641  04DB  17A6               	bsf	___flmul@a+2,7
  3642  04DC  2CE5               	goto	l1578
  3643  04DD                     l1576:
  3644  04DD  3000               	movlw	0
  3645  04DE  00A7               	movwf	___flmul@a+3
  3646  04DF  3000               	movlw	0
  3647  04E0  00A6               	movwf	___flmul@a+2
  3648  04E1  3000               	movlw	0
  3649  04E2  00A5               	movwf	___flmul@a+1
  3650  04E3  3000               	movlw	0
  3651  04E4  00A4               	movwf	___flmul@a
  3652  04E5                     l1578:
  3653  04E5  0832               	movf	___flmul@aexp,w
  3654  04E6  1903               	btfsc	3,2
  3655  04E7  2CE9               	goto	u1171
  3656  04E8  2CEA               	goto	u1170
  3657  04E9                     u1171:
  3658  04E9  2CEF               	goto	l1582
  3659  04EA                     u1170:
  3660  04EA                     l1580:
  3661  04EA  0833               	movf	___flmul@bexp,w
  3662  04EB  1D03               	btfss	3,2
  3663  04EC  2CEE               	goto	u1181
  3664  04ED  2CEF               	goto	u1180
  3665  04EE                     u1181:
  3666  04EE  2CF8               	goto	l1586
  3667  04EF                     u1180:
  3668  04EF                     l1582:
  3669  04EF  3000               	movlw	0
  3670  04F0  00A3               	movwf	?___flmul+3
  3671  04F1  3000               	movlw	0
  3672  04F2  00A2               	movwf	?___flmul+2
  3673  04F3  3000               	movlw	0
  3674  04F4  00A1               	movwf	?___flmul+1
  3675  04F5  3000               	movlw	0
  3676  04F6  00A0               	movwf	?___flmul
  3677  04F7  2FEB               	goto	l639
  3678  04F8                     l1586:
  3679  04F8  0820               	movf	___flmul@b,w
  3680  04F9  00A8               	movwf	??___flmul
  3681  04FA  0828               	movf	??___flmul,w
  3682  04FB  00F0               	movwf	__Umul8_16@multiplicand
  3683  04FC  0826               	movf	___flmul@a+2,w
  3684  04FD  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3685  0502  0871               	movf	?__Umul8_16+1,w
  3686  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3688  0505  00B9               	movwf	___flmul@temp+1
  3689  0506  0870               	movf	?__Umul8_16,w
  3690  0507  00B8               	movwf	___flmul@temp
  3691  0508                     l1588:
  3692  0508  0838               	movf	___flmul@temp,w
  3693  0509  00A8               	movwf	??___flmul
  3694  050A  01A9               	clrf	??___flmul+1
  3695  050B  01AA               	clrf	??___flmul+2
  3696  050C  01AB               	clrf	??___flmul+3
  3697  050D  082B               	movf	??___flmul+3,w
  3698  050E  00B1               	movwf	___flmul@grs+3
  3699  050F  082A               	movf	??___flmul+2,w
  3700  0510  00B0               	movwf	___flmul@grs+2
  3701  0511  0829               	movf	??___flmul+1,w
  3702  0512  00AF               	movwf	___flmul@grs+1
  3703  0513  0828               	movf	??___flmul,w
  3704  0514  00AE               	movwf	___flmul@grs
  3705  0515                     l1590:
  3706  0515  0839               	movf	___flmul@temp+1,w
  3707  0516  00A8               	movwf	??___flmul
  3708  0517  01A9               	clrf	??___flmul+1
  3709  0518  01AA               	clrf	??___flmul+2
  3710  0519  01AB               	clrf	??___flmul+3
  3711  051A  082B               	movf	??___flmul+3,w
  3712  051B  00B7               	movwf	___flmul@prod+3
  3713  051C  082A               	movf	??___flmul+2,w
  3714  051D  00B6               	movwf	___flmul@prod+2
  3715  051E  0829               	movf	??___flmul+1,w
  3716  051F  00B5               	movwf	___flmul@prod+1
  3717  0520  0828               	movf	??___flmul,w
  3718  0521  00B4               	movwf	___flmul@prod
  3719  0522  0821               	movf	___flmul@b+1,w
  3720  0523  00A8               	movwf	??___flmul
  3721  0524  0828               	movf	??___flmul,w
  3722  0525  00F0               	movwf	__Umul8_16@multiplicand
  3723  0526  0825               	movf	___flmul@a+1,w
  3724  0527  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3725  052C  0871               	movf	?__Umul8_16+1,w
  3726  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3727  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3728  052F  00B9               	movwf	___flmul@temp+1
  3729  0530  0870               	movf	?__Umul8_16,w
  3730  0531  00B8               	movwf	___flmul@temp
  3731  0532                     l1592:
  3732  0532  0838               	movf	___flmul@temp,w
  3733  0533  00A8               	movwf	??___flmul
  3734  0534  01A9               	clrf	??___flmul+1
  3735  0535  01AA               	clrf	??___flmul+2
  3736  0536  01AB               	clrf	??___flmul+3
  3737  0537  0828               	movf	??___flmul,w
  3738  0538  07AE               	addwf	___flmul@grs,f
  3739  0539  0829               	movf	??___flmul+1,w
  3740  053A  1103               	clrz
  3741  053B  1803               	skipnc
  3742  053C  3E01               	addlw	1
  3743  053D  1903               	skipnz
  3744  053E  2D40               	goto	u1191
  3745  053F  07AF               	addwf	___flmul@grs+1,f
  3746  0540                     u1191:
  3747  0540  082A               	movf	??___flmul+2,w
  3748  0541  1103               	clrz
  3749  0542  1803               	skipnc
  3750  0543  3E01               	addlw	1
  3751  0544  1903               	skipnz
  3752  0545  2D47               	goto	u1192
  3753  0546  07B0               	addwf	___flmul@grs+2,f
  3754  0547                     u1192:
  3755  0547  082B               	movf	??___flmul+3,w
  3756  0548  1103               	clrz
  3757  0549  1803               	skipnc
  3758  054A  3E01               	addlw	1
  3759  054B  1903               	skipnz
  3760  054C  2D4E               	goto	u1193
  3761  054D  07B1               	addwf	___flmul@grs+3,f
  3762  054E                     u1193:
  3763  054E                     l1594:
  3764  054E  0839               	movf	___flmul@temp+1,w
  3765  054F  00A8               	movwf	??___flmul
  3766  0550  01A9               	clrf	??___flmul+1
  3767  0551  01AA               	clrf	??___flmul+2
  3768  0552  01AB               	clrf	??___flmul+3
  3769  0553  0828               	movf	??___flmul,w
  3770  0554  07B4               	addwf	___flmul@prod,f
  3771  0555  0829               	movf	??___flmul+1,w
  3772  0556  1103               	clrz
  3773  0557  1803               	skipnc
  3774  0558  3E01               	addlw	1
  3775  0559  1903               	skipnz
  3776  055A  2D5C               	goto	u1201
  3777  055B  07B5               	addwf	___flmul@prod+1,f
  3778  055C                     u1201:
  3779  055C  082A               	movf	??___flmul+2,w
  3780  055D  1103               	clrz
  3781  055E  1803               	skipnc
  3782  055F  3E01               	addlw	1
  3783  0560  1903               	skipnz
  3784  0561  2D63               	goto	u1202
  3785  0562  07B6               	addwf	___flmul@prod+2,f
  3786  0563                     u1202:
  3787  0563  082B               	movf	??___flmul+3,w
  3788  0564  1103               	clrz
  3789  0565  1803               	skipnc
  3790  0566  3E01               	addlw	1
  3791  0567  1903               	skipnz
  3792  0568  2D6A               	goto	u1203
  3793  0569  07B7               	addwf	___flmul@prod+3,f
  3794  056A                     u1203:
  3795  056A  0822               	movf	___flmul@b+2,w
  3796  056B  00A8               	movwf	??___flmul
  3797  056C  0828               	movf	??___flmul,w
  3798  056D  00F0               	movwf	__Umul8_16@multiplicand
  3799  056E  0824               	movf	___flmul@a,w
  3800  056F  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3801  0574  0871               	movf	?__Umul8_16+1,w
  3802  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0577  00B9               	movwf	___flmul@temp+1
  3805  0578  0870               	movf	?__Umul8_16,w
  3806  0579  00B8               	movwf	___flmul@temp
  3807  057A                     l1596:
  3808  057A  0838               	movf	___flmul@temp,w
  3809  057B  00A8               	movwf	??___flmul
  3810  057C  01A9               	clrf	??___flmul+1
  3811  057D  01AA               	clrf	??___flmul+2
  3812  057E  01AB               	clrf	??___flmul+3
  3813  057F  0828               	movf	??___flmul,w
  3814  0580  07AE               	addwf	___flmul@grs,f
  3815  0581  0829               	movf	??___flmul+1,w
  3816  0582  1103               	clrz
  3817  0583  1803               	skipnc
  3818  0584  3E01               	addlw	1
  3819  0585  1903               	skipnz
  3820  0586  2D88               	goto	u1211
  3821  0587  07AF               	addwf	___flmul@grs+1,f
  3822  0588                     u1211:
  3823  0588  082A               	movf	??___flmul+2,w
  3824  0589  1103               	clrz
  3825  058A  1803               	skipnc
  3826  058B  3E01               	addlw	1
  3827  058C  1903               	skipnz
  3828  058D  2D8F               	goto	u1212
  3829  058E  07B0               	addwf	___flmul@grs+2,f
  3830  058F                     u1212:
  3831  058F  082B               	movf	??___flmul+3,w
  3832  0590  1103               	clrz
  3833  0591  1803               	skipnc
  3834  0592  3E01               	addlw	1
  3835  0593  1903               	skipnz
  3836  0594  2D96               	goto	u1213
  3837  0595  07B1               	addwf	___flmul@grs+3,f
  3838  0596                     u1213:
  3839  0596                     l1598:
  3840  0596  0839               	movf	___flmul@temp+1,w
  3841  0597  00A8               	movwf	??___flmul
  3842  0598  01A9               	clrf	??___flmul+1
  3843  0599  01AA               	clrf	??___flmul+2
  3844  059A  01AB               	clrf	??___flmul+3
  3845  059B  0828               	movf	??___flmul,w
  3846  059C  07B4               	addwf	___flmul@prod,f
  3847  059D  0829               	movf	??___flmul+1,w
  3848  059E  1103               	clrz
  3849  059F  1803               	skipnc
  3850  05A0  3E01               	addlw	1
  3851  05A1  1903               	skipnz
  3852  05A2  2DA4               	goto	u1221
  3853  05A3  07B5               	addwf	___flmul@prod+1,f
  3854  05A4                     u1221:
  3855  05A4  082A               	movf	??___flmul+2,w
  3856  05A5  1103               	clrz
  3857  05A6  1803               	skipnc
  3858  05A7  3E01               	addlw	1
  3859  05A8  1903               	skipnz
  3860  05A9  2DAB               	goto	u1222
  3861  05AA  07B6               	addwf	___flmul@prod+2,f
  3862  05AB                     u1222:
  3863  05AB  082B               	movf	??___flmul+3,w
  3864  05AC  1103               	clrz
  3865  05AD  1803               	skipnc
  3866  05AE  3E01               	addlw	1
  3867  05AF  1903               	skipnz
  3868  05B0  2DB2               	goto	u1223
  3869  05B1  07B7               	addwf	___flmul@prod+3,f
  3870  05B2                     u1223:
  3871  05B2                     l1600:
  3872  05B2  3008               	movlw	8
  3873  05B3  00A8               	movwf	??___flmul
  3874  05B4                     u1235:
  3875  05B4  1003               	clrc
  3876  05B5  0DAE               	rlf	___flmul@grs,f
  3877  05B6  0DAF               	rlf	___flmul@grs+1,f
  3878  05B7  0DB0               	rlf	___flmul@grs+2,f
  3879  05B8  0DB1               	rlf	___flmul@grs+3,f
  3880  05B9  0BA8               	decfsz	??___flmul,f
  3881  05BA  2DB4               	goto	u1235
  3882  05BB                     l1602:
  3883  05BB  0821               	movf	___flmul@b+1,w
  3884  05BC  00A8               	movwf	??___flmul
  3885  05BD  0828               	movf	??___flmul,w
  3886  05BE  00F0               	movwf	__Umul8_16@multiplicand
  3887  05BF  0824               	movf	___flmul@a,w
  3888  05C0  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3889  05C5  0871               	movf	?__Umul8_16+1,w
  3890  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3891  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3892  05C8  00B9               	movwf	___flmul@temp+1
  3893  05C9  0870               	movf	?__Umul8_16,w
  3894  05CA  00B8               	movwf	___flmul@temp
  3895  05CB                     l1604:
  3896  05CB  0838               	movf	___flmul@temp,w
  3897  05CC  00A8               	movwf	??___flmul
  3898  05CD  0839               	movf	___flmul@temp+1,w
  3899  05CE  00A9               	movwf	??___flmul+1
  3900  05CF  01AA               	clrf	??___flmul+2
  3901  05D0  01AB               	clrf	??___flmul+3
  3902  05D1  0828               	movf	??___flmul,w
  3903  05D2  07AE               	addwf	___flmul@grs,f
  3904  05D3  0829               	movf	??___flmul+1,w
  3905  05D4  1103               	clrz
  3906  05D5  1803               	skipnc
  3907  05D6  3E01               	addlw	1
  3908  05D7  1903               	skipnz
  3909  05D8  2DDA               	goto	u1241
  3910  05D9  07AF               	addwf	___flmul@grs+1,f
  3911  05DA                     u1241:
  3912  05DA  082A               	movf	??___flmul+2,w
  3913  05DB  1103               	clrz
  3914  05DC  1803               	skipnc
  3915  05DD  3E01               	addlw	1
  3916  05DE  1903               	skipnz
  3917  05DF  2DE1               	goto	u1242
  3918  05E0  07B0               	addwf	___flmul@grs+2,f
  3919  05E1                     u1242:
  3920  05E1  082B               	movf	??___flmul+3,w
  3921  05E2  1103               	clrz
  3922  05E3  1803               	skipnc
  3923  05E4  3E01               	addlw	1
  3924  05E5  1903               	skipnz
  3925  05E6  2DE8               	goto	u1243
  3926  05E7  07B1               	addwf	___flmul@grs+3,f
  3927  05E8                     u1243:
  3928  05E8                     l1606:
  3929  05E8  0820               	movf	___flmul@b,w
  3930  05E9  00A8               	movwf	??___flmul
  3931  05EA  0828               	movf	??___flmul,w
  3932  05EB  00F0               	movwf	__Umul8_16@multiplicand
  3933  05EC  0825               	movf	___flmul@a+1,w
  3934  05ED  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3935  05F2  0871               	movf	?__Umul8_16+1,w
  3936  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3937  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3938  05F5  00B9               	movwf	___flmul@temp+1
  3939  05F6  0870               	movf	?__Umul8_16,w
  3940  05F7  00B8               	movwf	___flmul@temp
  3941  05F8                     l1608:
  3942  05F8  0838               	movf	___flmul@temp,w
  3943  05F9  00A8               	movwf	??___flmul
  3944  05FA  0839               	movf	___flmul@temp+1,w
  3945  05FB  00A9               	movwf	??___flmul+1
  3946  05FC  01AA               	clrf	??___flmul+2
  3947  05FD  01AB               	clrf	??___flmul+3
  3948  05FE  0828               	movf	??___flmul,w
  3949  05FF  07AE               	addwf	___flmul@grs,f
  3950  0600  0829               	movf	??___flmul+1,w
  3951  0601  1103               	clrz
  3952  0602  1803               	skipnc
  3953  0603  3E01               	addlw	1
  3954  0604  1903               	skipnz
  3955  0605  2E07               	goto	u1251
  3956  0606  07AF               	addwf	___flmul@grs+1,f
  3957  0607                     u1251:
  3958  0607  082A               	movf	??___flmul+2,w
  3959  0608  1103               	clrz
  3960  0609  1803               	skipnc
  3961  060A  3E01               	addlw	1
  3962  060B  1903               	skipnz
  3963  060C  2E0E               	goto	u1252
  3964  060D  07B0               	addwf	___flmul@grs+2,f
  3965  060E                     u1252:
  3966  060E  082B               	movf	??___flmul+3,w
  3967  060F  1103               	clrz
  3968  0610  1803               	skipnc
  3969  0611  3E01               	addlw	1
  3970  0612  1903               	skipnz
  3971  0613  2E15               	goto	u1253
  3972  0614  07B1               	addwf	___flmul@grs+3,f
  3973  0615                     u1253:
  3974  0615                     l1610:
  3975  0615  3008               	movlw	8
  3976  0616  00A8               	movwf	??___flmul
  3977  0617                     u1265:
  3978  0617  1003               	clrc
  3979  0618  0DAE               	rlf	___flmul@grs,f
  3980  0619  0DAF               	rlf	___flmul@grs+1,f
  3981  061A  0DB0               	rlf	___flmul@grs+2,f
  3982  061B  0DB1               	rlf	___flmul@grs+3,f
  3983  061C  0BA8               	decfsz	??___flmul,f
  3984  061D  2E17               	goto	u1265
  3985  061E  0820               	movf	___flmul@b,w
  3986  061F  00A8               	movwf	??___flmul
  3987  0620  0828               	movf	??___flmul,w
  3988  0621  00F0               	movwf	__Umul8_16@multiplicand
  3989  0622  0824               	movf	___flmul@a,w
  3990  0623  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  3991  0628  0871               	movf	?__Umul8_16+1,w
  3992  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3993  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3994  062B  00B9               	movwf	___flmul@temp+1
  3995  062C  0870               	movf	?__Umul8_16,w
  3996  062D  00B8               	movwf	___flmul@temp
  3997  062E                     l1612:
  3998  062E  0838               	movf	___flmul@temp,w
  3999  062F  00A8               	movwf	??___flmul
  4000  0630  0839               	movf	___flmul@temp+1,w
  4001  0631  00A9               	movwf	??___flmul+1
  4002  0632  01AA               	clrf	??___flmul+2
  4003  0633  01AB               	clrf	??___flmul+3
  4004  0634  0828               	movf	??___flmul,w
  4005  0635  07AE               	addwf	___flmul@grs,f
  4006  0636  0829               	movf	??___flmul+1,w
  4007  0637  1103               	clrz
  4008  0638  1803               	skipnc
  4009  0639  3E01               	addlw	1
  4010  063A  1903               	skipnz
  4011  063B  2E3D               	goto	u1271
  4012  063C  07AF               	addwf	___flmul@grs+1,f
  4013  063D                     u1271:
  4014  063D  082A               	movf	??___flmul+2,w
  4015  063E  1103               	clrz
  4016  063F  1803               	skipnc
  4017  0640  3E01               	addlw	1
  4018  0641  1903               	skipnz
  4019  0642  2E44               	goto	u1272
  4020  0643  07B0               	addwf	___flmul@grs+2,f
  4021  0644                     u1272:
  4022  0644  082B               	movf	??___flmul+3,w
  4023  0645  1103               	clrz
  4024  0646  1803               	skipnc
  4025  0647  3E01               	addlw	1
  4026  0648  1903               	skipnz
  4027  0649  2E4B               	goto	u1273
  4028  064A  07B1               	addwf	___flmul@grs+3,f
  4029  064B                     u1273:
  4030  064B                     l1614:
  4031  064B  0821               	movf	___flmul@b+1,w
  4032  064C  00A8               	movwf	??___flmul
  4033  064D  0828               	movf	??___flmul,w
  4034  064E  00F0               	movwf	__Umul8_16@multiplicand
  4035  064F  0826               	movf	___flmul@a+2,w
  4036  0650  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  4037  0655  0871               	movf	?__Umul8_16+1,w
  4038  0656  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0657  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0658  00B9               	movwf	___flmul@temp+1
  4041  0659  0870               	movf	?__Umul8_16,w
  4042  065A  00B8               	movwf	___flmul@temp
  4043  065B  0838               	movf	___flmul@temp,w
  4044  065C  00A8               	movwf	??___flmul
  4045  065D  0839               	movf	___flmul@temp+1,w
  4046  065E  00A9               	movwf	??___flmul+1
  4047  065F  01AA               	clrf	??___flmul+2
  4048  0660  01AB               	clrf	??___flmul+3
  4049  0661  0828               	movf	??___flmul,w
  4050  0662  07B4               	addwf	___flmul@prod,f
  4051  0663  0829               	movf	??___flmul+1,w
  4052  0664  1103               	clrz
  4053  0665  1803               	skipnc
  4054  0666  3E01               	addlw	1
  4055  0667  1903               	skipnz
  4056  0668  2E6A               	goto	u1281
  4057  0669  07B5               	addwf	___flmul@prod+1,f
  4058  066A                     u1281:
  4059  066A  082A               	movf	??___flmul+2,w
  4060  066B  1103               	clrz
  4061  066C  1803               	skipnc
  4062  066D  3E01               	addlw	1
  4063  066E  1903               	skipnz
  4064  066F  2E71               	goto	u1282
  4065  0670  07B6               	addwf	___flmul@prod+2,f
  4066  0671                     u1282:
  4067  0671  082B               	movf	??___flmul+3,w
  4068  0672  1103               	clrz
  4069  0673  1803               	skipnc
  4070  0674  3E01               	addlw	1
  4071  0675  1903               	skipnz
  4072  0676  2E78               	goto	u1283
  4073  0677  07B7               	addwf	___flmul@prod+3,f
  4074  0678                     u1283:
  4075  0678                     l1616:
  4076  0678  0822               	movf	___flmul@b+2,w
  4077  0679  00A8               	movwf	??___flmul
  4078  067A  0828               	movf	??___flmul,w
  4079  067B  00F0               	movwf	__Umul8_16@multiplicand
  4080  067C  0825               	movf	___flmul@a+1,w
  4081  067D  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  4082  0682  0871               	movf	?__Umul8_16+1,w
  4083  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0684  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0685  00B9               	movwf	___flmul@temp+1
  4086  0686  0870               	movf	?__Umul8_16,w
  4087  0687  00B8               	movwf	___flmul@temp
  4088  0688                     l1618:
  4089  0688  0838               	movf	___flmul@temp,w
  4090  0689  00A8               	movwf	??___flmul
  4091  068A  0839               	movf	___flmul@temp+1,w
  4092  068B  00A9               	movwf	??___flmul+1
  4093  068C  01AA               	clrf	??___flmul+2
  4094  068D  01AB               	clrf	??___flmul+3
  4095  068E  0828               	movf	??___flmul,w
  4096  068F  07B4               	addwf	___flmul@prod,f
  4097  0690  0829               	movf	??___flmul+1,w
  4098  0691  1103               	clrz
  4099  0692  1803               	skipnc
  4100  0693  3E01               	addlw	1
  4101  0694  1903               	skipnz
  4102  0695  2E97               	goto	u1291
  4103  0696  07B5               	addwf	___flmul@prod+1,f
  4104  0697                     u1291:
  4105  0697  082A               	movf	??___flmul+2,w
  4106  0698  1103               	clrz
  4107  0699  1803               	skipnc
  4108  069A  3E01               	addlw	1
  4109  069B  1903               	skipnz
  4110  069C  2E9E               	goto	u1292
  4111  069D  07B6               	addwf	___flmul@prod+2,f
  4112  069E                     u1292:
  4113  069E  082B               	movf	??___flmul+3,w
  4114  069F  1103               	clrz
  4115  06A0  1803               	skipnc
  4116  06A1  3E01               	addlw	1
  4117  06A2  1903               	skipnz
  4118  06A3  2EA5               	goto	u1293
  4119  06A4  07B7               	addwf	___flmul@prod+3,f
  4120  06A5                     u1293:
  4121  06A5  0822               	movf	___flmul@b+2,w
  4122  06A6  00A8               	movwf	??___flmul
  4123  06A7  0828               	movf	??___flmul,w
  4124  06A8  00F0               	movwf	__Umul8_16@multiplicand
  4125  06A9  0826               	movf	___flmul@a+2,w
  4126  06AA  120A  158A  25BF  120A  118A  	fcall	__Umul8_16
  4127  06AF  0871               	movf	?__Umul8_16+1,w
  4128  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4129  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  4130  06B2  00B9               	movwf	___flmul@temp+1
  4131  06B3  0870               	movf	?__Umul8_16,w
  4132  06B4  00B8               	movwf	___flmul@temp
  4133  06B5                     l1620:
  4134  06B5  0838               	movf	___flmul@temp,w
  4135  06B6  00A8               	movwf	??___flmul
  4136  06B7  0839               	movf	___flmul@temp+1,w
  4137  06B8  00A9               	movwf	??___flmul+1
  4138  06B9  01AA               	clrf	??___flmul+2
  4139  06BA  01AB               	clrf	??___flmul+3
  4140  06BB  3008               	movlw	8
  4141  06BC                     u1305:
  4142  06BC  1003               	clrc
  4143  06BD  0DA8               	rlf	??___flmul,f
  4144  06BE  0DA9               	rlf	??___flmul+1,f
  4145  06BF  0DAA               	rlf	??___flmul+2,f
  4146  06C0  0DAB               	rlf	??___flmul+3,f
  4147  06C1                     u1300:
  4148  06C1  3EFF               	addlw	-1
  4149  06C2  1D03               	skipz
  4150  06C3  2EBC               	goto	u1305
  4151  06C4  0828               	movf	??___flmul,w
  4152  06C5  07B4               	addwf	___flmul@prod,f
  4153  06C6  0829               	movf	??___flmul+1,w
  4154  06C7  1103               	clrz
  4155  06C8  1803               	skipnc
  4156  06C9  3E01               	addlw	1
  4157  06CA  1903               	skipnz
  4158  06CB  2ECD               	goto	u1311
  4159  06CC  07B5               	addwf	___flmul@prod+1,f
  4160  06CD                     u1311:
  4161  06CD  082A               	movf	??___flmul+2,w
  4162  06CE  1103               	clrz
  4163  06CF  1803               	skipnc
  4164  06D0  3E01               	addlw	1
  4165  06D1  1903               	skipnz
  4166  06D2  2ED4               	goto	u1312
  4167  06D3  07B6               	addwf	___flmul@prod+2,f
  4168  06D4                     u1312:
  4169  06D4  082B               	movf	??___flmul+3,w
  4170  06D5  1103               	clrz
  4171  06D6  1803               	skipnc
  4172  06D7  3E01               	addlw	1
  4173  06D8  1903               	skipnz
  4174  06D9  2EDB               	goto	u1313
  4175  06DA  07B7               	addwf	___flmul@prod+3,f
  4176  06DB                     u1313:
  4177  06DB                     l1622:
  4178  06DB  082E               	movf	___flmul@grs,w
  4179  06DC  00A8               	movwf	??___flmul
  4180  06DD  082F               	movf	___flmul@grs+1,w
  4181  06DE  00A9               	movwf	??___flmul+1
  4182  06DF  0830               	movf	___flmul@grs+2,w
  4183  06E0  00AA               	movwf	??___flmul+2
  4184  06E1  0831               	movf	___flmul@grs+3,w
  4185  06E2  00AB               	movwf	??___flmul+3
  4186  06E3  3018               	movlw	24
  4187  06E4                     u1325:
  4188  06E4  1003               	clrc
  4189  06E5  0CAB               	rrf	??___flmul+3,f
  4190  06E6  0CAA               	rrf	??___flmul+2,f
  4191  06E7  0CA9               	rrf	??___flmul+1,f
  4192  06E8  0CA8               	rrf	??___flmul,f
  4193  06E9                     u1320:
  4194  06E9  3EFF               	addlw	-1
  4195  06EA  1D03               	skipz
  4196  06EB  2EE4               	goto	u1325
  4197  06EC  0828               	movf	??___flmul,w
  4198  06ED  07B4               	addwf	___flmul@prod,f
  4199  06EE  0829               	movf	??___flmul+1,w
  4200  06EF  1103               	clrz
  4201  06F0  1803               	skipnc
  4202  06F1  3E01               	addlw	1
  4203  06F2  1903               	skipnz
  4204  06F3  2EF5               	goto	u1331
  4205  06F4  07B5               	addwf	___flmul@prod+1,f
  4206  06F5                     u1331:
  4207  06F5  082A               	movf	??___flmul+2,w
  4208  06F6  1103               	clrz
  4209  06F7  1803               	skipnc
  4210  06F8  3E01               	addlw	1
  4211  06F9  1903               	skipnz
  4212  06FA  2EFC               	goto	u1332
  4213  06FB  07B6               	addwf	___flmul@prod+2,f
  4214  06FC                     u1332:
  4215  06FC  082B               	movf	??___flmul+3,w
  4216  06FD  1103               	clrz
  4217  06FE  1803               	skipnc
  4218  06FF  3E01               	addlw	1
  4219  0700  1903               	skipnz
  4220  0701  2F03               	goto	u1333
  4221  0702  07B7               	addwf	___flmul@prod+3,f
  4222  0703                     u1333:
  4223  0703                     l1624:
  4224  0703  3008               	movlw	8
  4225  0704  00A8               	movwf	??___flmul
  4226  0705                     u1345:
  4227  0705  1003               	clrc
  4228  0706  0DAE               	rlf	___flmul@grs,f
  4229  0707  0DAF               	rlf	___flmul@grs+1,f
  4230  0708  0DB0               	rlf	___flmul@grs+2,f
  4231  0709  0DB1               	rlf	___flmul@grs+3,f
  4232  070A  0BA8               	decfsz	??___flmul,f
  4233  070B  2F05               	goto	u1345
  4234  070C                     l1626:
  4235  070C  0833               	movf	___flmul@bexp,w
  4236  070D  0732               	addwf	___flmul@aexp,w
  4237  070E  00A8               	movwf	??___flmul
  4238  070F  01A9               	clrf	??___flmul+1
  4239  0710  0DA9               	rlf	??___flmul+1,f
  4240  0711  0828               	movf	??___flmul,w
  4241  0712  3E82               	addlw	130
  4242  0713  00B8               	movwf	___flmul@temp
  4243  0714  0829               	movf	??___flmul+1,w
  4244  0715  1803               	skipnc
  4245  0716  3E01               	addlw	1
  4246  0717  3EFF               	addlw	255
  4247  0718  00B9               	movwf	___flmul@temp+1
  4248  0719  2F37               	goto	l1638
  4249  071A                     l1628:
  4250  071A  3001               	movlw	1
  4251  071B  00A8               	movwf	??___flmul
  4252  071C                     u1355:
  4253  071C  1003               	clrc
  4254  071D  0DB4               	rlf	___flmul@prod,f
  4255  071E  0DB5               	rlf	___flmul@prod+1,f
  4256  071F  0DB6               	rlf	___flmul@prod+2,f
  4257  0720  0DB7               	rlf	___flmul@prod+3,f
  4258  0721  0BA8               	decfsz	??___flmul,f
  4259  0722  2F1C               	goto	u1355
  4260  0723                     l1630:
  4261  0723  1FB1               	btfss	___flmul@grs+3,7
  4262  0724  2F26               	goto	u1361
  4263  0725  2F27               	goto	u1360
  4264  0726                     u1361:
  4265  0726  2F28               	goto	l1634
  4266  0727                     u1360:
  4267  0727                     l1632:
  4268  0727  1434               	bsf	___flmul@prod,0
  4269  0728                     l1634:
  4270  0728  3001               	movlw	1
  4271  0729  00A8               	movwf	??___flmul
  4272  072A                     u1375:
  4273  072A  1003               	clrc
  4274  072B  0DAE               	rlf	___flmul@grs,f
  4275  072C  0DAF               	rlf	___flmul@grs+1,f
  4276  072D  0DB0               	rlf	___flmul@grs+2,f
  4277  072E  0DB1               	rlf	___flmul@grs+3,f
  4278  072F  0BA8               	decfsz	??___flmul,f
  4279  0730  2F2A               	goto	u1375
  4280  0731                     l1636:
  4281  0731  30FF               	movlw	255
  4282  0732  07B8               	addwf	___flmul@temp,f
  4283  0733  1803               	skipnc
  4284  0734  0AB9               	incf	___flmul@temp+1,f
  4285  0735  30FF               	movlw	255
  4286  0736  07B9               	addwf	___flmul@temp+1,f
  4287  0737                     l1638:
  4288  0737  1FB6               	btfss	___flmul@prod+2,7
  4289  0738  2F3A               	goto	u1381
  4290  0739  2F3B               	goto	u1380
  4291  073A                     u1381:
  4292  073A  2F1A               	goto	l1628
  4293  073B                     u1380:
  4294  073B                     l1640:
  4295  073B  01B2               	clrf	___flmul@aexp
  4296  073C                     l1642:
  4297  073C  1FB1               	btfss	___flmul@grs+3,7
  4298  073D  2F3F               	goto	u1391
  4299  073E  2F40               	goto	u1390
  4300  073F                     u1391:
  4301  073F  2F5C               	goto	l1650
  4302  0740                     u1390:
  4303  0740                     l1644:
  4304  0740  30FF               	movlw	255
  4305  0741  052E               	andwf	___flmul@grs,w
  4306  0742  00A8               	movwf	??___flmul
  4307  0743  30FF               	movlw	255
  4308  0744  052F               	andwf	___flmul@grs+1,w
  4309  0745  00A9               	movwf	??___flmul+1
  4310  0746  30FF               	movlw	255
  4311  0747  0530               	andwf	___flmul@grs+2,w
  4312  0748  00AA               	movwf	??___flmul+2
  4313  0749  307F               	movlw	127
  4314  074A  0531               	andwf	___flmul@grs+3,w
  4315  074B  00AB               	movwf	??___flmul+3
  4316  074C  082B               	movf	??___flmul+3,w
  4317  074D  042A               	iorwf	??___flmul+2,w
  4318  074E  0429               	iorwf	??___flmul+1,w
  4319  074F  0428               	iorwf	??___flmul,w
  4320  0750  1903               	skipnz
  4321  0751  2F53               	goto	u1401
  4322  0752  2F54               	goto	u1400
  4323  0753                     u1401:
  4324  0753  2F57               	goto	l645
  4325  0754                     u1400:
  4326  0754                     l1646:
  4327  0754  01B2               	clrf	___flmul@aexp
  4328  0755  0AB2               	incf	___flmul@aexp,f
  4329  0756  2F5C               	goto	l1650
  4330  0757                     l645:
  4331  0757  1C34               	btfss	___flmul@prod,0
  4332  0758  2F5A               	goto	u1411
  4333  0759  2F5B               	goto	u1410
  4334  075A                     u1411:
  4335  075A  2F5C               	goto	l1650
  4336  075B                     u1410:
  4337  075B  2F54               	goto	l1646
  4338  075C                     l1650:
  4339  075C  0832               	movf	___flmul@aexp,w
  4340  075D  1903               	btfsc	3,2
  4341  075E  2F60               	goto	u1421
  4342  075F  2F61               	goto	u1420
  4343  0760                     u1421:
  4344  0760  2F92               	goto	l1660
  4345  0761                     u1420:
  4346  0761                     l1652:
  4347  0761  3001               	movlw	1
  4348  0762  07B4               	addwf	___flmul@prod,f
  4349  0763  3000               	movlw	0
  4350  0764  1803               	skipnc
  4351  0765  3001               	movlw	1
  4352  0766  07B5               	addwf	___flmul@prod+1,f
  4353  0767  3000               	movlw	0
  4354  0768  1803               	skipnc
  4355  0769  3001               	movlw	1
  4356  076A  07B6               	addwf	___flmul@prod+2,f
  4357  076B  3000               	movlw	0
  4358  076C  1803               	skipnc
  4359  076D  3001               	movlw	1
  4360  076E  07B7               	addwf	___flmul@prod+3,f
  4361  076F                     l1654:
  4362  076F  1C37               	btfss	___flmul@prod+3,0
  4363  0770  2F72               	goto	u1431
  4364  0771  2F73               	goto	u1430
  4365  0772                     u1431:
  4366  0772  2F92               	goto	l1660
  4367  0773                     u1430:
  4368  0773                     l1656:
  4369  0773  0834               	movf	___flmul@prod,w
  4370  0774  00A8               	movwf	??___flmul
  4371  0775  0835               	movf	___flmul@prod+1,w
  4372  0776  00A9               	movwf	??___flmul+1
  4373  0777  0836               	movf	___flmul@prod+2,w
  4374  0778  00AA               	movwf	??___flmul+2
  4375  0779  0837               	movf	___flmul@prod+3,w
  4376  077A  00AB               	movwf	??___flmul+3
  4377  077B  3001               	movlw	1
  4378  077C  00AC               	movwf	??___flmul+4
  4379  077D                     u1445:
  4380  077D  0D2B               	rlf	??___flmul+3,w
  4381  077E  0CAB               	rrf	??___flmul+3,f
  4382  077F  0CAA               	rrf	??___flmul+2,f
  4383  0780  0CA9               	rrf	??___flmul+1,f
  4384  0781  0CA8               	rrf	??___flmul,f
  4385  0782                     u1440:
  4386  0782  0BAC               	decfsz	??___flmul+4,f
  4387  0783  2F7D               	goto	u1445
  4388  0784  082B               	movf	??___flmul+3,w
  4389  0785  00B7               	movwf	___flmul@prod+3
  4390  0786  082A               	movf	??___flmul+2,w
  4391  0787  00B6               	movwf	___flmul@prod+2
  4392  0788  0829               	movf	??___flmul+1,w
  4393  0789  00B5               	movwf	___flmul@prod+1
  4394  078A  0828               	movf	??___flmul,w
  4395  078B  00B4               	movwf	___flmul@prod
  4396  078C                     l1658:
  4397  078C  3001               	movlw	1
  4398  078D  07B8               	addwf	___flmul@temp,f
  4399  078E  1803               	skipnc
  4400  078F  0AB9               	incf	___flmul@temp+1,f
  4401  0790  3000               	movlw	0
  4402  0791  07B9               	addwf	___flmul@temp+1,f
  4403  0792                     l1660:
  4404  0792  0839               	movf	___flmul@temp+1,w
  4405  0793  3A80               	xorlw	128
  4406  0794  00FF               	movwf	btemp+1
  4407  0795  3080               	movlw	128
  4408  0796  027F               	subwf	btemp+1,w
  4409  0797  1D03               	skipz
  4410  0798  2F9B               	goto	u1455
  4411  0799  30FF               	movlw	255
  4412  079A  0238               	subwf	___flmul@temp,w
  4413  079B                     u1455:
  4414  079B  1C03               	skipc
  4415  079C  2F9E               	goto	u1451
  4416  079D  2F9F               	goto	u1450
  4417  079E                     u1451:
  4418  079E  2FAA               	goto	l1664
  4419  079F                     u1450:
  4420  079F                     l1662:
  4421  079F  307F               	movlw	127
  4422  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4423  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4424  07A2  00B7               	movwf	___flmul@prod+3
  4425  07A3  3080               	movlw	128
  4426  07A4  00B6               	movwf	___flmul@prod+2
  4427  07A5  3000               	movlw	0
  4428  07A6  00B5               	movwf	___flmul@prod+1
  4429  07A7  3000               	movlw	0
  4430  07A8  00B4               	movwf	___flmul@prod
  4431  07A9  2FDF               	goto	l651
  4432  07AA                     l1664:
  4433  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4434  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4435  07AC  0839               	movf	___flmul@temp+1,w
  4436  07AD  3A80               	xorlw	128
  4437  07AE  00FF               	movwf	btemp+1
  4438  07AF  3080               	movlw	128
  4439  07B0  027F               	subwf	btemp+1,w
  4440  07B1  1D03               	skipz
  4441  07B2  2FB5               	goto	u1465
  4442  07B3  3001               	movlw	1
  4443  07B4  0238               	subwf	___flmul@temp,w
  4444  07B5                     u1465:
  4445  07B5  1803               	skipnc
  4446  07B6  2FB8               	goto	u1461
  4447  07B7  2FB9               	goto	u1460
  4448  07B8                     u1461:
  4449  07B8  2FC5               	goto	l1670
  4450  07B9                     u1460:
  4451  07B9                     l1666:
  4452  07B9  3000               	movlw	0
  4453  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4454  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4455  07BC  00B7               	movwf	___flmul@prod+3
  4456  07BD  3000               	movlw	0
  4457  07BE  00B6               	movwf	___flmul@prod+2
  4458  07BF  3000               	movlw	0
  4459  07C0  00B5               	movwf	___flmul@prod+1
  4460  07C1  3000               	movlw	0
  4461  07C2  00B4               	movwf	___flmul@prod
  4462  07C3                     l1668:
  4463  07C3  01AD               	clrf	___flmul@sign
  4464  07C4  2FDF               	goto	l651
  4465  07C5                     l1670:
  4466  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4467  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4468  07C7  0838               	movf	___flmul@temp,w
  4469  07C8  00A8               	movwf	??___flmul
  4470  07C9  0828               	movf	??___flmul,w
  4471  07CA  00B3               	movwf	___flmul@bexp
  4472  07CB  30FF               	movlw	255
  4473  07CC  05B4               	andwf	___flmul@prod,f
  4474  07CD  30FF               	movlw	255
  4475  07CE  05B5               	andwf	___flmul@prod+1,f
  4476  07CF  307F               	movlw	127
  4477  07D0  05B6               	andwf	___flmul@prod+2,f
  4478  07D1  3000               	movlw	0
  4479  07D2  05B7               	andwf	___flmul@prod+3,f
  4480  07D3                     l1672:
  4481  07D3  1C33               	btfss	___flmul@bexp,0
  4482  07D4  2FD6               	goto	u1471
  4483  07D5  2FD7               	goto	u1470
  4484  07D6                     u1471:
  4485  07D6  2FD8               	goto	l1676
  4486  07D7                     u1470:
  4487  07D7                     l1674:
  4488  07D7  17B6               	bsf	___flmul@prod+2,7
  4489  07D8                     l1676:
  4490  07D8  0833               	movf	___flmul@bexp,w
  4491  07D9  00A8               	movwf	??___flmul
  4492  07DA  1003               	clrc
  4493  07DB  0C28               	rrf	??___flmul,w
  4494  07DC  00A9               	movwf	??___flmul+1
  4495  07DD  0829               	movf	??___flmul+1,w
  4496  07DE  00B7               	movwf	___flmul@prod+3
  4497  07DF                     l651:
  4498  07DF  082D               	movf	___flmul@sign,w
  4499  07E0  00A8               	movwf	??___flmul
  4500  07E1  0828               	movf	??___flmul,w
  4501  07E2  04B7               	iorwf	___flmul@prod+3,f
  4502  07E3                     l1678:
  4503  07E3  0837               	movf	___flmul@prod+3,w
  4504  07E4  00A3               	movwf	?___flmul+3
  4505  07E5  0836               	movf	___flmul@prod+2,w
  4506  07E6  00A2               	movwf	?___flmul+2
  4507  07E7  0835               	movf	___flmul@prod+1,w
  4508  07E8  00A1               	movwf	?___flmul+1
  4509  07E9  0834               	movf	___flmul@prod,w
  4510  07EA  00A0               	movwf	?___flmul
  4511  07EB                     l639:
  4512  07EB  0008               	return
  4513  07EC                     __end_of___flmul:
  4514                           
  4515                           	psect	text16
  4516  0DBF                     __ptext16:	
  4517 ;; *************** function __Umul8_16 *****************
  4518 ;; Defined at:
  4519 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  multiplier      1    wreg     unsigned char 
  4522 ;;  multiplicand    1    0[COMMON] unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  multiplier      1    8[COMMON] unsigned char 
  4525 ;;  word_mpld       2    6[COMMON] unsigned int 
  4526 ;;  product         2    4[COMMON] unsigned int 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2    0[COMMON] unsigned int 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4536 ;;      Params:         2       0       0       0       0
  4537 ;;      Locals:         5       0       0       0       0
  4538 ;;      Temps:          2       0       0       0       0
  4539 ;;      Totals:         9       0       0       0       0
  4540 ;;Total ram usage:        9 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		___flmul
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function __Umul8_16
  4551  0DBF                     __Umul8_16:
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4555                           ;__Umul8_16@multiplier stored from wreg
  4556  0DBF  00F8               	movwf	__Umul8_16@multiplier
  4557  0DC0                     l1408:
  4558  0DC0  01F4               	clrf	__Umul8_16@product
  4559  0DC1  01F5               	clrf	__Umul8_16@product+1
  4560  0DC2                     l1410:
  4561  0DC2  0870               	movf	__Umul8_16@multiplicand,w
  4562  0DC3  00F2               	movwf	??__Umul8_16
  4563  0DC4  01F3               	clrf	??__Umul8_16+1
  4564  0DC5  0872               	movf	??__Umul8_16,w
  4565  0DC6  00F6               	movwf	__Umul8_16@word_mpld
  4566  0DC7  0873               	movf	??__Umul8_16+1,w
  4567  0DC8  00F7               	movwf	__Umul8_16@word_mpld+1
  4568  0DC9                     l1412:
  4569  0DC9  1C78               	btfss	__Umul8_16@multiplier,0
  4570  0DCA  2DCC               	goto	u981
  4571  0DCB  2DCD               	goto	u980
  4572  0DCC                     u981:
  4573  0DCC  2DD3               	goto	l658
  4574  0DCD                     u980:
  4575  0DCD                     l1414:
  4576  0DCD  0876               	movf	__Umul8_16@word_mpld,w
  4577  0DCE  07F4               	addwf	__Umul8_16@product,f
  4578  0DCF  1803               	skipnc
  4579  0DD0  0AF5               	incf	__Umul8_16@product+1,f
  4580  0DD1  0877               	movf	__Umul8_16@word_mpld+1,w
  4581  0DD2  07F5               	addwf	__Umul8_16@product+1,f
  4582  0DD3                     l658:
  4583  0DD3  3001               	movlw	1
  4584  0DD4                     u995:
  4585  0DD4  1003               	clrc
  4586  0DD5  0DF6               	rlf	__Umul8_16@word_mpld,f
  4587  0DD6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4588  0DD7  3EFF               	addlw	-1
  4589  0DD8  1D03               	skipz
  4590  0DD9  2DD4               	goto	u995
  4591  0DDA  1003               	clrc
  4592  0DDB  0CF8               	rrf	__Umul8_16@multiplier,f
  4593  0DDC                     l1416:
  4594  0DDC  0878               	movf	__Umul8_16@multiplier,w
  4595  0DDD  1D03               	btfss	3,2
  4596  0DDE  2DE0               	goto	u1001
  4597  0DDF  2DE1               	goto	u1000
  4598  0DE0                     u1001:
  4599  0DE0  2DC9               	goto	l1412
  4600  0DE1                     u1000:
  4601  0DE1                     l1418:
  4602  0DE1  0875               	movf	__Umul8_16@product+1,w
  4603  0DE2  00F1               	movwf	?__Umul8_16+1
  4604  0DE3  0874               	movf	__Umul8_16@product,w
  4605  0DE4  00F0               	movwf	?__Umul8_16
  4606  0DE5                     l660:
  4607  0DE5  0008               	return
  4608  0DE6                     __end_of__Umul8_16:
  4609                           
  4610                           	psect	text17
  4611  0E2A                     __ptext17:	
  4612 ;; *************** function _Lcd_Init *****************
  4613 ;; Defined at:
  4614 ;;		line 36 in file "lcd.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0
  4630 ;;      Temps:          3       0       0       0       0
  4631 ;;      Totals:         3       0       0       0       0
  4632 ;;Total ram usage:        3 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    2
  4635 ;; This function calls:
  4636 ;;		_Lcd_Cmd
  4637 ;;		_Lcd_Port
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Lcd_Init
  4645  0E2A                     _Lcd_Init:
  4646  0E2A                     l1442:	
  4647                           ;incstack = 0
  4648                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4649                           
  4650                           
  4651                           ;lcd.c: 37:     _delay((unsigned long)((200)*(8000000/4000.0)));
  4652  0E2A  3003               	movlw	3
  4653  0E2B  00F6               	movwf	??_Lcd_Init+2
  4654  0E2C  3008               	movlw	8
  4655  0E2D  00F5               	movwf	??_Lcd_Init+1
  4656  0E2E  3077               	movlw	119
  4657  0E2F  00F4               	movwf	??_Lcd_Init
  4658  0E30                     u1707:
  4659  0E30  0BF4               	decfsz	??_Lcd_Init,f
  4660  0E31  2E30               	goto	u1707
  4661  0E32  0BF5               	decfsz	??_Lcd_Init+1,f
  4662  0E33  2E30               	goto	u1707
  4663  0E34  0BF6               	decfsz	??_Lcd_Init+2,f
  4664  0E35  2E30               	goto	u1707
  4665  0E36                     l1444:
  4666                           
  4667                           ;lcd.c: 38:     Lcd_Port(0x00);
  4668  0E36  3000               	movlw	0
  4669  0E37  120A  158A  24C6  120A  158A  	fcall	_Lcd_Port
  4670  0E3C                     l1446:
  4671                           
  4672                           ;lcd.c: 39:     _delay((unsigned long)((25)*(8000000/4000.0)));
  4673  0E3C  3041               	movlw	65
  4674  0E3D  00F5               	movwf	??_Lcd_Init+1
  4675  0E3E  30EE               	movlw	238
  4676  0E3F  00F4               	movwf	??_Lcd_Init
  4677  0E40                     u1717:
  4678  0E40  0BF4               	decfsz	??_Lcd_Init,f
  4679  0E41  2E40               	goto	u1717
  4680  0E42  0BF5               	decfsz	??_Lcd_Init+1,f
  4681  0E43  2E40               	goto	u1717
  4682  0E44  0000               	nop
  4683                           
  4684                           ;lcd.c: 40:     Lcd_Cmd(0x30);
  4685  0E45  3030               	movlw	48
  4686  0E46  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4687  0E4B                     l1448:
  4688                           
  4689                           ;lcd.c: 41:     _delay((unsigned long)((7)*(8000000/4000.0)));
  4690  0E4B  3013               	movlw	19
  4691  0E4C  00F5               	movwf	??_Lcd_Init+1
  4692  0E4D  302D               	movlw	45
  4693  0E4E  00F4               	movwf	??_Lcd_Init
  4694  0E4F                     u1727:
  4695  0E4F  0BF4               	decfsz	??_Lcd_Init,f
  4696  0E50  2E4F               	goto	u1727
  4697  0E51  0BF5               	decfsz	??_Lcd_Init+1,f
  4698  0E52  2E4F               	goto	u1727
  4699  0E53                     l1450:
  4700                           
  4701                           ;lcd.c: 42:     Lcd_Cmd(0x30);
  4702  0E53  3030               	movlw	48
  4703  0E54  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4704                           
  4705                           ;lcd.c: 43:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4706  0E59  3085               	movlw	133
  4707  0E5A  00F4               	movwf	??_Lcd_Init
  4708  0E5B                     u1737:
  4709  0E5B  0BF4               	decfsz	??_Lcd_Init,f
  4710  0E5C  2E5B               	goto	u1737
  4711  0E5D                     l1452:
  4712                           
  4713                           ;lcd.c: 44:     Lcd_Cmd(0x30);
  4714  0E5D  3030               	movlw	48
  4715  0E5E  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4716  0E63                     l1454:
  4717                           
  4718                           ;lcd.c: 45:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4719  0E63  3085               	movlw	133
  4720  0E64  00F4               	movwf	??_Lcd_Init
  4721  0E65                     u1747:
  4722  0E65  0BF4               	decfsz	??_Lcd_Init,f
  4723  0E66  2E65               	goto	u1747
  4724                           
  4725                           ;lcd.c: 47:     Lcd_Cmd(0x38);
  4726  0E67  3038               	movlw	56
  4727  0E68  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4728                           
  4729                           ;lcd.c: 48:     Lcd_Cmd(0x10);
  4730  0E6D  3010               	movlw	16
  4731  0E6E  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4732                           
  4733                           ;lcd.c: 49:     Lcd_Cmd(0x01);
  4734  0E73  3001               	movlw	1
  4735  0E74  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4736                           
  4737                           ;lcd.c: 50:     Lcd_Cmd(0x06);
  4738  0E79  3006               	movlw	6
  4739  0E7A  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4740                           
  4741                           ;lcd.c: 51:     Lcd_Cmd(0x0C);
  4742  0E7F  300C               	movlw	12
  4743  0E80  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4744  0E85                     l149:
  4745  0E85  0008               	return
  4746  0E86                     __end_of_Lcd_Init:
  4747                           
  4748                           	psect	text18
  4749  0CE2                     __ptext18:	
  4750 ;; *************** function _Lcd_Clear *****************
  4751 ;; Defined at:
  4752 ;;		line 20 in file "lcd.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		_Lcd_Cmd
  4775 ;; This function is called by:
  4776 ;;		_main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _Lcd_Clear
  4782  0CE2                     _Lcd_Clear:
  4783  0CE2                     l1456:	
  4784                           ;incstack = 0
  4785                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4786                           
  4787                           
  4788                           ;lcd.c: 21:     Lcd_Cmd(0);
  4789  0CE2  3000               	movlw	0
  4790  0CE3  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4791                           
  4792                           ;lcd.c: 22:     Lcd_Cmd(1);
  4793  0CE8  3001               	movlw	1
  4794  0CE9  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  4795  0CEE                     l140:
  4796  0CEE  0008               	return
  4797  0CEF                     __end_of_Lcd_Clear:
  4798                           
  4799                           	psect	text19
  4800  0D1B                     __ptext19:	
  4801 ;; *************** function _Lcd_Cmd *****************
  4802 ;; Defined at:
  4803 ;;		line 12 in file "lcd.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  a               1    wreg     unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  a               1    3[COMMON] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       0       0       0       0
  4818 ;;      Locals:         1       0       0       0       0
  4819 ;;      Temps:          2       0       0       0       0
  4820 ;;      Totals:         3       0       0       0       0
  4821 ;;Total ram usage:        3 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    1
  4824 ;; This function calls:
  4825 ;;		_Lcd_Port
  4826 ;; This function is called by:
  4827 ;;		_Lcd_Clear
  4828 ;;		_Lcd_Set_Cursor
  4829 ;;		_Lcd_Init
  4830 ;;		_Lcd_Shift_Right
  4831 ;;		_Lcd_Shift_Left
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _Lcd_Cmd
  4837  0D1B                     _Lcd_Cmd:
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4841                           ;Lcd_Cmd@a stored from wreg
  4842  0D1B  00F3               	movwf	Lcd_Cmd@a
  4843  0D1C                     l1326:
  4844                           
  4845                           ;lcd.c: 13:     RE0 = 0;
  4846  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  4847  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  4848  0D1E  1009               	bcf	9,0	;volatile
  4849  0D1F                     l1328:
  4850                           
  4851                           ;lcd.c: 14:     Lcd_Port(a);
  4852  0D1F  0873               	movf	Lcd_Cmd@a,w
  4853  0D20  120A  158A  24C6  120A  158A  	fcall	_Lcd_Port
  4854  0D25                     l1330:
  4855                           
  4856                           ;lcd.c: 15:     RE1 = 1;
  4857  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0D27  1489               	bsf	9,1	;volatile
  4860  0D28                     l1332:
  4861                           
  4862                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4863  0D28  300B               	movlw	11
  4864  0D29  00F2               	movwf	??_Lcd_Cmd+1
  4865  0D2A  3062               	movlw	98
  4866  0D2B  00F1               	movwf	??_Lcd_Cmd
  4867  0D2C                     u1757:
  4868  0D2C  0BF1               	decfsz	??_Lcd_Cmd,f
  4869  0D2D  2D2C               	goto	u1757
  4870  0D2E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4871  0D2F  2D2C               	goto	u1757
  4872  0D30  0000               	nop
  4873  0D31                     l1334:
  4874                           
  4875                           ;lcd.c: 17:     RE1 = 0;
  4876  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0D33  1089               	bcf	9,1	;volatile
  4879  0D34                     l137:
  4880  0D34  0008               	return
  4881  0D35                     __end_of_Lcd_Cmd:
  4882                           
  4883                           	psect	text20
  4884  0CC6                     __ptext20:	
  4885 ;; *************** function _Lcd_Port *****************
  4886 ;; Defined at:
  4887 ;;		line 8 in file "lcd.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  a               1    wreg     unsigned char 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  a               1    0[COMMON] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4901 ;;      Params:         0       0       0       0       0
  4902 ;;      Locals:         1       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0
  4904 ;;      Totals:         1       0       0       0       0
  4905 ;;Total ram usage:        1 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_Lcd_Cmd
  4911 ;;		_Lcd_Init
  4912 ;;		_Lcd_Write_Char
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _Lcd_Port
  4918  0CC6                     _Lcd_Port:
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in _Lcd_Port: [wreg]
  4922                           ;Lcd_Port@a stored from wreg
  4923  0CC6  00F0               	movwf	Lcd_Port@a
  4924  0CC7                     l1314:
  4925                           
  4926                           ;lcd.c: 9:     PORTD = a;
  4927  0CC7  0870               	movf	Lcd_Port@a,w
  4928  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  4929  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  4930  0CCA  0088               	movwf	8	;volatile
  4931  0CCB                     l134:
  4932  0CCB  0008               	return
  4933  0CCC                     __end_of_Lcd_Port:
  4934  007E                     btemp	set	126	;btemp
  4935  007E                     wtemp0	set	126
  4936                           
  4937                           	psect	config
  4938                           
  4939                           ;Config register CONFIG1 @ 0x2007
  4940                           ;	Oscillator Selection bits
  4941                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4942                           ;	Watchdog Timer Enable bit
  4943                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4944                           ;	Power-up Timer Enable bit
  4945                           ;	PWRTE = OFF, PWRT disabled
  4946                           ;	RE3/MCLR pin function select bit
  4947                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4948                           ;	Code Protection bit
  4949                           ;	CP = OFF, Program memory code protection is disabled
  4950                           ;	Data Code Protection bit
  4951                           ;	CPD = OFF, Data memory code protection is disabled
  4952                           ;	Brown Out Reset Selection bits
  4953                           ;	BOREN = ON, BOR enabled
  4954                           ;	Internal External Switchover bit
  4955                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4956                           ;	Fail-Safe Clock Monitor Enabled bit
  4957                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4958                           ;	Low Voltage Programming Enable bit
  4959                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4960                           ;	In-Circuit Debugger Mode bit
  4961                           ;	DEBUG = 0x1, unprogrammed default
  4962  2007                     	org	8199
  4963  2007  23D4               	dw	9172
  4964                           
  4965                           ;Config register CONFIG2 @ 0x2008
  4966                           ;	Brown-out Reset Selection bit
  4967                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4968                           ;	Flash Program Memory Self Write Enable bits
  4969                           ;	WRT = OFF, Write protection off
  4970  2008                     	org	8200
  4971  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_impr_Pot
    _main->_impr_cont
    _setup->_spiInit
    _impr_cont->_Lcd_Set_Cursor
    _impr_cont->___lwdiv
    _impr_Pot->_Lcd_Set_Cursor
    _impr_Pot->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   20880
                                             37 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                           _impr_Pot
                          _impr_cont
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _impr_cont                                            8     3      5    5566
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _impr_Pot                                             8     3      5    5964
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1916
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     398
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1    1698
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      66
                                              4 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___wmul
   ___xxtofl
   _impr_Pot
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lwdiv
     ___wmul
   _impr_cont
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     ___lwdiv
     ___wmul
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:17:49 2021

                        pc 0002                _SSPSTATbits 0094                         l20 0CD2  
                       l23 0CD8                         l16 0D15                         l17 0D1A  
                       l34 0CE1                         l26 0CD1                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l120 0FFF  
                      l123 0153                        l140 0CEE                        l117 0D50  
                      l134 0CCB                        l152 0D04                        l137 0D34  
                      l146 0D74                        l250 0DA6                        l252 0DBE  
                      l149 0E85                        l158 0D99                        l522 0E29  
                      l443 006E                        l436 0083                        l446 0083  
                      l651 07DF                        l660 0DE5                        l645 0757  
                      l639 07EB                        l658 0DD3                        l683 0EA8  
                      l685 0F3F                        l696 0F09                        l697 0F15  
                      l689 0EED                        _RE0 0048                        _RE1 0049  
                      u900 0DBA                        u820 0D0D                        u901 0DB9  
                      u821 0D0C                        u910 0DEE                        u830 0CD8  
                      u911 0DED                        u831 0CD7                        u840 0D57  
                      u841 0D56                        u850 0D69                        u930 0E00  
                      u851 0D68                        u931 0DFF                        u860 0D99  
                      u861 0D98                        u925 0DF2                        u950 0E11  
                      u870 0DA0                        u951 0E10                        u871 0D9F  
                      u945 0E01                        u970 0E25                        u971 0E24  
                      u955 0E0D                        u980 0DCD                        u981 0DCC  
                      u965 0E19                        u885 0DA7                        u895 0DAE  
                      u995 0DD4                        _pot 0056                        fsr0 0004  
             ___flmul@aexp 0032               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034               ___fltol@exp1 0044  
                     l1320 0CF9                       l1400 0E18                       l1314 0CC7  
                     l1330 0D25                       l1410 0DC2                       l1322 0CFC  
                     l1402 0E1F                       l1332 0D28                       l1412 0DC9  
                     l1324 0D01                       l1316 0CF0                       l1404 0E25  
                     l1500 0FE6                       l1340 0D0F                       l1334 0D31  
                     l1326 0D1C                       l1414 0DCD                       l1350 0D57  
                     l1318 0CF3                       l1502 0FF2                       l1342 0D11  
                     l1430 0D35                       l1422 0CCD                       l1328 0D1F  
                     l1416 0DDC                       l1408 0DC0                       l1600 05B2  
                     l1520 003E                       l1512 001E                       l1352 0D5C  
                     l1360 0D76                       l1504 0FF9                       l1344 0D14  
                     l1336 0D06                       l1440 0D47                       l1432 0D3C  
                     l1424 0CD9                       l1450 0E53                       l1442 0E2A  
                     l1418 0DE1                       l1610 0615                       l1602 05BB  
                     l1522 0042                       l1530 005C                       l1514 0033  
                     l1506 0008                       l1354 0D63                       l1362 0D79  
                     l1370 0D9C                       l1338 0D0D                       l1434 0D44  
                     l1346 0CD2                       l1426 0CDE                       l1452 0E5D  
                     l1444 0E36                       l1620 06B5                       l1612 062E  
                     l1604 05CB                       l1540 0078                       l1516 0034  
                     l1508 0015                       l1700 0ED2                       l1356 0D69  
                     l1348 0D52                       l1364 0D86                       l1372 0DA0  
                     l1460 00F6                       l1436 0D45                       l1454 0E63  
                     l1446 0E3C                       l1630 0723                       l1622 06DB  
                     l1614 064B                       l1606 05E8                       l1550 049D  
                     l1542 048B                       l1518 003C                       l1710 0F03  
                     l1702 0ED6                       l1358 0D6E                       l1366 0D8C  
                     l1390 0DF8                       l1382 0DE6                       l1374 0DAD  
                     l1470 011B                       l1462 00FA                       l1438 0D46  
                     l1456 0CE2                       l1448 0E4B                       l1640 073B  
                     l1632 0727                       l1624 0703                       l1616 0678  
                     l1608 05F8                       l1560 04B9                       l1552 04A2  
                     l1544 0492                       l1536 0063                       l1528 004A  
                     l1720 0F36                       l1712 0F0D                       l1704 0EE4  
                     l1392 0DFC                       l1384 0DE8                       l1376 0DB4  
                     l1368 0D9A                       l1480 0146                       l1472 0121  
                     l1464 0102                       l1800 0310                       l1650 075C  
                     l1642 073C                       l1634 0728                       l1626 070C  
                     l1618 0688                       l1570 04CE                       l1562 04BE  
                     l1554 04A7                       l1546 0498                       l1538 0073  
                     l1722 0F37                       l1714 0F17                       l1706 0EF4  
                     l1394 0E00                       l1386 0DEE                       l1378 0DBA  
                     l1482 014D                       l1474 012D                       l1466 0109  
                     l1458 0084                       l1490 0FC0                       l1810 0336  
                     l1802 0317                       l1730 0166                       l1652 0761  
                     l1660 0792                       l1644 0740                       l1636 0731  
                     l1628 071A                       l1580 04EA                       l1572 04D3  
                     l1564 04C4                       l1556 04AF                       l1548 049C  
                     l1716 0F2D                       l1708 0EFF                       l1396 0E11  
                     l1388 0DF1                       l1476 0134                       l1468 010F  
                     l1492 0FC7                       l1484 0F40                       l1812 0342  
                     l1804 031D                       l1820 0362                       l1740 018D  
                     l1732 0170                       l1670 07C5                       l1662 079F  
                     l1654 076F                       l1646 0754                       l1638 0737  
                     l1590 0515                       l1582 04EF                       l1574 04DB  
                     l1566 04C8                       l1558 04B1                       l1718 0F32  
                     l1398 0E17                       l1478 013A                       l1494 0FCD  
                     l1486 0FB2                       l1830 03E9                       l1822 03A1  
                     l1814 0348                       l1806 0329                       l1750 01B2  
                     l1742 018E                       l1734 0176                       l1726 0154  
                     l1672 07D3                       l1664 07AA                       l1656 0773  
                     l1592 0532                       l1576 04DD                       l1568 04C9  
                     l1496 0FD9                       l1488 0FB6                       l1840 042A  
                     l1832 03FC                       l1824 03A9                       l1816 0354  
                     l1808 0330                       l1760 01D0                       l1752 01B5  
                     l1744 0198                       l1736 0180                       l1728 0163  
                     l1674 07D7                       l1666 07B9                       l1658 078C  
                     l1594 054E                       l1586 04F8                       l1578 04E5  
                     l1690 0EB0                       l1682 0E87                       l1498 0FE0  
                     l1850 0456                       l1842 0436                       l1834 0416  
                     l1826 03BC                       l1818 035B                       l1770 0209  
                     l1762 01DA                       l1754 01B6                       l1746 019E  
                     l1738 018A                       l1676 07D8                       l1668 07C3  
                     l1596 057A                       l1588 0508                       l1684 0E8C  
                     l1860 0481                       l1852 045C                       l1844 043D  
                     l1836 041A                       l1828 03CF                       l1780 027A  
                     l1772 020F                       l1764 01E5                       l1756 01C0  
                     l1748 01A8                       l1678 07E3                       l1598 0596  
                     l1694 0EB9                       l1686 0E90                       l1854 0468  
                     l1846 0443                       l1838 0424                       l1790 02D6  
                     l1782 0283                       l1774 0221                       l1766 01EB  
                     l1758 01C6                       l1696 0EBE                       l1688 0EA0  
                     l1856 046E                       l1848 044F                       l1792 02F0  
                     l1784 0296                       l1776 0233                       l1768 01FD  
                     l1698 0ECB                       l1858 047A                       l1794 02F4  
                     l1786 02A9                       l1778 023B                       l1796 02FE  
                     l1788 02C3                       l1798 0304                       STR_1 0806  
                     STR_2 080A                       STR_3 080E                       STR_4 0814  
                     STR_5 0816                       STR_6 0812                       STR_7 0816  
                     STR_8 0808                       u1000 0DE1                       u1001 0DE0  
                     u1010 0015                       u1011 0014                       u1100 0078  
                     u1020 002C                       u1101 0077                       u1110 049C  
                     u1030 0042                       u1111 049B                       u1031 0041  
                     u1120 04A2                       u1040 0049                       u1201 055C  
                     u1121 04A1                       u1041 0048                       u1025 0027  
                     u1202 0563                       u1130 04A7                       u1211 0588  
                     u1203 056A                       u1131 04A6                       u1300 06C1  
                     u1212 058F                       u1140 04C8                       u1060 005B  
                     u1221 05A4                       u1213 0596                       u1141 04C7  
                     u1061 005A                       u1222 05AB                       u1150 04CE  
                     u1070 0062                       u1311 06CD                       u1223 05B2  
                     u1151 04CD                       u1071 0061                       u1055 004B  
                     u1400 0754                       u1320 06E9                       u1312 06D4  
                     u1160 04D3                       u1401 0753                       u1313 06DB  
                     u1305 06BC                       u1241 05DA                       u1161 04D2  
                     u1410 075B                       u1242 05E1                       u1170 04EA  
                     u1090 0073                       u1411 075A                       u1331 06F5  
                     u1251 0607                       u1243 05E8                       u1235 05B4  
                     u1171 04E9                       u1091 0072                       u1420 0761  
                     u1332 06FC                       u1252 060E                       u1180 04EF  
                     u1500 0EB0                       u1421 0760                       u1333 0703  
                     u1325 06E4                       u1253 0615                       u1181 04EE  
                     u1085 0065                       u1501 0EAF                       u1430 0773  
                     u1431 0772                       u1271 063D                       u1191 0540  
                     u1440 0782                       u1360 0727                       u1272 0644  
                     u1192 0547                       u1600 0F32                       u1520 0ED1  
                     u1361 0726                       u1345 0705                       u1281 066A  
                     u1273 064B                       u1265 0617                       u1193 054E  
                     u1601 0F31                       u1521 0ED0                       u1450 079F  
                     u1282 0671                       u1610 0F36                       u1451 079E  
                     u1355 071C                       u1291 0697                       u1283 0678  
                     u1611 0F35                       u1515 0EC3                       u1460 07B9  
                     u1380 073B                       u1292 069E                       u1540 0EF3  
                     u1620 023B                       u1461 07B8                       u1445 077D  
                     u1381 073A                       u1293 06A5                       u1541 0EF2  
                     u1621 023A                       u1470 07D7                       u1390 0740  
                     u1471 07D6                       u1455 079B                       u1391 073F  
                     u1375 072A                       u1535 0EE5                       u1560 0F03  
                     u1480 0E8C                       u1465 07B5                       u1561 0F02  
                     u1481 0E8B                       u1570 0F09                       u1490 0E90  
                     u1707 0E30                       u1571 0F08                       u1555 0EF8  
                     u1491 0E8F                       u1580 0F0D                       u1717 0E40  
                     u1581 0F0C                       u1637 016C                       u1590 0F22  
                     u1727 0E4F                       u1647 0186                       u1737 0E5B  
                     u1657 0194                       u1747 0E65                       u1595 0F1D  
                     u1667 01AE                       u1757 0D2C                       u1677 01BC  
                     u1687 01D6                       u1697 0CFE          ?_Lcd_Write_String 0070  
                     _main 0154                       _temp 0049                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 0D35  
            ___fltol@sign1 0043                      ?_main 0070            __end_of___flmul 07EC  
          __end_of___fltol 0084                      _ANSEL 0188            __end_of___lwdiv 0E2A  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _decCV 004C                      _decPV 0052  
                    _cenCV 004B                      _decTV 004F                      _cenPV 0051  
                    _cenTV 004E                      _uniCV 004D                      _uniPV 0053  
                    _uniTV 0050                      _setup 0D35                      pclath 000A  
          __end_of_spiInit 0D1B            __end_of_spiRead 0CE2                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0E86           __end_of_Lcd_Port 0CCC  
          __initialization 07EC               __end_of_main 048B                     ??_main 0045  
       __size_of_Lcd_Clear 000D                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0F40                     ___wmul 0D9A  
                ??___flmul 0028                  ??___fltol 003E                  ??___lwdiv 0074  
         __end_of_impr_Pot 0154                impr_Pot@dec 0078                impr_Pot@cen 0079  
              impr_Pot@val 007A         __size_of__Umul8_16 0027                impr_Pot@uni 007D  
         __end_of_spiWrite 0CD2                  ??_spiInit 0073                  ??_spiRead 0070  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0CEF                 ___fltol@f1 003A             __pcstackCOMMON 0070  
            __end_of_setup 0D51             _Lcd_Set_Cursor 0D51                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0074                 __pbssBANK0 0049  
       __size_of_impr_cont 00C0          __end_of__Umul8_16 0DE6                 __pmaintext 0154  
                  ?___wmul 0070    __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0D75                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPSTAT 0094                 __stringtab 0800  
           _Lcd_Write_Char 0CEF                    _Lcd_Cmd 0D1B                  ?_impr_Pot 0078  
                ?_spiWrite 0070                    ___flmul 048B                    ___fltol 0008  
          __size_of___wmul 0025                    ___lwdiv 0DE6            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0CCC                    __ptext2 0CD9                    __ptext3 0CD2  
                  __ptext4 0D35                    __ptext5 0D05                    __ptext6 0F40  
                  __ptext7 0084                    __ptext8 0D9A                    __ptext9 0DE6  
               ??___xxtofl 0074          __end_of_impr_cont 1000                    _spiInit 0D05  
                  _spiRead 0CD9     __end_of_Lcd_Write_Char 0D05       end_of_initialization 07FC  
               ??_impr_Pot 0020               impr_Pot@fact 007B                 ??_spiWrite 0070  
                Lcd_Port@a 0070                  _PORTBbits 0006                 _termometro 0055  
            ___xxtofl@sign 0078               impr_cont@dec 0078               impr_cont@cen 0079  
             impr_cont@val 007A               impr_cont@uni 007D                spiWrite@dat 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 0073  
              ___flmul@grs 002E                  _Lcd_Clear 0CE2             _spiReceiveWait 0CD2  
           __end_of___wmul 0DBF           _Lcd_Write_String 0D75        start_initialization 07EC  
        __size_of_Lcd_Init 005C          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0CD9  
               ?_Lcd_Clear 0070                   ??___wmul 0074                  __Umul8_16 0DBF  
          Lcd_Write_Char@a 0072                  ___flmul@a 0024                  ___flmul@b 0020  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BA  
                 ?_Lcd_Cmd 0070          __size_of_impr_Pot 00D0           ___lwdiv@dividend 0072  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075                   ?___flmul 0020  
                 ?___fltol 003A                 ?__Umul8_16 0070                   ?___lwdiv 0070  
        __size_of_spiWrite 0006                  __pstrings 0800                   ?_spiInit 0070  
                 ?_spiRead 0070           ___lwdiv@quotient 0075             __size_of_setup 001C  
                _impr_cont 0F40       spiInit@sTransmitEdge 0072             ___wmul@product 0074  
       spiInit@sDataSample 0070                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0805          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 0E2A                   _Lcd_Port 0CC6                 ?_impr_cont 0078  
 __end_of_Lcd_Write_String 0D9A           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0044  
       __end_of__stringtab 0806                   ___xxtofl 0E86            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0D75                   __ptext11 0CEF  
                 __ptext20 0CC6                   __ptext12 0D51                   __ptext13 0E86  
                 __ptext14 0008                   __ptext15 048B                   __ptext16 0DBF  
                 __ptext17 0E2A                   __ptext18 0CE2                   __ptext19 0D1B  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   _contador 0054  
            __size_of_main 0337                   _impr_Pot 0084                   _spiWrite 0CCC  
             spiInit@sType 0073          spiInit@sClockIdle 0071                ??_impr_cont 0020  
         ??_spiReceiveWait 0070                  stringcode 0800         Lcd_Set_Cursor@temp 0077  
   __Umul8_16@multiplicand 0070                   stringdir 0800                   stringtab 0800  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074              impr_cont@fact 007B  
