

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 00:22:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0008                     _PORTD	set	8
   363  0006                     _PORTB	set	6
   364  0006                     _PORTBbits	set	6
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0049                     _RE1	set	73
   368  0048                     _RE0	set	72
   369  0088                     _TRISD	set	136
   370  0086                     _TRISB	set	134
   371  0087                     _TRISC	set	135
   372  0094                     _SSPSTATbits	set	148
   373  0094                     _SSPSTAT	set	148
   374  043C                     _TRISC4	set	1084
   375  043B                     _TRISC3	set	1083
   376  043D                     _TRISC5	set	1085
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379                           
   380                           	psect	cinit
   381  07F8                     start_initialization:	
   382                           ; #config settings
   383                           
   384  07F8                     __initialization:
   385                           
   386                           ; Clear objects allocated to COMMON
   387  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   388  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   389  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   390  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   391  07FC                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  07FC                     __end_of__initialization:
   395  07FC  0183               	clrf	3
   396  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  0076                     __pbssCOMMON:
   400  0076                     _temp:
   401  0076                     	ds	1
   402  0077                     _contador:
   403  0077                     	ds	1
   404  0078                     _termometro:
   405  0078                     	ds	1
   406  0079                     _pot:
   407  0079                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_setup:
   412  0070                     ?_spiInit:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiReceiveWait:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_spiReceiveWait:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiRead:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiInit@sDataSample:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     spiInit@sClockIdle:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     spiInit@sTransmitEdge:
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     ??_spiInit:
   454  0073                     spiInit@sType:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459  0073                     	ds	1
   460  0074                     ??_setup:
   461  0074                     ??_main:	
   462                           ; 1 bytes @ 0x4
   463                           
   464                           
   465                           ; 1 bytes @ 0x4
   466  0074                     	ds	2
   467                           
   468                           	psect	maintext
   469  0781                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 56 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          2       0       0       0       0
   492 ;;      Totals:         2       0       0       0       0
   493 ;;Total ram usage:        2 bytes
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_setup
   497 ;;		_spiRead
   498 ;;		_spiWrite
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  0781                     _main:
   507  0781                     l891:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;main.c: 57:     setup();
   513  0781  120A  118A  2766  120A  118A  	fcall	_setup
   514  0786                     l893:
   515                           
   516                           ;main.c: 60:         PORTBbits.RB0 = 0;
   517  0786  1283               	bcf	3,5	;RP0=0, select bank0
   518  0787  1303               	bcf	3,6	;RP1=0, select bank0
   519  0788  1006               	bcf	6,0	;volatile
   520  0789                     l895:
   521                           
   522                           ;main.c: 61:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   523  0789  3003               	movlw	3
   524  078A  00F5               	movwf	??_main+1
   525  078B  3097               	movlw	151
   526  078C  00F4               	movwf	??_main
   527  078D                     u77:
   528  078D  0BF4               	decfsz	??_main,f
   529  078E  2F8D               	goto	u77
   530  078F  0BF5               	decfsz	??_main+1,f
   531  0790  2F8D               	goto	u77
   532  0791  2F92               	nop2
   533  0792                     l897:
   534                           
   535                           ;main.c: 62:         spiWrite(1);
   536  0792  3001               	movlw	1
   537  0793  120A  118A  273A  120A  118A  	fcall	_spiWrite
   538  0798                     l899:
   539                           
   540                           ;main.c: 63:         pot = spiRead();
   541  0798  120A  118A  2747  120A  118A  	fcall	_spiRead
   542  079D  00F4               	movwf	??_main
   543  079E  0874               	movf	??_main,w
   544  079F  00F9               	movwf	_pot
   545  07A0                     l901:
   546                           
   547                           ;main.c: 64:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   548  07A0  3003               	movlw	3
   549  07A1  00F5               	movwf	??_main+1
   550  07A2  3097               	movlw	151
   551  07A3  00F4               	movwf	??_main
   552  07A4                     u87:
   553  07A4  0BF4               	decfsz	??_main,f
   554  07A5  2FA4               	goto	u87
   555  07A6  0BF5               	decfsz	??_main+1,f
   556  07A7  2FA4               	goto	u87
   557  07A8  2FA9               	nop2
   558  07A9                     l903:
   559                           
   560                           ;main.c: 65:         PORTBbits.RB0 = 1;
   561  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   562  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   563  07AB  1406               	bsf	6,0	;volatile
   564  07AC                     l905:
   565                           
   566                           ;main.c: 67:         PORTBbits.RB1 = 0;
   567  07AC  1086               	bcf	6,1	;volatile
   568  07AD                     l907:
   569                           
   570                           ;main.c: 68:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   571  07AD  3003               	movlw	3
   572  07AE  00F5               	movwf	??_main+1
   573  07AF  3097               	movlw	151
   574  07B0  00F4               	movwf	??_main
   575  07B1                     u97:
   576  07B1  0BF4               	decfsz	??_main,f
   577  07B2  2FB1               	goto	u97
   578  07B3  0BF5               	decfsz	??_main+1,f
   579  07B4  2FB1               	goto	u97
   580  07B5  2FB6               	nop2
   581  07B6                     l909:
   582                           
   583                           ;main.c: 69:         spiWrite(1);
   584  07B6  3001               	movlw	1
   585  07B7  120A  118A  273A  120A  118A  	fcall	_spiWrite
   586  07BC                     l911:
   587                           
   588                           ;main.c: 70:         contador = spiRead();
   589  07BC  120A  118A  2747  120A  118A  	fcall	_spiRead
   590  07C1  00F4               	movwf	??_main
   591  07C2  0874               	movf	??_main,w
   592  07C3  00F7               	movwf	_contador
   593  07C4                     l913:
   594                           
   595                           ;main.c: 71:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   596  07C4  3003               	movlw	3
   597  07C5  00F5               	movwf	??_main+1
   598  07C6  3097               	movlw	151
   599  07C7  00F4               	movwf	??_main
   600  07C8                     u107:
   601  07C8  0BF4               	decfsz	??_main,f
   602  07C9  2FC8               	goto	u107
   603  07CA  0BF5               	decfsz	??_main+1,f
   604  07CB  2FC8               	goto	u107
   605  07CC  2FCD               	nop2
   606  07CD                     l915:
   607                           
   608                           ;main.c: 72:         PORTBbits.RB1 = 1;
   609  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   610  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   611  07CF  1486               	bsf	6,1	;volatile
   612  07D0                     l917:
   613                           
   614                           ;main.c: 74:         PORTBbits.RB2 = 0;
   615  07D0  1106               	bcf	6,2	;volatile
   616  07D1                     l919:
   617                           
   618                           ;main.c: 75:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   619  07D1  3003               	movlw	3
   620  07D2  00F5               	movwf	??_main+1
   621  07D3  3097               	movlw	151
   622  07D4  00F4               	movwf	??_main
   623  07D5                     u117:
   624  07D5  0BF4               	decfsz	??_main,f
   625  07D6  2FD5               	goto	u117
   626  07D7  0BF5               	decfsz	??_main+1,f
   627  07D8  2FD5               	goto	u117
   628  07D9  2FDA               	nop2
   629  07DA                     l921:
   630                           
   631                           ;main.c: 76:         spiWrite(1);
   632  07DA  3001               	movlw	1
   633  07DB  120A  118A  273A  120A  118A  	fcall	_spiWrite
   634  07E0                     l923:
   635                           
   636                           ;main.c: 77:         termometro = spiRead();
   637  07E0  120A  118A  2747  120A  118A  	fcall	_spiRead
   638  07E5  00F4               	movwf	??_main
   639  07E6  0874               	movf	??_main,w
   640  07E7  00F8               	movwf	_termometro
   641  07E8                     l925:
   642                           
   643                           ;main.c: 78:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   644  07E8  3003               	movlw	3
   645  07E9  00F5               	movwf	??_main+1
   646  07EA  3097               	movlw	151
   647  07EB  00F4               	movwf	??_main
   648  07EC                     u127:
   649  07EC  0BF4               	decfsz	??_main,f
   650  07ED  2FEC               	goto	u127
   651  07EE  0BF5               	decfsz	??_main+1,f
   652  07EF  2FEC               	goto	u127
   653  07F0  2FF1               	nop2
   654  07F1                     l927:
   655                           
   656                           ;main.c: 79:         PORTBbits.RB2 = 1;
   657  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   658  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   659  07F3  1506               	bsf	6,2	;volatile
   660  07F4  2F86               	goto	l893
   661  07F5  120A  118A  2800   	ljmp	start
   662  07F8                     __end_of_main:
   663                           
   664                           	psect	text1
   665  073A                     __ptext1:	
   666 ;; *************** function _spiWrite *****************
   667 ;; Defined at:
   668 ;;		line 34 in file "SPI.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  dat             1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  dat             1    0[COMMON] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;;		_get_spi
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _spiWrite
   698  073A                     _spiWrite:
   699                           
   700                           ;incstack = 0
   701                           ; Regs used in _spiWrite: [wreg]
   702                           ;spiWrite@dat stored from wreg
   703  073A  00F0               	movwf	spiWrite@dat
   704  073B                     l731:
   705                           
   706                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   707  073B  0870               	movf	spiWrite@dat,w
   708  073C  1283               	bcf	3,5	;RP0=0, select bank0
   709  073D  1303               	bcf	3,6	;RP1=0, select bank0
   710  073E  0093               	movwf	19	;volatile
   711  073F                     l26:
   712  073F  0008               	return
   713  0740                     __end_of_spiWrite:
   714                           
   715                           	psect	text2
   716  0747                     __ptext2:	
   717 ;; *************** function _spiRead *****************
   718 ;; Defined at:
   719 ;;		line 47 in file "SPI.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      unsigned char 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    1
   740 ;; This function calls:
   741 ;;		_spiReceiveWait
   742 ;; This function is called by:
   743 ;;		_main
   744 ;;		_get_spi
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _spiRead
   750  0747                     _spiRead:
   751  0747                     l733:	
   752                           ;incstack = 0
   753                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   754                           
   755                           
   756                           ;SPI.c: 49:     spiReceiveWait();
   757  0747  120A  118A  2740  120A  118A  	fcall	_spiReceiveWait
   758  074C                     l735:
   759                           
   760                           ;SPI.c: 50:     return(SSPBUF);
   761  074C  1283               	bcf	3,5	;RP0=0, select bank0
   762  074D  1303               	bcf	3,6	;RP1=0, select bank0
   763  074E  0813               	movf	19,w	;volatile
   764  074F                     l34:
   765  074F  0008               	return
   766  0750                     __end_of_spiRead:
   767                           
   768                           	psect	text3
   769  0740                     __ptext3:	
   770 ;; *************** function _spiReceiveWait *****************
   771 ;; Defined at:
   772 ;;		line 29 in file "SPI.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		None
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_spiRead
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _spiReceiveWait
   801  0740                     _spiReceiveWait:
   802  0740                     l727:	
   803                           ;incstack = 0
   804                           ; Regs used in _spiReceiveWait: []
   805                           
   806  0740                     l20:	
   807                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   808                           
   809  0740  1683               	bsf	3,5	;RP0=1, select bank1
   810  0741  1303               	bcf	3,6	;RP1=0, select bank1
   811  0742  1C14               	btfss	20,0	;volatile
   812  0743  2F45               	goto	u21
   813  0744  2F46               	goto	u20
   814  0745                     u21:
   815  0745  2F40               	goto	l20
   816  0746                     u20:
   817  0746                     l23:
   818  0746  0008               	return
   819  0747                     __end_of_spiReceiveWait:
   820                           
   821                           	psect	text4
   822  0766                     __ptext4:	
   823 ;; *************** function _setup *****************
   824 ;; Defined at:
   825 ;;		line 91 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		_spiInit
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _setup
   855  0766                     _setup:
   856  0766                     l879:	
   857                           ;incstack = 0
   858                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   859                           
   860                           
   861                           ;main.c: 92:     ANSEL = 0;
   862  0766  1683               	bsf	3,5	;RP0=1, select bank3
   863  0767  1703               	bsf	3,6	;RP1=1, select bank3
   864  0768  0188               	clrf	8	;volatile
   865                           
   866                           ;main.c: 93:     ANSELH = 0;
   867  0769  0189               	clrf	9	;volatile
   868                           
   869                           ;main.c: 94:     TRISC = 0;
   870  076A  1683               	bsf	3,5	;RP0=1, select bank1
   871  076B  1303               	bcf	3,6	;RP1=0, select bank1
   872  076C  0187               	clrf	7	;volatile
   873  076D                     l881:
   874                           
   875                           ;main.c: 95:     TRISC4 = 1;
   876  076D  1607               	bsf	7,4	;volatile
   877                           
   878                           ;main.c: 96:     TRISB = 0;
   879  076E  0186               	clrf	6	;volatile
   880                           
   881                           ;main.c: 97:     TRISD = 0;
   882  076F  0188               	clrf	8	;volatile
   883                           
   884                           ;main.c: 98:     PORTB = 0;
   885  0770  1283               	bcf	3,5	;RP0=0, select bank0
   886  0771  1303               	bcf	3,6	;RP1=0, select bank0
   887  0772  0186               	clrf	6	;volatile
   888                           
   889                           ;main.c: 99:     PORTD = 0;
   890  0773  0188               	clrf	8	;volatile
   891  0774                     l883:
   892                           
   893                           ;main.c: 100:     PORTBbits.RB0 = 1;
   894  0774  1406               	bsf	6,0	;volatile
   895  0775                     l885:
   896                           
   897                           ;main.c: 101:     PORTBbits.RB1 = 1;
   898  0775  1486               	bsf	6,1	;volatile
   899  0776                     l887:
   900                           
   901                           ;main.c: 102:     PORTBbits.RB2 = 1;
   902  0776  1506               	bsf	6,2	;volatile
   903  0777                     l889:
   904                           
   905                           ;main.c: 103:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   906  0777  01F0               	clrf	spiInit@sDataSample
   907  0778  01F1               	clrf	spiInit@sClockIdle
   908  0779  01F2               	clrf	spiInit@sTransmitEdge
   909  077A  3020               	movlw	32
   910  077B  120A  118A  2750  120A  118A  	fcall	_spiInit
   911  0780                     l81:
   912  0780  0008               	return
   913  0781                     __end_of_setup:
   914                           
   915                           	psect	text5
   916  0750                     __ptext5:	
   917 ;; *************** function _spiInit *****************
   918 ;; Defined at:
   919 ;;		line 12 in file "SPI.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  sType           1    wreg     enum E1264
   922 ;;  sDataSample     1    0[COMMON] enum E1272
   923 ;;  sClockIdle      1    1[COMMON] enum E1276
   924 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  sType           1    3[COMMON] enum E1264
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         3       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0
   939 ;;      Totals:         4       0       0       0       0
   940 ;;Total ram usage:        4 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _spiInit
   951  0750                     _spiInit:
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   955                           ;spiInit@sType stored from wreg
   956  0750  00F3               	movwf	spiInit@sType
   957  0751                     l869:
   958                           
   959                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   960  0751  1683               	bsf	3,5	;RP0=1, select bank1
   961  0752  1303               	bcf	3,6	;RP1=0, select bank1
   962  0753  1287               	bcf	7,5	;volatile
   963                           
   964                           ;SPI.c: 15:     if(sType & 0b00000100)
   965  0754  1D73               	btfss	spiInit@sType,2
   966  0755  2F57               	goto	u61
   967  0756  2F58               	goto	u60
   968  0757                     u61:
   969  0757  2F5C               	goto	l875
   970  0758                     u60:
   971  0758                     l871:
   972                           
   973                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   974  0758  0872               	movf	spiInit@sTransmitEdge,w
   975  0759  0094               	movwf	20	;volatile
   976  075A                     l873:
   977                           
   978                           ;SPI.c: 18:         TRISC3 = 1;
   979  075A  1587               	bsf	7,3	;volatile
   980                           
   981                           ;SPI.c: 19:     }
   982  075B  2F60               	goto	l16
   983  075C                     l875:
   984                           
   985                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   986  075C  0870               	movf	spiInit@sDataSample,w
   987  075D  0472               	iorwf	spiInit@sTransmitEdge,w
   988  075E  0094               	movwf	20	;volatile
   989  075F                     l877:
   990                           
   991                           ;SPI.c: 23:         TRISC3 = 0;
   992  075F  1187               	bcf	7,3	;volatile
   993  0760                     l16:	
   994                           ;SPI.c: 24:     }
   995                           
   996                           
   997                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   998  0760  0873               	movf	spiInit@sType,w
   999  0761  0471               	iorwf	spiInit@sClockIdle,w
  1000  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0764  0094               	movwf	20	;volatile
  1003  0765                     l17:
  1004  0765  0008               	return
  1005  0766                     __end_of_spiInit:
  1006  007E                     btemp	set	126	;btemp
  1007  007E                     wtemp0	set	126
  1008                           
  1009                           	psect	config
  1010                           
  1011                           ;Config register CONFIG1 @ 0x2007
  1012                           ;	Oscillator Selection bits
  1013                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1014                           ;	Watchdog Timer Enable bit
  1015                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1016                           ;	Power-up Timer Enable bit
  1017                           ;	PWRTE = OFF, PWRT disabled
  1018                           ;	RE3/MCLR pin function select bit
  1019                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1020                           ;	Code Protection bit
  1021                           ;	CP = OFF, Program memory code protection is disabled
  1022                           ;	Data Code Protection bit
  1023                           ;	CPD = OFF, Data memory code protection is disabled
  1024                           ;	Brown Out Reset Selection bits
  1025                           ;	BOREN = ON, BOR enabled
  1026                           ;	Internal External Switchover bit
  1027                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1028                           ;	Fail-Safe Clock Monitor Enabled bit
  1029                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1030                           ;	Low Voltage Programming Enable bit
  1031                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1032                           ;	In-Circuit Debugger Mode bit
  1033                           ;	DEBUG = 0x1, unprogrammed default
  1034  2007                     	org	8199
  1035  2007  23D4               	dw	9172
  1036                           
  1037                           ;Config register CONFIG2 @ 0x2008
  1038                           ;	Brown-out Reset Selection bit
  1039                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1040                           ;	Flash Program Memory Self Write Enable bits
  1041                           ;	WRT = OFF, Write protection off
  1042  2008                     	org	8200
  1043  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 00:22:42 2021

            _SSPSTATbits 0094                       l20 0740                       l23 0746  
                     l16 0760                       l17 0765                       l34 074F  
                     l26 073F                       l81 0780                       u20 0746  
                     u21 0745                       u60 0758                       u61 0757  
                     u77 078D                       u87 07A4                       u97 07B1  
                    l731 073B                      l733 0747                      l901 07A0  
                    l727 0740                      l735 074C                      l911 07BC  
                    l903 07A9                      l921 07DA                      l913 07C4  
                    l905 07AC                      l923 07E0                      l915 07CD  
                    l907 07AD                      l925 07E8                      l917 07D0  
                    l909 07B6                      l871 0758                      l927 07F1  
                    l919 07D1                      l873 075A                      l881 076D  
                    l875 075C                      l883 0774                      l891 0781  
                    l877 075F                      l869 0751                      l885 0775  
                    l893 0786                      l887 0776                      l879 0766  
                    l895 0789                      l889 0777                      l897 0792  
                    l899 0798                      _RE0 0048                      _RE1 0049  
                    u107 07C8                      u117 07D5                      u127 07EC  
                    _pot 0079                     _main 0781                     _temp 0076  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 0766          __end_of_spiInit 0766          __end_of_spiRead 0750  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_spiWrite 0740                ??_spiInit 0073                ??_spiRead 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 0781  
                ??_setup 0074               __pmaintext 0781  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 073A  
                __ptext2 0747                  __ptext3 0740                  __ptext4 0766  
                __ptext5 0750                  _spiInit 0750                  _spiRead 0747  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTBbits 0006  
             _termometro 0078              spiWrite@dat 0070           _spiReceiveWait 0740  
    start_initialization 07F8   __end_of_spiReceiveWait 0747              __pbssCOMMON 0076  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0070                 ?_spiRead 0070           __size_of_setup 001B  
   spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _contador 0077            __size_of_main 0077  
               _spiWrite 073A             spiInit@sType 0073        spiInit@sClockIdle 0071  
       ??_spiReceiveWait 0070  
