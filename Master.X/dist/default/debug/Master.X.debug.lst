

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:53:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0006                     _PORTB	set	6
   363  0008                     _PORTD	set	8
   364  0006                     _PORTBbits	set	6
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0049                     _RE1	set	73
   368  0048                     _RE0	set	72
   369  0088                     _TRISD	set	136
   370  0086                     _TRISB	set	134
   371  0087                     _TRISCbits	set	135
   372  0087                     _TRISC	set	135
   373  0094                     _SSPSTATbits	set	148
   374  0094                     _SSPSTAT	set	148
   375  043B                     _TRISC3	set	1083
   376  043D                     _TRISC5	set	1085
   377  0189                     _ANSELH	set	393
   378  0188                     _ANSEL	set	392
   379                           
   380                           	psect	cinit
   381  07F8                     start_initialization:	
   382                           ; #config settings
   383                           
   384  07F8                     __initialization:
   385                           
   386                           ; Clear objects allocated to COMMON
   387  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   388  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   389  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   390  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   391  07FC                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  07FC                     __end_of__initialization:
   395  07FC  0183               	clrf	3
   396  07FD  120A  118A  2FC7   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  0076                     __pbssCOMMON:
   400  0076                     _temp:
   401  0076                     	ds	1
   402  0077                     _contador:
   403  0077                     	ds	1
   404  0078                     _termometro:
   405  0078                     	ds	1
   406  0079                     _pot:
   407  0079                     	ds	1
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_setup:
   412  0070                     ?_spiInit:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_spiReceiveWait:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_spiReceiveWait:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_spiRead:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiInit@sDataSample:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     spiInit@sClockIdle:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     spiInit@sTransmitEdge:
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     ??_spiInit:
   454  0073                     spiInit@sType:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459  0073                     	ds	1
   460  0074                     ??_setup:
   461  0074                     ??_main:	
   462                           ; 1 bytes @ 0x4
   463                           
   464                           
   465                           ; 1 bytes @ 0x4
   466  0074                     	ds	2
   467                           
   468                           	psect	maintext
   469  07C7                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 56 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          2       0       0       0       0
   492 ;;      Totals:         2       0       0       0       0
   493 ;;Total ram usage:        2 bytes
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_setup
   497 ;;		_spiRead
   498 ;;		_spiWrite
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  07C7                     _main:
   507  07C7                     l869:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;main.c: 57:     setup();
   513  07C7  120A  118A  27AC  120A  118A  	fcall	_setup
   514  07CC                     l871:
   515                           
   516                           ;main.c: 60:         PORTBbits.RB0 = 0;
   517  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   518  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   519  07CE  1006               	bcf	6,0	;volatile
   520  07CF                     l873:
   521                           
   522                           ;main.c: 61:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   523  07CF  3003               	movlw	3
   524  07D0  00F5               	movwf	??_main+1
   525  07D1  3097               	movlw	151
   526  07D2  00F4               	movwf	??_main
   527  07D3                     u77:
   528  07D3  0BF4               	decfsz	??_main,f
   529  07D4  2FD3               	goto	u77
   530  07D5  0BF5               	decfsz	??_main+1,f
   531  07D6  2FD3               	goto	u77
   532  07D7  2FD8               	nop2
   533  07D8                     l875:
   534                           
   535                           ;main.c: 62:         spiWrite(1);
   536  07D8  3001               	movlw	1
   537  07D9  120A  118A  2780  120A  118A  	fcall	_spiWrite
   538  07DE                     l877:
   539                           
   540                           ;main.c: 63:         pot = spiRead();
   541  07DE  120A  118A  278D  120A  118A  	fcall	_spiRead
   542  07E3  00F4               	movwf	??_main
   543  07E4  0874               	movf	??_main,w
   544  07E5  00F9               	movwf	_pot
   545  07E6                     l879:
   546                           
   547                           ;main.c: 64:         _delay((unsigned long)((1)*((8000000)/4000.0)));
   548  07E6  3003               	movlw	3
   549  07E7  00F5               	movwf	??_main+1
   550  07E8  3097               	movlw	151
   551  07E9  00F4               	movwf	??_main
   552  07EA                     u87:
   553  07EA  0BF4               	decfsz	??_main,f
   554  07EB  2FEA               	goto	u87
   555  07EC  0BF5               	decfsz	??_main+1,f
   556  07ED  2FEA               	goto	u87
   557  07EE  2FEF               	nop2
   558  07EF                     l881:
   559                           
   560                           ;main.c: 65:         PORTBbits.RB0 = 1;
   561  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   562  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   563  07F1  1406               	bsf	6,0	;volatile
   564  07F2                     l883:
   565                           
   566                           ;main.c: 69:         PORTD = pot;
   567  07F2  0879               	movf	_pot,w
   568  07F3  0088               	movwf	8	;volatile
   569  07F4  2FCC               	goto	l871
   570  07F5  120A  118A  2800   	ljmp	start
   571  07F8                     __end_of_main:
   572                           
   573                           	psect	text1
   574  0780                     __ptext1:	
   575 ;; *************** function _spiWrite *****************
   576 ;; Defined at:
   577 ;;		line 34 in file "SPI.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  dat             1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  dat             1    0[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;;		_get_spi
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _spiWrite
   607  0780                     _spiWrite:
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _spiWrite: [wreg]
   611                           ;spiWrite@dat stored from wreg
   612  0780  00F0               	movwf	spiWrite@dat
   613  0781                     l731:
   614                           
   615                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   616  0781  0870               	movf	spiWrite@dat,w
   617  0782  1283               	bcf	3,5	;RP0=0, select bank0
   618  0783  1303               	bcf	3,6	;RP1=0, select bank0
   619  0784  0093               	movwf	19	;volatile
   620  0785                     l26:
   621  0785  0008               	return
   622  0786                     __end_of_spiWrite:
   623                           
   624                           	psect	text2
   625  078D                     __ptext2:	
   626 ;; *************** function _spiRead *****************
   627 ;; Defined at:
   628 ;;		line 47 in file "SPI.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    1
   649 ;; This function calls:
   650 ;;		_spiReceiveWait
   651 ;; This function is called by:
   652 ;;		_main
   653 ;;		_get_spi
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _spiRead
   659  078D                     _spiRead:
   660  078D                     l733:	
   661                           ;incstack = 0
   662                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   663                           
   664                           
   665                           ;SPI.c: 49:     spiReceiveWait();
   666  078D  120A  118A  2786  120A  118A  	fcall	_spiReceiveWait
   667  0792                     l735:
   668                           
   669                           ;SPI.c: 50:     return(SSPBUF);
   670  0792  1283               	bcf	3,5	;RP0=0, select bank0
   671  0793  1303               	bcf	3,6	;RP1=0, select bank0
   672  0794  0813               	movf	19,w	;volatile
   673  0795                     l34:
   674  0795  0008               	return
   675  0796                     __end_of_spiRead:
   676                           
   677                           	psect	text3
   678  0786                     __ptext3:	
   679 ;; *************** function _spiReceiveWait *****************
   680 ;; Defined at:
   681 ;;		line 29 in file "SPI.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		None
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_spiRead
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _spiReceiveWait
   710  0786                     _spiReceiveWait:
   711  0786                     l727:	
   712                           ;incstack = 0
   713                           ; Regs used in _spiReceiveWait: []
   714                           
   715  0786                     l20:	
   716                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   717                           
   718  0786  1683               	bsf	3,5	;RP0=1, select bank1
   719  0787  1303               	bcf	3,6	;RP1=0, select bank1
   720  0788  1C14               	btfss	20,0	;volatile
   721  0789  2F8B               	goto	u21
   722  078A  2F8C               	goto	u20
   723  078B                     u21:
   724  078B  2F86               	goto	l20
   725  078C                     u20:
   726  078C                     l23:
   727  078C  0008               	return
   728  078D                     __end_of_spiReceiveWait:
   729                           
   730                           	psect	text4
   731  07AC                     __ptext4:	
   732 ;; *************** function _setup *****************
   733 ;; Defined at:
   734 ;;		line 78 in file "main.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         0       0       0       0       0
   752 ;;Total ram usage:        0 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    1
   755 ;; This function calls:
   756 ;;		_spiInit
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _setup
   764  07AC                     _setup:
   765  07AC                     l857:	
   766                           ;incstack = 0
   767                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   768                           
   769                           
   770                           ;main.c: 79:     ANSEL = 0;
   771  07AC  1683               	bsf	3,5	;RP0=1, select bank3
   772  07AD  1703               	bsf	3,6	;RP1=1, select bank3
   773  07AE  0188               	clrf	8	;volatile
   774                           
   775                           ;main.c: 80:     ANSELH = 0;
   776  07AF  0189               	clrf	9	;volatile
   777                           
   778                           ;main.c: 81:     TRISC = 0;
   779  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   780  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   781  07B2  0187               	clrf	7	;volatile
   782  07B3                     l859:
   783                           
   784                           ;main.c: 82:     TRISCbits.TRISC4 = 1;
   785  07B3  1607               	bsf	7,4	;volatile
   786                           
   787                           ;main.c: 83:     TRISB = 0;
   788  07B4  0186               	clrf	6	;volatile
   789                           
   790                           ;main.c: 84:     TRISD = 0;
   791  07B5  0188               	clrf	8	;volatile
   792                           
   793                           ;main.c: 85:     PORTB = 0;
   794  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   795  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   796  07B8  0186               	clrf	6	;volatile
   797                           
   798                           ;main.c: 86:     PORTD = 0;
   799  07B9  0188               	clrf	8	;volatile
   800  07BA                     l861:
   801                           
   802                           ;main.c: 87:     PORTBbits.RB0 = 1;
   803  07BA  1406               	bsf	6,0	;volatile
   804  07BB                     l863:
   805                           
   806                           ;main.c: 88:     PORTBbits.RB1 = 1;
   807  07BB  1486               	bsf	6,1	;volatile
   808  07BC                     l865:
   809                           
   810                           ;main.c: 89:     PORTBbits.RB2 = 1;
   811  07BC  1506               	bsf	6,2	;volatile
   812  07BD                     l867:
   813                           
   814                           ;main.c: 90:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   815  07BD  01F0               	clrf	spiInit@sDataSample
   816  07BE  01F1               	clrf	spiInit@sClockIdle
   817  07BF  01F2               	clrf	spiInit@sTransmitEdge
   818  07C0  3020               	movlw	32
   819  07C1  120A  118A  2796  120A  118A  	fcall	_spiInit
   820  07C6                     l81:
   821  07C6  0008               	return
   822  07C7                     __end_of_setup:
   823                           
   824                           	psect	text5
   825  0796                     __ptext5:	
   826 ;; *************** function _spiInit *****************
   827 ;; Defined at:
   828 ;;		line 12 in file "SPI.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  sType           1    wreg     enum E1264
   831 ;;  sDataSample     1    0[COMMON] enum E1272
   832 ;;  sClockIdle      1    1[COMMON] enum E1276
   833 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  sType           1    3[COMMON] enum E1264
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         3       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_setup
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _spiInit
   860  0796                     _spiInit:
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   864                           ;spiInit@sType stored from wreg
   865  0796  00F3               	movwf	spiInit@sType
   866  0797                     l847:
   867                           
   868                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   869  0797  1683               	bsf	3,5	;RP0=1, select bank1
   870  0798  1303               	bcf	3,6	;RP1=0, select bank1
   871  0799  1287               	bcf	7,5	;volatile
   872                           
   873                           ;SPI.c: 15:     if(sType & 0b00000100)
   874  079A  1D73               	btfss	spiInit@sType,2
   875  079B  2F9D               	goto	u61
   876  079C  2F9E               	goto	u60
   877  079D                     u61:
   878  079D  2FA2               	goto	l853
   879  079E                     u60:
   880  079E                     l849:
   881                           
   882                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   883  079E  0872               	movf	spiInit@sTransmitEdge,w
   884  079F  0094               	movwf	20	;volatile
   885  07A0                     l851:
   886                           
   887                           ;SPI.c: 18:         TRISC3 = 1;
   888  07A0  1587               	bsf	7,3	;volatile
   889                           
   890                           ;SPI.c: 19:     }
   891  07A1  2FA6               	goto	l16
   892  07A2                     l853:
   893                           
   894                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   895  07A2  0870               	movf	spiInit@sDataSample,w
   896  07A3  0472               	iorwf	spiInit@sTransmitEdge,w
   897  07A4  0094               	movwf	20	;volatile
   898  07A5                     l855:
   899                           
   900                           ;SPI.c: 23:         TRISC3 = 0;
   901  07A5  1187               	bcf	7,3	;volatile
   902  07A6                     l16:	
   903                           ;SPI.c: 24:     }
   904                           
   905                           
   906                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   907  07A6  0873               	movf	spiInit@sType,w
   908  07A7  0471               	iorwf	spiInit@sClockIdle,w
   909  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   910  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   911  07AA  0094               	movwf	20	;volatile
   912  07AB                     l17:
   913  07AB  0008               	return
   914  07AC                     __end_of_spiInit:
   915  007E                     btemp	set	126	;btemp
   916  007E                     wtemp0	set	126
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = ON, BOR enabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  23D4               	dw	9172
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:53:00 2021

            _SSPSTATbits 0094                       l20 0786                       l23 078C  
                     l16 07A6                       l17 07AB                       l34 0795  
                     l26 0785                       l81 07C6                       u20 078C  
                     u21 078B                       u60 079E                       u61 079D  
                     u77 07D3                       u87 07EA                      l731 0781  
                    l733 078D                      l727 0786                      l735 0792  
                    l851 07A0                      l853 07A2                      l861 07BA  
                    l855 07A5                      l847 0797                      l863 07BB  
                    l871 07CC                      l849 079E                      l865 07BC  
                    l857 07AC                      l881 07EF                      l873 07CF  
                    l867 07BD                      l859 07B3                      l883 07F2  
                    l875 07D8                      l877 07DE                      l869 07C7  
                    l879 07E6                      _RE0 0048                      _RE1 0049  
                    _pot 0079                     _main 07C7                     _temp 0076  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 07AC          __end_of_spiInit 07AC          __end_of_spiRead 0796  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_spiWrite 0786  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 07C7                  ??_setup 0074  
             __pmaintext 07C7  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0780                  __ptext2 078D  
                __ptext3 0786                  __ptext4 07AC                  __ptext5 0796  
                _spiInit 0796                  _spiRead 078D     end_of_initialization 07FC  
             ??_spiWrite 0070                _PORTBbits 0006               _termometro 0078  
              _TRISCbits 0087              spiWrite@dat 0070           _spiReceiveWait 0786  
    start_initialization 07F8   __end_of_spiReceiveWait 078D              __pbssCOMMON 0076  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0070                 ?_spiRead 0070           __size_of_setup 001B  
   spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _contador 0077            __size_of_main 0031  
               _spiWrite 0780             spiInit@sType 0073        spiInit@sClockIdle 0071  
       ??_spiReceiveWait 0070  
