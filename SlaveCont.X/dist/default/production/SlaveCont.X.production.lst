

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 00:24:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  0006                     _PORTBbits	set	6
   287  0009                     _PORTE	set	9
   288  0007                     _PORTC	set	7
   289  0006                     _PORTB	set	6
   290  0008                     _PORTD	set	8
   291  000B                     _INTCONbits	set	11
   292  0063                     _SSPIF	set	99
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  0085                     _TRISA	set	133
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0096                     _IOCB	set	150
   299  0087                     _TRISCbits	set	135
   300  0086                     _TRISBbits	set	134
   301  0087                     _TRISC	set	135
   302  0086                     _TRISB	set	134
   303  043B                     _TRISC3	set	1083
   304  043D                     _TRISC5	set	1085
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  000F                     start_initialization:	
   310                           ; #config settings
   311                           
   312  000F                     __initialization:
   313  000F                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  000F                     __end_of__initialization:
   317  000F  0183               	clrf	3
   318  0010  120A  118A  288D   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:
   322  0070                     ?_conf_but:
   323  0070                     ?_spiWrite:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_spiWrite:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     spiWrite@dat:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0070                     	ds	1
   341  0071                     ??_ISR:
   342                           
   343                           ; 1 bytes @ 0x1
   344  0071                     	ds	5
   345  0076                     ??_spiInit:
   346  0076                     spiInit@sType:	
   347                           ; 1 bytes @ 0x6
   348                           
   349                           
   350                           ; 1 bytes @ 0x6
   351  0076                     	ds	1
   352  0077                     ??_conf_but:
   353  0077                     ??_main:	
   354                           ; 1 bytes @ 0x7
   355                           
   356                           
   357                           	psect	cstackBANK0
   358  0020                     __pcstackBANK0:	
   359                           ; 1 bytes @ 0x7
   360                           
   361  0020                     ?_spiInit:
   362  0020                     spiInit@sDataSample:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0020                     	ds	1
   368  0021                     spiInit@sClockIdle:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0021                     	ds	1
   372  0022                     spiInit@sTransmitEdge:
   373                           
   374                           ; 1 bytes @ 0x2
   375  0022                     	ds	1
   376                           
   377                           	psect	maintext
   378  008D                     __pmaintext:	
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 47 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    4
   404 ;; This function calls:
   405 ;;		_conf_but
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  008D                     _main:
   414  008D                     l801:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;main.c: 48:     conf_but();
   420  008D  120A  118A  204C  120A  118A  	fcall	_conf_but
   421  0092                     l47:	
   422                           ;main.c: 49:     while (1) {
   423                           
   424  0092                     l48:	
   425                           ;main.c: 50:     }
   426                           
   427  0092  2892               	goto	l47
   428  0093  120A  118A  280C   	ljmp	start
   429  0096                     __end_of_main:
   430                           
   431                           	psect	text1
   432  004C                     __ptext1:	
   433 ;; *************** function _conf_but *****************
   434 ;; Defined at:
   435 ;;		line 58 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, pclath, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		_spiInit
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _conf_but
   465  004C                     _conf_but:
   466  004C                     l773:	
   467                           ;incstack = 0
   468                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;main.c: 60:     INTCONbits.GIE = 1;
   472  004C  178B               	bsf	11,7	;volatile
   473                           
   474                           ;main.c: 61:     INTCONbits.PEIE = 1;
   475  004D  170B               	bsf	11,6	;volatile
   476                           
   477                           ;main.c: 62:     INTCONbits.RBIE = 1;
   478  004E  158B               	bsf	11,3	;volatile
   479  004F                     l775:
   480                           
   481                           ;main.c: 63:     ANSEL = 0;
   482  004F  1683               	bsf	3,5	;RP0=1, select bank3
   483  0050  1703               	bsf	3,6	;RP1=1, select bank3
   484  0051  0188               	clrf	8	;volatile
   485                           
   486                           ;main.c: 64:     ANSELH = 0;
   487  0052  0189               	clrf	9	;volatile
   488                           
   489                           ;main.c: 65:     TRISB = 0x00;
   490  0053  1683               	bsf	3,5	;RP0=1, select bank1
   491  0054  1303               	bcf	3,6	;RP1=0, select bank1
   492  0055  0186               	clrf	6	;volatile
   493                           
   494                           ;main.c: 66:     TRISC = 0;
   495  0056  0187               	clrf	7	;volatile
   496  0057                     l777:
   497                           
   498                           ;main.c: 67:     TRISBbits.TRISB0 = 1;
   499  0057  1406               	bsf	6,0	;volatile
   500  0058                     l779:
   501                           
   502                           ;main.c: 68:     TRISBbits.TRISB1 = 1;
   503  0058  1486               	bsf	6,1	;volatile
   504  0059                     l781:
   505                           
   506                           ;main.c: 69:     TRISCbits.TRISC4 = 1;
   507  0059  1607               	bsf	7,4	;volatile
   508  005A                     l783:
   509                           
   510                           ;main.c: 70:     IOCB = 0b00000011;
   511  005A  3003               	movlw	3
   512  005B  0096               	movwf	22	;volatile
   513  005C                     l785:
   514                           
   515                           ;main.c: 71:     TRISD = 0x00;
   516  005C  0188               	clrf	8	;volatile
   517  005D                     l787:
   518                           
   519                           ;main.c: 72:     TRISE = 0x00;
   520  005D  0189               	clrf	9	;volatile
   521  005E                     l789:
   522                           
   523                           ;main.c: 73:     TRISA = 0;
   524  005E  0185               	clrf	5	;volatile
   525  005F                     l791:
   526                           
   527                           ;main.c: 74:     PORTD = 0;
   528  005F  1283               	bcf	3,5	;RP0=0, select bank0
   529  0060  1303               	bcf	3,6	;RP1=0, select bank0
   530  0061  0188               	clrf	8	;volatile
   531  0062                     l793:
   532                           
   533                           ;main.c: 75:     PORTB = 0;
   534  0062  0186               	clrf	6	;volatile
   535  0063                     l795:
   536                           
   537                           ;main.c: 76:     PORTC = 0;
   538  0063  0187               	clrf	7	;volatile
   539  0064                     l797:
   540                           
   541                           ;main.c: 77:     PORTE = 0;
   542  0064  0189               	clrf	9	;volatile
   543  0065                     l799:
   544                           
   545                           ;main.c: 79:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   546  0065  01A0               	clrf	spiInit@sDataSample
   547  0066  01A1               	clrf	spiInit@sClockIdle
   548  0067  01A2               	clrf	spiInit@sTransmitEdge
   549  0068  3024               	movlw	36
   550  0069  120A  118A  206F  120A  118A  	fcall	_spiInit
   551  006E                     l53:
   552  006E  0008               	return
   553  006F                     __end_of_conf_but:
   554                           
   555                           	psect	text2
   556  006F                     __ptext2:	
   557 ;; *************** function _spiInit *****************
   558 ;; Defined at:
   559 ;;		line 12 in file "SPI.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  sType           1    wreg     enum E1264
   562 ;;  sDataSample     1    0[BANK0 ] enum E1272
   563 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   564 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  sType           1    6[COMMON] enum E1264
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       3       0       0       0
   577 ;;      Locals:         1       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         1       3       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    2
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_conf_but
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _spiInit
   592  006F                     _spiInit:
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   596                           ;spiInit@sType stored from wreg
   597  006F  00F6               	movwf	spiInit@sType
   598  0070                     l763:
   599                           
   600                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   601  0070  1683               	bsf	3,5	;RP0=1, select bank1
   602  0071  1303               	bcf	3,6	;RP1=0, select bank1
   603  0072  1287               	bcf	7,5	;volatile
   604                           
   605                           ;SPI.c: 15:     if(sType & 0b00000100)
   606  0073  1D76               	btfss	spiInit@sType,2
   607  0074  2876               	goto	u71
   608  0075  2877               	goto	u70
   609  0076                     u71:
   610  0076  287F               	goto	l769
   611  0077                     u70:
   612  0077                     l765:
   613                           
   614                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   615  0077  1283               	bcf	3,5	;RP0=0, select bank0
   616  0078  1303               	bcf	3,6	;RP1=0, select bank0
   617  0079  0822               	movf	spiInit@sTransmitEdge,w
   618  007A  1683               	bsf	3,5	;RP0=1, select bank1
   619  007B  1303               	bcf	3,6	;RP1=0, select bank1
   620  007C  0094               	movwf	20	;volatile
   621  007D                     l767:
   622                           
   623                           ;SPI.c: 18:         TRISC3 = 1;
   624  007D  1587               	bsf	7,3	;volatile
   625                           
   626                           ;SPI.c: 19:     }
   627  007E  2887               	goto	l79
   628  007F                     l769:
   629                           
   630                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   631  007F  1283               	bcf	3,5	;RP0=0, select bank0
   632  0080  1303               	bcf	3,6	;RP1=0, select bank0
   633  0081  0820               	movf	spiInit@sDataSample,w
   634  0082  0422               	iorwf	spiInit@sTransmitEdge,w
   635  0083  1683               	bsf	3,5	;RP0=1, select bank1
   636  0084  1303               	bcf	3,6	;RP1=0, select bank1
   637  0085  0094               	movwf	20	;volatile
   638  0086                     l771:
   639                           
   640                           ;SPI.c: 23:         TRISC3 = 0;
   641  0086  1187               	bcf	7,3	;volatile
   642  0087                     l79:	
   643                           ;SPI.c: 24:     }
   644                           
   645                           
   646                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   647  0087  0876               	movf	spiInit@sType,w
   648  0088  1283               	bcf	3,5	;RP0=0, select bank0
   649  0089  1303               	bcf	3,6	;RP1=0, select bank0
   650  008A  0421               	iorwf	spiInit@sClockIdle,w
   651  008B  0094               	movwf	20	;volatile
   652  008C                     l80:
   653  008C  0008               	return
   654  008D                     __end_of_spiInit:
   655                           
   656                           	psect	text3
   657  0013                     __ptext3:	
   658 ;; *************** function _ISR *****************
   659 ;; Defined at:
   660 ;;		line 86 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          5       0       0       0       0
   677 ;;      Totals:         5       0       0       0       0
   678 ;;Total ram usage:        5 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    1
   681 ;; This function calls:
   682 ;;		_spiWrite
   683 ;; This function is called by:
   684 ;;		Interrupt level 1
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _ISR
   690  0013                     _ISR:
   691  0013                     i1l733:
   692                           
   693                           ;main.c: 87:     if (INTCONbits.RBIF == 1) {
   694  0013  1C0B               	btfss	11,0	;volatile
   695  0014  2816               	goto	u3_21
   696  0015  2817               	goto	u3_20
   697  0016                     u3_21:
   698  0016  2835               	goto	i1l743
   699  0017                     u3_20:
   700  0017                     i1l735:
   701                           
   702                           ;main.c: 88:         _delay((unsigned long)((100)*((8000000)/4000.0)));
   703  0017  3002               	movlw	2
   704  0018  00F3               	movwf	??_ISR+2
   705  0019  3004               	movlw	4
   706  001A  00F2               	movwf	??_ISR+1
   707  001B  30BA               	movlw	186
   708  001C  00F1               	movwf	??_ISR
   709  001D                     u8_27:
   710  001D  0BF1               	decfsz	??_ISR,f
   711  001E  281D               	goto	u8_27
   712  001F  0BF2               	decfsz	??_ISR+1,f
   713  0020  281D               	goto	u8_27
   714  0021  0BF3               	decfsz	??_ISR+2,f
   715  0022  281D               	goto	u8_27
   716  0023  0000               	nop
   717  0024                     i1l737:
   718                           
   719                           ;main.c: 89:         if (PORTBbits.RB1 == 1) {
   720  0024  1283               	bcf	3,5	;RP0=0, select bank0
   721  0025  1303               	bcf	3,6	;RP1=0, select bank0
   722  0026  1C86               	btfss	6,1	;volatile
   723  0027  2829               	goto	u4_21
   724  0028  282A               	goto	u4_20
   725  0029                     u4_21:
   726  0029  282F               	goto	i1l59
   727  002A                     u4_20:
   728  002A                     i1l739:
   729                           
   730                           ;main.c: 90:             PORTD++;
   731  002A  3001               	movlw	1
   732  002B  00F1               	movwf	??_ISR
   733  002C  0871               	movf	??_ISR,w
   734  002D  0788               	addwf	8,f	;volatile
   735                           
   736                           ;main.c: 91:         } else if (PORTBbits.RB0 == 1) {
   737  002E  2835               	goto	i1l743
   738  002F                     i1l59:
   739  002F  1C06               	btfss	6,0	;volatile
   740  0030  2832               	goto	u5_21
   741  0031  2833               	goto	u5_20
   742  0032                     u5_21:
   743  0032  2835               	goto	i1l743
   744  0033                     u5_20:
   745  0033                     i1l741:
   746                           
   747                           ;main.c: 92:             PORTD--;
   748  0033  3001               	movlw	1
   749  0034  0288               	subwf	8,f	;volatile
   750  0035                     i1l743:
   751                           
   752                           ;main.c: 95:     INTCONbits.RBIF = 0;
   753  0035  100B               	bcf	11,0	;volatile
   754  0036                     i1l745:
   755                           
   756                           ;main.c: 97:     if (SSPIF == 1) {
   757  0036  1283               	bcf	3,5	;RP0=0, select bank0
   758  0037  1303               	bcf	3,6	;RP1=0, select bank0
   759  0038  1D8C               	btfss	12,3	;volatile
   760  0039  283B               	goto	u6_21
   761  003A  283C               	goto	u6_20
   762  003B                     u6_21:
   763  003B  2845               	goto	i1l63
   764  003C                     u6_20:
   765  003C                     i1l747:
   766                           
   767                           ;main.c: 98:         spiWrite(PORTB);
   768  003C  0806               	movf	6,w	;volatile
   769  003D  120A  118A  2096  120A  118A  	fcall	_spiWrite
   770  0042                     i1l749:
   771                           
   772                           ;main.c: 99:         SSPIF = 0;
   773  0042  1283               	bcf	3,5	;RP0=0, select bank0
   774  0043  1303               	bcf	3,6	;RP1=0, select bank0
   775  0044  118C               	bcf	12,3	;volatile
   776  0045                     i1l63:
   777  0045  0875               	movf	??_ISR+4,w
   778  0046  008A               	movwf	10
   779  0047  0E74               	swapf	??_ISR+3,w
   780  0048  0083               	movwf	3
   781  0049  0EFE               	swapf	btemp,f
   782  004A  0E7E               	swapf	btemp,w
   783  004B  0009               	retfie
   784  004C                     __end_of_ISR:
   785                           
   786                           	psect	intentry
   787  0004                     __pintentry:	
   788                           ;incstack = 0
   789                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   790                           
   791  0004                     interrupt_function:
   792  007E                     saved_w	set	btemp
   793  0004  00FE               	movwf	btemp
   794  0005  0E03               	swapf	3,w
   795  0006  00F4               	movwf	??_ISR+3
   796  0007  080A               	movf	10,w
   797  0008  00F5               	movwf	??_ISR+4
   798  0009  120A  118A  2813   	ljmp	_ISR
   799                           
   800                           	psect	text4
   801  0096                     __ptext4:	
   802 ;; *************** function _spiWrite *****************
   803 ;; Defined at:
   804 ;;		line 34 in file "SPI.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  dat             1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  dat             1    0[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         1       0       0       0       0
   822 ;;Total ram usage:        1 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_ISR
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _spiWrite
   833  0096                     _spiWrite:
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _spiWrite: [wreg]
   837                           ;spiWrite@dat stored from wreg
   838  0096  00F0               	movwf	spiWrite@dat
   839  0097                     i1l727:
   840                           
   841                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   842  0097  0870               	movf	spiWrite@dat,w
   843  0098  1283               	bcf	3,5	;RP0=0, select bank0
   844  0099  1303               	bcf	3,6	;RP1=0, select bank0
   845  009A  0093               	movwf	19	;volatile
   846  009B                     i1l89:
   847  009B  0008               	return
   848  009C                     __end_of_spiWrite:
   849  007E                     btemp	set	126	;btemp
   850  007E                     wtemp0	set	126
   851                           
   852                           	psect	config
   853                           
   854                           ;Config register CONFIG1 @ 0x2007
   855                           ;	Oscillator Selection bits
   856                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   857                           ;	Watchdog Timer Enable bit
   858                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   859                           ;	Power-up Timer Enable bit
   860                           ;	PWRTE = OFF, PWRT disabled
   861                           ;	RE3/MCLR pin function select bit
   862                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   863                           ;	Code Protection bit
   864                           ;	CP = OFF, Program memory code protection is disabled
   865                           ;	Data Code Protection bit
   866                           ;	CPD = OFF, Data memory code protection is disabled
   867                           ;	Brown Out Reset Selection bits
   868                           ;	BOREN = ON, BOR enabled
   869                           ;	Internal External Switchover bit
   870                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   871                           ;	Fail-Safe Clock Monitor Enabled bit
   872                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   873                           ;	Low Voltage Programming Enable bit
   874                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   875                           ;	In-Circuit Debugger Mode bit
   876                           ;	DEBUG = 0x1, unprogrammed default
   877  2007                     	org	8199
   878  2007  23D4               	dw	9172
   879                           
   880                           ;Config register CONFIG2 @ 0x2008
   881                           ;	Brown-out Reset Selection bit
   882                           ;	BOR4V = 0x1, unprogrammed default
   883                           ;	Flash Program Memory Self Write Enable bits
   884                           ;	WRT = OFF, Write protection off
   885  2008                     	org	8200
   886  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _conf_but->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              6 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      15
                                              1 COMMON     5     5      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conf_but
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 00:24:01 2021

            _SSPSTATbits 0094                       l53 006E                       l47 0092  
                     l80 008C                       l48 0092                       l79 0087  
                     u70 0077                       u71 0076                      l801 008D  
                    l771 0086                      l763 0070                      l765 0077  
                    l781 0059                      l773 004C                      l767 007D  
                    l791 005F                      l783 005A                      l775 004F  
                    l769 007F                      l793 0062                      l785 005C  
                    l777 0057                      l795 0063                      l787 005D  
                    l779 0058                      l797 0064                      l789 005E  
                    l799 0065                      _ISR 0013                     ?_ISR 0070  
                   _IOCB 0096                     i1l63 0045                     i1l59 002F  
                   i1l89 009B                     u3_20 0017                     u3_21 0016  
                   u4_20 002A                     u4_21 0029                     u5_20 0033  
                   u5_21 0032                     u6_20 003C                     u6_21 003B  
                   u8_27 001D                     _main 008D                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l741 0033                    i1l733 0013  
                  i1l727 0097                    i1l735 0017                    i1l743 0035  
                  i1l745 0036                    i1l737 0024                    i1l747 003C  
                  i1l739 002A                    i1l749 0042                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  pclath 000A          __end_of_spiInit 008D                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0096  
                 ??_main 0077                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_conf_but 006F                   saved_w 007E         __end_of_spiWrite 009C  
              ??_spiInit 0076  __end_of__initialization 000F           __pcstackCOMMON 0070  
             __pmaintext 008D               __pintentry 0004                ?_conf_but 0070  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 004C  
                __ptext2 006F                  __ptext3 0013                  __ptext4 0096  
           __size_of_ISR 0039                  _spiInit 006F               ??_conf_but 0077  
   end_of_initialization 000F               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISBbits 0086                _TRISCbits 0087              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 004C                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_conf_but 0023        __size_of_spiWrite 0006  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
     spiInit@sDataSample 0020         __size_of_spiInit 001E                 _conf_but 004C  
          __size_of_main 0009                 _spiWrite 0096             spiInit@sType 0076  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
