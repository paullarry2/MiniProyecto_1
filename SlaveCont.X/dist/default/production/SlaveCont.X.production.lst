

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 19:51:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  0006                     _PORTBbits	set	6
   287  0009                     _PORTE	set	9
   288  0007                     _PORTC	set	7
   289  0006                     _PORTB	set	6
   290  0008                     _PORTD	set	8
   291  000B                     _INTCONbits	set	11
   292  0063                     _SSPIF	set	99
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  0085                     _TRISA	set	133
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0096                     _IOCB	set	150
   299  0086                     _TRISBbits	set	134
   300  0086                     _TRISB	set	134
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311  000F                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  000F                     __end_of__initialization:
   315  000F  0183               	clrf	3
   316  0010  120A  118A  288B   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:
   320  0070                     ?_conf_but:
   321  0070                     ?_spiWrite:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_spiWrite:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_ISR:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     spiWrite@dat:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 1 bytes @ 0x0
   338  0070                     	ds	1
   339  0071                     ??_ISR:
   340                           
   341                           ; 1 bytes @ 0x1
   342  0071                     	ds	5
   343  0076                     ??_spiInit:
   344  0076                     spiInit@sType:	
   345                           ; 1 bytes @ 0x6
   346                           
   347                           
   348                           ; 1 bytes @ 0x6
   349  0076                     	ds	1
   350  0077                     ??_conf_but:
   351  0077                     ??_main:	
   352                           ; 1 bytes @ 0x7
   353                           
   354                           
   355                           	psect	cstackBANK0
   356  0020                     __pcstackBANK0:	
   357                           ; 1 bytes @ 0x7
   358                           
   359  0020                     ?_spiInit:
   360  0020                     spiInit@sDataSample:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 1 bytes @ 0x0
   365  0020                     	ds	1
   366  0021                     spiInit@sClockIdle:
   367                           
   368                           ; 1 bytes @ 0x1
   369  0021                     	ds	1
   370  0022                     spiInit@sTransmitEdge:
   371                           
   372                           ; 1 bytes @ 0x2
   373  0022                     	ds	1
   374                           
   375                           	psect	maintext
   376  008B                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 47 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0
   399 ;;      Totals:         0       0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels required when called:    4
   402 ;; This function calls:
   403 ;;		_conf_but
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  008B                     _main:
   412  008B                     l793:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   415                           
   416                           
   417                           ;main.c: 48:     conf_but();
   418  008B  120A  118A  204C  120A  118A  	fcall	_conf_but
   419  0090                     l43:	
   420                           ;main.c: 49:     while (1) {
   421                           
   422  0090                     l44:	
   423                           ;main.c: 50:     }
   424                           
   425  0090  2890               	goto	l43
   426  0091  120A  118A  280C   	ljmp	start
   427  0094                     __end_of_main:
   428                           
   429                           	psect	text1
   430  004C                     __ptext1:	
   431 ;; *************** function _conf_but *****************
   432 ;; Defined at:
   433 ;;		line 58 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    3
   454 ;; This function calls:
   455 ;;		_spiInit
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _conf_but
   463  004C                     _conf_but:
   464  004C                     l767:	
   465                           ;incstack = 0
   466                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;main.c: 60:     INTCONbits.GIE = 1;
   470  004C  178B               	bsf	11,7	;volatile
   471                           
   472                           ;main.c: 61:     INTCONbits.PEIE = 1;
   473  004D  170B               	bsf	11,6	;volatile
   474                           
   475                           ;main.c: 62:     INTCONbits.RBIE = 1;
   476  004E  158B               	bsf	11,3	;volatile
   477  004F                     l769:
   478                           
   479                           ;main.c: 63:     ANSEL = 0;
   480  004F  1683               	bsf	3,5	;RP0=1, select bank3
   481  0050  1703               	bsf	3,6	;RP1=1, select bank3
   482  0051  0188               	clrf	8	;volatile
   483                           
   484                           ;main.c: 64:     ANSELH = 0;
   485  0052  0189               	clrf	9	;volatile
   486                           
   487                           ;main.c: 65:     TRISB = 0x00;
   488  0053  1683               	bsf	3,5	;RP0=1, select bank1
   489  0054  1303               	bcf	3,6	;RP1=0, select bank1
   490  0055  0186               	clrf	6	;volatile
   491  0056                     l771:
   492                           
   493                           ;main.c: 66:     TRISBbits.TRISB0 = 1;
   494  0056  1406               	bsf	6,0	;volatile
   495  0057                     l773:
   496                           
   497                           ;main.c: 67:     TRISBbits.TRISB1 = 1;
   498  0057  1486               	bsf	6,1	;volatile
   499  0058                     l775:
   500                           
   501                           ;main.c: 68:     IOCB = 0b00000011;
   502  0058  3003               	movlw	3
   503  0059  0096               	movwf	22	;volatile
   504  005A                     l777:
   505                           
   506                           ;main.c: 69:     TRISD = 0x00;
   507  005A  0188               	clrf	8	;volatile
   508  005B                     l779:
   509                           
   510                           ;main.c: 70:     TRISE = 0x00;
   511  005B  0189               	clrf	9	;volatile
   512  005C                     l781:
   513                           
   514                           ;main.c: 71:     TRISA = 0;
   515  005C  0185               	clrf	5	;volatile
   516  005D                     l783:
   517                           
   518                           ;main.c: 72:     PORTD = 0;
   519  005D  1283               	bcf	3,5	;RP0=0, select bank0
   520  005E  1303               	bcf	3,6	;RP1=0, select bank0
   521  005F  0188               	clrf	8	;volatile
   522  0060                     l785:
   523                           
   524                           ;main.c: 73:     PORTB = 0;
   525  0060  0186               	clrf	6	;volatile
   526  0061                     l787:
   527                           
   528                           ;main.c: 74:     PORTC = 0;
   529  0061  0187               	clrf	7	;volatile
   530  0062                     l789:
   531                           
   532                           ;main.c: 75:     PORTE = 0;
   533  0062  0189               	clrf	9	;volatile
   534  0063                     l791:
   535                           
   536                           ;main.c: 77:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   537  0063  01A0               	clrf	spiInit@sDataSample
   538  0064  01A1               	clrf	spiInit@sClockIdle
   539  0065  01A2               	clrf	spiInit@sTransmitEdge
   540  0066  3024               	movlw	36
   541  0067  120A  118A  206D  120A  118A  	fcall	_spiInit
   542  006C                     l49:
   543  006C  0008               	return
   544  006D                     __end_of_conf_but:
   545                           
   546                           	psect	text2
   547  006D                     __ptext2:	
   548 ;; *************** function _spiInit *****************
   549 ;; Defined at:
   550 ;;		line 12 in file "SPI.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  sType           1    wreg     enum E1264
   553 ;;  sDataSample     1    0[BANK0 ] enum E1272
   554 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   555 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  sType           1    6[COMMON] enum E1264
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       3       0       0       0
   568 ;;      Locals:         1       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         1       3       0       0       0
   571 ;;Total ram usage:        4 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    2
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_conf_but
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _spiInit
   583  006D                     _spiInit:
   584                           
   585                           ;incstack = 0
   586                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   587                           ;spiInit@sType stored from wreg
   588  006D  00F6               	movwf	spiInit@sType
   589  006E                     l757:
   590                           
   591                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   592  006E  1683               	bsf	3,5	;RP0=1, select bank1
   593  006F  1303               	bcf	3,6	;RP1=0, select bank1
   594  0070  1287               	bcf	7,5	;volatile
   595                           
   596                           ;SPI.c: 15:     if(sType & 0b00000100)
   597  0071  1D76               	btfss	spiInit@sType,2
   598  0072  2874               	goto	u71
   599  0073  2875               	goto	u70
   600  0074                     u71:
   601  0074  287D               	goto	l763
   602  0075                     u70:
   603  0075                     l759:
   604                           
   605                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   606  0075  1283               	bcf	3,5	;RP0=0, select bank0
   607  0076  1303               	bcf	3,6	;RP1=0, select bank0
   608  0077  0822               	movf	spiInit@sTransmitEdge,w
   609  0078  1683               	bsf	3,5	;RP0=1, select bank1
   610  0079  1303               	bcf	3,6	;RP1=0, select bank1
   611  007A  0094               	movwf	20	;volatile
   612  007B                     l761:
   613                           
   614                           ;SPI.c: 18:         TRISC3 = 1;
   615  007B  1587               	bsf	7,3	;volatile
   616                           
   617                           ;SPI.c: 19:     }
   618  007C  2885               	goto	l75
   619  007D                     l763:
   620                           
   621                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   622  007D  1283               	bcf	3,5	;RP0=0, select bank0
   623  007E  1303               	bcf	3,6	;RP1=0, select bank0
   624  007F  0820               	movf	spiInit@sDataSample,w
   625  0080  0422               	iorwf	spiInit@sTransmitEdge,w
   626  0081  1683               	bsf	3,5	;RP0=1, select bank1
   627  0082  1303               	bcf	3,6	;RP1=0, select bank1
   628  0083  0094               	movwf	20	;volatile
   629  0084                     l765:
   630                           
   631                           ;SPI.c: 23:         TRISC3 = 0;
   632  0084  1187               	bcf	7,3	;volatile
   633  0085                     l75:	
   634                           ;SPI.c: 24:     }
   635                           
   636                           
   637                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   638  0085  0876               	movf	spiInit@sType,w
   639  0086  1283               	bcf	3,5	;RP0=0, select bank0
   640  0087  1303               	bcf	3,6	;RP1=0, select bank0
   641  0088  0421               	iorwf	spiInit@sClockIdle,w
   642  0089  0094               	movwf	20	;volatile
   643  008A                     l76:
   644  008A  0008               	return
   645  008B                     __end_of_spiInit:
   646                           
   647                           	psect	text3
   648  0013                     __ptext3:	
   649 ;; *************** function _ISR *****************
   650 ;; Defined at:
   651 ;;		line 84 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          5       0       0       0       0
   668 ;;      Totals:         5       0       0       0       0
   669 ;;Total ram usage:        5 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    1
   672 ;; This function calls:
   673 ;;		_spiWrite
   674 ;; This function is called by:
   675 ;;		Interrupt level 1
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _ISR
   681  0013                     _ISR:
   682  0013                     i1l727:
   683                           
   684                           ;main.c: 85:     if (INTCONbits.RBIF == 1) {
   685  0013  1C0B               	btfss	11,0	;volatile
   686  0014  2816               	goto	u3_21
   687  0015  2817               	goto	u3_20
   688  0016                     u3_21:
   689  0016  2835               	goto	i1l737
   690  0017                     u3_20:
   691  0017                     i1l729:
   692                           
   693                           ;main.c: 86:         _delay((unsigned long)((100)*((8000000)/4000.0)));
   694  0017  3002               	movlw	2
   695  0018  00F3               	movwf	??_ISR+2
   696  0019  3004               	movlw	4
   697  001A  00F2               	movwf	??_ISR+1
   698  001B  30BA               	movlw	186
   699  001C  00F1               	movwf	??_ISR
   700  001D                     u8_27:
   701  001D  0BF1               	decfsz	??_ISR,f
   702  001E  281D               	goto	u8_27
   703  001F  0BF2               	decfsz	??_ISR+1,f
   704  0020  281D               	goto	u8_27
   705  0021  0BF3               	decfsz	??_ISR+2,f
   706  0022  281D               	goto	u8_27
   707  0023  0000               	nop
   708  0024                     i1l731:
   709                           
   710                           ;main.c: 87:         if (PORTBbits.RB1 == 1) {
   711  0024  1283               	bcf	3,5	;RP0=0, select bank0
   712  0025  1303               	bcf	3,6	;RP1=0, select bank0
   713  0026  1C86               	btfss	6,1	;volatile
   714  0027  2829               	goto	u4_21
   715  0028  282A               	goto	u4_20
   716  0029                     u4_21:
   717  0029  282F               	goto	i1l55
   718  002A                     u4_20:
   719  002A                     i1l733:
   720                           
   721                           ;main.c: 88:             PORTD++;
   722  002A  3001               	movlw	1
   723  002B  00F1               	movwf	??_ISR
   724  002C  0871               	movf	??_ISR,w
   725  002D  0788               	addwf	8,f	;volatile
   726                           
   727                           ;main.c: 89:         } else if (PORTBbits.RB0 == 1) {
   728  002E  2835               	goto	i1l737
   729  002F                     i1l55:
   730  002F  1C06               	btfss	6,0	;volatile
   731  0030  2832               	goto	u5_21
   732  0031  2833               	goto	u5_20
   733  0032                     u5_21:
   734  0032  2835               	goto	i1l737
   735  0033                     u5_20:
   736  0033                     i1l735:
   737                           
   738                           ;main.c: 90:             PORTD--;
   739  0033  3001               	movlw	1
   740  0034  0288               	subwf	8,f	;volatile
   741  0035                     i1l737:
   742                           
   743                           ;main.c: 93:     INTCONbits.RBIF = 0;
   744  0035  100B               	bcf	11,0	;volatile
   745  0036                     i1l739:
   746                           
   747                           ;main.c: 95:     if (SSPIF == 1) {
   748  0036  1283               	bcf	3,5	;RP0=0, select bank0
   749  0037  1303               	bcf	3,6	;RP1=0, select bank0
   750  0038  1D8C               	btfss	12,3	;volatile
   751  0039  283B               	goto	u6_21
   752  003A  283C               	goto	u6_20
   753  003B                     u6_21:
   754  003B  2845               	goto	i1l59
   755  003C                     u6_20:
   756  003C                     i1l741:
   757                           
   758                           ;main.c: 96:         spiWrite(PORTB);
   759  003C  0806               	movf	6,w	;volatile
   760  003D  120A  118A  2094  120A  118A  	fcall	_spiWrite
   761  0042                     i1l743:
   762                           
   763                           ;main.c: 97:         SSPIF = 0;
   764  0042  1283               	bcf	3,5	;RP0=0, select bank0
   765  0043  1303               	bcf	3,6	;RP1=0, select bank0
   766  0044  118C               	bcf	12,3	;volatile
   767  0045                     i1l59:
   768  0045  0875               	movf	??_ISR+4,w
   769  0046  008A               	movwf	10
   770  0047  0E74               	swapf	??_ISR+3,w
   771  0048  0083               	movwf	3
   772  0049  0EFE               	swapf	btemp,f
   773  004A  0E7E               	swapf	btemp,w
   774  004B  0009               	retfie
   775  004C                     __end_of_ISR:
   776                           
   777                           	psect	intentry
   778  0004                     __pintentry:	
   779                           ;incstack = 0
   780                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   781                           
   782  0004                     interrupt_function:
   783  007E                     saved_w	set	btemp
   784  0004  00FE               	movwf	btemp
   785  0005  0E03               	swapf	3,w
   786  0006  00F4               	movwf	??_ISR+3
   787  0007  080A               	movf	10,w
   788  0008  00F5               	movwf	??_ISR+4
   789  0009  120A  118A  2813   	ljmp	_ISR
   790                           
   791                           	psect	text4
   792  0094                     __ptext4:	
   793 ;; *************** function _spiWrite *****************
   794 ;; Defined at:
   795 ;;		line 34 in file "SPI.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  dat             1    wreg     unsigned char 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  dat             1    0[COMMON] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         1       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         1       0       0       0       0
   813 ;;Total ram usage:        1 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_ISR
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _spiWrite
   824  0094                     _spiWrite:
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _spiWrite: [wreg]
   828                           ;spiWrite@dat stored from wreg
   829  0094  00F0               	movwf	spiWrite@dat
   830  0095                     i1l721:
   831                           
   832                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   833  0095  0870               	movf	spiWrite@dat,w
   834  0096  1283               	bcf	3,5	;RP0=0, select bank0
   835  0097  1303               	bcf	3,6	;RP1=0, select bank0
   836  0098  0093               	movwf	19	;volatile
   837  0099                     i1l85:
   838  0099  0008               	return
   839  009A                     __end_of_spiWrite:
   840  007E                     btemp	set	126	;btemp
   841  007E                     wtemp0	set	126
   842                           
   843                           	psect	config
   844                           
   845                           ;Config register CONFIG1 @ 0x2007
   846                           ;	Oscillator Selection bits
   847                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   848                           ;	Watchdog Timer Enable bit
   849                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   850                           ;	Power-up Timer Enable bit
   851                           ;	PWRTE = OFF, PWRT disabled
   852                           ;	RE3/MCLR pin function select bit
   853                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   854                           ;	Code Protection bit
   855                           ;	CP = OFF, Program memory code protection is disabled
   856                           ;	Data Code Protection bit
   857                           ;	CPD = OFF, Data memory code protection is disabled
   858                           ;	Brown Out Reset Selection bits
   859                           ;	BOREN = ON, BOR enabled
   860                           ;	Internal External Switchover bit
   861                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   862                           ;	Fail-Safe Clock Monitor Enabled bit
   863                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   864                           ;	Low Voltage Programming Enable bit
   865                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   866                           ;	In-Circuit Debugger Mode bit
   867                           ;	DEBUG = 0x1, unprogrammed default
   868  2007                     	org	8199
   869  2007  23D4               	dw	9172
   870                           
   871                           ;Config register CONFIG2 @ 0x2008
   872                           ;	Brown-out Reset Selection bit
   873                           ;	BOR4V = 0x1, unprogrammed default
   874                           ;	Flash Program Memory Self Write Enable bits
   875                           ;	WRT = OFF, Write protection off
   876  2008                     	org	8200
   877  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _conf_but->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _conf_but
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              6 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      15
                                              1 COMMON     5     5      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conf_but
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 19:51:50 2021

            _SSPSTATbits 0094                       l43 0090                       l44 0090  
                     l49 006C                       l75 0085                       l76 008A  
                     u70 0075                       u71 0074                      l761 007B  
                    l763 007D                      l771 0056                      l765 0084  
                    l757 006E                      l781 005C                      l773 0057  
                    l759 0075                      l791 0063                      l783 005D  
                    l775 0058                      l767 004C                      l785 0060  
                    l777 005A                      l769 004F                      l793 008B  
                    l787 0061                      l779 005B                      l789 0062  
                    _ISR 0013                     ?_ISR 0070                     _IOCB 0096  
                   i1l55 002F                     i1l59 0045                     i1l85 0099  
                   u3_20 0017                     u3_21 0016                     u4_20 002A  
                   u4_21 0029                     u5_20 0033                     u5_21 0032  
                   u6_20 003C                     u6_21 003B                     u8_27 001D  
                   _main 008B                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l721 0095                    i1l731 0024                    i1l741 003C  
                  i1l733 002A                    i1l743 0042                    i1l735 0033  
                  i1l727 0013                    i1l729 0017                    i1l737 0035  
                  i1l739 0036                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    pclath 000A          __end_of_spiInit 008B  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0094                   ??_main 0077                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_conf_but 006D                   saved_w 007E  
       __end_of_spiWrite 009A                ??_spiInit 0076  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 008B               __pintentry 0004  
              ?_conf_but 0070                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 004C                  __ptext2 006D                  __ptext3 0013  
                __ptext4 0094             __size_of_ISR 0039                  _spiInit 006D  
             ??_conf_but 0077     end_of_initialization 000F               ??_spiWrite 0070  
              _PORTBbits 0006                _TRISBbits 0086              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 004C                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_conf_but 0021        __size_of_spiWrite 0006  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
     spiInit@sDataSample 0020         __size_of_spiInit 001E                 _conf_but 004C  
          __size_of_main 0009                 _spiWrite 0094             spiInit@sType 0076  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
