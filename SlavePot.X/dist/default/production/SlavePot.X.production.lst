

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 17:45:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  000C                     _PIR1bits	set	12
   286  001F                     _ADCON0bits	set	31
   287  008C                     _PIE1bits	set	140
   288  009F                     _ADCON1	set	159
   289                           
   290                           	psect	cinit
   291  000F                     start_initialization:	
   292                           ; #config settings
   293                           
   294  000F                     __initialization:
   295                           
   296                           ; Clear objects allocated to COMMON
   297  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   298  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   299  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   300  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   301  0013                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  0013                     __end_of__initialization:
   305  0013  0183               	clrf	3
   306  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMMON
   309  0076                     __pbssCOMMON:
   310  0076                     _adc_fin:
   311  0076                     	ds	2
   312  0078                     _pot:
   313  0078                     	ds	2
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:
   317  0070                     ?_confADC:
   318  0070                     ?_main:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_ISR:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_ISR:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329  0070                     	ds	4
   330  0074                     ??_confADC:
   331  0074                     ?_conf_ch:	
   332                           ; 1 bytes @ 0x4
   333                           
   334  0074                     conf_ch@sel:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 2 bytes @ 0x4
   339  0074                     	ds	2
   340  0076                     ??_conf_ch:
   341                           
   342                           	psect	cstackBANK0
   343  0020                     __pcstackBANK0:	
   344                           ; 1 bytes @ 0x6
   345                           
   346  0020                     ??_main:
   347                           
   348                           ; 1 bytes @ 0x0
   349  0020                     	ds	2
   350                           
   351                           	psect	maintext
   352  0017                     __pmaintext:	
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 44 in file "main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0, pclath, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : B00/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       2       0       0       0
   375 ;;      Totals:         0       2       0       0       0
   376 ;;Total ram usage:        2 bytes
   377 ;; Hardware stack levels required when called:    2
   378 ;; This function calls:
   379 ;;		_confADC
   380 ;;		_conf_ch
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function _main
   388  0017                     _main:
   389  0017                     l687:	
   390                           ;incstack = 0
   391                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   392                           
   393                           
   394                           ;main.c: 45:     confADC();
   395  0017  120A  118A  206E  120A  118A  	fcall	_confADC
   396                           
   397                           ;main.c: 46:     conf_ch(0);
   398  001C  3000               	movlw	0
   399  001D  00F4               	movwf	conf_ch@sel
   400  001E  00F5               	movwf	conf_ch@sel+1
   401  001F  120A  118A  2040  120A  118A  	fcall	_conf_ch
   402  0024                     l689:
   403                           
   404                           ;main.c: 48:         if (adc_fin == 0) {
   405  0024  0876               	movf	_adc_fin,w
   406  0025  0477               	iorwf	_adc_fin+1,w
   407  0026  1D03               	btfss	3,2
   408  0027  2829               	goto	u81
   409  0028  282A               	goto	u80
   410  0029                     u81:
   411  0029  2824               	goto	l689
   412  002A                     u80:
   413  002A                     l691:
   414                           
   415                           ;main.c: 49:             adc_fin = 1;
   416  002A  3001               	movlw	1
   417  002B  00F6               	movwf	_adc_fin
   418  002C  3000               	movlw	0
   419  002D  00F7               	movwf	_adc_fin+1
   420                           
   421                           ;main.c: 50:             _delay((unsigned long)((10)*((8000000)/4000.0)));
   422  002E  301A               	movlw	26
   423  002F  1283               	bcf	3,5	;RP0=0, select bank0
   424  0030  1303               	bcf	3,6	;RP1=0, select bank0
   425  0031  00A1               	movwf	??_main+1
   426  0032  30F7               	movlw	247
   427  0033  00A0               	movwf	??_main
   428  0034                     u97:
   429  0034  0BA0               	decfsz	??_main,f
   430  0035  2834               	goto	u97
   431  0036  0BA1               	decfsz	??_main+1,f
   432  0037  2834               	goto	u97
   433  0038  2839               	nop2
   434  0039                     l693:
   435                           
   436                           ;main.c: 51:             ADCON0bits.GO = 1;
   437  0039  1283               	bcf	3,5	;RP0=0, select bank0
   438  003A  1303               	bcf	3,6	;RP1=0, select bank0
   439  003B  149F               	bsf	31,1	;volatile
   440  003C  2824               	goto	l689
   441  003D  120A  118A  280C   	ljmp	start
   442  0040                     __end_of_main:
   443                           
   444                           	psect	text1
   445  0040                     __ptext1:	
   446 ;; *************** function _conf_ch *****************
   447 ;; Defined at:
   448 ;;		line 18 in file "Adc_int_.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  sel             2    4[COMMON] int 
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         2       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         2       0       0       0       0
   466 ;;Total ram usage:        2 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _conf_ch
   478  0040                     _conf_ch:
   479  0040                     l673:	
   480                           ;incstack = 0
   481                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
   482                           
   483                           
   484                           ;Adc_int_.c: 19:     if (sel == 0){
   485  0040  0874               	movf	conf_ch@sel,w
   486  0041  0475               	iorwf	conf_ch@sel+1,w
   487  0042  1D03               	btfss	3,2
   488  0043  2845               	goto	u51
   489  0044  2846               	goto	u50
   490  0045                     u51:
   491  0045  284A               	goto	l45
   492  0046                     u50:
   493  0046                     l675:
   494                           
   495                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
   496  0046  30C3               	movlw	-61
   497  0047  1283               	bcf	3,5	;RP0=0, select bank0
   498  0048  1303               	bcf	3,6	;RP1=0, select bank0
   499  0049  059F               	andwf	31,f	;volatile
   500  004A                     l45:	
   501                           ;Adc_int_.c: 21:     }
   502                           
   503                           
   504                           ;Adc_int_.c: 22:     if (sel == 1){
   505  004A  0374               	decf	conf_ch@sel,w
   506  004B  0475               	iorwf	conf_ch@sel+1,w
   507  004C  1D03               	btfss	3,2
   508  004D  284F               	goto	u61
   509  004E  2850               	goto	u60
   510  004F                     u61:
   511  004F  2856               	goto	l47
   512  0050                     u60:
   513  0050                     l677:
   514                           
   515                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
   516  0050  1283               	bcf	3,5	;RP0=0, select bank0
   517  0051  1303               	bcf	3,6	;RP1=0, select bank0
   518  0052  081F               	movf	31,w	;volatile
   519  0053  39C3               	andlw	-61
   520  0054  3804               	iorlw	4
   521  0055  009F               	movwf	31	;volatile
   522  0056                     l47:
   523  0056  0008               	return
   524  0057                     __end_of_conf_ch:
   525                           
   526                           	psect	text2
   527  006E                     __ptext2:	
   528 ;; *************** function _confADC *****************
   529 ;; Defined at:
   530 ;;		line 3 in file "Adc_int_.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _confADC
   560  006E                     _confADC:
   561  006E                     l639:	
   562                           ;incstack = 0
   563                           ; Regs used in _confADC: [wreg+status,2+status,0]
   564                           
   565                           
   566                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   567  006E  1283               	bcf	3,5	;RP0=0, select bank0
   568  006F  1303               	bcf	3,6	;RP1=0, select bank0
   569  0070  171F               	bsf	31,6	;volatile
   570                           
   571                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   572  0071  139F               	bcf	31,7	;volatile
   573  0072                     l641:
   574                           
   575                           ;Adc_int_.c: 8:     ADCON1 = 0;
   576  0072  1683               	bsf	3,5	;RP0=1, select bank1
   577  0073  1303               	bcf	3,6	;RP1=0, select bank1
   578  0074  019F               	clrf	31	;volatile
   579  0075                     l643:
   580                           
   581                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   582  0075  30C3               	movlw	-61
   583  0076  1283               	bcf	3,5	;RP0=0, select bank0
   584  0077  1303               	bcf	3,6	;RP1=0, select bank0
   585  0078  059F               	andwf	31,f	;volatile
   586  0079                     l645:
   587                           
   588                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   589  0079  141F               	bsf	31,0	;volatile
   590  007A                     l647:
   591                           
   592                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   593  007A  1683               	bsf	3,5	;RP0=1, select bank1
   594  007B  1303               	bcf	3,6	;RP1=0, select bank1
   595  007C  170C               	bsf	12,6	;volatile
   596  007D                     l649:
   597                           
   598                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   599  007D  1283               	bcf	3,5	;RP0=0, select bank0
   600  007E  1303               	bcf	3,6	;RP1=0, select bank0
   601  007F  130C               	bcf	12,6	;volatile
   602  0080                     l42:
   603  0080  0008               	return
   604  0081                     __end_of_confADC:
   605                           
   606                           	psect	text3
   607  0057                     __ptext3:	
   608 ;; *************** function _ISR *****************
   609 ;; Defined at:
   610 ;;		line 61 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          4       0       0       0       0
   627 ;;      Totals:         4       0       0       0       0
   628 ;;Total ram usage:        4 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		Interrupt level 1
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _ISR
   639  0057                     _ISR:
   640  0057                     i1l665:
   641                           
   642                           ;main.c: 63:     if (PIR1bits.ADIF == 1) {
   643  0057  1283               	bcf	3,5	;RP0=0, select bank0
   644  0058  1303               	bcf	3,6	;RP1=0, select bank0
   645  0059  1F0C               	btfss	12,6	;volatile
   646  005A  285C               	goto	u4_21
   647  005B  285D               	goto	u4_20
   648  005C                     u4_21:
   649  005C  2866               	goto	i1l671
   650  005D                     u4_20:
   651  005D                     i1l667:
   652                           
   653                           ;main.c: 65:         pot = ADRESH;
   654  005D  081E               	movf	30,w	;volatile
   655  005E  00F0               	movwf	??_ISR
   656  005F  01F1               	clrf	??_ISR+1
   657  0060  0870               	movf	??_ISR,w
   658  0061  00F8               	movwf	_pot
   659  0062  0871               	movf	??_ISR+1,w
   660  0063  00F9               	movwf	_pot+1
   661  0064                     i1l669:
   662                           
   663                           ;main.c: 66:         adc_fin = 0;
   664  0064  01F6               	clrf	_adc_fin
   665  0065  01F7               	clrf	_adc_fin+1
   666  0066                     i1l671:
   667                           
   668                           ;main.c: 69:     PIR1bits.ADIF = 0;
   669  0066  130C               	bcf	12,6	;volatile
   670  0067                     i1l31:
   671  0067  0873               	movf	??_ISR+3,w
   672  0068  008A               	movwf	10
   673  0069  0E72               	swapf	??_ISR+2,w
   674  006A  0083               	movwf	3
   675  006B  0EFE               	swapf	btemp,f
   676  006C  0E7E               	swapf	btemp,w
   677  006D  0009               	retfie
   678  006E                     __end_of_ISR:
   679  007E                     btemp	set	126	;btemp
   680  007E                     wtemp0	set	126
   681                           
   682                           	psect	intentry
   683  0004                     __pintentry:	
   684                           ;incstack = 0
   685                           ; Regs used in _ISR: [wreg+status,2]
   686                           
   687  0004                     interrupt_function:
   688  007E                     saved_w	set	btemp
   689  0004  00FE               	movwf	btemp
   690  0005  0E03               	swapf	3,w
   691  0006  00F2               	movwf	??_ISR+2
   692  0007  080A               	movf	10,w
   693  0008  00F3               	movwf	??_ISR+3
   694  0009  120A  118A  2857   	ljmp	_ISR
   695                           
   696                           	psect	config
   697                           
   698                           ;Config register CONFIG1 @ 0x2007
   699                           ;	Oscillator Selection bits
   700                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   701                           ;	Watchdog Timer Enable bit
   702                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   703                           ;	Power-up Timer Enable bit
   704                           ;	PWRTE = OFF, PWRT disabled
   705                           ;	RE3/MCLR pin function select bit
   706                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   707                           ;	Code Protection bit
   708                           ;	CP = OFF, Program memory code protection is disabled
   709                           ;	Data Code Protection bit
   710                           ;	CPD = OFF, Data memory code protection is disabled
   711                           ;	Brown Out Reset Selection bits
   712                           ;	BOREN = ON, BOR enabled
   713                           ;	Internal External Switchover bit
   714                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   715                           ;	Fail-Safe Clock Monitor Enabled bit
   716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   717                           ;	Low Voltage Programming Enable bit
   718                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   719                           ;	In-Circuit Debugger Mode bit
   720                           ;	DEBUG = 0x1, unprogrammed default
   721  2007                     	org	8199
   722  2007  23D4               	dw	9172
   723                           
   724                           ;Config register CONFIG2 @ 0x2008
   725                           ;	Brown-out Reset Selection bit
   726                           ;	BOR4V = 0x1, unprogrammed default
   727                           ;	Flash Program Memory Self Write Enable bits
   728                           ;	WRT = OFF, Write protection off
   729  2008                     	org	8200
   730  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_conf_ch

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     120
                                              0 BANK0      2     2      0
                            _confADC
                            _conf_ch
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_ch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 17:45:59 2021

                     l42 0080                       l45 004A                       l47 0056  
                     u50 0046                       u51 0045                       u60 0050  
                     u61 004F                       u80 002A                       u81 0029  
                     u97 0034                      l641 0072                      l643 0075  
                    l645 0079                      l647 007A                      l639 006E  
                    l649 007D                      l673 0040                      l675 0046  
                    l691 002A                      l677 0050                      l693 0039  
                    l687 0017                      l689 0024                      _ISR 0057  
                    _pot 0078                     ?_ISR 0070                     i1l31 0067  
                   u4_20 005D                     u4_21 005C                     _main 0017  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l671 0066                    i1l665 0057  
                  i1l667 005D                    i1l669 0064          __end_of_confADC 0081  
        __end_of_conf_ch 0057                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0040  
                 ??_main 0020                   _ADCON1 009F                   _ADRESH 001E  
              ??_confADC 0074                ??_conf_ch 0076                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0070               __pmaintext 0017  
             __pintentry 0004                  _adc_fin 0076                  _confADC 006E  
                __ptext1 0040                  __ptext2 006E                  __ptext3 0057  
                _conf_ch 0040             __size_of_ISR 0017     end_of_initialization 0013  
             conf_ch@sel 0074      start_initialization 000F              __end_of_ISR 006E  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
               ?_confADC 0070                 ?_conf_ch 0074        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_confADC 0013         __size_of_conf_ch 0017            __size_of_main 0029  
               intlevel1 0000  
