

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 13:46:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  001E                     _ADRESH	set	30
   366  0009                     _PORTE	set	9
   367  0007                     _PORTC	set	7
   368  0006                     _PORTB	set	6
   369  000B                     _INTCONbits	set	11
   370  0008                     _PORTD	set	8
   371  0013                     _SSPBUF	set	19
   372  0014                     _SSPCON	set	20
   373  000C                     _PIR1bits	set	12
   374  001F                     _ADCON0bits	set	31
   375  0063                     _SSPIF	set	99
   376  0085                     _TRISAbits	set	133
   377  0085                     _TRISA	set	133
   378  0089                     _TRISE	set	137
   379  0088                     _TRISD	set	136
   380  0086                     _TRISB	set	134
   381  0087                     _TRISCbits	set	135
   382  0087                     _TRISC	set	135
   383  0094                     _SSPSTATbits	set	148
   384  0094                     _SSPSTAT	set	148
   385  008C                     _PIE1bits	set	140
   386  009F                     _ADCON1	set	159
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0188                     _ANSELbits	set	392
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395                           ; #config settings
   396                           
   397  000F                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   404  0013                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0013                     __end_of__initialization:
   408  0013  0183               	clrf	3
   409  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0075                     __pbssCOMMON:
   413  0075                     _adc_fin:
   414  0075                     	ds	2
   415  0077                     _pot:
   416  0077                     	ds	2
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_conf_but:
   421  0070                     ?_confADC:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_ISR:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiWrite@dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_ISR:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	4
   446  0075                     ??_conf_but:
   447  0075                     ??_confADC:	
   448                           ; 1 bytes @ 0x5
   449                           
   450  0075                     ??_conf_ch:	
   451                           ; 1 bytes @ 0x5
   452                           
   453  0075                     ??_spiInit:	
   454                           ; 1 bytes @ 0x5
   455                           
   456                           
   457                           	psect	cstackBANK0
   458  0020                     __pcstackBANK0:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0020                     ?_conf_ch:
   462  0020                     ?_spiInit:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0020                     spiInit@sDataSample:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0020                     conf_ch@sel:	
   469                           ; 1 bytes @ 0x0
   470                           
   471                           
   472                           ; 2 bytes @ 0x0
   473  0020                     	ds	1
   474  0021                     spiInit@sClockIdle:
   475                           
   476                           ; 1 bytes @ 0x1
   477  0021                     	ds	1
   478  0022                     spiInit@sTransmitEdge:
   479                           
   480                           ; 1 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     spiInit@sType:
   483                           
   484                           ; 1 bytes @ 0x3
   485  0023                     	ds	1
   486  0024                     ??_main:
   487                           
   488                           ; 1 bytes @ 0x4
   489  0024                     	ds	2
   490                           
   491                           	psect	maintext
   492  0017                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 52 in file "mainP.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       2       0       0       0
   515 ;;      Totals:         0       2       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		_confADC
   520 ;;		_conf_but
   521 ;;		_conf_ch
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _main
   529  0017                     _main:
   530  0017                     l863:	
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   533                           
   534                           
   535                           ;mainP.c: 53:     conf_but();
   536  0017  120A  118A  206F  120A  118A  	fcall	_conf_but
   537                           
   538                           ;mainP.c: 54:     confADC();
   539  001C  120A  118A  20C3  120A  118A  	fcall	_confADC
   540                           
   541                           ;mainP.c: 55:     conf_ch(0);
   542  0021  3000               	movlw	0
   543  0022  1283               	bcf	3,5	;RP0=0, select bank0
   544  0023  1303               	bcf	3,6	;RP1=0, select bank0
   545  0024  00A0               	movwf	conf_ch@sel
   546  0025  00A1               	movwf	conf_ch@sel+1
   547  0026  120A  118A  20AE  120A  118A  	fcall	_conf_ch
   548  002B                     l865:
   549                           
   550                           ;mainP.c: 57:         if (adc_fin == 0) {
   551  002B  0875               	movf	_adc_fin,w
   552  002C  0476               	iorwf	_adc_fin+1,w
   553  002D  1D03               	btfss	3,2
   554  002E  2830               	goto	u151
   555  002F  2831               	goto	u150
   556  0030                     u151:
   557  0030  2843               	goto	l110
   558  0031                     u150:
   559  0031                     l867:
   560                           
   561                           ;mainP.c: 58:             adc_fin = 1;
   562  0031  3001               	movlw	1
   563  0032  00F5               	movwf	_adc_fin
   564  0033  3000               	movlw	0
   565  0034  00F6               	movwf	_adc_fin+1
   566                           
   567                           ;mainP.c: 59:             _delay((unsigned long)((10)*((8000000)/4000.0)));
   568  0035  301A               	movlw	26
   569  0036  1283               	bcf	3,5	;RP0=0, select bank0
   570  0037  1303               	bcf	3,6	;RP1=0, select bank0
   571  0038  00A5               	movwf	??_main+1
   572  0039  30F7               	movlw	247
   573  003A  00A4               	movwf	??_main
   574  003B                     u167:
   575  003B  0BA4               	decfsz	??_main,f
   576  003C  283B               	goto	u167
   577  003D  0BA5               	decfsz	??_main+1,f
   578  003E  283B               	goto	u167
   579  003F  2840               	nop2
   580  0040                     l869:
   581                           
   582                           ;mainP.c: 60:             ADCON0bits.GO = 1;
   583  0040  1283               	bcf	3,5	;RP0=0, select bank0
   584  0041  1303               	bcf	3,6	;RP1=0, select bank0
   585  0042  149F               	bsf	31,1	;volatile
   586  0043                     l110:	
   587                           ;mainP.c: 61:         }
   588                           
   589                           
   590                           ;mainP.c: 62:         PORTD = pot;
   591  0043  0877               	movf	_pot,w
   592  0044  1283               	bcf	3,5	;RP0=0, select bank0
   593  0045  1303               	bcf	3,6	;RP1=0, select bank0
   594  0046  0088               	movwf	8	;volatile
   595  0047  282B               	goto	l865
   596  0048  120A  118A  280C   	ljmp	start
   597  004B                     __end_of_main:
   598                           
   599                           	psect	text1
   600  00AE                     __ptext1:	
   601 ;; *************** function _conf_ch *****************
   602 ;; Defined at:
   603 ;;		line 18 in file "Adc_int_.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  sel             2    0[BANK0 ] int 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       2       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         0       2       0       0       0
   621 ;;Total ram usage:        2 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _conf_ch
   633  00AE                     _conf_ch:
   634  00AE                     l843:	
   635                           ;incstack = 0
   636                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
   637                           
   638                           
   639                           ;Adc_int_.c: 19:     if (sel == 0){
   640  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   641  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   642  00B0  0820               	movf	conf_ch@sel,w
   643  00B1  0421               	iorwf	conf_ch@sel+1,w
   644  00B2  1D03               	btfss	3,2
   645  00B3  28B5               	goto	u131
   646  00B4  28B6               	goto	u130
   647  00B5                     u131:
   648  00B5  28B8               	goto	l14
   649  00B6                     u130:
   650  00B6                     l845:
   651                           
   652                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
   653  00B6  30C3               	movlw	-61
   654  00B7  059F               	andwf	31,f	;volatile
   655  00B8                     l14:	
   656                           ;Adc_int_.c: 21:     }
   657                           
   658                           
   659                           ;Adc_int_.c: 22:     if (sel == 1){
   660  00B8  0320               	decf	conf_ch@sel,w
   661  00B9  0421               	iorwf	conf_ch@sel+1,w
   662  00BA  1D03               	btfss	3,2
   663  00BB  28BD               	goto	u141
   664  00BC  28BE               	goto	u140
   665  00BD                     u141:
   666  00BD  28C2               	goto	l16
   667  00BE                     u140:
   668  00BE                     l847:
   669                           
   670                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
   671  00BE  081F               	movf	31,w	;volatile
   672  00BF  39C3               	andlw	-61
   673  00C0  3804               	iorlw	4
   674  00C1  009F               	movwf	31	;volatile
   675  00C2                     l16:
   676  00C2  0008               	return
   677  00C3                     __end_of_conf_ch:
   678                           
   679                           	psect	text2
   680  006F                     __ptext2:	
   681 ;; *************** function _conf_but *****************
   682 ;; Defined at:
   683 ;;		line 72 in file "mainP.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    3
   704 ;; This function calls:
   705 ;;		_spiInit
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _conf_but
   713  006F                     _conf_but:
   714  006F                     l849:	
   715                           ;incstack = 0
   716                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   717                           
   718                           
   719                           ;mainP.c: 74:     INTCONbits.GIE = 1;
   720  006F  178B               	bsf	11,7	;volatile
   721                           
   722                           ;mainP.c: 75:     INTCONbits.PEIE = 1;
   723  0070  170B               	bsf	11,6	;volatile
   724  0071                     l851:
   725                           
   726                           ;mainP.c: 76:     ANSEL = 0;
   727  0071  1683               	bsf	3,5	;RP0=1, select bank3
   728  0072  1703               	bsf	3,6	;RP1=1, select bank3
   729  0073  0188               	clrf	8	;volatile
   730                           
   731                           ;mainP.c: 77:     ANSELH = 0;
   732  0074  0189               	clrf	9	;volatile
   733  0075                     l853:
   734                           
   735                           ;mainP.c: 78:     ANSELbits.ANS0 = 1;
   736  0075  1408               	bsf	8,0	;volatile
   737                           
   738                           ;mainP.c: 79:     TRISC = 0x00;
   739  0076  1683               	bsf	3,5	;RP0=1, select bank1
   740  0077  1303               	bcf	3,6	;RP1=0, select bank1
   741  0078  0187               	clrf	7	;volatile
   742  0079                     l855:
   743                           
   744                           ;mainP.c: 80:     TRISCbits.TRISC4 = 1;
   745  0079  1607               	bsf	7,4	;volatile
   746                           
   747                           ;mainP.c: 81:     TRISB = 0x00;
   748  007A  0186               	clrf	6	;volatile
   749                           
   750                           ;mainP.c: 82:     TRISD = 0x00;
   751  007B  0188               	clrf	8	;volatile
   752                           
   753                           ;mainP.c: 83:     TRISE = 0x00;
   754  007C  0189               	clrf	9	;volatile
   755                           
   756                           ;mainP.c: 84:     TRISA = 0;
   757  007D  0185               	clrf	5	;volatile
   758  007E                     l857:
   759                           
   760                           ;mainP.c: 85:     TRISAbits.TRISA0 = 1;
   761  007E  1405               	bsf	5,0	;volatile
   762  007F                     l859:
   763                           
   764                           ;mainP.c: 86:     TRISAbits.TRISA5 = 1;
   765  007F  1685               	bsf	5,5	;volatile
   766                           
   767                           ;mainP.c: 87:     PORTD = 0;
   768  0080  1283               	bcf	3,5	;RP0=0, select bank0
   769  0081  1303               	bcf	3,6	;RP1=0, select bank0
   770  0082  0188               	clrf	8	;volatile
   771                           
   772                           ;mainP.c: 88:     PORTB = 0;
   773  0083  0186               	clrf	6	;volatile
   774                           
   775                           ;mainP.c: 89:     PORTC = 0;
   776  0084  0187               	clrf	7	;volatile
   777                           
   778                           ;mainP.c: 90:     PORTE = 0;
   779  0085  0189               	clrf	9	;volatile
   780  0086                     l861:
   781                           
   782                           ;mainP.c: 91:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   783  0086  01A0               	clrf	spiInit@sDataSample
   784  0087  01A1               	clrf	spiInit@sClockIdle
   785  0088  01A2               	clrf	spiInit@sTransmitEdge
   786  0089  3024               	movlw	36
   787  008A  120A  118A  2090  120A  118A  	fcall	_spiInit
   788  008F                     l116:
   789  008F  0008               	return
   790  0090                     __end_of_conf_but:
   791                           
   792                           	psect	text3
   793  0090                     __ptext3:	
   794 ;; *************** function _spiInit *****************
   795 ;; Defined at:
   796 ;;		line 12 in file "SPI.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  sType           1    wreg     enum E1264
   799 ;;  sDataSample     1    0[BANK0 ] enum E1272
   800 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   801 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  sType           1    3[BANK0 ] enum E1264
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       3       0       0       0
   814 ;;      Locals:         0       1       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       4       0       0       0
   817 ;;Total ram usage:        4 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_conf_but
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _spiInit
   829  0090                     _spiInit:
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   833                           ;spiInit@sType stored from wreg
   834  0090  1283               	bcf	3,5	;RP0=0, select bank0
   835  0091  1303               	bcf	3,6	;RP1=0, select bank0
   836  0092  00A3               	movwf	spiInit@sType
   837  0093                     l833:
   838                           
   839                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   840  0093  1683               	bsf	3,5	;RP0=1, select bank1
   841  0094  1303               	bcf	3,6	;RP1=0, select bank1
   842  0095  1287               	bcf	7,5	;volatile
   843                           
   844                           ;SPI.c: 15:     if(sType & 0b00000100)
   845  0096  1283               	bcf	3,5	;RP0=0, select bank0
   846  0097  1303               	bcf	3,6	;RP1=0, select bank0
   847  0098  1D23               	btfss	spiInit@sType,2
   848  0099  289B               	goto	u121
   849  009A  289C               	goto	u120
   850  009B                     u121:
   851  009B  28A2               	goto	l839
   852  009C                     u120:
   853  009C                     l835:
   854                           
   855                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   856  009C  0822               	movf	spiInit@sTransmitEdge,w
   857  009D  1683               	bsf	3,5	;RP0=1, select bank1
   858  009E  1303               	bcf	3,6	;RP1=0, select bank1
   859  009F  0094               	movwf	20	;volatile
   860  00A0                     l837:
   861                           
   862                           ;SPI.c: 18:         TRISC3 = 1;
   863  00A0  1587               	bsf	7,3	;volatile
   864                           
   865                           ;SPI.c: 19:     }
   866  00A1  28A8               	goto	l32
   867  00A2                     l839:
   868                           
   869                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   870  00A2  0820               	movf	spiInit@sDataSample,w
   871  00A3  0422               	iorwf	spiInit@sTransmitEdge,w
   872  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   873  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   874  00A6  0094               	movwf	20	;volatile
   875  00A7                     l841:
   876                           
   877                           ;SPI.c: 23:         TRISC3 = 0;
   878  00A7  1187               	bcf	7,3	;volatile
   879  00A8                     l32:	
   880                           ;SPI.c: 24:     }
   881                           
   882                           
   883                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   884  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   885  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   886  00AA  0823               	movf	spiInit@sType,w
   887  00AB  0421               	iorwf	spiInit@sClockIdle,w
   888  00AC  0094               	movwf	20	;volatile
   889  00AD                     l33:
   890  00AD  0008               	return
   891  00AE                     __end_of_spiInit:
   892                           
   893                           	psect	text4
   894  00C3                     __ptext4:	
   895 ;; *************** function _confADC *****************
   896 ;; Defined at:
   897 ;;		line 3 in file "Adc_int_.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    2
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _confADC
   927  00C3                     _confADC:
   928  00C3                     l725:	
   929                           ;incstack = 0
   930                           ; Regs used in _confADC: [wreg+status,2+status,0]
   931                           
   932                           
   933                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   934  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   935  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   936  00C5  171F               	bsf	31,6	;volatile
   937                           
   938                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   939  00C6  139F               	bcf	31,7	;volatile
   940  00C7                     l727:
   941                           
   942                           ;Adc_int_.c: 8:     ADCON1 = 0;
   943  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   944  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   945  00C9  019F               	clrf	31	;volatile
   946  00CA                     l729:
   947                           
   948                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   949  00CA  30C3               	movlw	-61
   950  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   951  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   952  00CD  059F               	andwf	31,f	;volatile
   953  00CE                     l731:
   954                           
   955                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   956  00CE  141F               	bsf	31,0	;volatile
   957  00CF                     l733:
   958                           
   959                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   960  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   961  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   962  00D1  170C               	bsf	12,6	;volatile
   963  00D2                     l735:
   964                           
   965                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   966  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   967  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   968  00D4  130C               	bcf	12,6	;volatile
   969  00D5                     l11:
   970  00D5  0008               	return
   971  00D6                     __end_of_confADC:
   972                           
   973                           	psect	text5
   974  004B                     __ptext5:	
   975 ;; *************** function _ISR *****************
   976 ;; Defined at:
   977 ;;		line 98 in file "mainP.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          4       0       0       0       0
   994 ;;      Totals:         4       0       0       0       0
   995 ;;Total ram usage:        4 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    1
   998 ;; This function calls:
   999 ;;		_spiWrite
  1000 ;; This function is called by:
  1001 ;;		Interrupt level 1
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _ISR
  1007  004B                     _ISR:
  1008  004B                     i1l781:
  1009                           
  1010                           ;mainP.c: 100:     if (PIR1bits.ADIF == 1) {
  1011  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1012  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1013  004D  1F0C               	btfss	12,6	;volatile
  1014  004E  2850               	goto	u6_21
  1015  004F  2851               	goto	u6_20
  1016  0050                     u6_21:
  1017  0050  285A               	goto	i1l787
  1018  0051                     u6_20:
  1019  0051                     i1l783:
  1020                           
  1021                           ;mainP.c: 102:         pot = ADRESH;
  1022  0051  081E               	movf	30,w	;volatile
  1023  0052  00F1               	movwf	??_ISR
  1024  0053  01F2               	clrf	??_ISR+1
  1025  0054  0871               	movf	??_ISR,w
  1026  0055  00F7               	movwf	_pot
  1027  0056  0872               	movf	??_ISR+1,w
  1028  0057  00F8               	movwf	_pot+1
  1029  0058                     i1l785:
  1030                           
  1031                           ;mainP.c: 103:         adc_fin = 0;
  1032  0058  01F5               	clrf	_adc_fin
  1033  0059  01F6               	clrf	_adc_fin+1
  1034  005A                     i1l787:
  1035                           
  1036                           ;mainP.c: 105:     PIR1bits.ADIF = 0;
  1037  005A  130C               	bcf	12,6	;volatile
  1038  005B                     i1l789:
  1039                           
  1040                           ;mainP.c: 107:     if (SSPIF == 1) {
  1041  005B  1D8C               	btfss	12,3	;volatile
  1042  005C  285E               	goto	u7_21
  1043  005D  285F               	goto	u7_20
  1044  005E                     u7_21:
  1045  005E  2868               	goto	i1l123
  1046  005F                     u7_20:
  1047  005F                     i1l791:
  1048                           
  1049                           ;mainP.c: 108:         spiWrite(pot);
  1050  005F  0877               	movf	_pot,w
  1051  0060  120A  118A  20D6  120A  118A  	fcall	_spiWrite
  1052  0065                     i1l793:
  1053                           
  1054                           ;mainP.c: 109:         SSPIF = 0;
  1055  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0067  118C               	bcf	12,3	;volatile
  1058  0068                     i1l123:
  1059  0068  0874               	movf	??_ISR+3,w
  1060  0069  008A               	movwf	10
  1061  006A  0E73               	swapf	??_ISR+2,w
  1062  006B  0083               	movwf	3
  1063  006C  0EFE               	swapf	btemp,f
  1064  006D  0E7E               	swapf	btemp,w
  1065  006E  0009               	retfie
  1066  006F                     __end_of_ISR:
  1067                           
  1068                           	psect	intentry
  1069  0004                     __pintentry:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1072                           
  1073  0004                     interrupt_function:
  1074  007E                     saved_w	set	btemp
  1075  0004  00FE               	movwf	btemp
  1076  0005  0E03               	swapf	3,w
  1077  0006  00F3               	movwf	??_ISR+2
  1078  0007  080A               	movf	10,w
  1079  0008  00F4               	movwf	??_ISR+3
  1080  0009  120A  118A  284B   	ljmp	_ISR
  1081                           
  1082                           	psect	text6
  1083  00D6                     __ptext6:	
  1084 ;; *************** function _spiWrite *****************
  1085 ;; Defined at:
  1086 ;;		line 34 in file "SPI.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  dat             1    wreg     unsigned char 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  dat             1    0[COMMON] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         1       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0
  1103 ;;      Totals:         1       0       0       0       0
  1104 ;;Total ram usage:        1 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_ISR
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _spiWrite
  1115  00D6                     _spiWrite:
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _spiWrite: [wreg]
  1119                           ;spiWrite@dat stored from wreg
  1120  00D6  00F0               	movwf	spiWrite@dat
  1121  00D7                     i1l745:
  1122                           
  1123                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1124  00D7  0870               	movf	spiWrite@dat,w
  1125  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00DA  0093               	movwf	19	;volatile
  1128  00DB                     i1l42:
  1129  00DB  0008               	return
  1130  00DC                     __end_of_spiWrite:
  1131  007E                     btemp	set	126	;btemp
  1132  007E                     wtemp0	set	126
  1133                           
  1134                           	psect	config
  1135                           
  1136                           ;Config register CONFIG1 @ 0x2007
  1137                           ;	Oscillator Selection bits
  1138                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1139                           ;	Watchdog Timer Enable bit
  1140                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1141                           ;	Power-up Timer Enable bit
  1142                           ;	PWRTE = OFF, PWRT disabled
  1143                           ;	RE3/MCLR pin function select bit
  1144                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1145                           ;	Code Protection bit
  1146                           ;	CP = OFF, Program memory code protection is disabled
  1147                           ;	Data Code Protection bit
  1148                           ;	CPD = OFF, Data memory code protection is disabled
  1149                           ;	Brown Out Reset Selection bits
  1150                           ;	BOREN = ON, BOR enabled
  1151                           ;	Internal External Switchover bit
  1152                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1153                           ;	Fail-Safe Clock Monitor Enabled bit
  1154                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1155                           ;	Low Voltage Programming Enable bit
  1156                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1157                           ;	In-Circuit Debugger Mode bit
  1158                           ;	DEBUG = 0x1, unprogrammed default
  1159  2007                     	org	8199
  1160  2007  23D4               	dw	9172
  1161                           
  1162                           ;Config register CONFIG2 @ 0x2008
  1163                           ;	Brown-out Reset Selection bit
  1164                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1165                           ;	Flash Program Memory Self Write Enable bits
  1166                           ;	WRT = OFF, Write protection off
  1167  2008                     	org	8200
  1168  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     608
                                              4 BANK0      2     2      0
                            _confADC
                           _conf_but
                            _conf_ch
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0      15
                                              1 COMMON     4     4      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but
     _spiInit
   _conf_ch

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 13:46:24 2021

            _SSPSTATbits 0094                       l11 00D5                       l14 00B8  
                     l32 00A8                       l16 00C2                       l33 00AD  
                    l110 0043                      l116 008F                      l731 00CE  
                    l733 00CF                      l725 00C3                      l735 00D2  
                    l727 00C7                      l729 00CA                      l841 00A7  
                    l833 0093                      l835 009C                      l851 0071  
                    l843 00AE                      l837 00A0                      l861 0086  
                    l853 0075                      l845 00B6                      l839 00A2  
                    l855 0079                      l847 00BE                      l863 0017  
                    l857 007E                      l849 006F                      l865 002B  
                    l859 007F                      l867 0031                      l869 0040  
                    u120 009C                      u121 009B                      u130 00B6  
                    u131 00B5                      u140 00BE                      u141 00BD  
                    u150 0031                      u151 0030                      u167 003B  
                    _ISR 004B                      _pot 0077                     ?_ISR 0070  
                   i1l42 00DB                     u6_20 0051                     u6_21 0050  
                   u7_20 005F                     u7_21 005E                     _main 0017  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l123 0068  
                  i1l745 00D7                    i1l781 004B                    i1l791 005F  
                  i1l783 0051                    i1l793 0065                    i1l785 0058  
                  i1l787 005A                    i1l789 005B                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
        __end_of_confADC 00D6          __end_of_conf_ch 00C3                    pclath 000A  
        __end_of_spiInit 00AE                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 004B                   ??_main 0024  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_conf_but 0090                ??_confADC 0075  
              ??_conf_ch 0075                   saved_w 007E         __end_of_spiWrite 00DC  
              ??_spiInit 0075  __end_of__initialization 0013           __pcstackCOMMON 0070  
             __pmaintext 0017               __pintentry 0004                ?_conf_but 0070  
                _SSPSTAT 0094                ?_spiWrite 0070                  _adc_fin 0075  
              _ANSELbits 0188                  _confADC 00C3                  __ptext1 00AE  
                __ptext2 006F                  __ptext3 0090                  __ptext4 00C3  
                __ptext5 004B                  __ptext6 00D6                  _conf_ch 00AE  
           __size_of_ISR 0024                  _spiInit 0090               ??_conf_but 0075  
   end_of_initialization 0013               ??_spiWrite 0070                _TRISAbits 0085  
              _TRISCbits 0087               conf_ch@sel 0020              spiWrite@dat 0070  
    start_initialization 000F              __end_of_ISR 006F              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_conf_but 0021  
      __size_of_spiWrite 0006                 ?_confADC 0070                 ?_conf_ch 0020  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_confADC 0013         __size_of_conf_ch 0015  
       __size_of_spiInit 001E                 _conf_but 006F            __size_of_main 0034  
               _spiWrite 00D6             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000  
