

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 19:55:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  001E                     _ADRESH	set	30
   368  000C                     _PIR1bits	set	12
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  000B                     _INTCONbits	set	11
   374  001F                     _ADCON0bits	set	31
   375  0063                     _SSPIF	set	99
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  008C                     _PIE1bits	set	140
   379  009F                     _ADCON1	set	159
   380  0085                     _TRISAbits	set	133
   381  0085                     _TRISA	set	133
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0086                     _TRISB	set	134
   385  0087                     _TRISC	set	135
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0188                     _ANSELbits	set	392
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396  000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   402  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   403  0013                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0013                     __end_of__initialization:
   407  0013  0183               	clrf	3
   408  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0075                     __pbssCOMMON:
   412  0075                     _adc_fin:
   413  0075                     	ds	2
   414  0077                     _pot:
   415  0077                     	ds	2
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_conf_but:
   420  0070                     ?_confADC:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ISR:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     spiWrite@dat:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	1
   441  0071                     ??_ISR:
   442                           
   443                           ; 1 bytes @ 0x1
   444  0071                     	ds	4
   445  0075                     ??_conf_but:
   446  0075                     ??_confADC:	
   447                           ; 1 bytes @ 0x5
   448                           
   449  0075                     ??_conf_ch:	
   450                           ; 1 bytes @ 0x5
   451                           
   452  0075                     ??_spiInit:	
   453                           ; 1 bytes @ 0x5
   454                           
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0020                     ?_conf_ch:
   461  0020                     ?_spiInit:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0020                     spiInit@sDataSample:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0020                     conf_ch@sel:	
   468                           ; 1 bytes @ 0x0
   469                           
   470                           
   471                           ; 2 bytes @ 0x0
   472  0020                     	ds	1
   473  0021                     spiInit@sClockIdle:
   474                           
   475                           ; 1 bytes @ 0x1
   476  0021                     	ds	1
   477  0022                     spiInit@sTransmitEdge:
   478                           
   479                           ; 1 bytes @ 0x2
   480  0022                     	ds	1
   481  0023                     spiInit@sType:
   482                           
   483                           ; 1 bytes @ 0x3
   484  0023                     	ds	1
   485  0024                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x4
   488  0024                     	ds	2
   489                           
   490                           	psect	maintext
   491  0017                     __pmaintext:	
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 52 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       2       0       0       0
   514 ;;      Totals:         0       2       0       0       0
   515 ;;Total ram usage:        2 bytes
   516 ;; Hardware stack levels required when called:    4
   517 ;; This function calls:
   518 ;;		_confADC
   519 ;;		_conf_but
   520 ;;		_conf_ch
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0017                     _main:
   529  0017                     l849:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;main.c: 53:     conf_but();
   535  0017  120A  118A  206B  120A  118A  	fcall	_conf_but
   536                           
   537                           ;main.c: 54:     confADC();
   538  001C  120A  118A  20BD  120A  118A  	fcall	_confADC
   539                           
   540                           ;main.c: 55:     conf_ch(0);
   541  0021  3000               	movlw	0
   542  0022  1283               	bcf	3,5	;RP0=0, select bank0
   543  0023  1303               	bcf	3,6	;RP1=0, select bank0
   544  0024  00A0               	movwf	conf_ch@sel
   545  0025  00A1               	movwf	conf_ch@sel+1
   546  0026  120A  118A  20A8  120A  118A  	fcall	_conf_ch
   547  002B                     l851:
   548                           
   549                           ;main.c: 57:         if (adc_fin == 0) {
   550  002B  0875               	movf	_adc_fin,w
   551  002C  0476               	iorwf	_adc_fin+1,w
   552  002D  1D03               	btfss	3,2
   553  002E  2830               	goto	u151
   554  002F  2831               	goto	u150
   555  0030                     u151:
   556  0030  282B               	goto	l851
   557  0031                     u150:
   558  0031                     l853:
   559                           
   560                           ;main.c: 58:             adc_fin = 1;
   561  0031  3001               	movlw	1
   562  0032  00F5               	movwf	_adc_fin
   563  0033  3000               	movlw	0
   564  0034  00F6               	movwf	_adc_fin+1
   565                           
   566                           ;main.c: 59:             _delay((unsigned long)((10)*((8000000)/4000.0)));
   567  0035  301A               	movlw	26
   568  0036  1283               	bcf	3,5	;RP0=0, select bank0
   569  0037  1303               	bcf	3,6	;RP1=0, select bank0
   570  0038  00A5               	movwf	??_main+1
   571  0039  30F7               	movlw	247
   572  003A  00A4               	movwf	??_main
   573  003B                     u167:
   574  003B  0BA4               	decfsz	??_main,f
   575  003C  283B               	goto	u167
   576  003D  0BA5               	decfsz	??_main+1,f
   577  003E  283B               	goto	u167
   578  003F  2840               	nop2
   579  0040                     l855:
   580                           
   581                           ;main.c: 60:             ADCON0bits.GO = 1;
   582  0040  1283               	bcf	3,5	;RP0=0, select bank0
   583  0041  1303               	bcf	3,6	;RP1=0, select bank0
   584  0042  149F               	bsf	31,1	;volatile
   585  0043  282B               	goto	l851
   586  0044  120A  118A  280C   	ljmp	start
   587  0047                     __end_of_main:
   588                           
   589                           	psect	text1
   590  00A8                     __ptext1:	
   591 ;; *************** function _conf_ch *****************
   592 ;; Defined at:
   593 ;;		line 18 in file "Adc_int_.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  sel             2    0[BANK0 ] int 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       2       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       2       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _conf_ch
   623  00A8                     _conf_ch:
   624  00A8                     l843:	
   625                           ;incstack = 0
   626                           ; Regs used in _conf_ch: [wreg+status,2+status,0]
   627                           
   628                           
   629                           ;Adc_int_.c: 19:     if (sel == 0){
   630  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   631  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   632  00AA  0820               	movf	conf_ch@sel,w
   633  00AB  0421               	iorwf	conf_ch@sel+1,w
   634  00AC  1D03               	btfss	3,2
   635  00AD  28AF               	goto	u131
   636  00AE  28B0               	goto	u130
   637  00AF                     u131:
   638  00AF  28B2               	goto	l85
   639  00B0                     u130:
   640  00B0                     l845:
   641                           
   642                           ;Adc_int_.c: 20:         ADCON0bits.CHS = 0b0000;
   643  00B0  30C3               	movlw	-61
   644  00B1  059F               	andwf	31,f	;volatile
   645  00B2                     l85:	
   646                           ;Adc_int_.c: 21:     }
   647                           
   648                           
   649                           ;Adc_int_.c: 22:     if (sel == 1){
   650  00B2  0320               	decf	conf_ch@sel,w
   651  00B3  0421               	iorwf	conf_ch@sel+1,w
   652  00B4  1D03               	btfss	3,2
   653  00B5  28B7               	goto	u141
   654  00B6  28B8               	goto	u140
   655  00B7                     u141:
   656  00B7  28BC               	goto	l87
   657  00B8                     u140:
   658  00B8                     l847:
   659                           
   660                           ;Adc_int_.c: 23:         ADCON0bits.CHS = 0b0001;
   661  00B8  081F               	movf	31,w	;volatile
   662  00B9  39C3               	andlw	-61
   663  00BA  3804               	iorlw	4
   664  00BB  009F               	movwf	31	;volatile
   665  00BC                     l87:
   666  00BC  0008               	return
   667  00BD                     __end_of_conf_ch:
   668                           
   669                           	psect	text2
   670  006B                     __ptext2:	
   671 ;; *************** function _conf_but *****************
   672 ;; Defined at:
   673 ;;		line 72 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		_spiInit
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _conf_but
   703  006B                     _conf_but:
   704  006B                     l833:	
   705                           ;incstack = 0
   706                           ; Regs used in _conf_but: [wreg+status,2+status,0+pclath+cstack]
   707                           
   708                           
   709                           ;main.c: 74:     INTCONbits.GIE = 1;
   710  006B  178B               	bsf	11,7	;volatile
   711                           
   712                           ;main.c: 75:     INTCONbits.PEIE = 1;
   713  006C  170B               	bsf	11,6	;volatile
   714  006D                     l835:
   715                           
   716                           ;main.c: 76:     ANSEL = 0;
   717  006D  1683               	bsf	3,5	;RP0=1, select bank3
   718  006E  1703               	bsf	3,6	;RP1=1, select bank3
   719  006F  0188               	clrf	8	;volatile
   720                           
   721                           ;main.c: 77:     ANSELH = 0;
   722  0070  0189               	clrf	9	;volatile
   723  0071                     l837:
   724                           
   725                           ;main.c: 78:     ANSELbits.ANS0 = 1;
   726  0071  1408               	bsf	8,0	;volatile
   727                           
   728                           ;main.c: 79:     TRISC = 0x00;
   729  0072  1683               	bsf	3,5	;RP0=1, select bank1
   730  0073  1303               	bcf	3,6	;RP1=0, select bank1
   731  0074  0187               	clrf	7	;volatile
   732                           
   733                           ;main.c: 80:     TRISB = 0x00;
   734  0075  0186               	clrf	6	;volatile
   735                           
   736                           ;main.c: 81:     TRISD = 0x00;
   737  0076  0188               	clrf	8	;volatile
   738                           
   739                           ;main.c: 82:     TRISE = 0x00;
   740  0077  0189               	clrf	9	;volatile
   741                           
   742                           ;main.c: 83:     TRISA = 0;
   743  0078  0185               	clrf	5	;volatile
   744  0079                     l839:
   745                           
   746                           ;main.c: 84:     TRISAbits.TRISA0 = 1;
   747  0079  1405               	bsf	5,0	;volatile
   748                           
   749                           ;main.c: 85:     PORTD = 0;
   750  007A  1283               	bcf	3,5	;RP0=0, select bank0
   751  007B  1303               	bcf	3,6	;RP1=0, select bank0
   752  007C  0188               	clrf	8	;volatile
   753                           
   754                           ;main.c: 86:     PORTB = 0;
   755  007D  0186               	clrf	6	;volatile
   756                           
   757                           ;main.c: 87:     PORTC = 0;
   758  007E  0187               	clrf	7	;volatile
   759                           
   760                           ;main.c: 88:     PORTE = 0;
   761  007F  0189               	clrf	9	;volatile
   762  0080                     l841:
   763                           
   764                           ;main.c: 89:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   765  0080  01A0               	clrf	spiInit@sDataSample
   766  0081  01A1               	clrf	spiInit@sClockIdle
   767  0082  01A2               	clrf	spiInit@sTransmitEdge
   768  0083  3024               	movlw	36
   769  0084  120A  118A  208A  120A  118A  	fcall	_spiInit
   770  0089                     l64:
   771  0089  0008               	return
   772  008A                     __end_of_conf_but:
   773                           
   774                           	psect	text3
   775  008A                     __ptext3:	
   776 ;; *************** function _spiInit *****************
   777 ;; Defined at:
   778 ;;		line 12 in file "SPI.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  sType           1    wreg     enum E1264
   781 ;;  sDataSample     1    0[BANK0 ] enum E1272
   782 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   783 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  sType           1    3[BANK0 ] enum E1264
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       3       0       0       0
   796 ;;      Locals:         0       1       0       0       0
   797 ;;      Temps:          0       0       0       0       0
   798 ;;      Totals:         0       4       0       0       0
   799 ;;Total ram usage:        4 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_conf_but
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _spiInit
   811  008A                     _spiInit:
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   815                           ;spiInit@sType stored from wreg
   816  008A  1283               	bcf	3,5	;RP0=0, select bank0
   817  008B  1303               	bcf	3,6	;RP1=0, select bank0
   818  008C  00A3               	movwf	spiInit@sType
   819  008D                     l823:
   820                           
   821                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   822  008D  1683               	bsf	3,5	;RP0=1, select bank1
   823  008E  1303               	bcf	3,6	;RP1=0, select bank1
   824  008F  1287               	bcf	7,5	;volatile
   825                           
   826                           ;SPI.c: 15:     if(sType & 0b00000100)
   827  0090  1283               	bcf	3,5	;RP0=0, select bank0
   828  0091  1303               	bcf	3,6	;RP1=0, select bank0
   829  0092  1D23               	btfss	spiInit@sType,2
   830  0093  2895               	goto	u121
   831  0094  2896               	goto	u120
   832  0095                     u121:
   833  0095  289C               	goto	l829
   834  0096                     u120:
   835  0096                     l825:
   836                           
   837                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   838  0096  0822               	movf	spiInit@sTransmitEdge,w
   839  0097  1683               	bsf	3,5	;RP0=1, select bank1
   840  0098  1303               	bcf	3,6	;RP1=0, select bank1
   841  0099  0094               	movwf	20	;volatile
   842  009A                     l827:
   843                           
   844                           ;SPI.c: 18:         TRISC3 = 1;
   845  009A  1587               	bsf	7,3	;volatile
   846                           
   847                           ;SPI.c: 19:     }
   848  009B  28A2               	goto	l103
   849  009C                     l829:
   850                           
   851                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   852  009C  0820               	movf	spiInit@sDataSample,w
   853  009D  0422               	iorwf	spiInit@sTransmitEdge,w
   854  009E  1683               	bsf	3,5	;RP0=1, select bank1
   855  009F  1303               	bcf	3,6	;RP1=0, select bank1
   856  00A0  0094               	movwf	20	;volatile
   857  00A1                     l831:
   858                           
   859                           ;SPI.c: 23:         TRISC3 = 0;
   860  00A1  1187               	bcf	7,3	;volatile
   861  00A2                     l103:	
   862                           ;SPI.c: 24:     }
   863                           
   864                           
   865                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   866  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   867  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   868  00A4  0823               	movf	spiInit@sType,w
   869  00A5  0421               	iorwf	spiInit@sClockIdle,w
   870  00A6  0094               	movwf	20	;volatile
   871  00A7                     l104:
   872  00A7  0008               	return
   873  00A8                     __end_of_spiInit:
   874                           
   875                           	psect	text4
   876  00BD                     __ptext4:	
   877 ;; *************** function _confADC *****************
   878 ;; Defined at:
   879 ;;		line 3 in file "Adc_int_.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _confADC
   909  00BD                     _confADC:
   910  00BD                     l733:	
   911                           ;incstack = 0
   912                           ; Regs used in _confADC: [wreg+status,2+status,0]
   913                           
   914                           
   915                           ;Adc_int_.c: 6:     ADCON0bits.ADCS0 = 1;
   916  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   917  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   918  00BF  171F               	bsf	31,6	;volatile
   919                           
   920                           ;Adc_int_.c: 7:     ADCON0bits.ADCS1 = 0;
   921  00C0  139F               	bcf	31,7	;volatile
   922  00C1                     l735:
   923                           
   924                           ;Adc_int_.c: 8:     ADCON1 = 0;
   925  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   926  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   927  00C3  019F               	clrf	31	;volatile
   928  00C4                     l737:
   929                           
   930                           ;Adc_int_.c: 10:     ADCON0bits.CHS = 0b0000;
   931  00C4  30C3               	movlw	-61
   932  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   933  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   934  00C7  059F               	andwf	31,f	;volatile
   935  00C8                     l739:
   936                           
   937                           ;Adc_int_.c: 12:     ADCON0bits.ADON = 1;
   938  00C8  141F               	bsf	31,0	;volatile
   939  00C9                     l741:
   940                           
   941                           ;Adc_int_.c: 13:     PIE1bits.ADIE = 1;
   942  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   943  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   944  00CB  170C               	bsf	12,6	;volatile
   945  00CC                     l743:
   946                           
   947                           ;Adc_int_.c: 14:     PIR1bits.ADIF = 0;
   948  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   949  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   950  00CE  130C               	bcf	12,6	;volatile
   951  00CF                     l82:
   952  00CF  0008               	return
   953  00D0                     __end_of_confADC:
   954                           
   955                           	psect	text5
   956  0047                     __ptext5:	
   957 ;; *************** function _ISR *****************
   958 ;; Defined at:
   959 ;;		line 96 in file "main.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          4       0       0       0       0
   976 ;;      Totals:         4       0       0       0       0
   977 ;;Total ram usage:        4 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		_spiWrite
   982 ;; This function is called by:
   983 ;;		Interrupt level 1
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _ISR
   989  0047                     _ISR:
   990  0047                     i1l763:
   991                           
   992                           ;main.c: 98:     if (PIR1bits.ADIF == 1) {
   993  0047  1283               	bcf	3,5	;RP0=0, select bank0
   994  0048  1303               	bcf	3,6	;RP1=0, select bank0
   995  0049  1F0C               	btfss	12,6	;volatile
   996  004A  284C               	goto	u6_21
   997  004B  284D               	goto	u6_20
   998  004C                     u6_21:
   999  004C  2856               	goto	i1l769
  1000  004D                     u6_20:
  1001  004D                     i1l765:
  1002                           
  1003                           ;main.c: 100:         pot = ADRESH;
  1004  004D  081E               	movf	30,w	;volatile
  1005  004E  00F1               	movwf	??_ISR
  1006  004F  01F2               	clrf	??_ISR+1
  1007  0050  0871               	movf	??_ISR,w
  1008  0051  00F7               	movwf	_pot
  1009  0052  0872               	movf	??_ISR+1,w
  1010  0053  00F8               	movwf	_pot+1
  1011  0054                     i1l767:
  1012                           
  1013                           ;main.c: 101:         adc_fin = 0;
  1014  0054  01F5               	clrf	_adc_fin
  1015  0055  01F6               	clrf	_adc_fin+1
  1016  0056                     i1l769:
  1017                           
  1018                           ;main.c: 104:     PIR1bits.ADIF = 0;
  1019  0056  130C               	bcf	12,6	;volatile
  1020  0057                     i1l771:
  1021                           
  1022                           ;main.c: 106:     if (SSPIF == 1) {
  1023  0057  1D8C               	btfss	12,3	;volatile
  1024  0058  285A               	goto	u7_21
  1025  0059  285B               	goto	u7_20
  1026  005A                     u7_21:
  1027  005A  2864               	goto	i1l71
  1028  005B                     u7_20:
  1029  005B                     i1l773:
  1030                           
  1031                           ;main.c: 107:         spiWrite(pot);
  1032  005B  0877               	movf	_pot,w
  1033  005C  120A  118A  20D0  120A  118A  	fcall	_spiWrite
  1034  0061                     i1l775:
  1035                           
  1036                           ;main.c: 108:         SSPIF = 0;
  1037  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0063  118C               	bcf	12,3	;volatile
  1040  0064                     i1l71:
  1041  0064  0874               	movf	??_ISR+3,w
  1042  0065  008A               	movwf	10
  1043  0066  0E73               	swapf	??_ISR+2,w
  1044  0067  0083               	movwf	3
  1045  0068  0EFE               	swapf	btemp,f
  1046  0069  0E7E               	swapf	btemp,w
  1047  006A  0009               	retfie
  1048  006B                     __end_of_ISR:
  1049                           
  1050                           	psect	intentry
  1051  0004                     __pintentry:	
  1052                           ;incstack = 0
  1053                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1054                           
  1055  0004                     interrupt_function:
  1056  007E                     saved_w	set	btemp
  1057  0004  00FE               	movwf	btemp
  1058  0005  0E03               	swapf	3,w
  1059  0006  00F3               	movwf	??_ISR+2
  1060  0007  080A               	movf	10,w
  1061  0008  00F4               	movwf	??_ISR+3
  1062  0009  120A  118A  2847   	ljmp	_ISR
  1063                           
  1064                           	psect	text6
  1065  00D0                     __ptext6:	
  1066 ;; *************** function _spiWrite *****************
  1067 ;; Defined at:
  1068 ;;		line 34 in file "SPI.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  dat             1    wreg     unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  dat             1    0[COMMON] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         1       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0
  1085 ;;      Totals:         1       0       0       0       0
  1086 ;;Total ram usage:        1 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_ISR
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _spiWrite
  1097  00D0                     _spiWrite:
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _spiWrite: [wreg]
  1101                           ;spiWrite@dat stored from wreg
  1102  00D0  00F0               	movwf	spiWrite@dat
  1103  00D1                     i1l751:
  1104                           
  1105                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1106  00D1  0870               	movf	spiWrite@dat,w
  1107  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00D4  0093               	movwf	19	;volatile
  1110  00D5                     i1l113:
  1111  00D5  0008               	return
  1112  00D6                     __end_of_spiWrite:
  1113  007E                     btemp	set	126	;btemp
  1114  007E                     wtemp0	set	126
  1115                           
  1116                           	psect	config
  1117                           
  1118                           ;Config register CONFIG1 @ 0x2007
  1119                           ;	Oscillator Selection bits
  1120                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1121                           ;	Watchdog Timer Enable bit
  1122                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1123                           ;	Power-up Timer Enable bit
  1124                           ;	PWRTE = OFF, PWRT disabled
  1125                           ;	RE3/MCLR pin function select bit
  1126                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1127                           ;	Code Protection bit
  1128                           ;	CP = OFF, Program memory code protection is disabled
  1129                           ;	Data Code Protection bit
  1130                           ;	CPD = OFF, Data memory code protection is disabled
  1131                           ;	Brown Out Reset Selection bits
  1132                           ;	BOREN = ON, BOR enabled
  1133                           ;	Internal External Switchover bit
  1134                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1135                           ;	Fail-Safe Clock Monitor Enabled bit
  1136                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1137                           ;	Low Voltage Programming Enable bit
  1138                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1139                           ;	In-Circuit Debugger Mode bit
  1140                           ;	DEBUG = 0x1, unprogrammed default
  1141  2007                     	org	8199
  1142  2007  23D4               	dw	9172
  1143                           
  1144                           ;Config register CONFIG2 @ 0x2008
  1145                           ;	Brown-out Reset Selection bit
  1146                           ;	BOR4V = 0x1, unprogrammed default
  1147                           ;	Flash Program Memory Self Write Enable bits
  1148                           ;	WRT = OFF, Write protection off
  1149  2008                     	org	8200
  1150  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _conf_but->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     608
                                              4 BANK0      2     2      0
                            _confADC
                           _conf_but
                            _conf_ch
 ---------------------------------------------------------------------------------
 (1) _conf_ch                                              2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _conf_but                                             0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _confADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0      15
                                              1 COMMON     4     4      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confADC
   _conf_but
     _spiInit
   _conf_ch

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 19:55:18 2021

            _SSPSTATbits 0094                       l64 0089                       l82 00CF  
                     l85 00B2                       l87 00BC                      l103 00A2  
                    l104 00A7                      l741 00C9                      l733 00BD  
                    l743 00CC                      l735 00C1                      l831 00A1  
                    l823 008D                      l737 00C4                      l825 0096  
                    l841 0080                      l833 006B                      l739 00C8  
                    l827 009A                      l835 006D                      l843 00A8  
                    l851 002B                      l829 009C                      l837 0071  
                    l845 00B0                      l853 0031                      l839 0079  
                    l847 00B8                      l855 0040                      l849 0017  
                    u120 0096                      u121 0095                      u130 00B0  
                    u131 00AF                      u140 00B8                      u141 00B7  
                    u150 0031                      u151 0030                      u167 003B  
                    _ISR 0047                      _pot 0077                     ?_ISR 0070  
                   i1l71 0064                     u6_20 004D                     u6_21 004C  
                   u7_20 005B                     u7_21 005A                     _main 0017  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l113 00D5  
                  i1l751 00D1                    i1l771 0057                    i1l763 0047  
                  i1l773 005B                    i1l765 004D                    i1l775 0061  
                  i1l767 0054                    i1l769 0056                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
        __end_of_confADC 00D0          __end_of_conf_ch 00BD                    pclath 000A  
        __end_of_spiInit 00A8                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0047                   ??_main 0024  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_conf_but 008A                ??_confADC 0075  
              ??_conf_ch 0075                   saved_w 007E         __end_of_spiWrite 00D6  
              ??_spiInit 0075  __end_of__initialization 0013           __pcstackCOMMON 0070  
             __pmaintext 0017               __pintentry 0004                ?_conf_but 0070  
                _SSPSTAT 0094                ?_spiWrite 0070                  _adc_fin 0075  
              _ANSELbits 0188                  _confADC 00BD                  __ptext1 00A8  
                __ptext2 006B                  __ptext3 008A                  __ptext4 00BD  
                __ptext5 0047                  __ptext6 00D0                  _conf_ch 00A8  
           __size_of_ISR 0024                  _spiInit 008A               ??_conf_but 0075  
   end_of_initialization 0013               ??_spiWrite 0070                _TRISAbits 0085  
             conf_ch@sel 0020              spiWrite@dat 0070      start_initialization 000F  
            __end_of_ISR 006B              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_conf_but 001F        __size_of_spiWrite 0006  
               ?_confADC 0070                 ?_conf_ch 0020                 ?_spiInit 0020  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_confADC 0013         __size_of_conf_ch 0015         __size_of_spiInit 001E  
               _conf_but 006B            __size_of_main 0030                 _spiWrite 00D0  
           spiInit@sType 0023        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000  
